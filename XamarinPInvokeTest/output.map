# Path: /Users/bryon/git_repo/Xamarin-PInvoke-Example/XamarinPInvokeTest/bin/iPhoneSimulator/Debug/XamarinPInvokeTest.app/XamarinPInvokeTest
# Arch: i386
# Object files:
[  0] linker synthesized
[  1] dtrace
[  2] /Users/bryon/git_repo/Xamarin-PInvoke-Example/XamarinPInvokeTest/libPinvokeTestSDK.a(TestClass.o)
[  3] /Users/bryon/git_repo/Xamarin-PInvoke-Example/XamarinPInvokeTest/libPinvokeTestSDK.a(TestClassWrapper.o)
[  4] /Users/bryon/git_repo/Xamarin-PInvoke-Example/XamarinPInvokeTest/obj/iPhoneSimulator/Debug/mtouch-cache/main.i386.o
[  5] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/System/Library/Frameworks//Foundation.framework/Foundation
[  6] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/System/Library/Frameworks//UIKit.framework/UIKit
[  7] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/usr/lib/libz.dylib
[  8] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/usr/lib/libiconv.dylib
[  9] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-abcremoval.o)
[ 10] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-alias-analysis.o)
[ 11] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-aot-compiler.o)
[ 12] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-aot-runtime.o)
[ 13] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-branch-opts.o)
[ 14] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-cfold.o)
[ 15] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-debug-mini.o)
[ 16] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-debugger-agent.o)
[ 17] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-declsec.o)
[ 18] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-decompose.o)
[ 19] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-dominators.o)
[ 20] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-driver.g.o)
[ 21] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-dwarfwriter.o)
[ 22] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-exceptions-x86.o)
[ 23] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-graph.o)
[ 24] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-helpers.o)
[ 25] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-image-writer.g.o)
[ 26] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-jit-icalls.o)
[ 27] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-linear-scan.o)
[ 28] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-liveness.o)
[ 29] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-local-propagation.o)
[ 30] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-method-to-ir.o)
[ 31] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-codegen.o)
[ 32] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-cross-helpers.o)
[ 33] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-darwin.o)
[ 34] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-exceptions.o)
[ 35] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-gc.o)
[ 36] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-generic-sharing.o)
[ 37] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-native-types.o)
[ 38] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-posix.o)
[ 39] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-trampolines.o)
[ 40] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini-x86.o)
[ 41] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-mini.o)
[ 42] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-regalloc.o)
[ 43] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-regalloc2.o)
[ 44] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-seq-points.o)
[ 45] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-simd-intrinsics.o)
[ 46] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-ssa.o)
[ 47] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-ssapre.o)
[ 48] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-tasklets.o)
[ 49] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-trace.o)
[ 50] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-tramp-x86.o)
[ 51] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-unwind.o)
[ 52] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-wapihandles.o)
[ 53] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmini_la-xdebug.o)
[ 54] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-appdomain.o)
[ 55] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-assembly.o)
[ 56] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-attach.o)
[ 57] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-chacha.o)
[ 58] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-class.o)
[ 59] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-cominterop.o)
[ 60] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-console-unix.o)
[ 61] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-debug-helpers.o)
[ 62] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-debug-mono-symfile.o)
[ 63] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-decimal-ms.o)
[ 64] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-domain.o)
[ 65] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-environment.o)
[ 66] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-exception.o)
[ 67] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-file-io.o)
[ 68] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-file-mmap-posix.o)
[ 69] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-filewatcher.o)
[ 70] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-gc-memfuncs.o)
[ 71] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-gc.o)
[ 72] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-icall.o)
[ 73] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-image.o)
[ 74] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-jit-info.o)
[ 75] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-loader.o)
[ 76] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-locales.o)
[ 77] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-marshal.o)
[ 78] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mempool.o)
[ 79] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-metadata-cross-helpers.o)
[ 80] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-metadata-verify.o)
[ 81] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-metadata.o)
[ 82] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-method-builder.o)
[ 83] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-monitor.o)
[ 84] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-basic-block.o)
[ 85] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-config.o)
[ 86] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-cq.o)
[ 87] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-debug.o)
[ 88] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-hash.o)
[ 89] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-mlist.o)
[ 90] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-perfcounters.o)
[ 91] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-route.o)
[ 92] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-security.o)
[ 93] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-mono-wsq.o)
[ 94] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-object.o)
[ 95] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-opcodes.o)
[ 96] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-process.o)
[ 97] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-profiler.o)
[ 98] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-rand.o)
[ 99] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-reflection.o)
[100] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-remoting.o)
[101] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-runtime.o)
[102] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-security-core-clr.o)
[103] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-security-manager.o)
[104] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-alloc.o)
[105] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-bridge.o)
[106] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-cardtable.o)
[107] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-debug.o)
[108] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-descriptor.o)
[109] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-fin-weak-hash.o)
[110] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-gc.o)
[111] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-gray.o)
[112] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-hash-table.o)
[113] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-internal.o)
[114] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-los.o)
[115] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-marksweep.o)
[116] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-memory-governor.o)
[117] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-new-bridge.o)
[118] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-nursery-allocator.o)
[119] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-old-bridge.o)
[120] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-os-mach.o)
[121] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-pinning-stats.o)
[122] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-pinning.o)
[123] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-pointer-queue.o)
[124] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-protocol.o)
[125] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-qsort.o)
[126] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-simple-nursery.o)
[127] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-split-nursery.o)
[128] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-stw.o)
[129] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-tarjan-bridge.o)
[130] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-toggleref.o)
[131] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sgen-workers.o)
[132] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-socket-io.o)
[133] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-string-icalls.o)
[134] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-sysmath.o)
[135] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-threadpool.o)
[136] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-threads.o)
[137] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-tpool-poll.o)
[138] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libmonoruntimesgen_la-verify.o)
[139] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(collection.o)
[140] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(error.o)
[141] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(events.o)
[142] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(handles.o)
[143] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(io-portability.o)
[144] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(io.o)
[145] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(locking.o)
[146] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(messages.o)
[147] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(misc.o)
[148] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mutexes.o)
[149] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(posix.o)
[150] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(processes.o)
[151] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(security.o)
[152] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(semaphores.o)
[153] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(shared.o)
[154] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(sockets.o)
[155] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(timefuncs.o)
[156] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(versioninfo.o)
[157] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(wait.o)
[158] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(wapi_glob.o)
[159] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(wthreads.o)
[160] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(bsearch.o)
[161] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(dlmalloc.o)
[162] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(hazard-pointer.o)
[163] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(json.o)
[164] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(lock-free-alloc.o)
[165] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(lock-free-array-queue.o)
[166] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(lock-free-queue.o)
[167] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mach-support-x86.o)
[168] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-codeman.o)
[169] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-conc-hashtable.o)
[170] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-context.o)
[171] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-counters.o)
[172] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-dl-darwin.o)
[173] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-dl-posix.o)
[174] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-dl.o)
[175] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-error.o)
[176] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-filemap.o)
[177] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-hwcap-x86.o)
[178] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-hwcap.o)
[179] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-internal-hash.o)
[180] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-io-portability.o)
[181] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-linked-list-set.o)
[182] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-logger.o)
[183] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-mmap.o)
[184] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-mutex.o)
[185] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-networkinterfaces.o)
[186] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-path.o)
[187] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-poll.o)
[188] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-proclib.o)
[189] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-property-hash.o)
[190] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-publib.o)
[191] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-semaphore.o)
[192] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-sha1.o)
[193] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-threads-mach-helper.o)
[194] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-threads-mach.o)
[195] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-threads-posix.o)
[196] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-threads.o)
[197] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-time.o)
[198] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-tls.o)
[199] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(mono-uri.o)
[200] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(monobitset.o)
[201] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(networking-posix.o)
[202] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(networking.o)
[203] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(strenc.o)
[204] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(strtod.o)
[205] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-garray.o)
[206] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gbytearray.o)
[207] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gdate-unix.o)
[208] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gdir-unix.o)
[209] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gerror.o)
[210] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gfile-posix.o)
[211] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gfile-unix.o)
[212] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gfile.o)
[213] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-ghashtable.o)
[214] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-giconv.o)
[215] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-glist.o)
[216] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gmarkup.o)
[217] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gmem.o)
[218] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gmisc-unix.o)
[219] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-goutput.o)
[220] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gpath.o)
[221] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gptrarray.o)
[222] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gqsort.o)
[223] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gqueue.o)
[224] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gshell.o)
[225] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gslist.o)
[226] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gspawn.o)
[227] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gstr.o)
[228] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gstring.o)
[229] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gtimer-unix.o)
[230] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gunicode.o)
[231] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-gutf8.o)
[232] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonosgen-2.0.a(libeglib_la-vasprintf.o)
[233] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(monotouch-debug-sgen-debug.x86.o)
[234] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(monotouch-main-sgen-debug.x86.o)
[235] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(monotouch-support-sgen-debug.x86.o)
[236] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(bindings-sgen-debug.x86.o)
[237] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(shared-sgen-debug.x86.o)
[238] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(runtime-sgen-debug.x86.o)
[239] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(trampolines-sgen-debug.x86.o)
[240] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(zlib-helper-sgen-debug.x86.o)
[241] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libmonotouch-sgen-debug.a(monotouch-x86-double-abi-stret-trampoline-sgen-debug.x86.o)
[242] /Library/Frameworks/Xamarin.iOS.framework/Versions/8.10.3.2/SDKs/MonoTouch.iphonesimulator.sdk/usr/lib/libapp.a(app-main.x86.o)
[243] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/usr/lib/libc++.dylib
[244] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/usr/lib/libSystem.dylib
[245] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/usr/lib/libobjc.A.dylib
[246] /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk/System/Library/Frameworks//CoreFoundation.framework/CoreFoundation
# Sections:
# Address	Size    	Segment	Section
0x00003080	0x0027B817	__TEXT	__text
0x0027E898	0x00000810	__TEXT	__symbol_stub
0x0027F0A8	0x00000D7C	__TEXT	__stub_helper
0x0027FE24	0x0000062C	__TEXT	__gcc_except_tab
0x00280450	0x00000C8A	__TEXT	__objc_methname
0x002810E0	0x0003B26B	__TEXT	__cstring
0x002BC34B	0x00000073	__TEXT	__objc_classname
0x002BC3BE	0x00000697	__TEXT	__objc_methtype
0x002BCA60	0x00071FDE	__TEXT	__const
0x0032EA3E	0x0000313F	__TEXT	__dof_mono
0x00331B80	0x00000344	__TEXT	__unwind_info
0x00331EC8	0x00000130	__TEXT	__eh_frame
0x00332000	0x0000041C	__DATA	__nl_symbol_ptr
0x0033241C	0x00000560	__DATA	__la_symbol_ptr
0x0033297C	0x00000008	__DATA	__mod_init_func
0x00332990	0x00002578	__DATA	__const
0x00334F08	0x000004E0	__DATA	__cfstring
0x003353E8	0x00000010	__DATA	__objc_classlist
0x003353F8	0x00000008	__DATA	__objc_protolist
0x00335400	0x00000008	__DATA	__objc_imageinfo
0x00335408	0x000006BC	__DATA	__objc_const
0x00335AC4	0x000000FC	__DATA	__objc_selrefs
0x00335BC0	0x0000004C	__DATA	__objc_classrefs
0x00335C0C	0x0000000C	__DATA	__objc_superrefs
0x00335C18	0x00000014	__DATA	__objc_ivar
0x00335C2C	0x000000A0	__DATA	__objc_data
0x00335CD0	0x00004184	__DATA	__data
0x00339E58	0x00010914	__DATA	__common
0x0034A770	0x0000CF90	__DATA	__bss
# Symbols:
# Address	Size    	File  Name
0x00003080	0x0000000E	[  2] __ZN9TestClassC2Ev
0x0000308E	0x0000000E	[  2] __ZN9TestClassC1Ev
0x0000309C	0x00000006	[  2] __ZN9TestClassD2Ev
0x000030A2	0x00000006	[  2] __ZN9TestClassD1Ev
0x000030A8	0x0000000A	[  2] __ZN9TestClass9GetNumberEv
0x000030B2	0x00000039	[  3] _CreateTestClass
0x000030EB	0x00000023	[  3] _DisposeTestClass
0x0000310E	0x00000009	[  3] _GetNumber
0x00003120	0x00000020	[  4] _mono_assembly_init_with_opt
0x00003140	0x000000D0	[  4] -[MonoTouchAppDelegate application:didFinishLaunchingWithOptions:]
0x00003210	0x00000010	[  4] _xamarin_register_modules
0x00003220	0x00000030	[  4] _xamarin_register_assemblies
0x00003250	0x00000160	[  4] _xamarin_setup
0x000033B0	0x00000094	[  4] _main
0x00003450	0x00000740	[  9] _mono_perform_abc_removal
0x00003B90	0x000000F0	[  9] _print_summarized_value
0x00003C80	0x00000B40	[  9] _process_block
0x000047C0	0x000000C0	[  9] _print_summarized_value_relation
0x00004880	0x00000AC0	[  9] _evaluate_relation_with_target_variable
0x00005340	0x00000100	[  9] _print_evaluation_context_status
0x00005440	0x00000290	[  9] _intersect_ranges
0x000056D0	0x000009FC	[ 10] _mono_local_alias_analysis
0x000060D0	0x00000100	[ 11] _mono_aot_readonly_field_override
0x000061D0	0x00000020	[ 11] _mono_aot_get_got_offset
0x000061F0	0x000000D0	[ 11] _get_got_offset
0x000062C0	0x00000070	[ 11] _mono_aot_get_method_name
0x00006330	0x00000220	[ 11] _get_debug_sym
0x00006550	0x00000020	[ 11] _mono_aot_is_direct_callable
0x00006570	0x000000D0	[ 11] _is_direct_callable
0x00006640	0x00000020	[ 11] _mono_aot_mark_unused_llvm_plt_entry
0x00006660	0x000005B0	[ 11] _get_plt_entry
0x00006C10	0x000000B0	[ 11] _mono_aot_get_plt_symbol
0x00006CC0	0x000001C0	[ 11] _can_encode_patch
0x00006E80	0x00000040	[ 11] _mono_aot_get_method_index
0x00006EC0	0x00000040	[ 11] _mono_aot_patch_info_dup
0x00006F00	0x00000510	[ 11] _mono_aot_method_hash
0x00007410	0x00000200	[ 11] _mono_aot_get_array_helper_from_wrapper
0x00007610	0x0000A300	[ 11] _mono_compile_assembly
0x00011910	0x00000040	[ 11] _aot_printerrf
0x00011950	0x00000040	[ 11] _aot_printf
0x00011990	0x000032A0	[ 11] _collect_methods
0x00014C30	0x000004E0	[ 11] _emit_got_info
0x00015110	0x00000240	[ 11] _acfg_free
0x00015350	0x00000260	[ 11] _emit_offset_table
0x000155B0	0x000013F0	[ 11] _encode_method_ref
0x000169A0	0x000002A0	[ 11] _encode_klass_ref
0x00016C40	0x00000130	[ 11] _encode_signature
0x00016D70	0x000001E0	[ 11] _encode_generic_context
0x00016F50	0x00000410	[ 11] _encode_type
0x00017360	0x00000170	[ 11] _find_typespec_for_class
0x000174D0	0x00000780	[ 11] _encode_klass_ref_inner
0x00017C50	0x00000130	[ 11] _get_unwind_info_offset
0x00017D80	0x00001030	[ 11] _encode_patch
0x00018DB0	0x00000140	[ 11] _encode_field_info
0x00018EF0	0x000007C0	[ 11] _emit_trampoline_full
0x000196B0	0x00000BA0	[ 11] _emit_and_reloc_code
0x0001A250	0x00000030	[ 11] _compare_patches
0x0001A280	0x000000E0	[ 11] _get_file_index
0x0001A360	0x00000020	[ 11] _compare_lne
0x0001A380	0x00000050	[ 11] _compile_thread_main
0x0001A3D0	0x00000A40	[ 11] _compile_method
0x0001AE10	0x00000060	[ 11] _add_token_info_hash
0x0001AE70	0x00000100	[ 11] _add_extra_method_with_depth
0x0001AF70	0x00000120	[ 11] _add_types_from_method_header
0x0001B090	0x00000A00	[ 11] _add_generic_class_with_depth
0x0001BA90	0x000000A0	[ 11] _has_type_vars
0x0001BB30	0x00000070	[ 11] _check_type_depth
0x0001BBA0	0x000000C0	[ 11] _add_method_with_index
0x0001BC60	0x000000D0	[ 11] _add_jit_icall_wrapper
0x0001BD30	0x000001D0	[ 11] _create_gsharedvt_inst
0x0001BF00	0x000001ED	[ 11] _can_marshal_struct
0x0001C0F0	0x00000030	[ 12] _mono_aot_register_globals
0x0001C120	0x00000100	[ 12] _mono_aot_register_module
0x0001C220	0x00000110	[ 12] _mono_aot_init
0x0001C330	0x00000E50	[ 12] _load_aot_module
0x0001D180	0x00000040	[ 12] _mono_aot_cleanup
0x0001D1C0	0x00000260	[ 12] _mono_aot_get_method_from_vt_slot
0x0001D420	0x00000360	[ 12] _decode_cached_class_info
0x0001D780	0x00000050	[ 12] _mono_aot_get_method_from_token
0x0001D7D0	0x000001C0	[ 12] _mono_aot_get_cached_class_info
0x0001D990	0x000003B0	[ 12] _mono_aot_get_class_from_name
0x0001DD40	0x00000230	[ 12] _mono_aot_get_unwind_info
0x0001DF70	0x00002560	[ 12] _mono_aot_find_jit_info
0x000204D0	0x00000980	[ 12] _mono_aot_get_method
0x00020E50	0x00000100	[ 12] _find_extra_method
0x00020F50	0x00000AA0	[ 12] _load_method
0x000219F0	0x00000070	[ 12] _mono_aot_is_got_entry
0x00021A60	0x00000030	[ 12] _check_is_got_entry
0x00021A90	0x000000C0	[ 12] _mono_aot_patch_plt_entry
0x00021B50	0x000001F0	[ 12] _mono_aot_plt_resolve
0x00021D40	0x00001580	[ 12] _decode_patch
0x000232C0	0x000000B0	[ 12] _mono_aot_get_plt_entry
0x00023370	0x00000070	[ 12] _mono_aot_get_plt_info_offset
0x000233E0	0x00000060	[ 12] _mono_aot_register_jit_icall
0x00023440	0x00000090	[ 12] _mono_aot_get_trampoline_full
0x000234D0	0x00000820	[ 12] _load_function_full
0x00023CF0	0x00000090	[ 12] _mono_aot_get_trampoline
0x00023D80	0x000001D0	[ 12] _mono_aot_create_specific_trampoline
0x00023F50	0x00000150	[ 12] _get_numerous_trampoline
0x000240A0	0x000000A0	[ 12] _mono_aot_get_static_rgctx_trampoline
0x00024140	0x000001E0	[ 12] _mono_aot_get_unbox_trampoline
0x00024320	0x00000100	[ 12] _mono_aot_get_lazy_fetch_trampoline
0x00024420	0x000002C0	[ 12] _mono_aot_get_imt_thunk
0x000246E0	0x000000A0	[ 12] _mono_aot_get_gsharedvt_arg_trampoline
0x00024780	0x00000040	[ 12] _mono_aot_set_make_unreadable
0x000247C0	0x00000070	[ 12] _mono_aot_is_pagefault
0x00024830	0x00000090	[ 12] _mono_aot_handle_pagefault
0x000248C0	0x00000020	[ 12] _find_map
0x000248E0	0x00000380	[ 12] _get_new_trampoline_from_page
0x00024C60	0x000000D0	[ 12] _find_symbol
0x00024D30	0x000003E0	[ 12] _load_patch_info
0x00025110	0x00000B80	[ 12] _decode_klass_ref
0x00025C90	0x00000190	[ 12] _load_image
0x00025E20	0x00000170	[ 12] _decode_generic_context
0x00025F90	0x000001E0	[ 12] _decode_signature_with_target
0x00026170	0x00000520	[ 12] _decode_type
0x00026690	0x000000F0	[ 12] _decode_generic_inst
0x00026780	0x00000030	[ 12] _find_aot_module_cb
0x000267B0	0x000001D0	[ 12] _find_extra_method_in_amodule
0x00026980	0x00000020	[ 12] _add_module_cb
0x000269A0	0x00001B70	[ 12] _decode_method_ref_with_target
0x00028510	0x0000014B	[ 12] _msort_code_offsets_internal
0x00028660	0x000001E0	[ 13] _mono_branch_optimize_exception_target
0x00028840	0x00000280	[ 13] _mono_replace_ins
0x00028AC0	0x00001810	[ 13] _mono_if_conversion
0x0002A2D0	0x00000070	[ 13] _mono_remove_bblock
0x0002A340	0x00000500	[ 13] _mono_merge_basic_blocks
0x0002A840	0x00000F80	[ 13] _mono_optimize_branches
0x0002B7C0	0x00000040	[ 13] _mono_nullify_basic_block
0x0002B800	0x000006F0	[ 13] _mono_remove_critical_edges
0x0002BEF0	0x000001C5	[ 13] _replace_out_block_in_code
0x0002C0C0	0x00000050	[ 14] _mono_is_power_of_two
0x0002C110	0x00000F88	[ 14] _mono_constant_fold_ins
0x0002D0A0	0x00000040	[ 15] _mono_debug_init_method
0x0002D0E0	0x000000B0	[ 15] _mono_debug_open_method
0x0002D190	0x00000240	[ 15] _mono_debug_close_method
0x0002D3D0	0x00000100	[ 15] _write_variable
0x0002D4D0	0x00000050	[ 15] _mono_debug_free_method
0x0002D520	0x000000B0	[ 15] _mono_debug_record_line_number
0x0002D5D0	0x000000B0	[ 15] _mono_debug_open_block
0x0002D680	0x00000BC0	[ 15] _mono_debug_serialize_debug_info
0x0002E240	0x00000CD0	[ 15] _mono_debug_add_aot_method
0x0002EF10	0x00000170	[ 15] _mono_debug_print_vars
0x0002F080	0x00000170	[ 15] _print_var_info
0x0002F1F0	0x00000080	[ 15] _mono_debugger_insert_breakpoint
0x0002F270	0x00000065	[ 15] _mono_debugger_method_has_breakpoint
0x0002F2E0	0x000006C0	[ 16] _mono_debugger_agent_parse_options
0x0002F9A0	0x000001D0	[ 16] _print_usage
0x0002FB70	0x00000720	[ 16] _mono_debugger_agent_init
0x00030290	0x00000240	[ 16] _runtime_shutdown
0x000304D0	0x000000E0	[ 16] _runtime_initialized
0x000305B0	0x000000A0	[ 16] _appdomain_load
0x00030650	0x00000070	[ 16] _appdomain_start_unload
0x000306C0	0x00000190	[ 16] _appdomain_unload
0x00030850	0x000002E0	[ 16] _thread_startup
0x00030B30	0x00000150	[ 16] _thread_end
0x00030C80	0x00000050	[ 16] _assembly_load
0x00030CD0	0x00000380	[ 16] _assembly_unload
0x00031050	0x000003B0	[ 16] _jit_end
0x00031400	0x00000050	[ 16] _start_runtime_invoke
0x00031450	0x00000180	[ 16] _end_runtime_invoke
0x000315D0	0x00000180	[ 16] _finish_agent_init
0x00031750	0x00000080	[ 16] _mono_debugger_agent_register_transport
0x000317D0	0x00000010	[ 16] _mono_debugger_agent_transport_handshake
0x000317E0	0x00000280	[ 16] _transport_handshake
0x00031A60	0x00000260	[ 16] _mono_debugger_agent_free_domain_info
0x00031CC0	0x00000090	[ 16] _mono_debugger_agent_thread_interrupt
0x00031D50	0x00000350	[ 16] _thread_interrupt
0x000320A0	0x00000020	[ 16] _mono_debugger_agent_breakpoint_hit
0x000320C0	0x000000E0	[ 16] _resume_from_signal_handler
0x000321A0	0x00000020	[ 16] _process_breakpoint
0x000321C0	0x000000E0	[ 16] _mono_debugger_agent_user_break
0x000322A0	0x00000050	[ 16] _user_break_cb
0x000322F0	0x000005F0	[ 16] _create_event_list
0x000328E0	0x00001000	[ 16] _process_event
0x000338E0	0x00000060	[ 16] _mono_debugger_agent_single_step_event
0x00033940	0x00000020	[ 16] _process_single_step
0x00033960	0x00000160	[ 16] _debugger_agent_single_step_from_context
0x00033AC0	0x00000560	[ 16] _process_single_step_inner
0x00034020	0x00000150	[ 16] _debugger_agent_breakpoint_from_context
0x00034170	0x00000470	[ 16] _process_breakpoint_inner
0x000345E0	0x000000D0	[ 16] _mono_debugger_agent_debug_log
0x000346B0	0x00000020	[ 16] _mono_debugger_agent_debug_log_is_enabled
0x000346D0	0x000004B0	[ 16] _mono_debugger_agent_handle_exception
0x00034B80	0x00000080	[ 16] _mono_debugger_agent_begin_exception_filter
0x00034C00	0x00000040	[ 16] _mono_debugger_agent_end_exception_filter
0x00034C40	0x000002F0	[ 16] _ss_update
0x00034F30	0x00000670	[ 16] _ss_start
0x000355A0	0x00000350	[ 16] _set_breakpoint
0x000358F0	0x00000250	[ 16] _compute_frame_info
0x00035B40	0x00000110	[ 16] _invalidate_frames
0x00035C50	0x00000280	[ 16] _process_frame
0x00035ED0	0x00000040	[ 16] _process_filter_frame
0x00035F10	0x00000080	[ 16] _clear_breakpoint
0x00035F90	0x00000130	[ 16] _remove_breakpoint
0x000360C0	0x00000310	[ 16] _insert_breakpoint
0x000363D0	0x00000550	[ 16] _suspend_current
0x00036920	0x00001120	[ 16] _do_invoke_method
0x00037A40	0x00000120	[ 16] _suspend_vm
0x00037B60	0x000002C0	[ 16] _send_reply_packets
0x00037E20	0x000001A0	[ 16] _notify_thread
0x00037FC0	0x000001F0	[ 16] _decode_value
0x000381B0	0x00000A50	[ 16] _buffer_add_value_full
0x00038C00	0x00000180	[ 16] _buffer_add_ptr_id
0x00038D80	0x000000C0	[ 16] _get_agent_domain_info
0x00038E40	0x000001C0	[ 16] _get_objref
0x00039000	0x00000780	[ 16] _decode_value_internal
0x00039780	0x000003C0	[ 16] _decode_vtype
0x00039B40	0x00000090	[ 16] _get_object
0x00039BD0	0x00000160	[ 16] _process_signal_event
0x00039D30	0x00009100	[ 16] _debugger_thread
0x00042E30	0x00000B40	[ 16] _frame_commands
0x00043970	0x000000D0	[ 16] _send_buffered_reply_packets
0x00043A40	0x00000330	[ 16] _add_var
0x00043D70	0x00000160	[ 16] _wait_for_suspend
0x00043ED0	0x00000020	[ 16] _count_thread
0x00043EF0	0x000034A0	[ 16] _method_commands_internal
0x00047390	0x000007E0	[ 16] _buffer_add_cattrs
0x00047B70	0x00000180	[ 16] _buffer_add_cattr_arg
0x00047CF0	0x00003350	[ 16] _type_commands_internal
0x0004B040	0x00000140	[ 16] _get_source_files_for_type
0x0004B180	0x000000E0	[ 16] _dbg_path_get_basename
0x0004B260	0x000000A0	[ 16] _collect_interfaces
0x0004B300	0x000000A0	[ 16] _emit_appdomain_load
0x0004B3A0	0x00000070	[ 16] _emit_assembly_load
0x0004B410	0x00000080	[ 16] _emit_thread_start
0x0004B490	0x00000090	[ 16] _send_types_for_domain
0x0004B520	0x000001A0	[ 16] _clear_event_request
0x0004B6C0	0x00000070	[ 16] _emit_type_load
0x0004B730	0x00000080	[ 16] _add_thread
0x0004B7B0	0x000001B0	[ 16] _resume_vm
0x0004B960	0x00000070	[ 16] _is_really_suspended
0x0004B9D0	0x00000010	[ 16] _true_pred
0x0004B9E0	0x00000040	[ 16] _reset_native_thread_suspend_state
0x0004BA20	0x00000230	[ 16] _init_jit_info_dbg_attrs
0x0004BC50	0x00000030	[ 16] _type_comes_from_assembly
0x0004BC80	0x00000010	[ 16] _invalidate_each_thread
0x0004BC90	0x000000B0	[ 16] _get_last_frame
0x0004BD40	0x00000020	[ 16] _free_objref
0x0004BD60	0x00000070	[ 16] _socket_fd_transport_connect
0x0004BDD0	0x00000050	[ 16] _socket_transport_close1
0x0004BE20	0x00000030	[ 16] _socket_transport_close2
0x0004BE50	0x00000070	[ 16] _socket_transport_send
0x0004BEC0	0x00000130	[ 16] _socket_transport_recv
0x0004BFF0	0x000006A7	[ 16] _socket_transport_connect
0x0004C6A0	0x00000070	[ 17] _mono_method_has_declsec
0x0004C710	0x00000080	[ 17] _mono_declsec_cache_stack_modifiers
0x0004C790	0x00000220	[ 17] _mono_declsec_create_frame
0x0004C9B0	0x000003C0	[ 17] _mono_declsec_linkdemand
0x0004CD70	0x0000008E	[ 17] _mono_declsec_is_assembly_fulltrust
0x0004CE00	0x00001590	[ 18] _mono_decompose_opcode
0x0004E390	0x00007F60	[ 18] _mono_decompose_long_opts
0x000562F0	0x00002430	[ 18] _mono_decompose_vtype_opts
0x00058720	0x000005C0	[ 18] _mono_decompose_vtype_opts_llvm
0x00058CE0	0x00000F90	[ 18] _mono_decompose_array_access_opts
0x00059C70	0x00000410	[ 19] _mono_compile_iterated_dfrontier
0x0005A080	0x00000450	[ 19] _mono_compile_dominator_info
0x0005A4D0	0x00000410	[ 19] _mono_compute_natural_loops
0x0005A8E0	0x00000092	[ 19] _mono_free_loop_info
0x0005A980	0x00000010	[ 20] _mono_parse_default_optimizations
0x0005A990	0x00000210	[ 20] _parse_optimizations
0x0005ABA0	0x000000A0	[ 20] _mono_jit_exec
0x0005AC40	0x000003F0	[ 20] _mono_jit_parse_options
0x0005B030	0x00002B40	[ 20] _mono_main
0x0005DB70	0x000000D0	[ 20] _switch_gc
0x0005DC40	0x000000A0	[ 20] _opt_descr
0x0005DCE0	0x00000020	[ 20] _mono_jit_init
0x0005DD00	0x00000010	[ 20] _mono_jit_init_version
0x0005DD10	0x00000020	[ 20] _mono_jit_cleanup
0x0005DD30	0x00000020	[ 20] _mono_jit_set_aot_only
0x0005DD50	0x00000040	[ 20] _mono_jit_set_trace_options
0x0005DD90	0x00000020	[ 20] _mono_set_signal_chaining
0x0005DDB0	0x00000020	[ 20] _mono_set_crash_chaining
0x0005DDD0	0x00000260	[ 20] _compile_all_methods_thread_main
0x0005E030	0x00000480	[ 20] _mini_regression_step
0x0005E4B0	0x00000150	[ 21] _mono_dwarf_writer_create
0x0005E600	0x00000010	[ 21] _mono_dwarf_writer_destroy
0x0005E610	0x00000010	[ 21] _mono_dwarf_writer_get_il_file_line_index
0x0005E620	0x000000F0	[ 21] _mono_dwarf_escape_path
0x0005E710	0x00000840	[ 21] _mono_dwarf_writer_emit_base_info
0x0005EF50	0x00000100	[ 21] _emit_dwarf_abbrev
0x0005F050	0x00000620	[ 21] _mono_dwarf_writer_close
0x0005F670	0x00000A50	[ 21] _mono_dwarf_writer_emit_method
0x000600C0	0x00000110	[ 21] _emit_type
0x000601D0	0x000000D0	[ 21] _add_line_number_file_name
0x000602A0	0x00000120	[ 21] _encode_var_location
0x000603C0	0x000001B0	[ 21] _emit_loclist
0x00060570	0x00000270	[ 21] _emit_fde
0x000607E0	0x00001210	[ 21] _emit_line_number_info
0x000619F0	0x000000E0	[ 21] _mono_dwarf_writer_emit_trampoline
0x00061AD0	0x00000020	[ 21] _compare_lne
0x00061AF0	0x00000250	[ 21] _token_handler
0x00061D40	0x00000140	[ 21] _get_type_die
0x00061E80	0x00000C58	[ 21] _emit_class_dwarf_info
0x00062AE0	0x00000260	[ 22] _mono_arch_get_restore_context
0x00062D40	0x000002A0	[ 22] _mono_arch_get_call_filter
0x00062FE0	0x000000E0	[ 22] _mono_x86_throw_exception
0x000630C0	0x00000050	[ 22] _mono_x86_throw_corlib_exception
0x00063110	0x00000050	[ 22] _mono_arch_get_throw_exception
0x00063160	0x00000730	[ 22] _get_throw_trampoline
0x00063890	0x00000050	[ 22] _mono_arch_get_rethrow_exception
0x000638E0	0x00000050	[ 22] _mono_arch_get_throw_corlib_exception
0x00063930	0x00000210	[ 22] _mono_arch_exceptions_init
0x00063B40	0x00000140	[ 22] _mono_x86_get_signal_exception_trampoline
0x00063C80	0x000002D0	[ 22] _mono_arch_find_jit_info
0x00063F50	0x00000010	[ 22] _mono_arch_ip_from_context
0x00063F60	0x00000040	[ 22] _mono_arch_setup_async_callback
0x00063FA0	0x000000A0	[ 22] _mono_arch_handle_exception
0x00064040	0x00000070	[ 22] _handle_signal_exception
0x000640B0	0x000000F0	[ 22] _mono_arch_handle_altstack_exception
0x000641A0	0x00000080	[ 22] _altstack_handle_and_restore
0x00064220	0x000000D0	[ 22] _mono_tasklets_arch_restore
0x000642F0	0x00000030	[ 22] _mono_arch_setup_resume_sighandler_ctx
0x00064320	0x00000040	[ 22] _restore_soft_guard_pages
0x00064360	0x0000004E	[ 22] _mono_x86_resume_unwind
0x000643B0	0x00000A50	[ 23] _mono_draw_graph
0x00064E00	0x00000220	[ 23] _cfg_emit_one_loop_level
0x00065020	0x0000016C	[ 23] _dtree_emit_one_loop_level
0x00065190	0x00000080	[ 24] _mono_inst_name
0x00065210	0x000000D0	[ 24] _mono_blockset_print
0x000652E0	0x000003B9	[ 24] _mono_disassemble_code
0x000656A0	0x00000040	[ 25] _img_writer_emit_start
0x000656E0	0x000000D0	[ 25] _img_writer_emit_section_change
0x000657B0	0x00000070	[ 25] _img_writer_emit_push_section
0x00065820	0x00000070	[ 25] _img_writer_emit_pop_section
0x00065890	0x00000030	[ 25] _img_writer_set_section_addr
0x000658C0	0x00000090	[ 25] _img_writer_emit_global
0x00065950	0x00000040	[ 25] _img_writer_emit_local_symbol
0x00065990	0x00000040	[ 25] _img_writer_emit_symbol_size
0x000659D0	0x00000080	[ 25] _img_writer_emit_label
0x00065A50	0x00000160	[ 25] _img_writer_emit_bytes
0x00065BB0	0x00000070	[ 25] _img_writer_emit_string
0x00065C20	0x00000050	[ 25] _img_writer_emit_line
0x00065C70	0x00000090	[ 25] _img_writer_emit_alignment
0x00065D00	0x00000090	[ 25] _img_writer_emit_alignment_fill
0x00065D90	0x00000080	[ 25] _img_writer_emit_pointer_unaligned
0x00065E10	0x000000C0	[ 25] _img_writer_emit_pointer
0x00065ED0	0x000000C0	[ 25] _img_writer_emit_int16
0x00065F90	0x000000B0	[ 25] _img_writer_emit_int32
0x00066040	0x00000230	[ 25] _img_writer_emit_symbol_diff
0x00066270	0x00000070	[ 25] _img_writer_emit_zero_bytes
0x000662E0	0x00000020	[ 25] _img_writer_emit_writeout
0x00066300	0x00000030	[ 25] _img_writer_emit_byte
0x00066330	0x00000030	[ 25] _img_writer_emit_reloc
0x00066360	0x00000040	[ 25] _img_writer_emit_unset_mode
0x000663A0	0x00000030	[ 25] _img_writer_get_output
0x000663D0	0x00000010	[ 25] _bin_writer_supported
0x000663E0	0x000000A0	[ 25] _img_writer_create
0x00066480	0x00000020	[ 25] _img_writer_destroy
0x000664A0	0x00000010	[ 25] _img_writer_subsections_supported
0x000664B0	0x00000010	[ 25] _img_writer_get_fp
0x000664C0	0x00000011	[ 25] _img_writer_get_temp_label_prefix
0x000664E0	0x00000040	[ 26] _mono_ldftn
0x00066520	0x00000020	[ 26] _mono_ldvirtfn
0x00066540	0x00000140	[ 26] _ldvirtfn_internal
0x00066680	0x00000020	[ 26] _mono_ldvirtfn_gshared
0x000666A0	0x00000050	[ 26] _mono_helper_stelem_ref_check
0x000666F0	0x00000020	[ 26] _mono_llmult
0x00066710	0x00000060	[ 26] _mono_llmult_ovf_un
0x00066770	0x00000180	[ 26] _mono_llmult_ovf
0x000668F0	0x00000070	[ 26] _mono_lldiv
0x00066960	0x00000070	[ 26] _mono_llrem
0x000669D0	0x00000050	[ 26] _mono_lldiv_un
0x00066A20	0x00000050	[ 26] _mono_llrem_un
0x00066A70	0x00000200	[ 26] _mono_array_new_va
0x00066C70	0x00000100	[ 26] _mono_array_new_1
0x00066D70	0x00000100	[ 26] _mono_array_new_2
0x00066E70	0x00000100	[ 26] _mono_array_new_3
0x00066F70	0x00000110	[ 26] _mono_array_new_4
0x00067080	0x00000080	[ 26] _mono_class_static_field_address
0x00067100	0x00000080	[ 26] _mono_ldtoken_wrapper
0x00067180	0x000000D0	[ 26] _mono_ldtoken_wrapper_generic_shared
0x00067250	0x00000020	[ 26] _mono_fconv_u8
0x00067270	0x00000050	[ 26] _mono_fconv_u4
0x000672C0	0x00000070	[ 26] _mono_fconv_ovf_i8
0x00067330	0x00000090	[ 26] _mono_fconv_ovf_u8
0x000673C0	0x00000070	[ 26] _mono_rconv_ovf_i8
0x00067430	0x00000090	[ 26] _mono_rconv_ovf_u8
0x000674C0	0x00000170	[ 26] _mono_helper_compile_generic_method
0x00067630	0x00000030	[ 26] _mono_helper_ldstr
0x00067660	0x00000040	[ 26] _mono_helper_ldstr_mscorlib
0x000676A0	0x00000080	[ 26] _mono_helper_newobj_mscorlib
0x00067720	0x00000010	[ 26] _mono_break
0x00067730	0x00000030	[ 26] _mono_create_corlib_exception_0
0x00067760	0x00000040	[ 26] _mono_create_corlib_exception_1
0x000677A0	0x00000040	[ 26] _mono_create_corlib_exception_2
0x000677E0	0x000000C0	[ 26] _mono_object_castclass_unbox
0x000678A0	0x000000D0	[ 26] _mono_object_castclass_with_cache
0x00067970	0x00000060	[ 26] _mono_object_isinst_with_cache
0x000679D0	0x00000060	[ 26] _mono_get_native_calli_wrapper
0x00067A30	0x000001F0	[ 26] _mono_gsharedvt_constrained_call
0x00067C20	0x00000031	[ 26] _mono_gsharedvt_value_copy
0x00067C60	0x000000A0	[ 27] _mono_varlist_insert_sorted
0x00067D00	0x00000050	[ 27] _mono_varlist_sort
0x00067D50	0x00000020	[ 27] _compare_by_first_use_func
0x00067D70	0x00000C40	[ 27] _mono_linear_scan
0x000689B0	0x00000033	[ 27] _compare_by_interval_start_pos_func
0x000689F0	0x000001D0	[ 28] _mono_liveness_handle_exception_clauses
0x00068BC0	0x00000280	[ 28] _visit_bb
0x00068E40	0x00001B10	[ 28] _mono_analyze_liveness
0x0006A950	0x000000B0	[ 28] _mono_bitset_print
0x0006AA00	0x00000140	[ 28] _mono_linterval_add_range
0x0006AB40	0x00000050	[ 28] _mono_linterval_print
0x0006AB90	0x00000050	[ 28] _mono_linterval_print_nl
0x0006ABE0	0x00000040	[ 28] _mono_linterval_covers
0x0006AC20	0x00000060	[ 28] _mono_linterval_get_intersect_pos
0x0006AC80	0x00000140	[ 28] _mono_linterval_split
0x0006ADC0	0x00000609	[ 28] _mono_analyze_liveness_gc
0x0006B3D0	0x000011C0	[ 29] _mono_local_cprop
0x0006C590	0x00000932	[ 29] _mono_local_deadce
0x0006CED0	0x00000020	[ 30] _mono_alloc_ireg
0x0006CEF0	0x00000020	[ 30] _mono_alloc_lreg
0x0006CF10	0x00000020	[ 30] _mono_alloc_freg
0x0006CF30	0x00000020	[ 30] _mono_alloc_preg
0x0006CF50	0x00000100	[ 30] _mono_alloc_dreg
0x0006D050	0x00000040	[ 30] _mono_alloc_ireg_ref
0x0006D090	0x00000040	[ 30] _mono_alloc_ireg_mp
0x0006D0D0	0x000000A0	[ 30] _mono_alloc_ireg_copy
0x0006D170	0x000001D0	[ 30] _mono_type_to_regmove
0x0006D340	0x00000100	[ 30] _mono_print_bb
0x0006D440	0x000000B0	[ 30] _mono_create_helper_signatures
0x0006D4F0	0x00000020	[ 30] _mono_link_bblock
0x0006D510	0x000000E0	[ 30] _link_bblock
0x0006D5F0	0x00000030	[ 30] _mono_find_exvar_for_offset
0x0006D620	0x00000250	[ 30] _type_to_eval_stack_type
0x0006D870	0x00000060	[ 30] _mono_get_got_var
0x0006D8D0	0x000006C0	[ 30] _mini_emit_memcpy
0x0006DF90	0x00000050	[ 30] _mono_emit_method_call
0x0006DFE0	0x000010F0	[ 30] _mono_emit_method_call_full
0x0006F0D0	0x000000B0	[ 30] _mono_emit_native_call
0x0006F180	0x00000550	[ 30] _mono_emit_call_args
0x0006F6D0	0x000000F0	[ 30] _mono_emit_jit_icall
0x0006F7C0	0x000001E0	[ 30] _mono_emit_jit_icall_by_info
0x0006F9A0	0x000009B0	[ 30] _inline_method
0x00070350	0x000011C0	[ 30] _mini_emit_stobj
0x00071510	0x000004F0	[ 30] _mono_emit_calli
0x00071A00	0x000003D0	[ 30] _mini_emit_initobj
0x00071DD0	0x00000570	[ 30] _mini_emit_memset
0x00072340	0x00000020	[ 30] _mono_set_break_policy
0x00072360	0x00000010	[ 30] _always_insert_breakpoint
0x00072370	0x00035C80	[ 30] _mono_method_to_ir
0x000A7FF0	0x00000020	[ 30] _break_on_unverified
0x000A8010	0x000001A0	[ 30] _emit_throw_exception
0x000A81B0	0x00000870	[ 30] _handle_stack_args
0x000A8A20	0x00000250	[ 30] _target_type_is_incompatible
0x000A8C70	0x00000150	[ 30] _emit_stloc_ir
0x000A8DC0	0x00000040	[ 30] _inline_failure
0x000A8E00	0x000000B0	[ 30] _gsharedvt_failure
0x000A8EB0	0x000000A0	[ 30] _gshared_failure
0x000A8F50	0x000002C0	[ 30] _emit_instrumentation_call
0x000A9210	0x00000090	[ 30] _method_access_failure
0x000A92A0	0x00000330	[ 30] _check_linkdemand
0x000A95D0	0x000016F0	[ 30] _handle_box
0x000AACC0	0x00000270	[ 30] _check_call_signature
0x000AAF30	0x000004A0	[ 30] _emit_generic_class_init
0x000AB3D0	0x00000190	[ 30] _check_method_sharing
0x000AB560	0x00000540	[ 30] _emit_get_rgctx_method
0x000ABAA0	0x00004180	[ 30] _mini_emit_inst_for_method
0x000AFC20	0x00000210	[ 30] _mono_method_check_inlining
0x000AFE30	0x00000AE0	[ 30] _mini_emit_ldelema_ins
0x000B0910	0x00000650	[ 30] _emit_write_barrier
0x000B0F60	0x00000B00	[ 30] _mini_emit_check_array_type
0x000B1A60	0x00000630	[ 30] _type_from_op
0x000B2090	0x000001C0	[ 30] _add_widen_op
0x000B2250	0x00000290	[ 30] _mono_op_to_op_imm_noemul
0x000B24E0	0x00000400	[ 30] _emit_init_rvar
0x000B28E0	0x00001390	[ 30] _handle_alloc
0x000B3C70	0x00001380	[ 30] _handle_castclass
0x000B4FF0	0x000015F0	[ 30] _handle_unbox_gsharedvt
0x000B65E0	0x00000300	[ 30] _handle_unbox_nullable
0x000B68E0	0x00000920	[ 30] _handle_unbox
0x000B7200	0x00000080	[ 30] _field_access_failure
0x000B7280	0x000000D0	[ 30] _emit_get_gsharedvt_info
0x000B7350	0x00000860	[ 30] _mini_emit_ldelema_1_ins
0x000B7BB0	0x00000830	[ 30] _emit_array_store
0x000B83E0	0x00000290	[ 30] _mono_op_to_op_imm
0x000B8670	0x00000030	[ 30] _mono_load_membase_to_load_mem
0x000B86A0	0x000006F0	[ 30] _mono_handle_global_vregs
0x000B8D90	0x00002800	[ 30] _mono_spill_global_vars
0x000BB590	0x00000100	[ 30] _get_gsharedvt_info_slot
0x000BB690	0x000002D0	[ 30] _emit_tls_set
0x000BB960	0x00000990	[ 30] _save_cast_details
0x000BC2F0	0x000003C0	[ 30] _mini_emit_iface_cast
0x000BC6B0	0x000007A0	[ 30] _mini_emit_interface_bitmap_check
0x000BCE50	0x000004F0	[ 30] _mini_emit_max_iid_check
0x000BD340	0x00000410	[ 30] _mini_emit_class_check_inst
0x000BD750	0x00000910	[ 30] _emit_get_rgctx
0x000BE060	0x000000F0	[ 30] _reset_cast_details
0x000BE150	0x000004E0	[ 30] _mini_emit_class_check_branch
0x000BE630	0x000003C0	[ 30] _mini_emit_iface_class_cast
0x000BE9F0	0x00000960	[ 30] _mini_emit_isninst_cast_inst
0x000BF350	0x000009A0	[ 30] _mini_emit_castclass_inst
0x000BFCF0	0x00000500	[ 30] _emit_array_generic_access
0x000C01F0	0x000000E0	[ 30] _is_unsafe_mov_compatible
0x000C02D0	0x000002B0	[ 30] _emit_imt_argument
0x000C0580	0x000000EA	[ 30] _create_write_barrier_bitmap
0x000C0670	0x00000070	[ 31] _mono_regname_full
0x000C06E0	0x000001A0	[ 31] _mono_call_inst_add_outarg_reg
0x000C0880	0x00000060	[ 31] _mono_call_inst_add_outarg_vt
0x000C08E0	0x000000B0	[ 31] _mono_print_ji
0x000C0990	0x000009C0	[ 31] _mono_print_ins_index
0x000C1350	0x00000020	[ 31] _mono_print_ins
0x000C1370	0x00006140	[ 31] _mono_local_regalloc
0x000C74B0	0x000000D0	[ 31] _free_up_hreg
0x000C7580	0x000004E0	[ 31] _spill_vreg
0x000C7A60	0x00000160	[ 31] _create_copy_ins
0x000C7BC0	0x00000470	[ 31] _create_spilled_store
0x000C8030	0x00000A00	[ 31] _get_register_spilling
0x000C8A30	0x00000350	[ 31] _mono_opcode_to_cond
0x000C8D80	0x00000040	[ 31] _mono_negate_cond
0x000C8DC0	0x000000F0	[ 31] _mono_opcode_to_type
0x000C8EB0	0x00000060	[ 31] _mono_is_regsize_var
0x000C8F10	0x000003D0	[ 31] _mono_peephole_ins
0x000C92E0	0x00000140	[ 31] _mini_exception_id_by_name
0x000C9420	0x0000018B	[ 31] _mini_type_is_hfa
0x000C95B0	0x000004B6	[ 32] _mono_cross_helpers_run
0x000C9A70	0x00000040	[ 33] _mono_runtime_install_handlers
0x000C9AB0	0x00000010	[ 33] _mono_runtime_syscall_fork
0x000C9AC0	0x00000230	[ 33] _mono_gdb_render_native_backtraces
0x000C9CF0	0x000001AA	[ 33] _mono_thread_state_init_from_handle
0x000C9EA0	0x000001D0	[ 34] _mono_exceptions_init
0x000CA070	0x00000080	[ 34] _try_more_restore
0x000CA0F0	0x000000C0	[ 34] _restore_stack_protection
0x000CA1B0	0x00000060	[ 34] _mono_runtime_walk_stack_with_ctx
0x000CA210	0x00000110	[ 34] _mono_walk_stack_with_state
0x000CA320	0x00000050	[ 34] _mono_get_throw_exception
0x000CA370	0x00000040	[ 34] _mono_raise_exception_with_ctx
0x000CA3B0	0x00000130	[ 34] _mono_exception_walk_trace
0x000CA4E0	0x00000190	[ 34] _mono_install_handler_block_guard
0x000CA670	0x00000050	[ 34] _mono_get_rethrow_exception
0x000CA6C0	0x00000050	[ 34] _mono_get_call_filter
0x000CA710	0x00000050	[ 34] _mono_get_restore_context
0x000CA760	0x00000070	[ 34] _mono_get_throw_corlib_exception
0x000CA7D0	0x00000160	[ 34] _mono_find_jit_info
0x000CA930	0x000001C0	[ 34] _find_jit_info
0x000CAAF0	0x00000280	[ 34] _mono_find_jit_info_ext
0x000CAD70	0x000000E0	[ 34] _mini_jit_info_table_find
0x000CAE50	0x000000F0	[ 34] _get_method_from_stack_frame
0x000CAF40	0x00000170	[ 34] _ves_icall_System_Exception_get_trace
0x000CB0B0	0x00000330	[ 34] _ves_icall_get_trace
0x000CB3E0	0x00000080	[ 34] _mono_walk_stack_with_ctx
0x000CB460	0x000003B0	[ 34] _mono_walk_stack_full
0x000CB810	0x00000080	[ 34] _mono_thread_state_init_from_current
0x000CB890	0x00000090	[ 34] _mono_walk_stack
0x000CB920	0x00000240	[ 34] _ves_icall_get_frame_info
0x000CBB60	0x00000150	[ 34] _get_generic_info_from_stack_frame
0x000CBCB0	0x00000050	[ 34] _ves_icall_System_Security_SecurityFrame_GetSecurityFrame
0x000CBD00	0x00000070	[ 34] _callback_get_first_frame_security_info
0x000CBD70	0x00000070	[ 34] _ves_icall_System_Security_SecurityFrame_GetSecurityStack
0x000CBDE0	0x00000150	[ 34] _callback_get_stack_frames_security_info
0x000CBF30	0x00000170	[ 34] _mono_debugger_run_finally
0x000CC0A0	0x000000E0	[ 34] _is_address_protected
0x000CC180	0x00000030	[ 34] _mono_handle_exception
0x000CC1B0	0x00001A10	[ 34] _mono_handle_exception_internal
0x000CDBC0	0x00000230	[ 34] _mono_setup_altstack
0x000CDDF0	0x000000C0	[ 34] _mono_free_altstack
0x000CDEB0	0x00000010	[ 34] _mono_altstack_restore_prot
0x000CDEC0	0x00000110	[ 34] _mono_handle_soft_stack_ovf
0x000CDFD0	0x000000D0	[ 34] _mono_handle_hard_stack_ovf
0x000CE0A0	0x00000110	[ 34] _print_overflow_stack_frame
0x000CE1B0	0x000002F0	[ 34] _mono_handle_native_sigsegv
0x000CE4A0	0x000000A0	[ 34] _print_stack_frame_to_stderr
0x000CE540	0x00000020	[ 34] _mono_print_thread_dump
0x000CE560	0x00000220	[ 34] _mono_print_thread_dump_internal
0x000CE780	0x00000020	[ 34] _mono_print_thread_dump_from_ctx
0x000CE7A0	0x00000080	[ 34] _mono_resume_unwind
0x000CE820	0x00000080	[ 34] _mono_restore_context
0x000CE8A0	0x00000090	[ 34] _find_last_handler_block
0x000CE930	0x00000040	[ 34] _mono_set_cast_details
0x000CE970	0x00000090	[ 34] _mono_thread_state_init_from_sigctx
0x000CEA00	0x00000080	[ 34] _mono_thread_state_init_from_monoctx
0x000CEA80	0x00000060	[ 34] _mono_setup_async_callback
0x000CEAE0	0x00000020	[ 34] _mono_install_unhandled_exception_hook
0x000CEB00	0x00000110	[ 34] _mono_invoke_unhandled_exception_hook
0x000CEC10	0x00000030	[ 34] _mono_jinfo_get_unwind_info
0x000CEC40	0x00000050	[ 34] _mono_jinfo_get_epilog_size
0x000CEC90	0x00000090	[ 34] _print_stack_frame_to_string
0x000CED20	0x00000080	[ 34] _get_exception_catch_class
0x000CEDA0	0x00000270	[ 34] _wrap_non_exception_throws
0x000CF010	0x0000023C	[ 34] _get_generic_context_from_stack_frame
0x000CF250	0x00000010	[ 35] _mini_gc_enable_gc_maps_for_aot
0x000CF260	0x00000010	[ 35] _mini_gc_init
0x000CF270	0x00000010	[ 35] _mini_gc_create_gc_map
0x000CF280	0x00000010	[ 35] _mini_gc_set_slot_type_from_fp
0x000CF290	0x00000010	[ 35] _mini_gc_set_slot_type_from_cfa
0x000CF2A0	0x00000020	[ 35] _mini_gc_init_cfg
0x000CF2C0	0x000000C0	[ 36] _mono_generic_context_check_used
0x000CF380	0x000002A0	[ 36] _mono_class_check_context_used
0x000CF620	0x00000190	[ 36] _type_check_context_used
0x000CF7B0	0x00000050	[ 36] _mono_method_get_declaring_generic_method
0x000CF800	0x00000140	[ 36] _mono_class_get_method_generic
0x000CF940	0x00000090	[ 36] _mono_is_partially_sharable_inst
0x000CF9D0	0x00000210	[ 36] _mini_get_gsharedvt_wrapper
0x000CFBE0	0x00000010	[ 36] _tramp_info_hash
0x000CFBF0	0x00000070	[ 36] _tramp_info_equal
0x000CFC60	0x00000030	[ 36] _mono_rgctx_info_type_to_str
0x000CFC90	0x00000050	[ 36] _mini_rgctx_info_type_to_patch_info_type
0x000CFCE0	0x00000390	[ 36] _mono_method_lookup_or_register_info
0x000D0070	0x00000060	[ 36] _mono_class_rgctx_get_array_size
0x000D00D0	0x000000B0	[ 36] _mono_class_fill_runtime_generic_context
0x000D0180	0x00000130	[ 36] _alloc_rgctx_array
0x000D02B0	0x000002A0	[ 36] _fill_runtime_generic_context
0x000D0550	0x00000030	[ 36] _mono_method_fill_runtime_generic_context
0x000D0580	0x00000160	[ 36] _mono_method_lookup_rgctx
0x000D06E0	0x00000030	[ 36] _mrgctx_hash_func
0x000D0710	0x00000040	[ 36] _mrgctx_equal_func
0x000D0750	0x000001D0	[ 36] _mono_generic_context_is_sharable_full
0x000D0920	0x00000040	[ 36] _mono_generic_context_is_sharable
0x000D0960	0x00000030	[ 36] _mono_method_is_generic_impl
0x000D0990	0x00000170	[ 36] _mono_method_is_generic_sharable_full
0x000D0B00	0x00000010	[ 36] _mini_is_gsharedvt_sharable_method
0x000D0B10	0x00000050	[ 36] _mono_method_is_generic_sharable
0x000D0B60	0x000000B0	[ 36] _mono_method_needs_static_rgctx_invoke
0x000D0C10	0x000001B0	[ 36] _mono_class_generic_sharing_enabled
0x000D0DC0	0x000000F0	[ 36] _mono_method_construct_object_context
0x000D0EB0	0x00000140	[ 36] _get_object_generic_inst
0x000D0FF0	0x00000020	[ 36] _mono_set_generic_sharing_supported
0x000D1010	0x00000010	[ 36] _mono_set_generic_sharing_vt_supported
0x000D1020	0x00000020	[ 36] _mono_set_partial_sharing_supported
0x000D1040	0x00000070	[ 36] _mono_get_generic_context_from_code
0x000D10B0	0x00000020	[ 36] _mini_method_get_context
0x000D10D0	0x00000060	[ 36] _mono_method_check_context_used
0x000D1130	0x00000040	[ 36] _mono_generic_context_equal_deep
0x000D1170	0x000000E0	[ 36] _generic_inst_equal
0x000D1250	0x00000060	[ 36] _mini_class_get_container_class
0x000D12B0	0x00000060	[ 36] _mini_class_get_context
0x000D1310	0x00000020	[ 36] _mini_get_basic_type_from_generic
0x000D1330	0x00000010	[ 36] _mini_is_gsharedvt_type_gsctx
0x000D1340	0x00000050	[ 36] _mini_type_get_underlying_type
0x000D1390	0x00000030	[ 36] _mini_type_stack_size
0x000D13C0	0x00000070	[ 36] _mini_type_stack_size_full
0x000D1430	0x00000030	[ 36] _mono_generic_sharing_init
0x000D1460	0x00000070	[ 36] _mono_class_unregister_image_generic_subclasses
0x000D14D0	0x00000040	[ 36] _mono_generic_sharing_cleanup
0x000D1510	0x00000080	[ 36] _mini_type_var_is_vt
0x000D1590	0x00000060	[ 36] _mini_type_is_reference
0x000D15F0	0x00000070	[ 36] _mini_method_get_rgctx
0x000D1660	0x00000030	[ 36] _mini_type_is_vtype
0x000D1690	0x00000010	[ 36] _mini_is_gsharedvt_variable_type
0x000D16A0	0x00000060	[ 36] _mini_class_is_generic_sharable
0x000D1700	0x00000010	[ 36] _mini_is_gsharedvt_variable_klass
0x000D1710	0x00000010	[ 36] _mini_is_gsharedvt_type
0x000D1720	0x00000010	[ 36] _mini_is_gsharedvt_klass
0x000D1730	0x00000010	[ 36] _mini_is_gsharedvt_signature
0x000D1740	0x00000010	[ 36] _mini_is_gsharedvt_variable_signature
0x000D1750	0x000000F0	[ 36] _move_subclasses_not_in_image_foreach_func
0x000D1840	0x00000170	[ 36] _class_get_rgctx_template_oti
0x000D19B0	0x00000DA0	[ 36] _instantiate_info
0x000D2750	0x00000680	[ 36] _inflate_info
0x000D2DD0	0x00000360	[ 36] _mono_class_get_runtime_generic_context_template
0x000D3130	0x000000B0	[ 36] _rgctx_template_get_other_slot
0x000D31E0	0x00000300	[ 36] _rgctx_template_set_slot
0x000D34E0	0x00000133	[ 36] _fill_in_rgctx_template_slot
0x000D3620	0x000001D0	[ 37] _mono_emit_native_types_intrinsics
0x000D37F0	0x00000D20	[ 37] _emit_intrinsics
0x000D4510	0x000001D0	[ 37] _mini_native_type_replace_type
0x000D46E0	0x000001D0	[ 37] _emit_widen
0x000D48B0	0x000001C8	[ 37] _emit_narrow
0x000D4A80	0x00000060	[ 38] _mono_chain_signal
0x000D4AE0	0x00000170	[ 38] _mono_runtime_posix_install_handlers
0x000D4C50	0x00000180	[ 38] _add_signal_handler
0x000D4DD0	0x00000080	[ 38] _sigquit_signal_handler
0x000D4E50	0x00000060	[ 38] _sigusr2_signal_handler
0x000D4EB0	0x00000100	[ 38] _sigusr1_signal_handler
0x000D4FB0	0x00000090	[ 38] _sigabrt_signal_handler
0x000D5040	0x000000C0	[ 38] _mono_runtime_cleanup_handlers
0x000D5100	0x000000A0	[ 38] _remove_signal_handler
0x000D51A0	0x00000010	[ 38] _mono_runtime_shutdown_stat_profiler
0x000D51B0	0x00000100	[ 38] _mono_runtime_setup_stat_profiler
0x000D52B0	0x00000180	[ 38] _sigprof_signal_handler
0x000D5430	0x00000290	[ 38] _per_thread_profiler_hit
0x000D56C0	0x00000016	[ 38] _free_saved_sig_handler_func
0x000D56E0	0x00000130	[ 39] _mono_create_static_rgctx_trampoline
0x000D5810	0x00000010	[ 39] _rgctx_tramp_info_hash
0x000D5820	0x00000020	[ 39] _rgctx_tramp_info_equal
0x000D5840	0x00000040	[ 39] _mini_jit_info_is_gsharedvt
0x000D5880	0x00000240	[ 39] _mini_add_method_trampoline
0x000D5AC0	0x00000050	[ 39] _mono_magic_trampoline
0x000D5B10	0x00000B10	[ 39] _common_call_trampoline
0x000D6620	0x00000130	[ 39] _mono_aot_trampoline
0x000D6750	0x00000090	[ 39] _mono_aot_plt_trampoline
0x000D67E0	0x000000D0	[ 39] _mono_class_init_trampoline
0x000D68B0	0x00000060	[ 39] _mini_get_nullified_class_init_trampoline
0x000D6910	0x00000030	[ 39] _mono_generic_class_init_trampoline
0x000D6940	0x00000020	[ 39] _mono_monitor_enter_trampoline
0x000D6960	0x00000020	[ 39] _mono_monitor_enter_v4_trampoline
0x000D6980	0x00000020	[ 39] _mono_monitor_exit_trampoline
0x000D69A0	0x000004E0	[ 39] _mono_delegate_trampoline
0x000D6E80	0x000000B0	[ 39] _mono_create_handler_block_trampoline
0x000D6F30	0x000000F0	[ 39] _mono_get_trampoline_func
0x000D7020	0x00000090	[ 39] _mono_rgctx_lazy_fetch_trampoline
0x000D70B0	0x00000110	[ 39] _mono_vcall_trampoline
0x000D71C0	0x000000C0	[ 39] _mono_handler_block_guard_trampoline
0x000D7280	0x00000340	[ 39] _mono_trampolines_init
0x000D75C0	0x00000060	[ 39] _mono_trampolines_cleanup
0x000D7620	0x00000050	[ 39] _mono_get_trampoline_code
0x000D7670	0x00000060	[ 39] _mono_create_specific_trampoline
0x000D76D0	0x00000190	[ 39] _mono_create_class_init_trampoline
0x000D7860	0x00000090	[ 39] _mono_create_generic_class_init_trampoline
0x000D78F0	0x00000190	[ 39] _mono_create_jump_trampoline
0x000D7A80	0x00000110	[ 39] _mono_create_jit_trampoline_in_domain
0x000D7B90	0x00000030	[ 39] _mono_create_jit_trampoline
0x000D7BC0	0x00000090	[ 39] _mono_create_jit_trampoline_from_token
0x000D7C50	0x00000270	[ 39] _mono_create_delegate_trampoline_info
0x000D7EC0	0x00000030	[ 39] _mono_create_delegate_trampoline
0x000D7EF0	0x00000070	[ 39] _mono_create_delegate_virtual_trampoline
0x000D7F60	0x000001B0	[ 39] _mono_create_rgctx_lazy_fetch_trampoline
0x000D8110	0x000000A0	[ 39] _mono_create_monitor_enter_trampoline
0x000D81B0	0x000000A0	[ 39] _mono_create_monitor_enter_v4_trampoline
0x000D8250	0x00000090	[ 39] _mono_create_monitor_exit_trampoline
0x000D82E0	0x00000010	[ 39] _mono_create_llvm_imt_trampoline
0x000D82F0	0x00000050	[ 39] _mono_find_class_init_trampoline_by_addr
0x000D8340	0x00000060	[ 39] _mono_find_rgctx_lazy_fetch_trampoline_by_addr
0x000D83A0	0x00000020	[ 39] _mono_get_generic_trampoline_simple_name
0x000D83C0	0x00000030	[ 39] _mono_get_generic_trampoline_name
0x000D83F0	0x00000050	[ 39] _mono_get_rgctx_fetch_trampoline_name
0x000D8440	0x00000398	[ 39] _mono_convert_imt_slot_to_vtable_slot
0x000D87E0	0x00000030	[ 40] _mono_arch_regname
0x000D8810	0x00000030	[ 40] _mono_arch_fregname
0x000D8840	0x00000030	[ 40] _mono_arch_xregname
0x000D8870	0x000000D0	[ 40] _mono_x86_patch
0x000D8940	0x000001E0	[ 40] _mono_arch_get_argument_info
0x000D8B20	0x00000A00	[ 40] _get_call_info_internal
0x000D9520	0x000000D0	[ 40] _mono_arch_tail_call_supported
0x000D95F0	0x00000030	[ 40] _mono_arch_cpu_init
0x000D9620	0x00000100	[ 40] _mono_arch_init
0x000D9720	0x00000060	[ 40] _mono_arch_cleanup
0x000D9780	0x00000080	[ 40] _mono_arch_cpu_optimizations
0x000D9800	0x00000070	[ 40] _mono_arch_cpu_enumerate_simd_versions
0x000D9870	0x000000D0	[ 40] _mono_arch_is_int_overflow
0x000D9940	0x00000150	[ 40] _mono_arch_get_allocatable_int_vars
0x000D9A90	0x00000040	[ 40] _mono_arch_get_global_int_regs
0x000D9AD0	0x00000040	[ 40] _mono_arch_regalloc_cost
0x000D9B10	0x000003F0	[ 40] _mono_arch_allocate_vars
0x000D9F00	0x00000110	[ 40] _mono_arch_create_vars
0x000DA010	0x00000AC0	[ 40] _mono_arch_emit_call
0x000DAAD0	0x000002D0	[ 40] _emit_sig_cookie
0x000DADA0	0x000003C0	[ 40] _mono_arch_emit_outarg_vt
0x000DB160	0x00000200	[ 40] _mono_arch_emit_setret
0x000DB360	0x00000200	[ 40] _mono_arch_instrument_prolog
0x000DB560	0x000005C0	[ 40] _mono_arch_instrument_epilog_full
0x000DBB20	0x00000200	[ 40] _mono_arch_peephole_pass_1
0x000DBD20	0x00000190	[ 40] _mono_arch_peephole_pass_2
0x000DBEB0	0x00000080	[ 40] _mono_arch_lowering_pass
0x000DBF30	0x00000060	[ 40] _mono_x86_have_tls_get
0x000DBF90	0x00000050	[ 40] _mono_x86_emit_tls_get
0x000DBFE0	0x00000070	[ 40] _mono_x86_emit_tls_get_reg
0x000DC050	0x00000020	[ 40] _mono_arch_translate_tls_offset
0x000DC070	0x0000EEE0	[ 40] _mono_arch_output_basic_block
0x000EAF50	0x00000090	[ 40] _mono_arch_emit_load_got_addr
0x000EAFE0	0x00000190	[ 40] _emit_call
0x000EB170	0x000008A0	[ 40] _mono_emit_stack_alloc
0x000EBA10	0x00000370	[ 40] _emit_float_to_int
0x000EBD80	0x00000010	[ 40] _mono_arch_register_lowlevel_calls
0x000EBD90	0x000003C0	[ 40] _mono_arch_patch_code
0x000EC150	0x00000100	[ 40] _mono_arch_get_patch_offset
0x000EC250	0x00000E70	[ 40] _mono_arch_emit_prolog
0x000ED0C0	0x00000B10	[ 40] _mono_arch_emit_epilog
0x000EDBD0	0x00000640	[ 40] _mono_arch_emit_exceptions
0x000EE210	0x00000010	[ 40] _mono_arch_flush_icache
0x000EE220	0x00000010	[ 40] _mono_arch_flush_register_windows
0x000EE230	0x00000010	[ 40] _mono_arch_is_inst_imm
0x000EE240	0x00000020	[ 40] _mono_arch_finish_init
0x000EE260	0x00000010	[ 40] _mono_arch_free_jit_tls_data
0x000EE270	0x00000950	[ 40] _mono_arch_build_imt_thunk
0x000EEBC0	0x00000010	[ 40] _mono_arch_find_imt_method
0x000EEBD0	0x00000010	[ 40] _mono_arch_find_static_call_vtable
0x000EEBE0	0x00000080	[ 40] _mono_arch_get_cie_program
0x000EEC60	0x00000340	[ 40] _mono_arch_emit_inst_for_method
0x000EEFA0	0x00000010	[ 40] _mono_arch_print_tree
0x000EEFB0	0x000000F0	[ 40] _mono_breakpoint_clean_code
0x000EF0A0	0x00000010	[ 40] _mono_x86_get_this_arg_offset
0x000EF0B0	0x00000010	[ 40] _mono_arch_get_this_arg_from_call
0x000EF0C0	0x000000F0	[ 40] _mono_arch_get_delegate_invoke_impls
0x000EF1B0	0x00000390	[ 40] _get_delegate_invoke_impl
0x000EF540	0x00000130	[ 40] _mono_arch_get_delegate_invoke_impl
0x000EF670	0x00000130	[ 40] _mono_arch_get_delegate_virtual_invoke_impl
0x000EF7A0	0x00000090	[ 40] _mono_arch_context_get_int_reg
0x000EF830	0x00000090	[ 40] _mono_arch_context_set_int_reg
0x000EF8C0	0x00000180	[ 40] _mono_arch_decompose_opts
0x000EFA40	0x00000880	[ 40] _mono_arch_decompose_long_opts
0x000F02C0	0x00000030	[ 40] _mono_arch_install_handler_block_guard
0x000F02F0	0x00000060	[ 40] _mono_arch_emit_load_aotconst
0x000F0350	0x00000030	[ 40] _mono_arch_get_trampolines
0x000F0380	0x00000070	[ 40] _mono_arch_set_breakpoint
0x000F03F0	0x00000020	[ 40] _mono_arch_clear_breakpoint
0x000F0410	0x00000040	[ 40] _mono_arch_start_single_stepping
0x000F0450	0x00000040	[ 40] _mono_arch_stop_single_stepping
0x000F0490	0x00000030	[ 40] _mono_arch_is_single_step_event
0x000F04C0	0x00000030	[ 40] _mono_arch_is_breakpoint_event
0x000F04F0	0x00000010	[ 40] _mono_arch_skip_breakpoint
0x000F0500	0x00000010	[ 40] _mono_arch_skip_single_step
0x000F0510	0x00000030	[ 40] _mono_arch_get_seq_point_info
0x000F0540	0x00000020	[ 40] _mono_arch_init_lmf_ext
0x000F0560	0x00000030	[ 40] _mono_arch_opcode_supported
0x000F0590	0x000001D3	[ 40] _add_valuetype
0x000F0770	0x00000030	[ 41] _mono_realloc_native_code
0x000F07A0	0x00000080	[ 41] _mono_running_on_valgrind
0x000F0820	0x00000150	[ 41] _mono_pmip
0x000F0970	0x00000250	[ 41] _mono_print_method_from_ip
0x000F0BC0	0x00000020	[ 41] _find_tramp
0x000F0BE0	0x00000070	[ 41] _mono_method_same_domain
0x000F0C50	0x000000A0	[ 41] _mono_global_codeman_reserve
0x000F0CF0	0x00000010	[ 41] _nacl_global_codeman_get_dest
0x000F0D00	0x00000010	[ 41] _mono_global_codeman_commit
0x000F0D10	0x00000010	[ 41] _nacl_global_codeman_validate
0x000F0D20	0x00000040	[ 41] _mono_create_unwind_op
0x000F0D60	0x00000150	[ 41] _mono_emit_unwind_op
0x000F0EB0	0x00000050	[ 41] _mono_jump_info_token_new2
0x000F0F00	0x00000040	[ 41] _mono_jump_info_token_new
0x000F0F40	0x00000050	[ 41] _mono_tramp_info_create
0x000F0F90	0x00000050	[ 41] _mono_tramp_info_free
0x000F0FE0	0x000000D0	[ 41] _mono_tramp_info_register
0x000F10B0	0x00000070	[ 41] _mono_debug_count
0x000F1120	0x00000130	[ 41] _mono_unlink_bblock
0x000F1250	0x00000040	[ 41] _mono_bblocks_linked
0x000F1290	0x000000F0	[ 41] _mono_get_block_region_notry
0x000F1380	0x00000040	[ 41] _mono_find_spvar_for_region
0x000F13C0	0x00000090	[ 41] _mono_reverse_branch_op
0x000F1450	0x000001A0	[ 41] _mono_type_to_store_membase
0x000F15F0	0x00000020	[ 41] _mini_replace_type
0x000F1610	0x000001C0	[ 41] _mono_type_to_load_membase
0x000F17D0	0x00000070	[ 41] _mini_type_to_stind
0x000F1840	0x000002E0	[ 41] _mono_op_imm_to_op
0x000F1B20	0x00000120	[ 41] _mono_decompose_op_imm
0x000F1C40	0x00000050	[ 41] _mono_bblock_insert_before_ins
0x000F1C90	0x000006C0	[ 41] _mono_compile_create_var_for_vreg
0x000F2350	0x00000020	[ 41] _mono_cfg_set_exception
0x000F2370	0x00000090	[ 41] _mono_mark_vreg_as_mp
0x000F2400	0x00000090	[ 41] _mono_mark_vreg_as_ref
0x000F2490	0x00000090	[ 41] _mono_compile_create_var
0x000F2520	0x000000F0	[ 41] _mono_compile_make_var_load
0x000F2610	0x00000050	[ 41] _mini_get_int_to_float_spill_area
0x000F2660	0x00000100	[ 41] _mono_type_from_stack_type
0x000F2760	0x000001E0	[ 41] _mono_add_ins_to_end
0x000F2940	0x00000060	[ 41] _mono_create_jump_table
0x000F29A0	0x00000290	[ 41] _mono_get_array_new_va_icall
0x000F2C30	0x00000020	[ 41] _mini_class_is_system_array
0x000F2C50	0x00000060	[ 41] _mini_assembly_can_skip_verification
0x000F2CB0	0x00000200	[ 41] _mono_compile_is_broken
0x000F2EB0	0x00000020	[ 41] _mono_icall_get_wrapper
0x000F2ED0	0x00000120	[ 41] _mono_icall_get_wrapper_full
0x000F2FF0	0x00000D90	[ 41] _mono_allocate_stack_slots
0x000F3D80	0x000000A0	[ 41] _mono_find_jit_opcode_emulation
0x000F3E20	0x00000030	[ 41] _mono_bblock_add_inst
0x000F3E50	0x00000050	[ 41] _mono_bblock_insert_after_ins
0x000F3EA0	0x000000A0	[ 41] _mono_verify_bblock
0x000F3F40	0x000000C0	[ 41] _mono_verify_cfg
0x000F4000	0x000000F0	[ 41] _mono_destroy_compile
0x000F40F0	0x00000020	[ 41] _mono_get_jit_tls_offset
0x000F4110	0x00000020	[ 41] _mono_get_lmf_tls_offset
0x000F4130	0x00000020	[ 41] _mono_get_lmf_addr_tls_offset
0x000F4150	0x00000020	[ 41] _mono_get_lmf
0x000F4170	0x00000020	[ 41] _mono_get_lmf_addr
0x000F4190	0x00000040	[ 41] _mono_set_lmf
0x000F41D0	0x00000030	[ 41] _mono_get_jit_tls
0x000F4200	0x00000080	[ 41] _mono_jit_thread_attach
0x000F4280	0x00000030	[ 41] _mono_jit_set_domain
0x000F42B0	0x000000B0	[ 41] _mini_get_tls_offset
0x000F4360	0x000000D0	[ 41] _mini_tls_get_supported
0x000F4430	0x00000420	[ 41] _mono_create_tls_get
0x000F4850	0x00000020	[ 41] _mono_get_jit_tls_intrinsic
0x000F4870	0x00000020	[ 41] _mono_get_domain_intrinsic
0x000F4890	0x00000020	[ 41] _mono_get_thread_intrinsic
0x000F48B0	0x00000020	[ 41] _mono_get_lmf_intrinsic
0x000F48D0	0x00000020	[ 41] _mono_get_lmf_addr_intrinsic
0x000F48F0	0x00000050	[ 41] _mono_add_patch_info
0x000F4940	0x00000050	[ 41] _mono_add_patch_info_rel
0x000F4990	0x00000040	[ 41] _mono_patch_info_list_prepend
0x000F49D0	0x00000050	[ 41] _mono_remove_patch_info
0x000F4A20	0x00000230	[ 41] _mono_patch_info_dup_mp
0x000F4C50	0x000001F0	[ 41] _mono_patch_info_hash
0x000F4E40	0x00000180	[ 41] _mono_patch_info_equal
0x000F4FC0	0x00000EA0	[ 41] _mono_resolve_patch_target
0x000F5E60	0x00000060	[ 41] _mono_add_seq_point
0x000F5EC0	0x00000130	[ 41] _mono_add_var_location
0x000F5FF0	0x00000040	[ 41] _mono_print_code
0x000F6030	0x000006D0	[ 41] _mono_codegen
0x000F6700	0x00000260	[ 41] _mini_get_shared_method_full
0x000F6960	0x000000B0	[ 41] _get_shared_inst
0x000F6A10	0x00000030	[ 41] _mini_get_shared_method
0x000F6A40	0x00000170	[ 41] _mini_init_gsctx
0x000F6BB0	0x00001F80	[ 41] _mini_method_compile
0x000F8B30	0x00000020	[ 41] _mini_get_debug_options
0x000F8B50	0x00000080	[ 41] _df_visit
0x000F8BD0	0x00000040	[ 41] _compute_reachable
0x000F8C10	0x00000DD0	[ 41] _create_jit_info
0x000F99E0	0x00000090	[ 41] _mono_get_jit_info_from_method
0x000F9A70	0x00000090	[ 41] _mono_jit_compile_method
0x000F9B00	0x000011D0	[ 41] _mono_jit_compile_method_with_opt
0x000FACD0	0x000000F0	[ 41] _mono_get_optimizations_for_method
0x000FADC0	0x000000E0	[ 41] _mono_jit_find_compiled_method_with_jit_info
0x000FAEA0	0x00000030	[ 41] _mono_jit_find_compiled_method
0x000FAED0	0x000000C0	[ 41] _mono_sigfpe_signal_handler
0x000FAF90	0x00000030	[ 41] _mono_sigill_signal_handler
0x000FAFC0	0x00000200	[ 41] _mono_sigsegv_signal_handler
0x000FB1C0	0x00000030	[ 41] _mono_sigint_signal_handler
0x000FB1F0	0x00000160	[ 41] _mini_get_vtable_trampoline
0x000FB350	0x000001C0	[ 41] _mono_get_delegate_virtual_invoke_impl
0x000FB510	0x00000010	[ 41] _mini_llvm_init
0x000FB520	0x00001B10	[ 41] _mini_init
0x000FD030	0x00000010	[ 41] _mini_create_ftnptr
0x000FD040	0x00000010	[ 41] _mini_get_addr_from_ftnptr
0x000FD050	0x00000060	[ 41] _mono_get_runtime_build_info
0x000FD0B0	0x000000C0	[ 41] _mini_tls_key_supported
0x000FD170	0x00000020	[ 41] _mini_get_imt_trampoline
0x000FD190	0x00000120	[ 41] _mini_thread_cleanup
0x000FD2B0	0x000002B0	[ 41] _mono_jit_free_method
0x000FD560	0x00000120	[ 41] _mini_create_jit_domain_info
0x000FD680	0x00000150	[ 41] _mini_free_jit_domain_info
0x000FD7D0	0x00000370	[ 41] _mono_jit_runtime_invoke
0x000FDB40	0x00000550	[ 41] _mini_cleanup
0x000FE090	0x00000040	[ 41] _mono_thread_start_cb
0x000FE0D0	0x00000040	[ 41] _mono_thread_attach_cb
0x000FE110	0x00000050	[ 41] _mono_set_defaults
0x000FE160	0x00000050	[ 41] _mono_set_optimizations
0x000FE1B0	0x00000020	[ 41] _mono_disable_optimizations
0x000FE1D0	0x00000020	[ 41] _mono_set_verbose_level
0x000FE1F0	0x00000050	[ 41] _mono_precompile_assemblies
0x000FE240	0x00000200	[ 41] _mono_precompile_assembly
0x000FE440	0x00000040	[ 41] _mono_arch_instrument_epilog
0x000FE480	0x00000080	[ 41] _mono_cfg_add_try_hole
0x000FE500	0x00000010	[ 41] _mono_arch_gsharedvt_sig_supported
0x000FE510	0x00000030	[ 41] _mono_arch_get_gsharedvt_call_info
0x000FE540	0x00000170	[ 41] _register_opcode_emulation
0x000FE6B0	0x00000110	[ 41] _setup_jit_tls_data
0x000FE7C0	0x00000050	[ 41] _mono_thread_abort_dummy
0x000FE810	0x00000040	[ 41] _mono_thread_abort
0x000FE850	0x00000020	[ 41] _delete_jump_list
0x000FE870	0x00000020	[ 41] _delete_got_slot_list
0x000FE890	0x00000030	[ 41] _dynamic_method_info_free
0x000FE8C0	0x00000010	[ 41] _class_method_pair_hash
0x000FE8D0	0x00000030	[ 41] _class_method_pair_equal
0x000FE900	0x00000010	[ 41] _runtime_invoke_info_free
0x000FE910	0x00000050	[ 41] _invalidated_delegate_trampoline
0x000FE960	0x000000E0	[ 41] _lookup_method_inner
0x000FEA40	0x00000150	[ 41] _get_gsharedvt_type
0x000FEB90	0x00000033	[ 41] _compare_by_interval_start_pos_func
0x000FEBD0	0x00000020	[ 42] _mono_regstate_new
0x000FEBF0	0x0000001D	[ 42] _mono_regstate_free
0x000FEC10	0x0000002C	[ 43] _mono_global_regalloc
0x000FEC40	0x00000010	[ 44] _seq_point_info_free
0x000FEC50	0x000006D0	[ 44] _mono_save_seq_point_info
0x000FF320	0x000000C0	[ 44] _collect_pred_seq_points
0x000FF3E0	0x00000110	[ 44] _seq_point_info_new
0x000FF4F0	0x00000090	[ 44] _get_seq_points
0x000FF580	0x00000090	[ 44] _find_next_seq_point_for_native_offset
0x000FF610	0x000000D0	[ 44] _find_prev_seq_point_for_native_offset
0x000FF6E0	0x00000090	[ 44] _find_seq_point
0x000FF770	0x00000270	[ 44] _seq_point_init_next
0x000FF9E0	0x000000E0	[ 44] _seq_point_iterator_init
0x000FFAC0	0x00000240	[ 44] _seq_point_iterator_next
0x000FFD00	0x00000160	[ 44] _seq_point_info_write
0x000FFE60	0x000000C0	[ 44] _seq_point_info_read
0x000FFF20	0x00000090	[ 44] _seq_point_info_get_write_size
0x000FFFB0	0x00000090	[ 44] _bb_deduplicate_op_il_seq_points
0x00100040	0x00000020	[ 45] _mono_simd_intrinsics_init
0x00100060	0x000008D0	[ 45] _mono_simd_simplify_indirection
0x00100930	0x000008F0	[ 45] _mono_emit_simd_intrinsics
0x00101220	0x000020A0	[ 45] _emit_intrinsics
0x001032C0	0x00000030	[ 45] _simd_intrinsic_compare_by_name
0x001032F0	0x000001A0	[ 45] _load_simd_vreg
0x00103490	0x00000280	[ 45] _get_simd_vreg_or_expanded_scalar
0x00103710	0x00000976	[ 45] _mono_emit_vector_ldelema
0x00104090	0x000006C0	[ 46] _mono_ssa_compute
0x00104750	0x000008A0	[ 46] _mono_ssa_rename_vars
0x00104FF0	0x00000910	[ 46] _mono_ssa_remove
0x00105900	0x000009B0	[ 46] _mono_ssa_cprop
0x001062B0	0x00000460	[ 46] _mono_ssa_create_def_use
0x00106710	0x00000D60	[ 46] _visit_inst
0x00107470	0x00000840	[ 46] _mono_ssa_deadce
0x00107CB0	0x00000530	[ 46] _mono_ssa_loop_invariant_code_motion
0x001081E0	0x000000C7	[ 46] _remove_bb_from_phis
0x001082B0	0x00000005	[ 47] _mono_perform_ssapre
0x001082C0	0x000000E0	[ 48] _mono_tasklets_init
0x001083A0	0x00000020	[ 48] _continuation_alloc
0x001083C0	0x00000060	[ 48] _continuation_free
0x00108420	0x00000180	[ 48] _continuation_mark_frame
0x001085A0	0x000001D0	[ 48] _continuation_store
0x00108770	0x000000B0	[ 48] _continuation_restore
0x00108820	0x00000005	[ 48] _mono_tasklets_cleanup
0x00108830	0x000000F0	[ 49] _mono_trace_eval_exception
0x00108920	0x000001B0	[ 49] _mono_trace_eval
0x00108AD0	0x000000D0	[ 49] _mono_trace_parse_options
0x00108BA0	0x00000430	[ 49] _get_spec
0x00108FD0	0x00000020	[ 49] _mono_trace_set_assembly
0x00108FF0	0x00000890	[ 49] _mono_trace_enter_method
0x00109880	0x000000B0	[ 49] _string_to_utf8
0x00109930	0x00000510	[ 49] _mono_trace_leave_method
0x00109E40	0x00000020	[ 49] _mono_trace_enable
0x00109E60	0x00000020	[ 49] _mono_trace_is_enabled
0x00109E80	0x000000D2	[ 49] _get_string
0x00109F60	0x00000170	[ 50] _mono_arch_get_unbox_trampoline
0x0010A0D0	0x00000180	[ 50] _mono_arch_get_static_rgctx_trampoline
0x0010A250	0x00000260	[ 50] _mono_arch_get_llvm_imt_trampoline
0x0010A4B0	0x00000170	[ 50] _mono_arch_patch_callsite
0x0010A620	0x000000A0	[ 50] _mono_arch_patch_plt_entry
0x0010A6C0	0x00000220	[ 50] _mono_arch_nullify_class_init_trampoline
0x0010A8E0	0x00000A40	[ 50] _mono_arch_create_generic_trampoline
0x0010B320	0x000000C0	[ 50] _mono_arch_get_nullified_class_init_trampoline
0x0010B3E0	0x000001D0	[ 50] _mono_arch_create_specific_trampoline
0x0010B5B0	0x00000580	[ 50] _mono_arch_create_rgctx_lazy_fetch_trampoline
0x0010BB30	0x00000180	[ 50] _mono_arch_create_general_rgctx_lazy_fetch_trampoline
0x0010BCB0	0x000003D0	[ 50] _mono_arch_create_generic_class_init_trampoline
0x0010C080	0x00000ED0	[ 50] _mono_arch_create_monitor_enter_trampoline
0x0010CF50	0x00000E60	[ 50] _mono_arch_create_monitor_exit_trampoline
0x0010DDB0	0x000000A0	[ 50] _mono_arch_invalidate_method
0x0010DE50	0x000002A0	[ 50] _mono_arch_create_handler_block_trampoline
0x0010E0F0	0x00000030	[ 50] _handler_block_trampoline_helper
0x0010E120	0x00000020	[ 50] _mono_arch_get_call_target
0x0010E140	0x00000010	[ 50] _mono_arch_get_plt_info_offset
0x0010E150	0x00000180	[ 50] _mono_arch_get_gsharedvt_arg_trampoline
0x0010E2D0	0x00000014	[ 50] _mono_arch_get_gsharedvt_trampoline
0x0010E2F0	0x00000020	[ 51] _mono_hw_reg_to_dwarf_reg
0x0010E310	0x00000090	[ 51] _mono_dwarf_reg_to_hw_reg
0x0010E3A0	0x00000690	[ 51] _mono_print_unwind_info
0x0010EA30	0x000004A0	[ 51] _mono_unwind_ops_encode
0x0010EED0	0x00000830	[ 51] _mono_unwind_frame
0x0010F700	0x00000090	[ 51] _mono_unwind_init
0x0010F790	0x00000070	[ 51] _mono_unwind_cleanup
0x0010F800	0x00000170	[ 51] _mono_cache_unwind_info
0x0010F970	0x00000030	[ 51] _mono_get_cached_unwind_info
0x0010F9A0	0x00000010	[ 51] _mono_unwind_get_dwarf_data_align
0x0010F9B0	0x00000010	[ 51] _mono_unwind_get_dwarf_pc_reg
0x0010F9C0	0x000005F0	[ 51] _mono_unwind_decode_fde
0x0010FFB0	0x000003B0	[ 51] _decode_lsda
0x00110360	0x00000150	[ 51] _decode_cie_op
0x001104B0	0x000002D0	[ 51] _mono_unwind_decode_llvm_mono_fde
0x00110780	0x00000009	[ 51] _mono_unwind_get_cie_program
0x00110790	0x00000010	[ 52] _mini_wapi_hps
0x001107A0	0x00000010	[ 52] _mini_wapi_semdel
0x001107B0	0x00000007	[ 52] _mini_wapi_seminfo
0x001107C0	0x00000010	[ 53] ___jit_debug_register_code
0x001107D0	0x00000180	[ 53] _mono_xdebug_init
0x00110950	0x00000040	[ 53] _mono_xdebug_flush
0x00110990	0x000000A0	[ 53] _xdebug_end_emit
0x00110A30	0x000000B0	[ 53] _xdebug_begin_emit
0x00110AE0	0x00000250	[ 53] _mono_save_xdebug_info
0x00110D30	0x000000DC	[ 53] _mono_save_trampoline_xdebug_info
0x00110E10	0x00000020	[ 54] _mono_install_runtime_load
0x00110E30	0x00000050	[ 54] _mono_runtime_load
0x00110E80	0x00000020	[ 54] _mono_runtime_set_no_exec
0x00110EA0	0x00000020	[ 54] _mono_runtime_get_no_exec
0x00110EC0	0x00000260	[ 54] _mono_runtime_init
0x00111120	0x00000070	[ 54] _mono_domain_assembly_preload
0x00111190	0x00000090	[ 54] _mono_domain_assembly_search
0x00111220	0x00000070	[ 54] _mono_domain_assembly_postload_search
0x00111290	0x00000190	[ 54] _mono_domain_fire_assembly_load
0x00111420	0x00000060	[ 54] _mono_context_init
0x00111480	0x00000150	[ 54] _create_domain_objects
0x001115D0	0x000000B0	[ 54] _mono_check_corlib_version
0x00111680	0x00000030	[ 54] _mono_runtime_cleanup
0x001116B0	0x00000020	[ 54] _mono_install_runtime_cleanup
0x001116D0	0x00000030	[ 54] _mono_runtime_quit
0x00111700	0x00000090	[ 54] _mono_domain_create_appdomain
0x00111790	0x000003F0	[ 54] _mono_domain_create_appdomain_internal
0x00111B80	0x00000020	[ 54] _mono_domain_from_appdomain
0x00111BA0	0x00000060	[ 54] _mono_domain_set_config
0x00111C00	0x000000A0	[ 54] _mono_domain_has_type_resolve
0x00111CA0	0x00000130	[ 54] _mono_domain_try_type_resolve
0x00111DD0	0x00000040	[ 54] _mono_domain_owns_vtable_slot
0x00111E10	0x00000030	[ 54] _mono_domain_set
0x00111E40	0x00000210	[ 54] _ves_icall_System_AppDomain_GetData
0x00112050	0x000000C0	[ 54] _ves_icall_System_AppDomain_SetData
0x00112110	0x00000080	[ 54] _ves_icall_System_AppDomain_getSetup
0x00112190	0x00000090	[ 54] _ves_icall_System_AppDomain_getFriendlyName
0x00112220	0x00000020	[ 54] _ves_icall_System_AppDomain_getCurDomain
0x00112240	0x00000020	[ 54] _ves_icall_System_AppDomain_getRootDomain
0x00112260	0x00000200	[ 54] _mono_set_private_bin_path_from_config
0x00112460	0x00000040	[ 54] _ves_icall_System_AppDomain_createDomain
0x001124A0	0x00000150	[ 54] _ves_icall_System_AppDomain_GetAssemblies
0x001125F0	0x00000150	[ 54] _mono_try_assembly_resolve
0x00112740	0x000001F0	[ 54] _mono_is_shadow_copy_enabled
0x00112930	0x00000180	[ 54] _get_shadow_assembly_location_base
0x00112AB0	0x00000A40	[ 54] _mono_make_shadow_copy
0x001134F0	0x00000570	[ 54] _set_domain_search_path
0x00113A60	0x00000140	[ 54] _shadow_copy_sibling
0x00113BA0	0x000000C0	[ 54] _ves_icall_System_Reflection_Assembly_LoadFrom
0x00113C60	0x00000130	[ 54] _ves_icall_System_AppDomain_LoadAssemblyRaw
0x00113D90	0x00000160	[ 54] _ves_icall_System_AppDomain_LoadAssembly
0x00113EF0	0x00000090	[ 54] _ves_icall_System_AppDomain_InternalUnload
0x00113F80	0x00000040	[ 54] _mono_domain_unload
0x00113FC0	0x00000030	[ 54] _ves_icall_System_AppDomain_InternalIsFinalizingForUnload
0x00113FF0	0x00000020	[ 54] _mono_domain_is_unloading
0x00114010	0x00000180	[ 54] _ves_icall_System_AppDomain_ExecuteAssembly
0x00114190	0x00000010	[ 54] _ves_icall_System_AppDomain_GetIDFromDomain
0x001141A0	0x00000040	[ 54] _ves_icall_System_AppDomain_InternalSetDomain
0x001141E0	0x00000050	[ 54] _ves_icall_System_AppDomain_InternalSetDomainByID
0x00114230	0x00000020	[ 54] _ves_icall_System_AppDomain_InternalPushDomainRef
0x00114250	0x00000040	[ 54] _ves_icall_System_AppDomain_InternalPushDomainRefByID
0x00114290	0x00000010	[ 54] _ves_icall_System_AppDomain_InternalPopDomainRef
0x001142A0	0x00000010	[ 54] _ves_icall_System_AppDomain_InternalGetContext
0x001142B0	0x00000020	[ 54] _ves_icall_System_AppDomain_InternalGetDefaultContext
0x001142D0	0x00000030	[ 54] _ves_icall_System_AppDomain_InternalSetContext
0x00114300	0x000000A0	[ 54] _ves_icall_System_AppDomain_InternalGetProcessGuid
0x001143A0	0x00000350	[ 54] _mono_domain_try_unload
0x001146F0	0x000003C0	[ 54] _unload_thread_main
0x00114AB0	0x00000180	[ 54] _real_load
0x00114C30	0x000000C0	[ 54] _try_load_from
0x00114CF0	0x00000180	[ 54] _add_assemblies_to_domain
0x00114E70	0x00000110	[ 54] _start_element
0x00114F80	0x00000050	[ 54] _end_element
0x00114FD0	0x00000073	[ 54] _parse_error
0x00115050	0x00000030	[ 55] _mono_public_tokens_are_equal
0x00115080	0x00000110	[ 55] _mono_set_assemblies_path
0x00115190	0x00000110	[ 55] _mono_assembly_names_equal
0x001152A0	0x00000030	[ 55] _mono_assembly_setrootdir
0x001152D0	0x00000020	[ 55] _mono_assembly_getrootdir
0x001152F0	0x00000050	[ 55] _mono_set_dirs
0x00115340	0x000001F0	[ 55] _mono_set_rootdir
0x00115530	0x000001A0	[ 55] _mono_assemblies_init
0x001156D0	0x00000250	[ 55] _mono_assembly_fill_assembly_name
0x00115920	0x00000120	[ 55] _mono_stringify_assembly_name
0x00115A40	0x00000010	[ 55] _mono_assembly_addref
0x00115A50	0x00000210	[ 55] _mono_assembly_get_assemblyref
0x00115C60	0x00000670	[ 55] _mono_assembly_load_reference
0x001162D0	0x000000B0	[ 55] _mono_assembly_loaded_full
0x00116380	0x00000090	[ 55] _mono_assembly_close
0x00116410	0x00000010	[ 55] _mono_assembly_load_references
0x00116420	0x00000040	[ 55] _mono_assembly_invoke_load_hook
0x00116460	0x00000080	[ 55] _mono_install_assembly_load_hook
0x001164E0	0x00000080	[ 55] _mono_assembly_invoke_search_hook
0x00116560	0x00000090	[ 55] _mono_install_assembly_search_hook
0x001165F0	0x00000090	[ 55] _mono_install_assembly_refonly_search_hook
0x00116680	0x00000090	[ 55] _mono_install_assembly_postload_search_hook
0x00116710	0x00000090	[ 55] _mono_install_assembly_postload_refonly_search_hook
0x001167A0	0x00000080	[ 55] _mono_install_assembly_preload_hook
0x00116820	0x00000080	[ 55] _mono_install_assembly_refonly_preload_hook
0x001168A0	0x00000100	[ 55] _mono_assembly_open_from_bundle
0x001169A0	0x000004A0	[ 55] _mono_assembly_open_full
0x00116E40	0x00000480	[ 55] _mono_assembly_load_from_full
0x001172C0	0x000001D0	[ 55] _mono_assembly_load_friends
0x00117490	0x00000530	[ 55] _mono_assembly_name_parse_full
0x001179C0	0x00000010	[ 55] _free_item
0x001179D0	0x00000030	[ 55] _mono_assembly_open
0x00117A00	0x00000030	[ 55] _mono_assembly_load_from
0x00117A30	0x00000040	[ 55] _mono_assembly_name_free
0x00117A70	0x000004E0	[ 55] _build_assembly_name
0x00117F50	0x00000040	[ 55] _mono_assembly_name_parse
0x00117F90	0x00000060	[ 55] _mono_assembly_name_new
0x00117FF0	0x00000010	[ 55] _mono_assembly_name_get_name
0x00118000	0x00000010	[ 55] _mono_assembly_name_get_culture
0x00118010	0x00000020	[ 55] _mono_assembly_name_get_pubkeytoken
0x00118030	0x00000040	[ 55] _mono_assembly_name_get_version
0x00118070	0x00000440	[ 55] _mono_assembly_load_with_partial_name
0x001184B0	0x00000430	[ 55] _mono_assembly_remap_version
0x001188E0	0x000000B0	[ 55] _mono_assembly_loaded
0x00118990	0x00000380	[ 55] _probe_for_partial_name
0x00118D10	0x00000340	[ 55] _mono_assembly_load_corlib
0x00119050	0x00001230	[ 55] _mono_assembly_load_full_nosearch
0x0011A280	0x000000A0	[ 55] _mono_assembly_load_full
0x0011A320	0x000000A0	[ 55] _mono_assembly_load
0x0011A3C0	0x00000060	[ 55] _mono_assembly_release_gc_roots
0x0011A420	0x00000180	[ 55] _mono_assembly_close_except_image_pools
0x0011A5A0	0x00000080	[ 55] _mono_assembly_close_finish
0x0011A620	0x00000020	[ 55] _mono_assembly_load_module
0x0011A640	0x00000070	[ 55] _mono_assembly_foreach
0x0011A6B0	0x00000110	[ 55] _mono_assemblies_cleanup
0x0011A7C0	0x000000A0	[ 55] _mono_assembly_cleanup_domain_bindings
0x0011A860	0x00000020	[ 55] _mono_assembly_set_main
0x0011A880	0x00000020	[ 55] _mono_assembly_get_main
0x0011A8A0	0x00000010	[ 55] _mono_assembly_get_image
0x0011A8B0	0x00000020	[ 55] _mono_register_bundled_assemblies
0x0011A8D0	0x00000330	[ 55] _mono_assembly_has_skip_verification
0x0011AC00	0x000000F0	[ 55] _get_per_domain_assembly_binding_info
0x0011ACF0	0x00000250	[ 55] _assembly_binding_info_parsed
0x0011AF40	0x000000B9	[ 55] _assembly_binding_maps_name
0x0011B000	0x00000040	[ 56] _mono_attach_parse_options
0x0011B040	0x00000070	[ 56] _mono_attach_init
0x0011B0B0	0x000000E0	[ 56] _mono_attach_start
0x0011B190	0x000004E0	[ 56] _mono_attach_maybe_start
0x0011B670	0x00000080	[ 56] _mono_attach_cleanup
0x0011B6F0	0x00000560	[ 56] _receiver_thread
0x0011BC50	0x00000175	[ 56] _decode_string_value
0x0011BDD0	0x00000010	[ 57] _mono_image_file_init
0x0011BDE0	0x00000080	[ 57] _mono_image_file_init2
0x0011BE60	0x00000030	[ 57] _mono_image_file_init3
0x0011BE90	0x00000730	[ 57] _mono_image_file_parse
0x0011C5C0	0x00000010	[ 57] _mono_image_file_parse2
0x0011C5D0	0x00000050	[ 57] _mono_image_file_parse3
0x0011C620	0x00000073	[ 57] _mono_image_file_parse9
0x0011C6A0	0x000000A0	[ 58] _mono_class_from_typeref
0x0011C740	0x000004A0	[ 58] _mono_class_from_typeref_checked
0x0011CBE0	0x00000500	[ 58] _mono_class_from_name
0x0011D0E0	0x00000EC0	[ 58] _mono_class_create_from_typedef
0x0011DFA0	0x00000210	[ 58] _mono_class_name_from_token
0x0011E1B0	0x00000260	[ 58] _mono_assembly_name_from_token
0x0011E410	0x00000100	[ 58] _mono_dup_array_type
0x0011E510	0x00000070	[ 58] _mono_metadata_signature_deep_dup
0x0011E580	0x00000060	[ 58] _mono_type_get_name_full
0x0011E5E0	0x00000650	[ 58] _mono_type_get_name_recurse
0x0011EC30	0x00000060	[ 58] _mono_type_get_full_name
0x0011EC90	0x00000010	[ 58] _mono_class_get_type
0x0011ECA0	0x00000050	[ 58] _mono_type_get_name
0x0011ECF0	0x00000050	[ 58] _mono_type_get_underlying_type
0x0011ED40	0x00000020	[ 58] _mono_class_enum_basetype
0x0011ED60	0x000000C0	[ 58] _mono_class_is_open_constructed_type
0x0011EE20	0x00000010	[ 58] _mono_generic_class_get_context
0x0011EE30	0x00000020	[ 58] _mono_class_get_context
0x0011EE50	0x00000060	[ 58] _mono_class_get_generic_container
0x0011EEB0	0x00000060	[ 58] _mono_class_get_generic_class
0x0011EF10	0x00000090	[ 58] _mono_class_inflate_generic_type_with_mempool
0x0011EFA0	0x000003F0	[ 58] _inflate_generic_type
0x0011F390	0x00000080	[ 58] _mono_class_inflate_generic_type
0x0011F410	0x00000030	[ 58] _mono_class_inflate_generic_type_checked
0x0011F440	0x00000060	[ 58] _mono_class_inflate_generic_class_checked
0x0011F4A0	0x000003E0	[ 58] _mono_class_from_mono_type
0x0011F880	0x000000D0	[ 58] _mono_class_inflate_generic_class
0x0011F950	0x000000B0	[ 58] _mono_class_inflate_generic_method
0x0011FA00	0x000000B0	[ 58] _mono_class_inflate_generic_method_full
0x0011FAB0	0x00000030	[ 58] _mono_class_inflate_generic_method_checked
0x0011FAE0	0x000004D0	[ 58] _mono_class_inflate_generic_method_full_checked
0x0011FFB0	0x00000020	[ 58] _mono_method_get_context
0x0011FFD0	0x00000070	[ 58] _mono_method_get_generic_container
0x00120040	0x00000070	[ 58] _mono_method_set_generic_container
0x001200B0	0x00000010	[ 58] _mono_get_inflated_method
0x001200C0	0x00000090	[ 58] _mono_method_get_context_general
0x00120150	0x00000040	[ 58] _mono_class_setup_fields_locking
0x00120190	0x00000910	[ 58] _mono_class_setup_fields
0x00120AA0	0x00000040	[ 58] _mono_type_get_basic_type_from_generic
0x00120AE0	0x00000CA0	[ 58] _mono_class_layout_fields
0x00121780	0x00000060	[ 58] _mono_class_set_failure
0x001217E0	0x00000010	[ 58] _mono_field_get_name
0x001217F0	0x00000A20	[ 58] _mono_class_setup_methods
0x00122210	0x00000740	[ 58] _mono_class_init
0x00122950	0x000002C0	[ 58] _mono_class_setup_interfaces
0x00122C10	0x00000330	[ 58] _generic_array_methods
0x00122F40	0x00000110	[ 58] _mono_class_get_method_by_index
0x00123050	0x00000170	[ 58] _mono_class_get_inflated_method
0x001231C0	0x00000120	[ 58] _mono_class_get_vtable_entry
0x001232E0	0x00000020	[ 58] _mono_class_setup_vtable
0x00123300	0x00000020	[ 58] _mono_class_get_vtable_size
0x00123320	0x00000050	[ 58] _mono_unload_interface_ids
0x00123370	0x00000060	[ 58] _mono_unload_interface_id
0x001233D0	0x00000050	[ 58] _mono_class_get_implemented_interfaces
0x00123420	0x000000C0	[ 58] _collect_implemented_interfaces_aux
0x001234E0	0x00000060	[ 58] _mono_class_interface_offset
0x00123540	0x00000020	[ 58] _compare_interface_ids
0x00123560	0x00000100	[ 58] _mono_class_interface_offset_with_variance
0x00123660	0x00000050	[ 58] _mono_class_has_variant_generic_params
0x001236B0	0x000001F0	[ 58] _mono_class_is_variant_compatible
0x001238A0	0x00000030	[ 58] _mono_class_setup_interface_offsets
0x001238D0	0x00001FD0	[ 58] _setup_interface_offsets
0x001258A0	0x00000220	[ 58] _mono_class_check_vtable_constraints
0x00125AC0	0x00000190	[ 58] _mono_class_setup_vtable_full
0x00125C50	0x00000020	[ 58] _mono_class_get_generic_type_definition
0x00125C70	0x000027F0	[ 58] _mono_class_setup_vtable_general
0x00128460	0x000001A0	[ 58] _mono_method_get_vtable_slot
0x00128600	0x00000170	[ 58] _mono_class_get_virtual_methods
0x00128770	0x00000500	[ 58] _check_interface_method_override
0x00128C70	0x000000D0	[ 58] _mono_method_can_access_method_full
0x00128D40	0x000001A0	[ 58] _count_virtual_methods
0x00128EE0	0x00000040	[ 58] _mono_method_get_vtable_index
0x00128F20	0x000000F0	[ 58] _concat_two_strings_with_zero
0x00129010	0x00000260	[ 58] _mono_get_unique_iid
0x00129270	0x000000F0	[ 58] _mono_class_setup_supertypes
0x00129360	0x00000140	[ 58] _find_method_in_metadata
0x001294A0	0x00000150	[ 58] _set_failure_from_loader_error
0x001295F0	0x00000180	[ 58] _mono_class_has_finalizer
0x00129770	0x00000050	[ 58] _mono_is_corlib_image
0x001297C0	0x000005B0	[ 58] _mono_class_setup_mono_type
0x00129D70	0x000002E0	[ 58] _mono_class_setup_parent
0x0012A050	0x00000030	[ 58] _mono_class_is_nullable
0x0012A080	0x00000070	[ 58] _mono_class_get_nullable_param
0x0012A0F0	0x000001A0	[ 58] _mono_generic_class_get_class
0x0012A290	0x00000120	[ 58] _mono_generic_class_setup_parent
0x0012A3B0	0x00000600	[ 58] _mono_class_from_generic_parameter
0x0012A9B0	0x000001E0	[ 58] _mono_ptr_class_get
0x0012AB90	0x00000750	[ 58] _mono_bounded_array_class_get
0x0012B2E0	0x00000030	[ 58] _mono_array_class_get
0x0012B310	0x00000020	[ 58] _mono_class_instance_size
0x0012B330	0x00000140	[ 58] _mono_class_array_element_size
0x0012B470	0x00000030	[ 58] _mono_class_min_align
0x0012B4A0	0x00000040	[ 58] _mono_class_value_size
0x0012B4E0	0x00000050	[ 58] _mono_class_data_size
0x0012B530	0x00000140	[ 58] _mono_class_get_field
0x0012B670	0x00000030	[ 58] _mono_class_get_field_from_name
0x0012B6A0	0x000000D0	[ 58] _mono_class_get_field_from_name_full
0x0012B770	0x000000D0	[ 58] _mono_class_get_field_token
0x0012B840	0x00000260	[ 58] _mono_class_get_field_default_value
0x0012BAA0	0x000000F0	[ 58] _mono_class_alloc_ext
0x0012BB90	0x00000210	[ 58] _mono_class_get_property_default_value
0x0012BDA0	0x000000D0	[ 58] _mono_class_get_property_token
0x0012BE70	0x00000090	[ 58] _mono_class_get_event_token
0x0012BF00	0x00000090	[ 58] _mono_class_get_property_from_name
0x0012BF90	0x00000060	[ 58] _mono_class_get_properties
0x0012BFF0	0x00000100	[ 58] _mono_class_get_full
0x0012C0F0	0x00000190	[ 58] _mono_class_get_checked
0x0012C280	0x00000090	[ 58] _mono_class_get_and_inflate_typespec_checked
0x0012C310	0x00000040	[ 58] _mono_lookup_dynamic_token
0x0012C350	0x000001D0	[ 58] _mono_type_get_checked
0x0012C520	0x000000A0	[ 58] _mono_class_get
0x0012C5C0	0x000002E0	[ 58] _mono_image_init_name_cache
0x0012C8A0	0x00000100	[ 58] _mono_image_add_to_name_cache
0x0012C9A0	0x000000A0	[ 58] _mono_class_from_name_case
0x0012CA40	0x000001E0	[ 58] _mono_class_from_name_case_checked
0x0012CC20	0x00000040	[ 58] _find_nocase
0x0012CC60	0x00000090	[ 58] _return_nested_in
0x0012CCF0	0x00000140	[ 58] _mono_class_is_subclass_of
0x0012CE30	0x00000420	[ 58] _mono_class_is_assignable_from
0x0012D250	0x00000270	[ 58] _mono_gparam_is_assignable_from
0x0012D4C0	0x00000190	[ 58] _mono_class_is_assignable_from_slow
0x0012D650	0x00000280	[ 58] _mono_class_implement_interface_slow
0x0012D8D0	0x00000140	[ 58] _mono_class_get_cctor
0x0012DA10	0x000001E0	[ 58] _mono_class_get_method_from_name_flags
0x0012DBF0	0x00000120	[ 58] _mono_class_get_finalizer
0x0012DD10	0x00000030	[ 58] _mono_class_needs_cctor_run
0x0012DD40	0x00000050	[ 58] _mono_array_element_size
0x0012DD90	0x000000B0	[ 58] _mono_ldtoken
0x0012DE40	0x00000330	[ 58] _mono_ldtoken_checked
0x0012E170	0x00000020	[ 58] _mono_lookup_dynamic_token_class
0x0012E190	0x00000020	[ 58] _mono_install_lookup_dynamic_token
0x0012E1B0	0x00000020	[ 58] _mono_install_get_cached_class_info
0x0012E1D0	0x00000020	[ 58] _mono_install_get_class_from_name
0x0012E1F0	0x00000010	[ 58] _mono_class_get_image
0x0012E200	0x00000010	[ 58] _mono_class_get_element_class
0x0012E210	0x00000020	[ 58] _mono_class_is_valuetype
0x0012E230	0x00000020	[ 58] _mono_class_is_enum
0x0012E250	0x00000010	[ 58] _mono_class_get_parent
0x0012E260	0x00000010	[ 58] _mono_class_get_nesting_type
0x0012E270	0x00000010	[ 58] _mono_class_get_rank
0x0012E280	0x00000010	[ 58] _mono_class_get_flags
0x0012E290	0x00000010	[ 58] _mono_class_get_name
0x0012E2A0	0x00000010	[ 58] _mono_class_get_namespace
0x0012E2B0	0x00000010	[ 58] _mono_class_get_type_token
0x0012E2C0	0x00000010	[ 58] _mono_class_get_byref_type
0x0012E2D0	0x00000010	[ 58] _mono_class_num_fields
0x0012E2E0	0x00000010	[ 58] _mono_class_num_methods
0x0012E2F0	0x00000020	[ 58] _mono_class_num_properties
0x0012E310	0x00000580	[ 58] _mono_class_setup_properties
0x0012E890	0x00000020	[ 58] _mono_class_num_events
0x0012E8B0	0x00000830	[ 58] _mono_class_setup_events
0x0012F0E0	0x00000070	[ 58] _mono_class_get_fields
0x0012F150	0x00000060	[ 58] _mono_class_get_methods
0x0012F1B0	0x00000060	[ 58] _mono_class_get_events
0x0012F210	0x000000C0	[ 58] _mono_class_get_interfaces
0x0012F2D0	0x00000260	[ 58] _mono_class_get_nested_types
0x0012F530	0x00000020	[ 58] _mono_class_is_delegate
0x0012F550	0x00000020	[ 58] _mono_class_implements_interface
0x0012F570	0x000000B0	[ 58] _mono_field_get_type
0x0012F620	0x00000030	[ 58] _mono_field_get_type_checked
0x0012F650	0x00000030	[ 58] _mono_trace_warning
0x0012F680	0x000003E0	[ 58] _mono_field_resolve_type
0x0012FA60	0x00000010	[ 58] _mono_field_get_parent
0x0012FA70	0x000000B0	[ 58] _mono_field_get_flags
0x0012FB20	0x00000010	[ 58] _mono_field_get_offset
0x0012FB30	0x000001F0	[ 58] _mono_field_get_data
0x0012FD20	0x00000010	[ 58] _mono_property_get_name
0x0012FD30	0x00000010	[ 58] _mono_property_get_set_method
0x0012FD40	0x00000010	[ 58] _mono_property_get_get_method
0x0012FD50	0x00000010	[ 58] _mono_property_get_parent
0x0012FD60	0x00000010	[ 58] _mono_property_get_flags
0x0012FD70	0x00000010	[ 58] _mono_event_get_name
0x0012FD80	0x00000010	[ 58] _mono_event_get_add_method
0x0012FD90	0x00000010	[ 58] _mono_event_get_remove_method
0x0012FDA0	0x00000010	[ 58] _mono_event_get_raise_method
0x0012FDB0	0x00000010	[ 58] _mono_event_get_parent
0x0012FDC0	0x00000010	[ 58] _mono_event_get_flags
0x0012FDD0	0x00000030	[ 58] _mono_class_get_method_from_name
0x0012FE00	0x00000030	[ 58] _mono_class_get_exception_data
0x0012FE30	0x000000D0	[ 58] _mono_classes_init
0x0012FF00	0x00000040	[ 58] _mono_classes_cleanup
0x0012FF40	0x00000270	[ 58] _mono_class_get_exception_for_failure
0x001301B0	0x00000070	[ 58] _mono_class_has_parent_and_ignore_generics
0x00130220	0x000000A0	[ 58] _mono_method_can_access_field
0x001302C0	0x00000410	[ 58] _can_access_member
0x001306D0	0x00000090	[ 58] _mono_method_can_access_method
0x00130760	0x00000330	[ 58] _can_access_type
0x00130A90	0x000000D0	[ 58] _can_access_instantiation
0x00130B60	0x000000A0	[ 58] _mono_method_can_access_field_full
0x00130C00	0x00000020	[ 58] _mono_class_can_access_class
0x00130C20	0x00000030	[ 58] _mono_type_is_valid_enum_basetype
0x00130C50	0x00000140	[ 58] _mono_class_is_valid_enum
0x00130D90	0x00000020	[ 58] _mono_generic_class_is_generic_type_definition
0x00130DB0	0x00000040	[ 58] _mono_class_setup_interface_id
0x00130DF0	0x00000060	[ 58] _mono_class_get_fields_lazy
0x00130E50	0x00000020	[ 58] _mono_class_full_name
0x00130E70	0x00000190	[ 58] _mono_class_setup_basic_field_info
0x00131000	0x000000C0	[ 58] _can_access_internals
0x001310C0	0x00000110	[ 58] _mono_class_is_variant_compatible_slow
0x001311D0	0x00000160	[ 58] _set_interface_and_offset
0x00131330	0x00000094	[ 58] _fill_valuetype_array_derived_types
0x001313D0	0x000000B0	[ 59] _mono_cominterop_init
0x00131480	0x00000070	[ 59] _mono_string_to_bstr
0x001314F0	0x00000040	[ 59] _mono_string_from_bstr
0x00131530	0x00000020	[ 59] _mono_free_bstr
0x00131550	0x00000010	[ 59] _mono_cominterop_cleanup
0x00131560	0x00000010	[ 59] _cominterop_release_all_rcws
0x00131570	0x00000010	[ 59] _mono_marshal_free_ccw
0x00131580	0x00000030	[ 59] _ves_icall_System_Runtime_InteropServices_Marshal_AddRefInternal
0x001315B0	0x00000030	[ 59] _ves_icall_System_Runtime_InteropServices_Marshal_ReleaseInternal
0x001315E0	0x00000030	[ 59] _ves_icall_System_Runtime_InteropServices_Marshal_QueryInterfaceInternal
0x00131610	0x00000040	[ 59] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringBSTR
0x00131650	0x00000070	[ 59] _ves_icall_System_Runtime_InteropServices_Marshal_StringToBSTR
0x001316C0	0x0000001D	[ 59] _ves_icall_System_Runtime_InteropServices_Marshal_FreeBSTR
0x001316E0	0x00000060	[ 60] _mono_console_init
0x00131740	0x00000020	[ 60] _ves_icall_System_ConsoleDriver_Isatty
0x00131760	0x00000100	[ 60] _ves_icall_System_ConsoleDriver_SetEcho
0x00131860	0x00000100	[ 60] _ves_icall_System_ConsoleDriver_SetBreak
0x00131960	0x00000100	[ 60] _ves_icall_System_ConsoleDriver_InternalKeyAvailable
0x00131A60	0x000001A0	[ 60] _mono_console_handle_async_ops
0x00131C00	0x000004B0	[ 60] _ves_icall_System_ConsoleDriver_TtySetup
0x001320B0	0x00000150	[ 60] _tty_teardown
0x00132200	0x00000070	[ 60] _sigcont_handler
0x00132270	0x00000050	[ 60] _sigint_handler
0x001322C0	0x0000007D	[ 60] _sigwinch_handler
0x00132340	0x000003D0	[ 61] _mono_type_get_desc
0x00132710	0x000000A0	[ 61] _append_class_name
0x001327B0	0x00000050	[ 61] _mono_type_full_name
0x00132800	0x00000090	[ 61] _mono_signature_get_desc
0x00132890	0x00000160	[ 61] _mono_context_get_desc
0x001329F0	0x00000170	[ 61] _mono_method_desc_new
0x00132B60	0x00000080	[ 61] _mono_method_desc_from_method
0x00132BE0	0x00000030	[ 61] _mono_method_desc_free
0x00132C10	0x00000090	[ 61] _mono_method_desc_match
0x00132CA0	0x00000110	[ 61] _mono_method_desc_full_match
0x00132DB0	0x00000060	[ 61] _mono_method_desc_search_in_class
0x00132E10	0x00000400	[ 61] _mono_method_desc_search_in_image
0x00133210	0x00000070	[ 61] _mono_disasm_code_one
0x00133280	0x00000470	[ 61] _dis_one
0x001336F0	0x00000080	[ 61] _mono_disasm_code
0x00133770	0x00000070	[ 61] _mono_field_full_name
0x001337E0	0x00000360	[ 61] _mono_method_full_name
0x00133B40	0x00000110	[ 61] _mono_object_describe
0x00133C50	0x00000070	[ 61] _print_name_space
0x00133CC0	0x00000020	[ 61] _mono_object_describe_fields
0x00133CE0	0x00000100	[ 61] _objval_describe
0x00133DE0	0x00000020	[ 61] _mono_value_describe_fields
0x00133E00	0x000000A0	[ 61] _mono_class_describe_statics
0x00133EA0	0x00000204	[ 61] _print_field_value
0x001340B0	0x000002F0	[ 62] _mono_debug_open_mono_symbols
0x001343A0	0x00000070	[ 62] _mono_debug_close_mono_symbol_file
0x00134410	0x00000020	[ 62] _mono_debug_symfile_is_loaded
0x00134430	0x00000450	[ 62] _mono_debug_symfile_lookup_location
0x00134880	0x00000020	[ 62] _mono_debug_symfile_free_location
0x001348A0	0x000009E0	[ 62] _mono_debug_symfile_get_line_numbers_full
0x00135280	0x00000120	[ 62] _get_source_info
0x001353A0	0x00000060	[ 62] _mono_debug_symfile_get_line_numbers
0x00135400	0x00000040	[ 62] __mono_debug_address_from_il_offset
0x00135440	0x00000120	[ 62] _mono_debug_symfile_lookup_method
0x00135560	0x00000010	[ 62] _compare_method
0x00135570	0x00000340	[ 62] _mono_debug_symfile_lookup_locals
0x001358B0	0x00000060	[ 62] _mono_debug_symfile_free_locals
0x00135910	0x00000010	[ 62] _free_method_info
0x00135920	0x00000032	[ 62] _free_source_info
0x00135960	0x00000610	[ 63] _mono_decimal_compare
0x00135F70	0x00000410	[ 63] _mono_decimal_init_single
0x00136380	0x000005C0	[ 63] _mono_decimal_init_double
0x00136940	0x000001A0	[ 63] _mono_decimal_floor
0x00136AE0	0x00000160	[ 63] _mono_decimal_get_hash_code
0x00136C40	0x000003F0	[ 63] _mono_decimal_multiply
0x00137030	0x00000070	[ 63] _mono_decimal_round
0x001370A0	0x000001F0	[ 63] _MONO_VarDecRound
0x00137290	0x00000010	[ 63] _mono_decimal_tocurrency
0x001372A0	0x00000140	[ 63] _mono_decimal_to_double
0x001373E0	0x00000190	[ 63] _mono_decimal_to_int32
0x00137570	0x000000C0	[ 63] _mono_decimal_to_float
0x00137630	0x00000140	[ 63] _mono_decimal_truncate
0x00137770	0x00000630	[ 63] _mono_decimal_addsub
0x00137DA0	0x000002B0	[ 63] _ScaleResult
0x00138050	0x000010D0	[ 63] _mono_decimal_divide
0x00139120	0x00000120	[ 63] _SearchScale
0x00139240	0x000001A0	[ 63] _Div128By96
0x001393E0	0x0000030E	[ 63] _mono_decimal_from_number
0x001396F0	0x00000020	[ 64] _mono_domain_get_tls_key
0x00139710	0x00000020	[ 64] _mono_domain_get_tls_offset
0x00139730	0x00000020	[ 64] _mono_install_create_domain_hook
0x00139750	0x00000020	[ 64] _mono_install_free_domain_hook
0x00139770	0x00000070	[ 64] _mono_string_equal
0x001397E0	0x000000C0	[ 64] _mono_string_hash
0x001398A0	0x00000490	[ 64] _mono_domain_create
0x00139D30	0x000001B0	[ 64] _mono_ptrarray_hash
0x00139EE0	0x00000040	[ 64] _mono_ptrarray_equal
0x00139F20	0x00000030	[ 64] _mono_init
0x00139F50	0x00001430	[ 64] _mono_init_internal
0x0013B380	0x00000020	[ 64] _mono_init_from_assembly
0x0013B3A0	0x00000020	[ 64] _mono_init_version
0x0013B3C0	0x00000080	[ 64] _mono_cleanup
0x0013B440	0x00000030	[ 64] _mono_close_exe_image
0x0013B470	0x00000020	[ 64] _mono_get_root_domain
0x0013B490	0x00000020	[ 64] _mono_domain_get
0x0013B4B0	0x00000070	[ 64] _mono_domain_unset
0x0013B520	0x00000140	[ 64] _mono_domain_set_internal_with_options
0x0013B660	0x00000020	[ 64] _mono_domain_set_internal
0x0013B680	0x000000B0	[ 64] _mono_domain_foreach
0x0013B730	0x000000F0	[ 64] _mono_domain_assembly_open
0x0013B820	0x000006B0	[ 64] _mono_domain_free
0x0013BED0	0x00000050	[ 64] _mono_domain_get_by_id
0x0013BF20	0x00000010	[ 64] _mono_domain_get_id
0x0013BF30	0x00000050	[ 64] _mono_domain_alloc
0x0013BF80	0x00000050	[ 64] _mono_domain_alloc0
0x0013BFD0	0x000000A0	[ 64] _mono_domain_alloc0_lock_free
0x0013C070	0x00000040	[ 64] _mono_domain_code_reserve
0x0013C0B0	0x00000050	[ 64] _mono_domain_code_reserve_align
0x0013C100	0x00000040	[ 64] _mono_domain_code_commit
0x0013C140	0x00000010	[ 64] _nacl_domain_get_code_dest
0x0013C150	0x00000010	[ 64] _nacl_domain_code_validate
0x0013C160	0x00000040	[ 64] _mono_domain_code_foreach
0x0013C1A0	0x00000040	[ 64] _mono_context_set
0x0013C1E0	0x00000020	[ 64] _mono_context_get
0x0013C200	0x000000F0	[ 64] _mono_domain_add_class_static_data
0x0013C2F0	0x00000020	[ 64] _mono_get_corlib
0x0013C310	0x00000020	[ 64] _mono_get_object_class
0x0013C330	0x00000020	[ 64] _mono_get_byte_class
0x0013C350	0x00000020	[ 64] _mono_get_void_class
0x0013C370	0x00000020	[ 64] _mono_get_boolean_class
0x0013C390	0x00000020	[ 64] _mono_get_sbyte_class
0x0013C3B0	0x00000020	[ 64] _mono_get_int16_class
0x0013C3D0	0x00000020	[ 64] _mono_get_uint16_class
0x0013C3F0	0x00000020	[ 64] _mono_get_int32_class
0x0013C410	0x00000020	[ 64] _mono_get_uint32_class
0x0013C430	0x00000020	[ 64] _mono_get_intptr_class
0x0013C450	0x00000020	[ 64] _mono_get_uintptr_class
0x0013C470	0x00000020	[ 64] _mono_get_int64_class
0x0013C490	0x00000020	[ 64] _mono_get_uint64_class
0x0013C4B0	0x00000020	[ 64] _mono_get_single_class
0x0013C4D0	0x00000020	[ 64] _mono_get_double_class
0x0013C4F0	0x00000020	[ 64] _mono_get_char_class
0x0013C510	0x00000020	[ 64] _mono_get_string_class
0x0013C530	0x00000020	[ 64] _mono_get_enum_class
0x0013C550	0x00000020	[ 64] _mono_get_array_class
0x0013C570	0x00000020	[ 64] _mono_get_thread_class
0x0013C590	0x00000020	[ 64] _mono_get_exception_class
0x0013C5B0	0x00000020	[ 64] _mono_get_runtime_info
0x0013C5D0	0x00000090	[ 64] _mono_debugger_check_runtime_version
0x0013C660	0x00000490	[ 64] _get_runtimes_from_exe
0x0013CAF0	0x00000020	[ 64] _mono_framework_version
0x0013CB10	0x00000020	[ 64] _mono_enable_debug_domain_unload
0x0013CB30	0x00000020	[ 64] _mono_get_aot_cache_config
0x0013CB50	0x00000160	[ 64] _start_element
0x0013CCB0	0x00000060	[ 64] _end_element
0x0013CD10	0x000000D6	[ 64] _lock_free_mempool_chunk_new
0x0013CDF0	0x00000020	[ 65] _mono_environment_exitcode_get
0x0013CE10	0x00000020	[ 65] _mono_environment_exitcode_set
0x0013CE30	0x00000067	[ 65] _ves_icall_System_Environment_GetOSVersionString
0x0013CEA0	0x00000040	[ 66] _mono_exception_from_name
0x0013CEE0	0x000000B0	[ 66] _mono_exception_from_name_domain
0x0013CF90	0x000000F0	[ 66] _mono_exception_from_token
0x0013D080	0x00000040	[ 66] _mono_exception_from_name_two_strings
0x0013D0C0	0x00000140	[ 66] _create_exception_two_strings
0x0013D200	0x00000070	[ 66] _mono_exception_from_name_msg
0x0013D270	0x000000B0	[ 66] _mono_exception_from_token_two_strings
0x0013D320	0x00000050	[ 66] _mono_get_exception_divide_by_zero
0x0013D370	0x00000050	[ 66] _mono_get_exception_security
0x0013D3C0	0x00000050	[ 66] _mono_get_exception_thread_abort
0x0013D410	0x00000050	[ 66] _mono_get_exception_thread_interrupted
0x0013D460	0x00000050	[ 66] _mono_get_exception_arithmetic
0x0013D4B0	0x00000050	[ 66] _mono_get_exception_overflow
0x0013D500	0x00000050	[ 66] _mono_get_exception_null_reference
0x0013D550	0x00000080	[ 66] _mono_get_exception_execution_engine
0x0013D5D0	0x00000080	[ 66] _mono_get_exception_serialization
0x0013D650	0x00000050	[ 66] _mono_get_exception_invalid_cast
0x0013D6A0	0x00000080	[ 66] _mono_get_exception_invalid_operation
0x0013D720	0x00000050	[ 66] _mono_get_exception_index_out_of_range
0x0013D770	0x00000050	[ 66] _mono_get_exception_array_type_mismatch
0x0013D7C0	0x00000070	[ 66] _mono_get_exception_type_load
0x0013D830	0x00000080	[ 66] _mono_get_exception_not_implemented
0x0013D8B0	0x00000080	[ 66] _mono_get_exception_not_supported
0x0013D930	0x00000070	[ 66] _mono_get_exception_missing_method
0x0013D9A0	0x00000070	[ 66] _mono_get_exception_missing_field
0x0013DA10	0x00000080	[ 66] _mono_get_exception_argument_null
0x0013DA90	0x000000B0	[ 66] _mono_get_exception_argument
0x0013DB40	0x00000080	[ 66] _mono_get_exception_argument_out_of_range
0x0013DBC0	0x00000080	[ 66] _mono_get_exception_thread_state
0x0013DC40	0x00000080	[ 66] _mono_get_exception_io
0x0013DCC0	0x00000050	[ 66] _mono_get_exception_file_not_found
0x0013DD10	0x00000070	[ 66] _mono_get_exception_file_not_found2
0x0013DD80	0x000001B0	[ 66] _mono_get_exception_type_initialization
0x0013DF30	0x00000080	[ 66] _mono_get_exception_synchronization_lock
0x0013DFB0	0x00000080	[ 66] _mono_get_exception_cannot_unload_appdomain
0x0013E030	0x00000050	[ 66] _mono_get_exception_appdomain_unloaded
0x0013E080	0x00000080	[ 66] _mono_get_exception_bad_image_format
0x0013E100	0x00000070	[ 66] _mono_get_exception_bad_image_format2
0x0013E170	0x00000050	[ 66] _mono_get_exception_stack_overflow
0x0013E1C0	0x00000050	[ 66] _mono_get_exception_out_of_memory
0x0013E210	0x00000050	[ 66] _mono_get_exception_field_access
0x0013E260	0x00000080	[ 66] _mono_get_exception_field_access_msg
0x0013E2E0	0x00000050	[ 66] _mono_get_exception_method_access
0x0013E330	0x00000080	[ 66] _mono_get_exception_method_access_msg
0x0013E3B0	0x000001A0	[ 66] _mono_get_exception_reflection_type_load
0x0013E550	0x00000140	[ 66] _mono_get_exception_runtime_wrapped
0x0013E690	0x00000070	[ 66] _mono_exception_get_managed_backtrace
0x0013E700	0x00000080	[ 66] _append_frame_and_continue
0x0013E780	0x00000160	[ 66] _mono_exception_get_native_backtrace
0x0013E8E0	0x000000AE	[ 66] _ves_icall_Mono_Runtime_GetNativeStackTrace
0x0013E990	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_CreateDirectory
0x0013E9E0	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_RemoveDirectory
0x0013EA20	0x00000360	[ 67] _ves_icall_System_IO_MonoIO_GetFileSystemEntries
0x0013ED80	0x000000F0	[ 67] _ves_icall_System_IO_MonoIO_FindFirst
0x0013EE70	0x000000D0	[ 67] _incremental_find_check_match
0x0013EF40	0x00000090	[ 67] _ves_icall_System_IO_MonoIO_FindNext
0x0013EFD0	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_FindClose
0x0013F010	0x000000B0	[ 67] _ves_icall_System_IO_MonoIO_GetCurrentDirectory
0x0013F0C0	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_SetCurrentDirectory
0x0013F100	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_MoveFile
0x0013F150	0x000000B0	[ 67] _ves_icall_System_IO_MonoIO_ReplaceFile
0x0013F200	0x00000060	[ 67] _ves_icall_System_IO_MonoIO_CopyFile
0x0013F260	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_DeleteFile
0x0013F2A0	0x00000080	[ 67] _ves_icall_System_IO_MonoIO_GetFileAttributes
0x0013F320	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_SetFileAttributes
0x0013F370	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_GetFileType
0x0013F3B0	0x00000210	[ 67] _ves_icall_System_IO_MonoIO_GetFileStat
0x0013F5C0	0x000001E0	[ 67] _ves_icall_System_IO_MonoIO_Open
0x0013F7A0	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_Close
0x0013F7E0	0x000000D0	[ 67] _ves_icall_System_IO_MonoIO_Read
0x0013F8B0	0x000000D0	[ 67] _ves_icall_System_IO_MonoIO_Write
0x0013F980	0x00000090	[ 67] _ves_icall_System_IO_MonoIO_Seek
0x0013FA10	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_Flush
0x0013FA50	0x00000040	[ 67] _ves_icall_System_IO_MonoIO_GetLength
0x0013FA90	0x000000C0	[ 67] _ves_icall_System_IO_MonoIO_SetLength
0x0013FB50	0x00000080	[ 67] _ves_icall_System_IO_MonoIO_SetFileTime
0x0013FBD0	0x00000020	[ 67] _ves_icall_System_IO_MonoIO_get_ConsoleOutput
0x0013FBF0	0x00000020	[ 67] _ves_icall_System_IO_MonoIO_get_ConsoleInput
0x0013FC10	0x00000020	[ 67] _ves_icall_System_IO_MonoIO_get_ConsoleError
0x0013FC30	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_CreatePipe
0x0013FC80	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_DuplicateHandle
0x0013FCD0	0x00000010	[ 67] _ves_icall_System_IO_MonoIO_get_VolumeSeparatorChar
0x0013FCE0	0x00000010	[ 67] _ves_icall_System_IO_MonoIO_get_DirectorySeparatorChar
0x0013FCF0	0x00000030	[ 67] _ves_icall_System_IO_MonoIO_get_AltDirectorySeparatorChar
0x0013FD20	0x00000010	[ 67] _ves_icall_System_IO_MonoIO_get_PathSeparator
0x0013FD30	0x00000060	[ 67] _ves_icall_System_IO_MonoIO_get_InvalidPathChars
0x0013FD90	0x00000090	[ 67] _ves_icall_System_IO_MonoIO_GetTempPath
0x0013FE20	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_Lock
0x0013FE70	0x00000050	[ 67] _ves_icall_System_IO_MonoIO_Unlock
0x0013FEC0	0x00000050	[ 67] _mono_filesize_from_path
0x0013FF10	0x00000034	[ 67] _mono_filesize_from_fd
0x0013FF50	0x00000160	[ 68] _mono_mmap_open_file
0x001400B0	0x00000280	[ 68] _open_file_map
0x00140330	0x00000100	[ 68] _named_regions_lock
0x00140430	0x00000270	[ 68] _open_memory_map
0x001406A0	0x000000C0	[ 68] _mono_mmap_open_handle
0x00140760	0x00000070	[ 68] _mono_mmap_close
0x001407D0	0x00000050	[ 68] _mono_mmap_configure_inheritability
0x00140820	0x00000030	[ 68] _mono_mmap_flush
0x00140850	0x00000200	[ 68] _mono_mmap_map
0x00140A50	0x00000035	[ 68] _mono_mmap_unmap
0x00140A90	0x00000010	[ 69] _ves_icall_System_IO_FSW_SupportsFSW
0x00140AA0	0x00000010	[ 69] _ves_icall_System_IO_FAMW_InternalFAMNextEvent
0x00140AB0	0x00000010	[ 69] _ves_icall_System_IO_InotifyWatcher_GetInotifyInstance
0x00140AC0	0x00000010	[ 69] _ves_icall_System_IO_InotifyWatcher_AddWatch
0x00140AD0	0x0000000A	[ 69] _ves_icall_System_IO_InotifyWatcher_RemoveWatch
0x00140AE0	0x000001A0	[ 70] _mono_gc_bzero_aligned
0x00140C80	0x00000180	[ 70] _mono_gc_bzero_atomic
0x00140E00	0x00000260	[ 70] _mono_gc_memmove_aligned
0x00141060	0x00000036	[ 70] _mono_gc_memmove_atomic
0x001410A0	0x00000280	[ 71] _mono_gc_run_finalize
0x00141320	0x00000020	[ 71] _mono_gc_is_finalizer_internal_thread
0x00141340	0x000000A0	[ 71] _mono_gc_finalize_threadpool_threads
0x001413E0	0x00000060	[ 71] _mono_object_register_finalizer
0x00141440	0x00000020	[ 71] _mono_gc_out_of_memory
0x00141460	0x00000160	[ 71] _mono_domain_finalize
0x001415C0	0x00000020	[ 71] _mono_gc_finalize_notify
0x001415E0	0x00000010	[ 71] _ves_icall_System_GC_InternalCollect
0x001415F0	0x00000030	[ 71] _ves_icall_System_GC_GetTotalMemory
0x00141620	0x00000010	[ 71] _ves_icall_System_GC_KeepAlive
0x00141630	0x00000060	[ 71] _ves_icall_System_GC_ReRegisterForFinalize
0x00141690	0x00000060	[ 71] _ves_icall_System_GC_SuppressFinalize
0x001416F0	0x00000070	[ 71] _ves_icall_System_GC_WaitForPendingFinalizers
0x00141760	0x00000030	[ 71] _ves_icall_System_GC_register_ephemeron_array
0x00141790	0x00000020	[ 71] _ves_icall_System_GC_get_ephemeron_tombstone
0x001417B0	0x00000010	[ 71] _ves_icall_System_GCHandle_GetTarget
0x001417C0	0x000000A0	[ 71] _mono_gchandle_get_target
0x00141860	0x000001D0	[ 71] _ves_icall_System_GCHandle_GetTargetHandle
0x00141A30	0x00000040	[ 71] _mono_gchandle_new_weakref
0x00141A70	0x00000040	[ 71] _mono_gchandle_new
0x00141AB0	0x00000010	[ 71] _ves_icall_System_GCHandle_FreeHandle
0x00141AC0	0x00000120	[ 71] _mono_gchandle_free
0x00141BE0	0x00000080	[ 71] _ves_icall_System_GCHandle_GetAddrOfPinnedObject
0x00141C60	0x00000020	[ 71] _ves_icall_Mono_Runtime_SetGCAllowSynchronousMajor
0x00141C80	0x000003F0	[ 71] _alloc_handle
0x00142070	0x000000C0	[ 71] _mono_gchandle_is_in_domain
0x00142130	0x00000160	[ 71] _mono_gchandle_free_domain
0x00142290	0x00000030	[ 71] _GCHandle_CheckCurrentDomain
0x001422C0	0x00000340	[ 71] _mono_gc_init
0x00142600	0x000001A0	[ 71] _mono_gc_cleanup
0x001427A0	0x00000020	[ 71] _mono_gc_is_finalizer_thread
0x001427C0	0x00000020	[ 71] _mono_gc_register_mach_exception_thread
0x001427E0	0x00000020	[ 71] _mono_gc_get_mach_exception_thread
0x00142800	0x00000120	[ 71] _mono_gc_parse_environment_string_extract_number
0x00142920	0x00000060	[ 71] _mono_gc_reference_queue_new
0x00142980	0x00000070	[ 71] _mono_gc_reference_queue_add
0x001429F0	0x00000010	[ 71] _mono_gc_reference_queue_free
0x00142A00	0x000000D0	[ 71] _reference_queue_proccess_all
0x00142AD0	0x00000090	[ 71] _reference_queue_proccess
0x00142B60	0x000002E5	[ 71] _finalizer_thread
0x00142E50	0x00000430	[ 72] _mono_class_get_methods_by_name
0x00143280	0x00000030	[ 72] _ves_icall_System_Environment_get_UserName
0x001432B0	0x00000150	[ 72] _mono_icall_init
0x00143400	0x00000050	[ 72] _mono_icall_cleanup
0x00143450	0x00000060	[ 72] _mono_add_internal_call
0x001434B0	0x00000450	[ 72] _mono_lookup_internal_call
0x00143900	0x00000090	[ 72] _concat_class_name
0x00143990	0x00000060	[ 72] _mono_lookup_icall_symbol
0x001439F0	0x00000140	[ 72] _mono_create_icall_signature
0x00143B30	0x000002B0	[ 72] _type_from_typename
0x00143DE0	0x00000080	[ 72] _mono_find_jit_icall_by_name
0x00143E60	0x00000080	[ 72] _mono_find_jit_icall_by_addr
0x00143EE0	0x00000020	[ 72] _mono_get_jit_icall_info
0x00143F00	0x00000050	[ 72] _mono_lookup_jit_icall_symbol
0x00143F50	0x00000060	[ 72] _mono_register_jit_icall_wrapper
0x00143FB0	0x000001D0	[ 72] _mono_register_jit_icall_full
0x00144180	0x00000040	[ 72] _mono_register_jit_icall
0x001441C0	0x00000030	[ 72] _compare_method_imap
0x001441F0	0x00000040	[ 72] _ves_icall_Mono_Runtime_GetDisplayName
0x00144230	0x00000060	[ 72] _ves_icall_System_Activator_CreateInstanceInternal
0x00144290	0x00000090	[ 72] _mono_ArgIterator_IntGetNextArg
0x00144320	0x000000E0	[ 72] _mono_ArgIterator_IntGetNextArgT
0x00144400	0x00000060	[ 72] _mono_ArgIterator_IntGetNextArgType
0x00144460	0x000000C0	[ 72] _mono_ArgIterator_Setup
0x00144520	0x00000040	[ 72] _ves_icall_System_Array_ClearInternal
0x00144560	0x00000350	[ 72] _ves_icall_System_Array_CreateInstanceImpl
0x001448B0	0x00000380	[ 72] _ves_icall_System_Array_CreateInstanceImpl64
0x00144C30	0x00000170	[ 72] _ves_icall_System_Array_FastCopy
0x00144DA0	0x00000040	[ 72] _ves_icall_System_Array_GetGenericValueImpl
0x00144DE0	0x00000050	[ 72] _ves_icall_System_Array_GetLength
0x00144E30	0x00000050	[ 72] _ves_icall_System_Array_GetLongLength
0x00144E80	0x00000040	[ 72] _ves_icall_System_Array_GetLowerBound
0x00144EC0	0x00000010	[ 72] _ves_icall_System_Array_GetRank
0x00144ED0	0x000001D0	[ 72] _ves_icall_System_Array_GetValue
0x001450A0	0x00000050	[ 72] _ves_icall_System_Array_GetValueImpl
0x001450F0	0x00000150	[ 72] _ves_icall_System_Array_SetGenericValueImpl
0x00145240	0x000001B0	[ 72] _ves_icall_System_Array_SetValue
0x001453F0	0x00000790	[ 72] _ves_icall_System_Array_SetValueImpl
0x00145B80	0x00000330	[ 72] _ves_icall_System_Buffer_BlockCopyInternal
0x00145EB0	0x00000150	[ 72] _ves_icall_System_Buffer_ByteLengthInternal
0x00146000	0x00000030	[ 72] _ves_icall_System_Buffer_GetByteInternal
0x00146030	0x00000030	[ 72] _ves_icall_System_Buffer_SetByteInternal
0x00146060	0x000000B0	[ 72] _ves_icall_System_ComponentModel_Win32Exception_W32ErrorMessage
0x00146110	0x00000030	[ 72] _get_bundled_machine_config
0x00146140	0x00000080	[ 72] _ves_icall_System_Configuration_DefaultConfig_get_machine_config_path
0x001461C0	0x000000C0	[ 72] _get_bundled_app_config
0x00146280	0x00000770	[ 72] _ves_icall_System_CurrentSystemTimeZone_GetTimeZoneData
0x001469F0	0x00000170	[ 72] _ves_icall_System_Delegate_CreateDelegate_internal
0x00146B60	0x00000020	[ 72] _ves_icall_System_Delegate_SetMulticastInvoke
0x00146B80	0x00000020	[ 72] _ves_icall_System_Diagnostics_Debugger_IsAttached_internal
0x00146BA0	0x00000030	[ 72] _ves_icall_System_Diagnostics_Debugger_IsLogging
0x00146BD0	0x00000030	[ 72] _ves_icall_System_Diagnostics_Debugger_Log
0x00146C00	0x00000030	[ 72] _ves_icall_System_Diagnostics_DefaultTraceListener_WriteWindowsDebugString
0x00146C30	0x00000080	[ 72] _mono_double_ParseImpl
0x00146CB0	0x000000B0	[ 72] _ves_icall_System_Enum_InternalHasFlag
0x00146D60	0x00000240	[ 72] _ves_icall_System_Enum_ToObject
0x00146FA0	0x000001D0	[ 72] _ves_icall_System_Enum_compare_value_to
0x00147170	0x000000E0	[ 72] _ves_icall_System_Enum_get_hashcode
0x00147250	0x00000090	[ 72] _ves_icall_System_Enum_get_underlying_type
0x001472E0	0x000000B0	[ 72] _ves_icall_System_Enum_get_value
0x00147390	0x00000030	[ 72] _ves_icall_System_Environment_Exit
0x001473C0	0x000000F0	[ 72] _ves_icall_System_Environment_GetEnvironmentVariableNames
0x001474B0	0x000001D0	[ 72] _ves_icall_System_Environment_GetLogicalDrives
0x00147680	0x00000030	[ 72] _ves_icall_System_Environment_get_NewLine
0x001476B0	0x00000050	[ 72] _ves_icall_System_Environment_GetWindowsFolderPath
0x00147700	0x000000D0	[ 72] _ves_icall_System_Environment_InternalSetEnvironmentVariable
0x001477D0	0x00000030	[ 72] _ves_icall_System_Environment_get_HasShutdownStarted
0x00147800	0x00000070	[ 72] _ves_icall_System_Environment_get_MachineName
0x00147870	0x00000010	[ 72] _ves_icall_System_Environment_get_Platform
0x00147880	0x00000010	[ 72] _ves_icall_System_Environment_BroadcastSettingChange
0x00147890	0x00000050	[ 72] _ves_icall_System_Environment_GetEnvironmentVariable
0x001478E0	0x00000030	[ 72] _ves_icall_System_Environment_GetGacPath
0x00147910	0x00000030	[ 72] _ves_icall_System_Environment_InternalGetHome
0x00147940	0x00000040	[ 72] _ves_icall_System_Globalization_TextInfo_GetDataTablePointersLite
0x00147980	0x000000B0	[ 72] _ves_icall_System_IO_DriveInfo_GetDiskFreeSpace
0x00147A30	0x00000090	[ 72] _ves_icall_System_IO_DriveInfo_GetDriveFormat
0x00147AC0	0x00000020	[ 72] _ves_icall_System_IO_DriveInfo_GetDriveType
0x00147AE0	0x00000030	[ 72] _ves_icall_System_IO_get_temp_path
0x00147B10	0x000000C0	[ 72] _custom_attrs_get_by_type
0x00147BD0	0x00000080	[ 72] _custom_attrs_defined_internal
0x00147C50	0x00000330	[ 72] _ves_icall_get_enum_info
0x00147F80	0x00000060	[ 72] _ves_icall_MonoType_GetArrayRank
0x00147FE0	0x000003F0	[ 72] _ves_icall_Type_GetConstructors_internal
0x001483D0	0x00000090	[ 72] _ves_icall_MonoType_GetCorrespondingInflatedMethod
0x00148460	0x000000C0	[ 72] _ves_icall_MonoType_GetElementType
0x00148520	0x000004F0	[ 72] _ves_icall_Type_GetEvents_internal
0x00148A10	0x00000200	[ 72] _ves_icall_Type_GetField
0x00148C10	0x00000430	[ 72] _ves_icall_Type_GetFields_internal
0x00149040	0x00000220	[ 72] _ves_icall_MonoType_GetGenericArguments
0x00149260	0x000002D0	[ 72] _ves_icall_Type_GetInterfaces
0x00149530	0x000001B0	[ 72] _ves_icall_Type_GetMethodsByName
0x001496E0	0x00000140	[ 72] _ves_icall_Type_GetNestedType
0x00149820	0x000002A0	[ 72] _ves_icall_Type_GetNestedTypes
0x00149AC0	0x000005F0	[ 72] _ves_icall_Type_GetPropertiesByName
0x0014A0B0	0x000001E0	[ 72] _ves_icall_MonoType_GetEvent
0x0014A290	0x00000020	[ 72] _ves_icall_type_isbyref
0x0014A2B0	0x00000040	[ 72] _ves_icall_type_iscomobject
0x0014A2F0	0x00000020	[ 72] _ves_icall_type_ispointer
0x0014A310	0x00000040	[ 72] _ves_icall_type_isprimitive
0x0014A350	0x00000090	[ 72] _ves_icall_System_MonoType_getFullName
0x0014A3E0	0x00000040	[ 72] _ves_icall_MonoType_get_Assembly
0x0014A420	0x00000040	[ 72] _ves_icall_get_type_parent
0x0014A460	0x000000B0	[ 72] _ves_icall_MonoType_get_DeclaringMethod
0x0014A510	0x00000080	[ 72] _ves_icall_MonoType_get_DeclaringType
0x0014A590	0x00000030	[ 72] _ves_icall_MonoType_get_IsGenericParameter
0x0014A5C0	0x00000030	[ 72] _ves_icall_MonoType_get_Module
0x0014A5F0	0x00000080	[ 72] _ves_icall_MonoType_get_Name
0x0014A670	0x00000050	[ 72] _ves_icall_MonoType_get_Namespace
0x0014A6C0	0x00000020	[ 72] _ves_icall_get_attributes
0x0014A6E0	0x00000040	[ 72] _vell_icall_MonoType_get_core_clr_security_level
0x0014A720	0x00000060	[ 72] _mono_type_type_from_obj
0x0014A780	0x00000050	[ 72] _ves_icall_System_NumberFormatter_GetFormatterTables
0x0014A7D0	0x00000030	[ 72] _ves_icall_System_Object_GetType
0x0014A800	0x00000010	[ 72] _ves_icall_System_Object_MemberwiseClone
0x0014A810	0x000000D0	[ 72] _ves_icall_System_Reflection_Assembly_FillName
0x0014A8E0	0x00000080	[ 72] _ves_icall_System_Reflection_Assembly_GetCallingAssembly
0x0014A960	0x00000030	[ 72] _ves_icall_System_Reflection_Assembly_GetEntryAssembly
0x0014A990	0x00000080	[ 72] _ves_icall_System_Reflection_Assembly_GetExecutingAssembly
0x0014AA10	0x000002A0	[ 72] _ves_icall_System_Reflection_Assembly_GetFilesInternal
0x0014ACB0	0x00000030	[ 72] _ves_icall_System_Reflection_Assembly_GetManifestModuleInternal
0x0014ACE0	0x000002B0	[ 72] _ves_icall_System_Reflection_Assembly_GetManifestResourceInfoInternal
0x0014AF90	0x00000180	[ 72] _ves_icall_System_Reflection_Assembly_GetManifestResourceInternal
0x0014B110	0x00000110	[ 72] _ves_icall_System_Reflection_Assembly_GetManifestResourceNames
0x0014B220	0x000004A0	[ 72] _ves_icall_System_Reflection_Assembly_GetModulesInternal
0x0014B6C0	0x000003E0	[ 72] _ves_icall_System_Reflection_Assembly_GetReferencedAssemblies
0x0014BAA0	0x00000500	[ 72] _ves_icall_System_Reflection_Assembly_GetTypes
0x0014BFA0	0x00000150	[ 72] _ves_icall_System_Reflection_Assembly_InternalGetAssemblyName
0x0014C0F0	0x000003A0	[ 72] _ves_icall_System_Reflection_Assembly_InternalGetType
0x0014C490	0x00000030	[ 72] _ves_icall_System_Reflection_Assembly_InternalImageRuntimeVersion
0x0014C4C0	0x000000B0	[ 72] _ves_icall_System_Reflection_Assembly_LoadPermissions
0x0014C570	0x000000B0	[ 72] _ves_icall_System_Reflection_Assembly_get_EntryPoint
0x0014C620	0x00000010	[ 72] _ves_icall_System_Reflection_Assembly_get_ReflectionOnly
0x0014C630	0x00000120	[ 72] _ves_icall_System_Reflection_Assembly_get_code_base
0x0014C750	0x00000040	[ 72] _ves_icall_System_Reflection_Assembly_get_fullName
0x0014C790	0x00000010	[ 72] _ves_icall_System_Reflection_Assembly_get_global_assembly_cache
0x0014C7A0	0x00000030	[ 72] _ves_icall_System_Reflection_Assembly_get_location
0x0014C7D0	0x00000050	[ 72] _ves_icall_System_Reflection_Assembly_load_with_partial_name
0x0014C820	0x000000F0	[ 72] _ves_icall_System_Reflection_AssemblyName_ParseName
0x0014C910	0x00000020	[ 72] _ves_icall_EnumBuilder_setup_enum_type
0x0014C930	0x00000030	[ 72] _ves_icall_ModuleBuilder_RegisterToken
0x0014C960	0x00000010	[ 72] _ves_icall_ModuleBuilder_WriteToFile
0x0014C970	0x00000010	[ 72] _ves_icall_ModuleBuilder_build_metadata
0x0014C980	0x00000100	[ 72] _ves_icall_ModuleBuilder_create_modified_type
0x0014CA80	0x00000050	[ 72] _ves_icall_ModuleBuilder_getMethodToken
0x0014CAD0	0x00000060	[ 72] _ves_icall_ModuleBuilder_getToken
0x0014CB30	0x00000030	[ 72] _ves_icall_TypeBuilder_get_IsGenericParameter
0x0014CB60	0x00000080	[ 72] _ves_icall_System_Reflection_FieldInfo_GetTypeModifiers
0x0014CBE0	0x000000A0	[ 72] _ves_icall_System_Reflection_FieldInfo_get_marshal_info
0x0014CC80	0x00000090	[ 72] _ves_icall_System_Reflection_FieldInfo_internal_from_handle_type
0x0014CD10	0x00000040	[ 72] _ves_icall_GetCurrentMethod
0x0014CD50	0x00000030	[ 72] _ves_icall_System_Reflection_MethodBase_GetMethodBodyInternal
0x0014CD80	0x00000030	[ 72] _ves_icall_System_Reflection_MethodBase_GetMethodFromHandleInternal
0x0014CDB0	0x00000210	[ 72] _ves_icall_System_Reflection_MethodBase_GetMethodFromHandleInternalType
0x0014CFC0	0x00000010	[ 72] _ves_icall_System_Reflection_Module_Close
0x0014CFD0	0x000000C0	[ 72] _ves_icall_System_Reflection_Module_GetGlobalType
0x0014D090	0x00000060	[ 72] _ves_icall_System_Reflection_Module_GetGuidInternal
0x0014D0F0	0x00000010	[ 72] _ves_icall_System_Reflection_Module_GetHINSTANCE
0x0014D100	0x00000020	[ 72] _ves_icall_System_Reflection_Module_GetMDStreamVersion
0x0014D120	0x00000040	[ 72] _ves_icall_System_Reflection_Module_GetPEKind
0x0014D160	0x000000B0	[ 72] _ves_icall_System_Reflection_Module_InternalGetTypes
0x0014D210	0x00000170	[ 72] _ves_icall_System_Reflection_Module_ResolveFieldToken
0x0014D380	0x00000180	[ 72] _ves_icall_System_Reflection_Module_ResolveMemberToken
0x0014D500	0x00000190	[ 72] _ves_icall_System_Reflection_Module_ResolveMethodToken
0x0014D690	0x000000F0	[ 72] _ves_icall_System_Reflection_Module_ResolveSignature
0x0014D780	0x00000090	[ 72] _ves_icall_System_Reflection_Module_ResolveStringToken
0x0014D810	0x00000160	[ 72] _ves_icall_System_Reflection_Module_ResolveTypeToken
0x0014D970	0x00000120	[ 72] _ves_icall_MonoMethod_GetGenericMethodDefinition
0x0014DA90	0x00000590	[ 72] _ves_icall_InternalInvoke
0x0014E020	0x00000230	[ 72] _ves_icall_get_event_info
0x0014E250	0x00000040	[ 72] _ves_icall_MonoField_GetFieldOffset
0x0014E290	0x00000040	[ 72] _ves_icall_MonoField_GetParentType
0x0014E2D0	0x00000290	[ 72] _ves_icall_MonoField_GetRawConstantValue
0x0014E560	0x00000080	[ 72] _ves_icall_MonoField_GetValueInternal
0x0014E5E0	0x00000080	[ 72] _ves_icall_MonoField_ResolveType
0x0014E660	0x00000260	[ 72] _ves_icall_MonoField_SetValueInternal
0x0014E8C0	0x00000030	[ 72] _ves_icall_MonoGenericMethod_get_ReflectedType
0x0014E8F0	0x00000270	[ 72] _ves_icall_MonoMethod_GetDllImportAttribute
0x0014EB60	0x000001B0	[ 72] _ves_icall_MonoMethod_GetGenericArguments
0x0014ED10	0x00000030	[ 72] _ves_icall_MonoMethod_get_IsGenericMethod
0x0014ED40	0x00000020	[ 72] _ves_icall_MonoMethod_get_IsGenericMethodDefinition
0x0014ED60	0x00000130	[ 72] _ves_icall_MonoMethod_get_base_method
0x0014EE90	0x00000040	[ 72] _ves_icall_MonoMethod_get_name
0x0014EED0	0x00000010	[ 72] _vell_icall_get_method_attributes
0x0014EEE0	0x00000140	[ 72] _ves_icall_get_method_info
0x0014F020	0x00000050	[ 72] _ves_icall_get_parameter_info
0x0014F070	0x000000A0	[ 72] _ves_icall_System_MonoMethodInfo_get_retval_marshal
0x0014F110	0x00000060	[ 72] _property_info_get_type_modifiers
0x0014F170	0x00000100	[ 72] _property_info_get_default_value
0x0014F270	0x00000150	[ 72] _ves_icall_get_property_info
0x0014F3C0	0x00000110	[ 72] _param_info_get_type_modifiers
0x0014F4D0	0x00000020	[ 72] _ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_GetObjectValue
0x0014F4F0	0x00000010	[ 72] _ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_GetOffsetToStringData
0x0014F500	0x00000100	[ 72] _ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_InitializeArray
0x0014F600	0x000000A0	[ 72] _ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_RunClassConstructor
0x0014F6A0	0x00000090	[ 72] _ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_RunModuleConstructor
0x0014F730	0x00000050	[ 72] _ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_SufficientExecutionStack
0x0014F780	0x00000070	[ 72] _ves_icall_System_Runtime_InteropServices_Marshal_Prelink
0x0014F7F0	0x000000E0	[ 72] _ves_icall_System_Runtime_InteropServices_Marshal_PrelinkAll
0x0014F8D0	0x00000100	[ 72] _ves_icall_System_Runtime_Activation_ActivationServices_AllocateUninitializedClassInstance
0x0014F9D0	0x00000030	[ 72] _ves_icall_System_Runtime_Activation_ActivationServices_EnableProxyActivation
0x0014FA00	0x00000030	[ 72] _ves_icall_MonoMethodMessage_InitMessage
0x0014FA30	0x00000010	[ 72] _ves_icall_RuntimeMethod_GetFunctionPointer
0x0014FA40	0x00000160	[ 72] _ves_icall_System_Text_EncodingHelper_InternalCodePage
0x0014FBA0	0x00000040	[ 72] _ves_icall_System_Type_EqualsInternal
0x0014FBE0	0x000000B0	[ 72] _ves_icall_Type_GetGenericParameterAttributes
0x0014FC90	0x00000130	[ 72] _ves_icall_Type_GetGenericParameterConstraints
0x0014FDC0	0x00000060	[ 72] _ves_icall_Type_GetGenericParameterPosition
0x0014FE20	0x00000070	[ 72] _ves_icall_Type_GetGenericTypeDefinition_impl
0x0014FE90	0x000001F0	[ 72] _ves_icall_Type_GetInterfaceMapData
0x00150080	0x00000070	[ 72] _ves_icall_Type_GetPacking
0x001500F0	0x00000240	[ 72] _ves_icall_type_GetTypeCodeInternal
0x00150330	0x00000030	[ 72] _ves_icall_Type_IsArrayImpl
0x00150360	0x00000060	[ 72] _ves_icall_type_IsInstanceOfType
0x001503C0	0x00000160	[ 72] _ves_icall_Type_MakeGenericType
0x00150520	0x00000070	[ 72] _ves_icall_Type_MakePointerType
0x00150590	0x00000030	[ 72] _ves_icall_Type_get_IsGenericInstance
0x001505C0	0x00000070	[ 72] _ves_icall_Type_get_IsGenericType
0x00150630	0x00000060	[ 72] _ves_icall_Type_get_IsGenericTypeDefinition
0x00150690	0x00000030	[ 72] _ves_icall_type_from_handle
0x001506C0	0x00000220	[ 72] _ves_icall_type_from_name
0x001508E0	0x00000070	[ 72] _ves_icall_Type_make_array_type
0x00150950	0x00000060	[ 72] _ves_icall_Type_make_byref_type
0x001509B0	0x00000230	[ 72] _ves_icall_type_is_assignable_from
0x00150BE0	0x00000110	[ 72] _ves_icall_type_is_subtype_of
0x00150CF0	0x00000040	[ 72] _mono_TypedReference_ToObject
0x00150D30	0x00000040	[ 72] _mono_TypedReference_ToObjectInternal
0x00150D70	0x000004A0	[ 72] _ves_icall_System_ValueType_Equals
0x00151210	0x00000250	[ 72] _ves_icall_System_ValueType_InternalGetHashCode
0x00151460	0x00000040	[ 72] _ves_icall_System_Web_Util_ICalls_get_machine_install_dir
0x001514A0	0x000000A0	[ 72] _ves_icall_get_resources_ptr
0x00151540	0x00000060	[ 72] _check_for_invalid_type
0x001515A0	0x00000070	[ 72] _get_caller_no_reflection
0x00151610	0x00000410	[ 72] _type_array_from_modifiers
0x00151A20	0x000000A0	[ 72] _init_generic_context_from_args
0x00151AC0	0x000000D0	[ 72] _mono_memberref_is_method
0x00151B90	0x00000310	[ 72] _mono_module_get_types
0x00151EA0	0x000003E0	[ 72] _fill_reflection_assembly_name
0x00152280	0x00000180	[ 72] _create_version
0x00152400	0x000000D0	[ 72] _replace_shadow_path
0x001524D0	0x000000D0	[ 72] _g_concat_dir_and_file
0x001525A0	0x00000050	[ 72] _get_executing
0x001525F0	0x00000030	[ 72] _get_caller
0x00152620	0x00000020	[ 72] _property_hash
0x00152640	0x000000A0	[ 72] _property_equal
0x001526E0	0x000000A0	[ 72] _collect_interfaces
0x00152780	0x000000E0	[ 72] _fill_iface_array
0x00152860	0x00000020	[ 72] _event_hash
0x00152880	0x00000030	[ 72] _event_equal
0x001528B0	0x0000002D	[ 72] _compare_class_imap
0x001528E0	0x00000090	[ 73] _mono_install_image_unload_hook
0x00152970	0x00000060	[ 73] _mono_remove_image_unload_hook
0x001529D0	0x00000060	[ 73] _mono_cli_rva_image_map
0x00152A30	0x00000120	[ 73] _mono_image_rva_map
0x00152B50	0x000000A0	[ 73] _mono_image_ensure_section_idx
0x00152BF0	0x000000C0	[ 73] _mono_images_init
0x00152CB0	0x000000D0	[ 73] _mono_images_cleanup
0x00152D80	0x00000100	[ 73] _mono_image_ensure_section
0x00152E80	0x00000150	[ 73] _mono_image_check_for_module_cctor
0x00152FD0	0x00000240	[ 73] _mono_image_load_module
0x00153210	0x00000130	[ 73] _mono_image_open_full
0x00153340	0x00000010	[ 73] _mono_image_addref
0x00153350	0x00000180	[ 73] _mono_image_init
0x001534D0	0x00000010	[ 73] _class_key_extract
0x001534E0	0x00000010	[ 73] _class_next_value
0x001534F0	0x00000010	[ 73] _mono_image_load_pe_data
0x00153500	0x00000010	[ 73] _mono_image_load_cli_data
0x00153510	0x00000080	[ 73] _mono_image_load_names
0x00153590	0x00000020	[ 73] _mono_runtime_alloc
0x001535B0	0x00000080	[ 73] _mono_image_loaded_full
0x00153630	0x00000070	[ 73] _mono_image_loaded
0x001536A0	0x00000090	[ 73] _mono_image_loaded_by_guid_full
0x00153730	0x00000040	[ 73] _find_by_guid
0x00153770	0x00000080	[ 73] _mono_image_loaded_by_guid
0x001537F0	0x00000130	[ 73] _mono_image_open_from_data_with_name
0x00153920	0x00000250	[ 73] _do_mono_image_load
0x00153B70	0x00000100	[ 73] _register_image
0x00153C70	0x00000040	[ 73] _mono_image_open_from_data_full
0x00153CB0	0x00000040	[ 73] _mono_image_open_from_data
0x00153CF0	0x000001D0	[ 73] _do_mono_image_open
0x00153EC0	0x00000030	[ 73] _mono_image_open
0x00153EF0	0x00000080	[ 73] _mono_pe_file_open
0x00153F70	0x00000080	[ 73] _mono_image_open_raw
0x00153FF0	0x00000030	[ 73] _mono_image_fixup_vtable
0x00154020	0x00000050	[ 73] _mono_dynamic_stream_reset
0x00154070	0x00000830	[ 73] _mono_image_close_except_pools
0x001548A0	0x00000020	[ 73] _free_array_cache_entry
0x001548C0	0x00000020	[ 73] _free_hash_table
0x001548E0	0x00000130	[ 73] _mono_image_close_finish
0x00154A10	0x00000020	[ 73] _mono_image_close
0x00154A30	0x00000070	[ 73] _mono_image_strerror
0x00154AA0	0x00000100	[ 73] _mono_image_lookup_resource
0x00154BA0	0x00000120	[ 73] _mono_image_walk_resource_tree
0x00154CC0	0x00000020	[ 73] _mono_image_get_entry_point
0x00154CE0	0x00000060	[ 73] _mono_image_get_resource
0x00154D40	0x000001E0	[ 73] _mono_image_load_file_for_image
0x00154F20	0x00000020	[ 73] _mono_image_lock
0x00154F40	0x00000020	[ 73] _mono_image_unlock
0x00154F60	0x00000050	[ 73] _mono_image_get_strong_name
0x00154FB0	0x00000080	[ 73] _mono_image_strong_name_position
0x00155030	0x00000090	[ 73] _mono_image_get_public_key
0x001550C0	0x00000010	[ 73] _mono_image_get_name
0x001550D0	0x00000010	[ 73] _mono_image_get_filename
0x001550E0	0x00000010	[ 73] _mono_image_get_guid
0x001550F0	0x00000020	[ 73] _mono_image_get_table_info
0x00155110	0x00000020	[ 73] _mono_image_get_table_rows
0x00155130	0x00000010	[ 73] _mono_table_info_get_rows
0x00155140	0x00000010	[ 73] _mono_image_get_assembly
0x00155150	0x00000020	[ 73] _mono_image_is_dynamic
0x00155170	0x00000030	[ 73] _mono_image_has_authenticode_entry
0x001551A0	0x00000060	[ 73] _mono_image_alloc
0x00155200	0x00000060	[ 73] _mono_image_alloc0
0x00155260	0x00000070	[ 73] _mono_image_strdup
0x001552D0	0x00000090	[ 73] _g_list_prepend_image
0x00155360	0x00000070	[ 73] _g_slist_append_image
0x001553D0	0x00000050	[ 73] _mono_image_property_lookup
0x00155420	0x00000050	[ 73] _mono_image_property_insert
0x00155470	0x00000040	[ 73] _mono_image_property_remove
0x001554B0	0x00000090	[ 73] _mono_image_append_class_to_reflection_info_set
0x00155540	0x000002E0	[ 73] _mono_image_file_tbl
0x00155820	0x000000A0	[ 73] _mono_image_file_lpr
0x001558C0	0x00000270	[ 73] _mono_image_file_cmp
0x00155B30	0x00000500	[ 73] _load_metadata
0x00156030	0x000002C0	[ 73] _pe_image_load_pe_data
0x001562F0	0x000000A0	[ 73] _pe_image_load_cli_data
0x00156390	0x0000000A	[ 73] _pe_image_load_tables
0x001563A0	0x00000040	[ 74] _mono_jit_info_table_new
0x001563E0	0x000000F0	[ 74] _mono_jit_info_table_free
0x001564D0	0x000000F0	[ 74] _mono_jit_info_table_find_internal
0x001565C0	0x00000240	[ 74] _jit_info_table_find
0x00156800	0x00000030	[ 74] _mono_jit_info_table_find
0x00156830	0x00000080	[ 74] _mono_jit_info_table_add
0x001568B0	0x000009D0	[ 74] _jit_info_table_add
0x00157280	0x00000320	[ 74] _mono_jit_info_table_remove
0x001575A0	0x000000E0	[ 74] _mono_jit_info_add_aot_module
0x00157680	0x00000020	[ 74] _mono_install_jit_info_find_in_aot
0x001576A0	0x00000040	[ 74] _mono_jit_info_size
0x001576E0	0x00000070	[ 74] _mono_jit_info_init
0x00157750	0x00000010	[ 74] _mono_jit_info_get_code_start
0x00157760	0x00000010	[ 74] _mono_jit_info_get_code_size
0x00157770	0x00000050	[ 74] _mono_jit_info_get_method
0x001577C0	0x00000040	[ 74] _mono_jit_code_hash_init
0x00157800	0x00000010	[ 74] _jit_info_key_extract
0x00157810	0x00000010	[ 74] _jit_info_next_value
0x00157820	0x00000030	[ 74] _mono_jit_info_get_generic_jit_info
0x00157850	0x00000030	[ 74] _mono_jit_info_get_generic_sharing_context
0x00157880	0x00000060	[ 74] _mono_jit_info_set_generic_sharing_context
0x001578E0	0x00000040	[ 74] _mono_jit_info_get_try_block_hole_table_info
0x00157920	0x00000090	[ 74] _mono_jit_info_get_arch_eh_info
0x001579B0	0x0000009C	[ 74] _mono_jit_info_get_cas_info
0x00157A50	0x00000170	[ 75] _mono_loader_init
0x00157BC0	0x000000C0	[ 75] _mono_loader_cleanup
0x00157C80	0x000000A0	[ 75] _mono_loader_set_error_assembly_load
0x00157D20	0x00000030	[ 75] _mono_loader_get_last_error
0x00157D50	0x000000A0	[ 75] _mono_loader_set_error_type_load
0x00157DF0	0x00000040	[ 75] _mono_trace_warning
0x00157E30	0x00000070	[ 75] _mono_loader_set_error_method_load
0x00157EA0	0x00000060	[ 75] _mono_loader_set_error_field_load
0x00157F00	0x00000060	[ 75] _mono_loader_set_error_bad_image
0x00157F60	0x00000070	[ 75] _mono_loader_clear_error
0x00157FD0	0x00000200	[ 75] _mono_loader_error_prepare_exception
0x001581D0	0x000000D0	[ 75] _mono_field_from_token
0x001582A0	0x000005F0	[ 75] _mono_field_from_token_checked
0x00158890	0x00000060	[ 75] _mono_inflate_generic_signature
0x001588F0	0x000001B0	[ 75] _inflate_generic_signature_checked
0x00158AA0	0x00000110	[ 75] _mono_method_get_signature_full
0x00158BB0	0x00000340	[ 75] _mono_method_get_signature_checked
0x00158EF0	0x000004E0	[ 75] _mono_method_signature_checked
0x001593D0	0x00000100	[ 75] _mono_method_get_signature
0x001594D0	0x000000B0	[ 75] _mono_method_search_in_array_class
0x00159580	0x00000160	[ 75] _mono_dllmap_insert
0x001596E0	0x00000D90	[ 75] _mono_lookup_pinvoke_call
0x0015A470	0x000000D0	[ 75] _cached_module_load
0x0015A540	0x00000030	[ 75] _mono_get_method
0x0015A570	0x000000D0	[ 75] _mono_get_method_full
0x0015A640	0x000001B0	[ 75] _mono_get_method_checked
0x0015A7F0	0x00000740	[ 75] _mono_get_method_from_token
0x0015AF30	0x00000050	[ 75] _mono_get_method_constrained_with_method
0x0015AF80	0x00000150	[ 75] _get_method_constrained
0x0015B0D0	0x000000F0	[ 75] _mono_get_method_constrained
0x0015B1C0	0x00000060	[ 75] _mono_get_method_constrained_checked
0x0015B220	0x000000E0	[ 75] _mono_free_method
0x0015B300	0x000002E0	[ 75] _mono_method_get_param_names
0x0015B5E0	0x000000D0	[ 75] _mono_method_signature
0x0015B6B0	0x00000090	[ 75] _mono_method_get_index
0x0015B740	0x00000100	[ 75] _mono_method_get_param_token
0x0015B840	0x00000330	[ 75] _mono_method_get_marshal_info
0x0015BB70	0x00000200	[ 75] _mono_method_has_marshal_info
0x0015BD70	0x000000F0	[ 75] _mono_method_get_wrapper_data
0x0015BE60	0x00000050	[ 75] _mono_stack_walk
0x0015BEB0	0x000000B0	[ 75] _stack_walk_adapter
0x0015BF60	0x00000050	[ 75] _mono_stack_walk_no_il
0x0015BFB0	0x00000060	[ 75] _mono_stack_walk_async_safe
0x0015C010	0x000000C0	[ 75] _async_stack_walk_adapter
0x0015C0D0	0x00000060	[ 75] _mono_method_get_last_managed
0x0015C130	0x00000010	[ 75] _last_managed
0x0015C140	0x00000050	[ 75] _mono_loader_lock
0x0015C190	0x00000050	[ 75] _mono_loader_unlock
0x0015C1E0	0x00000020	[ 75] _mono_loader_lock_track_ownership
0x0015C200	0x00000060	[ 75] _mono_loader_lock_is_owned_by_self
0x0015C260	0x00000060	[ 75] _mono_loader_lock_if_inited
0x0015C2C0	0x00000060	[ 75] _mono_loader_unlock_if_inited
0x0015C320	0x00000010	[ 75] _mono_method_get_name
0x0015C330	0x00000010	[ 75] _mono_method_get_class
0x0015C340	0x00000010	[ 75] _mono_method_get_token
0x0015C350	0x000002E0	[ 75] _mono_method_get_header
0x0015C630	0x00000020	[ 75] _mono_method_get_flags
0x0015C650	0x00000420	[ 75] _find_method
0x0015CA70	0x00000390	[ 75] _find_method_in_class
0x0015CE00	0x000005B0	[ 75] _method_from_memberref
0x0015D3B0	0x000000D7	[ 75] _mono_dllmap_lookup_list
0x0015D490	0x000002A0	[ 76] _ves_icall_System_Globalization_CalendarData_fill_calendar_data
0x0015D730	0x00000030	[ 76] _culture_name_locator
0x0015D760	0x00000130	[ 76] _create_names_array_idx_dynamic
0x0015D890	0x00000110	[ 76] _create_names_array_idx
0x0015D9A0	0x00000170	[ 76] _ves_icall_System_Globalization_CultureData_fill_culture_data
0x0015DB10	0x00000450	[ 76] _ves_icall_System_Globalization_CultureInfo_construct_number_format
0x0015DF60	0x000000F0	[ 76] _create_group_sizes_array
0x0015E050	0x00000500	[ 76] _ves_icall_System_Globalization_CultureInfo_get_current_locale_name
0x0015E550	0x00000060	[ 76] _ves_icall_System_Globalization_CultureInfo_construct_internal_locale_from_lcid
0x0015E5B0	0x000001E0	[ 76] _construct_culture
0x0015E790	0x00000080	[ 76] _ves_icall_System_Globalization_CultureInfo_construct_internal_locale_from_name
0x0015E810	0x00000080	[ 76] _ves_icall_System_Globalization_RegionInfo_construct_internal_region_from_lcid
0x0015E890	0x00000200	[ 76] _construct_region
0x0015EA90	0x00000080	[ 76] _ves_icall_System_Globalization_RegionInfo_construct_internal_region_from_name
0x0015EB10	0x00000030	[ 76] _region_name_locator
0x0015EB40	0x00000280	[ 76] _ves_icall_System_Globalization_CultureInfo_internal_get_cultures
0x0015EDC0	0x00000010	[ 76] _ves_icall_System_Globalization_CompareInfo_construct_compareinfo
0x0015EDD0	0x00000130	[ 76] _ves_icall_System_Globalization_CompareInfo_internal_compare
0x0015EF00	0x00000010	[ 76] _ves_icall_System_Globalization_CompareInfo_free_internal_collator
0x0015EF10	0x00000090	[ 76] _ves_icall_System_Globalization_CompareInfo_assign_sortkey
0x0015EFA0	0x00000110	[ 76] _ves_icall_System_Globalization_CompareInfo_internal_index
0x0015F0B0	0x00000090	[ 76] _ves_icall_System_Globalization_CompareInfo_internal_index_char
0x0015F140	0x00000010	[ 76] _ves_icall_System_Threading_Thread_current_lcid
0x0015F150	0x00000220	[ 76] _ves_icall_System_String_InternalReplace_Str_Comp
0x0015F370	0x00000050	[ 76] _load_normalization_resource
0x0015F3C0	0x00000080	[ 76] _string_invariant_compare_char
0x0015F440	0x00000012	[ 76] _culture_lcid_locator
0x0015F460	0x00000060	[ 77] _mono_signature_no_pinvoke
0x0015F4C0	0x00000040	[ 77] _mono_marshal_init_tls
0x0015F500	0x00000930	[ 77] _mono_marshal_init
0x0015FE30	0x00000020	[ 77] _mono_marshal_string_to_utf16
0x0015FE50	0x00000070	[ 77] _mono_marshal_string_to_utf16_copy
0x0015FEC0	0x00000050	[ 77] _mono_string_from_byvalstr
0x0015FF10	0x00000050	[ 77] _mono_string_from_byvalwstr
0x0015FF60	0x00000030	[ 77] _mono_string_new_len_wrapper
0x0015FF90	0x00000010	[ 77] _mono_string_to_lpstr
0x0015FFA0	0x00000040	[ 77] _mono_string_to_ansibstr
0x0015FFE0	0x00000120	[ 77] _mono_string_builder_to_utf8
0x00160100	0x000000E0	[ 77] _mono_string_builder_to_utf16
0x001601E0	0x00000040	[ 77] _mono_array_to_savearray
0x00160220	0x00000020	[ 77] _mono_array_to_lparray
0x00160240	0x00000010	[ 77] _mono_free_lparray
0x00160250	0x00000100	[ 77] _mono_byvalarray_to_array
0x00160350	0x00000040	[ 77] _mono_byvalarray_to_byte_array
0x00160390	0x00000140	[ 77] _mono_array_to_byvalarray
0x001604D0	0x00000040	[ 77] _mono_array_to_byte_byvalarray
0x00160510	0x00000220	[ 77] _mono_delegate_to_ftnptr
0x00160730	0x00000210	[ 77] _mono_ftnptr_to_delegate
0x00160940	0x000001F0	[ 77] _mono_marshal_asany
0x00160B30	0x00000130	[ 77] _mono_marshal_free_asany
0x00160C60	0x00000030	[ 77] _mono_marshal_alloc
0x00160C90	0x00000010	[ 77] _mono_marshal_free
0x00160CA0	0x00000030	[ 77] _mono_marshal_set_last_error
0x00160CD0	0x00000010	[ 77] _mono_marshal_set_last_error_windows
0x00160CE0	0x00000100	[ 77] _mono_string_utf8_to_builder
0x00160DE0	0x000001B0	[ 77] _mono_string_utf8_to_builder2
0x00160F90	0x00000080	[ 77] _mono_string_utf16_to_builder
0x00161010	0x000001E0	[ 77] _mono_string_utf16_to_builder2
0x001611F0	0x00000040	[ 77] _mono_marshal_free_array
0x00161230	0x000000E0	[ 77] _mono_string_to_byvalstr
0x00161310	0x00000100	[ 77] _mono_string_to_byvalwstr
0x00161410	0x000000F0	[ 77] _mono_struct_delete_old
0x00161500	0x00000120	[ 77] _mono_delegate_begin_invoke
0x00161620	0x000002F0	[ 77] _mono_delegate_end_invoke
0x00161910	0x00000050	[ 77] _mono_marshal_cleanup
0x00161960	0x00000020	[ 77] _mono_marshal_lock_internal
0x00161980	0x00000020	[ 77] _mono_marshal_unlock_internal
0x001619A0	0x00000840	[ 77] _mono_marshal_get_managed_wrapper
0x001621E0	0x00000020	[ 77] _mono_marshal_use_aot_wrappers
0x00162200	0x000004C0	[ 77] _mono_marshal_get_native_func_wrapper_aot
0x001626C0	0x00000150	[ 77] _parse_unmanaged_function_pointer_attr
0x00162810	0x000001E0	[ 77] _mono_marshal_get_native_func_wrapper
0x001629F0	0x00000160	[ 77] _mono_delegate_free_ftnptr
0x00162B50	0x00000170	[ 77] _mono_type_to_ldind
0x00162CC0	0x00000150	[ 77] _mono_type_to_stind
0x00162E10	0x00000040	[ 77] _mono_marshal_emit_thread_interrupt_checkpoint
0x00162E50	0x00000020	[ 77] _mono_marshal_emit_thread_force_interrupt_checkpoint
0x00162E70	0x00000190	[ 77] _mono_mb_emit_save_args
0x00163000	0x00000060	[ 77] _mono_marshal_get_cache
0x00163060	0x00000050	[ 77] _mono_marshal_find_in_cache
0x001630B0	0x00000050	[ 77] _mono_mb_create
0x00163100	0x00000030	[ 77] _mono_marshal_set_wrapper_info
0x00163130	0x00000120	[ 77] _mono_mb_create_and_cache_full
0x00163250	0x00000050	[ 77] _mono_mb_create_and_cache
0x001632A0	0x000001F0	[ 77] _mono_marshal_method_from_wrapper
0x00163490	0x00000060	[ 77] _mono_marshal_get_wrapper_info
0x001634F0	0x00000030	[ 77] _mono_wrapper_info_create
0x00163520	0x00000390	[ 77] _mono_marshal_get_delegate_begin_invoke
0x001638B0	0x00000190	[ 77] _check_generic_delegate_wrapper_cache
0x00163A40	0x000000D0	[ 77] _mono_signature_to_name
0x00163B10	0x000000D0	[ 77] _get_wrapper_target_class
0x00163BE0	0x00000110	[ 77] _cache_generic_delegate_wrapper
0x00163CF0	0x000001E0	[ 77] _mono_mb_emit_restore_result
0x00163ED0	0x000003B0	[ 77] _mono_marshal_get_delegate_end_invoke
0x00164280	0x00000DC0	[ 77] _mono_marshal_get_delegate_invoke_internal
0x00165040	0x00000030	[ 77] _signature_pointer_pair_hash
0x00165070	0x00000040	[ 77] _signature_pointer_pair_equal
0x001650B0	0x00000010	[ 77] _free_signature_pointer_pair
0x001650C0	0x00000120	[ 77] _mono_marshal_get_delegate_invoke
0x001651E0	0x00000130	[ 77] _mono_marshal_get_string_ctor_signature
0x00165310	0x00000AB0	[ 77] _mono_marshal_get_runtime_invoke
0x00165DC0	0x00000060	[ 77] _runtime_invoke_signature_equal
0x00165E20	0x00000110	[ 77] _get_runtime_invoke_type
0x00165F30	0x000003E0	[ 77] _mono_marshal_get_runtime_invoke_dynamic
0x00166310	0x00000440	[ 77] _mono_marshal_get_icall_wrapper
0x00166750	0x000006B0	[ 77] _mono_marshal_emit_native_wrapper
0x00166E00	0x00002C30	[ 77] _emit_marshal
0x00169A30	0x00000CE0	[ 77] _mono_marshal_get_native_wrapper
0x0016A710	0x000006F0	[ 77] _mono_marshal_emit_managed_wrapper
0x0016AE00	0x00000230	[ 77] _mono_marshal_set_callconv_from_modopt
0x0016B030	0x000002F0	[ 77] _mono_marshal_get_vtfixup_ftnptr
0x0016B320	0x000002E0	[ 77] _mono_marshal_get_castclass_with_cache
0x0016B600	0x00000430	[ 77] _mono_marshal_get_isinst_with_cache
0x0016BA30	0x00000250	[ 77] _mono_marshal_get_isinst
0x0016BC80	0x00000210	[ 77] _mono_marshal_get_castclass
0x0016BE90	0x000002F0	[ 77] _mono_marshal_get_struct_to_ptr
0x0016C180	0x00000580	[ 77] _mono_marshal_load_type_info
0x0016C700	0x00000270	[ 77] _mono_marshal_get_ptr_to_struct
0x0016C970	0x00000230	[ 77] _mono_marshal_get_synchronized_inner_wrapper
0x0016CBA0	0x00000B30	[ 77] _mono_marshal_get_synchronized_wrapper
0x0016D6D0	0x000001E0	[ 77] _mono_marshal_get_unbox_wrapper
0x0016D8B0	0x000000D0	[ 77] _mono_marshal_get_virtual_stelemref
0x0016D980	0x00000D10	[ 77] _get_virtual_stelemref_wrapper
0x0016E690	0x00000070	[ 77] _mono_marshal_get_virtual_stelemref_wrappers
0x0016E700	0x000004B0	[ 77] _mono_marshal_get_stelemref
0x0016EBB0	0x000000E0	[ 77] _mono_marshal_get_gsharedvt_in_wrapper
0x0016EC90	0x000000E0	[ 77] _mono_marshal_get_gsharedvt_out_wrapper
0x0016ED70	0x00000780	[ 77] _mono_marshal_get_array_address
0x0016F4F0	0x000001D0	[ 77] _mono_marshal_get_array_accessor_wrapper
0x0016F6C0	0x000000F0	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_copy_to_unmanaged
0x0016F7B0	0x000000F0	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_copy_from_unmanaged
0x0016F8A0	0x00000030	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringAnsi
0x0016F8D0	0x00000050	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringAnsi_len
0x0016F920	0x00000050	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringUni
0x0016F970	0x00000050	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringUni_len
0x0016F9C0	0x00000020	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_GetLastWin32Error
0x0016F9E0	0x000000F0	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_SizeOf
0x0016FAD0	0x00000070	[ 77] _mono_class_native_size
0x0016FB40	0x000000A0	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_StructureToPtr
0x0016FBE0	0x00000110	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStructure
0x0016FCF0	0x000000E0	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_PtrToStructure_type
0x0016FDD0	0x00000160	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_OffsetOf
0x0016FF30	0x00000010	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_StringToHGlobalAnsi
0x0016FF40	0x00000070	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_StringToHGlobalUni
0x0016FFB0	0x00000080	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_DestroyStructure
0x00170030	0x00000040	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_AllocHGlobal
0x00170070	0x00000040	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_ReAllocHGlobal
0x001700B0	0x00000010	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_FreeHGlobal
0x001700C0	0x00000020	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_AllocCoTaskMem
0x001700E0	0x00000010	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_FreeCoTaskMem
0x001700F0	0x00000010	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_ReAllocCoTaskMem
0x00170100	0x00000030	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_UnsafeAddrOfPinnedArrayElement
0x00170130	0x00000050	[ 77] _ves_icall_System_Runtime_InteropServices_Marshal_GetDelegateForFunctionPointerInternal
0x00170180	0x00000310	[ 77] _mono_marshal_type_size
0x00170490	0x000001C0	[ 77] _mono_type_native_stack_size
0x00170650	0x00000150	[ 77] _mono_marshal_get_generic_array_helper
0x001707A0	0x00000030	[ 77] _mono_win32_compat_CopyMemory
0x001707D0	0x00000030	[ 77] _mono_win32_compat_FillMemory
0x00170800	0x00000030	[ 77] _mono_win32_compat_MoveMemory
0x00170830	0x00000030	[ 77] _mono_win32_compat_ZeroMemory
0x00170860	0x000000D0	[ 77] _mono_marshal_find_nonzero_bit_offset
0x00170930	0x000004D0	[ 77] _mono_marshal_get_thunk_invoke_wrapper
0x00170E00	0x000000E0	[ 77] _mono_marshal_free_dynamic_wrappers
0x00170EE0	0x00000020	[ 77] _signature_pointer_pair_matches_pointer
0x00170F00	0x00000250	[ 77] _mono_marshal_free_inflated_wrappers
0x00171150	0x00000020	[ 77] _signature_pointer_pair_matches_signature
0x00171170	0x00001DC0	[ 77] _emit_struct_conv_full
0x00172F30	0x00000B30	[ 77] _emit_marshal_vtype
0x00173A60	0x00001730	[ 77] _emit_marshal_object
0x00175190	0x000022B0	[ 77] _emit_marshal_array
0x00177440	0x000000A0	[ 77] _mono_mb_emit_auto_layout_exception
0x001774E0	0x000006B0	[ 77] _emit_invoke_call
0x00177B90	0x000000CE	[ 77] _emit_thread_interrupt_checkpoint_call
0x00177C60	0x00000050	[ 78] _mono_mempool_new
0x00177CB0	0x00000050	[ 78] _mono_mempool_new_size
0x00177D00	0x00000040	[ 78] _mono_mempool_destroy
0x00177D40	0x00000040	[ 78] _mono_mempool_invalidate
0x00177D80	0x00000020	[ 78] _mono_mempool_empty
0x00177DA0	0x00000090	[ 78] _mono_mempool_stats
0x00177E30	0x00000100	[ 78] _mono_mempool_alloc
0x00177F30	0x00000050	[ 78] _mono_mempool_alloc0
0x00177F80	0x00000030	[ 78] _mono_mempool_contains_addr
0x00177FB0	0x00000050	[ 78] _mono_mempool_strdup
0x00178000	0x00000010	[ 78] _mono_mempool_get_allocated
0x00178010	0x00000011	[ 78] _mono_mempool_get_bytes_allocated
0x00178030	0x00000870	[ 79] _mono_dump_metadata_offsets
0x001788A0	0x00000005	[ 79] _mono_metadata_cross_helpers_run
0x001788B0	0x000012F0	[ 80] _mono_verifier_verify_pe_data
0x00179BA0	0x00000EC0	[ 80] _mono_verifier_verify_cli_data
0x0017AA60	0x000000D0	[ 80] _mono_verifier_verify_table_data
0x0017AB30	0x000063E0	[ 80] _verify_tables_data
0x00180F10	0x000014B0	[ 80] _mono_verifier_verify_full_table_data
0x001823C0	0x000000D0	[ 80] _mono_verifier_verify_field_signature
0x00182490	0x00000190	[ 80] _is_valid_field_signature
0x00182620	0x00000110	[ 80] _mono_verifier_verify_method_header
0x00182730	0x000007B0	[ 80] _is_valid_method_header
0x00182EE0	0x00000440	[ 80] _is_valid_standalonesig_blob
0x00183320	0x00000100	[ 80] _mono_verifier_verify_method_signature
0x00183420	0x00000130	[ 80] _is_valid_method_signature
0x00183550	0x000001F0	[ 80] _mono_verifier_verify_memberref_method_signature
0x00183740	0x000000D0	[ 80] _mono_verifier_verify_memberref_field_signature
0x00183810	0x000000D0	[ 80] _mono_verifier_verify_standalone_signature
0x001838E0	0x000000E0	[ 80] _mono_verifier_verify_typespec_signature
0x001839C0	0x00000230	[ 80] _is_valid_typespec_blob
0x00183BF0	0x000000D0	[ 80] _mono_verifier_verify_methodspec_signature
0x00183CC0	0x00000310	[ 80] _is_valid_methodspec_blob
0x00183FD0	0x000001E0	[ 80] _mono_verifier_verify_string_signature
0x001841B0	0x000000D0	[ 80] _mono_verifier_verify_cattr_blob
0x00184280	0x00000180	[ 80] _is_valid_cattr_blob
0x00184400	0x000000E0	[ 80] _mono_verifier_verify_cattr_content
0x001844E0	0x000006C0	[ 80] _is_valid_cattr_content
0x00184BA0	0x000000A0	[ 80] _mono_verifier_is_sig_compatible
0x00184C40	0x00000230	[ 80] _mono_verifier_verify_typeref_row
0x00184E70	0x00000160	[ 80] _mono_verifier_verify_methodimpl_row
0x00184FD0	0x00000520	[ 80] _is_valid_fixed_param
0x001854F0	0x000001E0	[ 80] _get_enum_by_encoded_name
0x001856D0	0x00000150	[ 80] _is_valid_ser_string_full
0x00185820	0x000001C0	[ 80] _parse_custom_mods
0x001859E0	0x00000CC0	[ 80] _parse_type
0x001866A0	0x00000600	[ 80] _parse_method_signature
0x00186CA0	0x00000100	[ 80] _parse_field
0x00186DA0	0x00000030	[ 80] _typedef_hash
0x00186DD0	0x00000060	[ 80] _typedef_equals
0x00186E30	0x00000030	[ 80] _token_locator
0x00186E60	0x00000333	[ 80] _verify_hint_name_table
0x001871A0	0x00000030	[ 81] _mono_meta_table_name
0x001871D0	0x00000BB0	[ 81] _mono_metadata_compute_size
0x00187D80	0x00000070	[ 81] _mono_metadata_compute_table_bases
0x00187DF0	0x00000090	[ 81] _mono_metadata_locate
0x00187E80	0x00000090	[ 81] _mono_metadata_locate_token
0x00187F10	0x00000050	[ 81] _mono_metadata_string_heap
0x00187F60	0x00000050	[ 81] _mono_metadata_user_string
0x00187FB0	0x00000050	[ 81] _mono_metadata_blob_heap
0x00188000	0x00000070	[ 81] _mono_metadata_guid_heap
0x00188070	0x00000160	[ 81] _mono_metadata_decode_row
0x001881D0	0x00000160	[ 81] _mono_metadata_decode_row_col
0x00188330	0x00000060	[ 81] _mono_metadata_decode_blob_size
0x00188390	0x00000060	[ 81] _mono_metadata_decode_value
0x001883F0	0x00000100	[ 81] _mono_metadata_decode_signed_value
0x001884F0	0x000000C0	[ 81] _mono_metadata_translate_token_index
0x001885B0	0x00000070	[ 81] _mono_metadata_decode_table_row
0x00188620	0x00000050	[ 81] _mono_metadata_decode_table_row_col
0x00188670	0x000000B0	[ 81] _mono_metadata_parse_typedef_or_ref
0x00188720	0x00000060	[ 81] _mono_metadata_token_from_dor
0x00188780	0x00000100	[ 81] _mono_metadata_parse_custom_mod
0x00188880	0x00000030	[ 81] _mono_metadata_parse_array_full
0x001888B0	0x00000250	[ 81] _mono_metadata_parse_array_internal
0x00188B00	0x00000030	[ 81] _mono_metadata_parse_array
0x00188B30	0x00000030	[ 81] _mono_metadata_free_array
0x00188B60	0x00000070	[ 81] _mono_metadata_generic_inst_hash
0x00188BD0	0x00000240	[ 81] _mono_metadata_type_hash
0x00188E10	0x00000090	[ 81] _mono_metadata_generic_inst_equal
0x00188EA0	0x000000C0	[ 81] _mono_metadata_init
0x00188F60	0x00000050	[ 81] _mono_type_hash
0x00188FB0	0x00000030	[ 81] _mono_type_equal
0x00188FE0	0x00000060	[ 81] _mono_metadata_cleanup
0x00189040	0x00000040	[ 81] _mono_metadata_parse_type_full
0x00189080	0x00000840	[ 81] _mono_metadata_parse_type_internal
0x001898C0	0x00000040	[ 81] _mono_metadata_parse_type
0x00189900	0x000000C0	[ 81] _mono_metadata_method_has_param_attrs
0x001899C0	0x00000120	[ 81] _mono_metadata_get_param_attrs
0x00189AE0	0x00000150	[ 81] _mono_metadata_parse_signature_full
0x00189C30	0x00000430	[ 81] _mono_metadata_parse_method_signature_full
0x0018A060	0x00000030	[ 81] _mono_metadata_parse_signature
0x0018A090	0x00000030	[ 81] _mono_metadata_signature_alloc
0x0018A0C0	0x00000050	[ 81] _mono_metadata_signature_dup_full
0x0018A110	0x00000050	[ 81] _mono_metadata_signature_dup_mempool
0x0018A160	0x00000040	[ 81] _mono_metadata_signature_dup
0x0018A1A0	0x00000020	[ 81] _mono_metadata_signature_size
0x0018A1C0	0x00000010	[ 81] _mono_metadata_free_method_signature
0x0018A1D0	0x00000080	[ 81] _mono_metadata_parse_method_signature
0x0018A250	0x00000060	[ 81] _mono_metadata_free_inflated_signature
0x0018A2B0	0x000000D0	[ 81] _mono_metadata_free_type
0x0018A380	0x00000050	[ 81] _mono_image_set_alloc
0x0018A3D0	0x00000050	[ 81] _mono_image_set_alloc0
0x0018A420	0x00000050	[ 81] _mono_image_set_strdup
0x0018A470	0x00000290	[ 81] _mono_metadata_clean_for_image
0x0018A700	0x000000C0	[ 81] _steal_gclass_in_image
0x0018A7C0	0x00000030	[ 81] _steal_ginst_in_image
0x0018A7F0	0x00000150	[ 81] _inflated_method_in_image
0x0018A940	0x00000100	[ 81] _inflated_signature_in_image
0x0018AA40	0x00000040	[ 81] _free_generic_inst
0x0018AA80	0x00000040	[ 81] _free_generic_class
0x0018AAC0	0x000001C0	[ 81] _mono_method_inflated_lookup
0x0018AC80	0x000002F0	[ 81] _get_image_set
0x0018AF70	0x00000190	[ 81] _mono_metadata_get_inflated_signature
0x0018B100	0x000002D0	[ 81] _mono_metadata_get_generic_inst
0x0018B3D0	0x000000B0	[ 81] _mono_metadata_type_dup
0x0018B480	0x00000270	[ 81] _mono_metadata_lookup_generic_class
0x0018B6F0	0x000000E0	[ 81] _mono_metadata_inflate_generic_inst
0x0018B7D0	0x000000B0	[ 81] _mono_metadata_parse_generic_inst
0x0018B880	0x00000060	[ 81] _mono_metadata_get_shared_type
0x0018B8E0	0x00000170	[ 81] _mono_method_get_header_summary
0x0018BA50	0x00000670	[ 81] _mono_metadata_parse_mh_full
0x0018C0C0	0x00000030	[ 81] _mono_metadata_parse_mh
0x0018C0F0	0x00000060	[ 81] _mono_metadata_free_mh
0x0018C150	0x00000030	[ 81] _mono_method_header_get_code
0x0018C180	0x00000030	[ 81] _mono_method_header_get_locals
0x0018C1B0	0x00000020	[ 81] _mono_method_header_get_num_clauses
0x0018C1D0	0x00000080	[ 81] _mono_method_header_get_clauses
0x0018C250	0x00000040	[ 81] _mono_metadata_parse_field_type
0x0018C290	0x00000040	[ 81] _mono_metadata_parse_param
0x0018C2D0	0x00000100	[ 81] _mono_metadata_typedef_from_field
0x0018C3D0	0x00000080	[ 81] _typedef_locator
0x0018C450	0x00000100	[ 81] _mono_metadata_typedef_from_method
0x0018C550	0x000002A0	[ 81] _mono_metadata_interfaces_from_typedef_full
0x0018C7F0	0x00000050	[ 81] _table_locator
0x0018C840	0x000000D0	[ 81] _mono_metadata_interfaces_from_typedef
0x0018C910	0x000000A0	[ 81] _mono_metadata_nested_in_typedef
0x0018C9B0	0x00000090	[ 81] _mono_metadata_nesting_typedef
0x0018CA40	0x000000E0	[ 81] _mono_metadata_packing_from_typedef
0x0018CB20	0x000000C0	[ 81] _mono_metadata_custom_attrs_from_index
0x0018CBE0	0x000000B0	[ 81] _mono_metadata_declsec_from_index
0x0018CC90	0x00000050	[ 81] _declsec_locator
0x0018CCE0	0x00000040	[ 81] _mono_type_set_alignment
0x0018CD20	0x00000190	[ 81] _mono_type_size
0x0018CEB0	0x00000030	[ 81] _mono_type_stack_size
0x0018CEE0	0x00000210	[ 81] _mono_type_stack_size_internal
0x0018D0F0	0x00000060	[ 81] _mono_type_generic_inst_is_valuetype
0x0018D150	0x00000020	[ 81] _mono_metadata_generic_class_is_valuetype
0x0018D170	0x000000F0	[ 81] _mono_metadata_generic_context_hash
0x0018D260	0x00000030	[ 81] _mono_metadata_generic_context_equal
0x0018D290	0x00000040	[ 81] _mono_metadata_str_hash
0x0018D2D0	0x00000110	[ 81] _mono_generic_class_hash
0x0018D3E0	0x00000020	[ 81] _mono_metadata_type_equal
0x0018D400	0x00000480	[ 81] _do_mono_metadata_type_equal
0x0018D880	0x00000020	[ 81] _mono_metadata_type_equal_full
0x0018D8A0	0x00000090	[ 81] _mono_metadata_signature_equal
0x0018D930	0x00000080	[ 81] _mono_signature_hash
0x0018D9B0	0x00000060	[ 81] _mono_metadata_encode_value
0x0018DA10	0x00000040	[ 81] _mono_metadata_field_info
0x0018DA50	0x000001F0	[ 81] _mono_metadata_field_info_full
0x0018DC40	0x00000040	[ 81] _mono_metadata_field_info_with_mempool
0x0018DC80	0x00000110	[ 81] _mono_metadata_get_constant_index
0x0018DD90	0x000000E0	[ 81] _mono_metadata_events_from_typedef
0x0018DE70	0x000001C0	[ 81] _mono_metadata_methods_from_event
0x0018E030	0x000000E0	[ 81] _mono_metadata_properties_from_typedef
0x0018E110	0x000001C0	[ 81] _mono_metadata_methods_from_property
0x0018E2D0	0x00000080	[ 81] _mono_metadata_implmap_from_method
0x0018E350	0x000000A0	[ 81] _mono_type_create_from_typespec
0x0018E3F0	0x000001F0	[ 81] _mono_type_create_from_typespec_checked
0x0018E5E0	0x00000030	[ 81] _mono_metadata_parse_marshal_spec
0x0018E610	0x000004B0	[ 81] _mono_metadata_parse_marshal_spec_full
0x0018EAC0	0x00000030	[ 81] _mono_metadata_free_marshal_spec
0x0018EAF0	0x00000550	[ 81] _mono_type_to_unmanaged
0x0018F040	0x000000F0	[ 81] _mono_metadata_get_marshal_info
0x0018F130	0x000000A0	[ 81] _method_from_method_def_or_ref
0x0018F1D0	0x000003F0	[ 81] _mono_class_get_overrides_full
0x0018F5C0	0x000000F0	[ 81] _mono_guid_to_string
0x0018F6B0	0x00000150	[ 81] _mono_metadata_get_generic_param_row
0x0018F800	0x00000030	[ 81] _mono_metadata_has_generic_params
0x0018F830	0x000002E0	[ 81] _mono_metadata_load_generic_param_constraints_checked
0x0018FB10	0x000002D0	[ 81] _mono_metadata_load_generic_params
0x0018FDE0	0x000000C0	[ 81] _mono_get_shared_generic_inst
0x0018FEA0	0x00000020	[ 81] _mono_type_is_byref
0x0018FEC0	0x00000010	[ 81] _mono_type_get_type
0x0018FED0	0x00000050	[ 81] _mono_type_get_signature
0x0018FF20	0x00000010	[ 81] _mono_type_get_class
0x0018FF30	0x00000010	[ 81] _mono_type_get_array_type
0x0018FF40	0x00000050	[ 81] _mono_type_get_ptr_type
0x0018FF90	0x00000010	[ 81] _mono_type_get_modifiers
0x0018FFA0	0x00000060	[ 81] _mono_type_is_struct
0x00190000	0x00000040	[ 81] _mono_type_is_void
0x00190040	0x00000040	[ 81] _mono_type_is_pointer
0x00190080	0x00000050	[ 81] _mono_type_is_reference
0x001900D0	0x00000010	[ 81] _mono_signature_get_return_type
0x001900E0	0x00000040	[ 81] _mono_signature_get_params
0x00190120	0x00000010	[ 81] _mono_signature_get_param_count
0x00190130	0x00000010	[ 81] _mono_signature_get_call_conv
0x00190140	0x00000010	[ 81] _mono_signature_vararg_start
0x00190150	0x00000020	[ 81] _mono_signature_is_instance
0x00190170	0x00000060	[ 81] _mono_signature_param_is_out
0x001901D0	0x00000020	[ 81] _mono_signature_explicit_this
0x001901F0	0x00000010	[ 81] _mono_aligned_addr_hash
0x00190200	0x00000020	[ 81] _mono_metadata_get_corresponding_field_from_generic_type_definition
0x00190220	0x00000030	[ 81] _mono_metadata_get_corresponding_event_from_generic_type_definition
0x00190250	0x00000030	[ 81] _mono_metadata_get_corresponding_property_from_generic_type_definition
0x00190280	0x000003F0	[ 81] _mono_metadata_class_equal
0x00190670	0x000003E0	[ 81] _collect_type_images
0x00190A50	0x000000C0	[ 81] _mono_generic_class_equal
0x00190B10	0x00000030	[ 81] _inflated_method_hash
0x00190B40	0x00000040	[ 81] _inflated_method_equal
0x00190B80	0x000000D0	[ 81] _free_inflated_method
0x00190C50	0x00000030	[ 81] _inflated_signature_hash
0x00190C80	0x00000030	[ 81] _inflated_signature_equal
0x00190CB0	0x00000060	[ 81] _free_inflated_signature
0x00190D10	0x00000260	[ 81] _type_in_image
0x00190F70	0x00000030	[ 82] _mono_mb_new_no_dup_name
0x00190FA0	0x000000F0	[ 82] _mono_mb_new_base
0x00191090	0x00000040	[ 82] _mono_mb_new
0x001910D0	0x00000050	[ 82] _mono_mb_free
0x00191120	0x00000360	[ 82] _mono_mb_create_method
0x00191480	0x00000070	[ 82] _mono_mb_add_data
0x001914F0	0x000000A0	[ 82] _mono_mb_add_local
0x00191590	0x00000040	[ 82] _mono_mb_patch_addr
0x001915D0	0x00000020	[ 82] _mono_mb_patch_addr_s
0x001915F0	0x00000050	[ 82] _mono_mb_emit_byte
0x00191640	0x000000D0	[ 82] _mono_mb_emit_ldflda
0x00191710	0x00000130	[ 82] _mono_mb_emit_icon
0x00191840	0x00000070	[ 82] _mono_mb_emit_i4
0x001918B0	0x00000060	[ 82] _mono_mb_emit_i2
0x00191910	0x000000D0	[ 82] _mono_mb_emit_op
0x001919E0	0x00000030	[ 82] _mono_mb_emit_ldstr
0x00191A10	0x00000160	[ 82] _mono_mb_emit_ldarg
0x00191B70	0x00000140	[ 82] _mono_mb_emit_ldarg_addr
0x00191CB0	0x00000140	[ 82] _mono_mb_emit_ldloc_addr
0x00191DF0	0x00000160	[ 82] _mono_mb_emit_ldloc
0x00191F50	0x00000160	[ 82] _mono_mb_emit_stloc
0x001920B0	0x00000010	[ 82] _mono_mb_get_label
0x001920C0	0x00000010	[ 82] _mono_mb_get_pos
0x001920D0	0x000000B0	[ 82] _mono_mb_emit_branch
0x00192180	0x00000090	[ 82] _mono_mb_emit_short_branch
0x00192210	0x000000B0	[ 82] _mono_mb_emit_branch_label
0x001922C0	0x00000040	[ 82] _mono_mb_patch_branch
0x00192300	0x00000020	[ 82] _mono_mb_patch_short_branch
0x00192320	0x00000060	[ 82] _mono_mb_emit_ptr
0x00192380	0x00000030	[ 82] _mono_mb_emit_calli
0x001923B0	0x00000030	[ 82] _mono_mb_emit_managed_call
0x001923E0	0x00000080	[ 82] _mono_mb_emit_native_call
0x00192460	0x00000060	[ 82] _mono_mb_emit_icall
0x001924C0	0x00000180	[ 82] _mono_mb_emit_exception_full
0x00192640	0x00000040	[ 82] _mono_mb_emit_exception
0x00192680	0x00000080	[ 82] _mono_mb_emit_add_to_local
0x00192700	0x00000020	[ 82] _mono_mb_set_clauses
0x00192720	0x0000000E	[ 82] _mono_mb_set_param_names
0x00192730	0x00000070	[ 83] _mono_monitor_init
0x001927A0	0x00000030	[ 83] _mono_monitor_cleanup
0x001927D0	0x00000200	[ 83] _mono_locks_dump
0x001929D0	0x00000070	[ 83] _mono_object_hash
0x00192A40	0x00000030	[ 83] _mono_monitor_enter
0x00192A70	0x00000520	[ 83] _mono_monitor_try_enter_internal
0x00192F90	0x00000030	[ 83] _mono_monitor_try_enter
0x00192FC0	0x000000A0	[ 83] _mono_monitor_exit
0x00193060	0x00000030	[ 83] _mono_monitor_get_object_monitor_weak_link
0x00193090	0x00000020	[ 83] _mono_monitor_threads_sync_members_offset
0x001930B0	0x00000040	[ 83] _ves_icall_System_Threading_Monitor_Monitor_try_enter
0x001930F0	0x00000040	[ 83] _ves_icall_System_Threading_Monitor_Monitor_try_enter_with_atomic_var
0x00193130	0x00000070	[ 83] _mono_monitor_enter_v4
0x001931A0	0x00000030	[ 83] _ves_icall_System_Threading_Monitor_Monitor_test_owner
0x001931D0	0x00000030	[ 83] _ves_icall_System_Threading_Monitor_Monitor_test_synchronised
0x00193200	0x00000080	[ 83] _ves_icall_System_Threading_Monitor_Monitor_pulse
0x00193280	0x00000080	[ 83] _ves_icall_System_Threading_Monitor_Monitor_pulse_all
0x00193300	0x000001E0	[ 83] _ves_icall_System_Threading_Monitor_Monitor_wait
0x001934E0	0x000001AE	[ 83] _mon_new
0x00193690	0x00000040	[ 84] _mono_basic_block_free
0x001936D0	0x000007B0	[ 84] _mono_basic_block_split
0x00193E80	0x00000140	[ 84] _mono_opcode_value_and_size
0x00193FC0	0x00000030	[ 84] _mono_opcode_size
0x00193FF0	0x00000303	[ 84] _bb_split
0x00194300	0x00000040	[ 85] _mono_config_cleanup
0x00194340	0x00000040	[ 85] _mono_config_parse_memory
0x00194380	0x00000130	[ 85] _mono_config_parse_xml_with_context
0x001944B0	0x00000040	[ 85] _mono_register_config_for_assembly
0x001944F0	0x00000050	[ 85] _mono_config_string_for_assembly_file
0x00194540	0x00000170	[ 85] _mono_config_for_assembly
0x001946B0	0x000000D0	[ 85] _mono_config_parse_file_with_context
0x00194780	0x00000040	[ 85] _mono_get_config_dir
0x001947C0	0x00000120	[ 85] _mono_config_parse
0x001948E0	0x00000050	[ 85] _mono_set_config_dir
0x00194930	0x00000020	[ 85] _mono_register_machine_config
0x00194950	0x00000020	[ 85] _mono_get_machine_config
0x00194970	0x00000050	[ 85] _mono_config_parse_publisher_policy
0x001949C0	0x00000070	[ 85] _mono_config_parse_assembly_bindings
0x00194A30	0x00000020	[ 85] _mono_config_set_server_mode
0x00194A50	0x00000020	[ 85] _mono_config_is_server_mode
0x00194A70	0x00000550	[ 85] _publisher_policy_start
0x00194FC0	0x00000070	[ 85] _assembly_binding_end
0x00195030	0x00000080	[ 85] _start_element
0x001950B0	0x00000060	[ 85] _end_element
0x00195110	0x00000040	[ 85] _parse_text
0x00195150	0x00000010	[ 85] _passthrough
0x00195160	0x00000080	[ 85] _parse_error
0x001951E0	0x000001A0	[ 85] _aot_cache_start
0x00195380	0x00000090	[ 85] _legacyUEP_start
0x00195410	0x00000020	[ 85] _dllmap_init
0x00195430	0x00000400	[ 85] _dllmap_start
0x00195830	0x00000030	[ 85] _dllmap_finish
0x00195860	0x0000009C	[ 85] _arch_matches
0x00195900	0x00000080	[ 86] _mono_cq_create
0x00195980	0x00000100	[ 86] _mono_cqitem_alloc
0x00195A80	0x00000050	[ 86] _mono_cq_destroy
0x00195AD0	0x00000020	[ 86] _mono_cq_count
0x00195AF0	0x000000C0	[ 86] _mono_cq_enqueue
0x00195BB0	0x00000163	[ 86] _mono_cq_dequeue
0x00195D20	0x000001A0	[ 87] _mono_debug_init
0x00195EC0	0x00000070	[ 87] _mono_debugger_initialize
0x00195F30	0x00000060	[ 87] _mono_debugger_lock
0x00195F90	0x00000030	[ 87] _free_debug_handle
0x00195FC0	0x00000030	[ 87] _free_data_table
0x00195FF0	0x00000110	[ 87] _mono_debug_add_assembly
0x00196100	0x00000060	[ 87] _mono_debugger_unlock
0x00196160	0x00000030	[ 87] _mono_debug_open_image_from_memory
0x00196190	0x00000160	[ 87] _mono_debug_open_image
0x001962F0	0x00000050	[ 87] _mono_debug_cleanup
0x00196340	0x00000100	[ 87] _mono_debug_domain_create
0x00196440	0x00000110	[ 87] _mono_debug_domain_unload
0x00196550	0x000000D0	[ 87] _mono_debug_close_image
0x00196620	0x000000E0	[ 87] _mono_debug_lookup_method
0x00196700	0x000000E0	[ 87] _mono_debug_image_has_debug_info
0x001967E0	0x00000030	[ 87] _lookup_image_func
0x00196810	0x00000580	[ 87] _mono_debug_add_method
0x00196D90	0x00000130	[ 87] _write_variable
0x00196EC0	0x00000160	[ 87] _mono_debug_remove_method
0x00197020	0x00000010	[ 87] _mono_debug_add_delegate_trampoline
0x00197030	0x00000060	[ 87] _mono_debug_free_method_jit_info
0x00197090	0x000000C0	[ 87] _mono_debug_find_method
0x00197150	0x00000390	[ 87] _find_method
0x001974E0	0x00000030	[ 87] _mono_debug_lookup_method_addresses
0x00197510	0x000000F0	[ 87] _mono_debug_il_offset_from_address
0x00197600	0x00000190	[ 87] _mono_debug_lookup_source_location
0x00197790	0x00000110	[ 87] _mono_debug_lookup_locals
0x001978A0	0x00000030	[ 87] _mono_debug_free_source_location
0x001978D0	0x000001F0	[ 87] _mono_debug_print_stack_frame
0x00197AC0	0x00000020	[ 87] _mono_set_is_debugger_attached
0x00197AE0	0x00000020	[ 87] _mono_is_debugger_attached
0x00197B00	0x00000050	[ 87] _mono_register_symfile_for_assembly
0x00197B50	0x00000020	[ 87] _mono_debug_enabled
0x00197B70	0x00000120	[ 87] _read_variable
0x00197C90	0x0000002F	[ 87] _lookup_method_func
0x00197CC0	0x000000E0	[ 88] _mono_g_hash_table_new_type
0x00197DA0	0x00000070	[ 88] _mono_g_hash_table_new
0x00197E10	0x00000130	[ 88] _mono_g_hash_mark
0x00197F40	0x00000080	[ 88] _mono_g_hash_table_new_full
0x00197FC0	0x00000060	[ 88] _mono_g_hash_table_size
0x00198020	0x000000B0	[ 88] _mono_g_hash_table_lookup
0x001980D0	0x000000C0	[ 88] _mono_g_hash_table_lookup_extended
0x00198190	0x000000E0	[ 88] _mono_g_hash_table_foreach
0x00198270	0x000000F0	[ 88] _mono_g_hash_table_find
0x00198360	0x00000110	[ 88] _mono_g_hash_table_remove
0x00198470	0x00000190	[ 88] _mono_g_hash_table_foreach_remove
0x00198600	0x00000080	[ 88] _rehash
0x00198680	0x000000F0	[ 88] _mono_g_hash_table_destroy
0x00198770	0x00000030	[ 88] _mono_g_hash_table_insert
0x001987A0	0x00000130	[ 88] _mono_g_hash_table_insert_replace
0x001988D0	0x00000030	[ 88] _mono_g_hash_table_replace
0x00198900	0x00000080	[ 88] _mono_g_hash_table_print_stats
0x00198980	0x00000075	[ 88] _do_rehash
0x00198A00	0x000000B0	[ 89] _mono_mlist_alloc
0x00198AB0	0x00000010	[ 89] _mono_mlist_get_data
0x00198AC0	0x00000030	[ 89] _mono_mlist_set_data
0x00198AF0	0x00000030	[ 89] _mono_mlist_set_next
0x00198B20	0x00000020	[ 89] _mono_mlist_length
0x00198B40	0x00000010	[ 89] _mono_mlist_next
0x00198B50	0x00000020	[ 89] _mono_mlist_last
0x00198B70	0x00000040	[ 89] _mono_mlist_prepend
0x00198BB0	0x00000050	[ 89] _mono_mlist_append
0x00198C00	0x00000063	[ 89] _mono_mlist_remove_item
0x00198C70	0x000000B0	[ 90] _mono_perfcounters_init
0x00198D20	0x00000910	[ 90] _mono_perfcounter_get_impl
0x00199630	0x00000040	[ 90] _mono_perfcounter_get_sample
0x00199670	0x00000020	[ 90] _mono_perfcounter_update_value
0x00199690	0x00000030	[ 90] _mono_perfcounter_free_data
0x001996C0	0x00000170	[ 90] _mono_perfcounter_category_del
0x00199830	0x000001D0	[ 90] _mono_perfcounter_category_help
0x00199A00	0x00000330	[ 90] _mono_perfcounter_category_exists
0x00199D30	0x00000500	[ 90] _mono_perfcounter_create
0x0019A230	0x00000200	[ 90] _mono_perfcounter_instance_exists
0x0019A430	0x00000210	[ 90] _mono_perfcounter_category_names
0x0019A640	0x00000370	[ 90] _mono_perfcounter_counter_names
0x0019A9B0	0x00000620	[ 90] _mono_perfcounter_instance_names
0x0019AFD0	0x00000190	[ 90] _mono_perfcounter_foreach
0x0019B160	0x000001A0	[ 90] _custom_get_instance
0x0019B300	0x00000190	[ 90] _get_string_array
0x0019B490	0x000001F0	[ 90] _predef_writable_counter
0x0019B680	0x00000150	[ 90] _predef_writable_update
0x0019B7D0	0x000000B0	[ 90] _predef_readonly_counter
0x0019B880	0x00000090	[ 90] _predef_cleanup
0x0019B910	0x000000F0	[ 90] _get_network_counter
0x0019BA00	0x00000040	[ 90] _network_cleanup
0x0019BA40	0x00000190	[ 90] _mono_mem_counter
0x0019BBD0	0x00000120	[ 90] _get_process_counter
0x0019BCF0	0x00000120	[ 90] _get_cpu_counter
0x0019BE10	0x00000090	[ 90] _custom_writable_counter
0x0019BEA0	0x0000002E	[ 90] _custom_writable_update
0x0019BED0	0x00000330	[ 91] _ves_icall_System_Net_NetworkInformation_MacOsIPInterfaceProperties_ParseRouteInfo_internal
0x0019C200	0x00000032	[ 91] _gateway_from_rtm
0x0019C240	0x00000010	[ 92] _ves_icall_System_Security_Principal_WindowsIdentity_GetCurrentToken
0x0019C250	0x000000B0	[ 92] _ves_icall_System_Security_Principal_WindowsIdentity_GetTokenName
0x0019C300	0x00000080	[ 92] _GetTokenName
0x0019C380	0x00000090	[ 92] _ves_icall_System_Security_Principal_WindowsIdentity_GetUserToken
0x0019C410	0x00000060	[ 92] _ves_icall_System_Security_Principal_WindowsIdentity_GetRoles
0x0019C470	0x00000010	[ 92] _ves_icall_System_Security_Principal_WindowsImpersonationContext_CloseToken
0x0019C480	0x00000010	[ 92] _ves_icall_System_Security_Principal_WindowsImpersonationContext_DuplicateToken
0x0019C490	0x00000020	[ 92] _ves_icall_System_Security_Principal_WindowsImpersonationContext_SetCurrentToken
0x0019C4B0	0x00000020	[ 92] _ves_icall_System_Security_Principal_WindowsImpersonationContext_RevertToSelf
0x0019C4D0	0x00000090	[ 92] _ves_icall_System_Security_Principal_WindowsPrincipal_IsMemberOfGroupId
0x0019C560	0x00000100	[ 92] _IsMemberOf
0x0019C660	0x000000B0	[ 92] _ves_icall_System_Security_Principal_WindowsPrincipal_IsMemberOfGroupName
0x0019C710	0x00000010	[ 92] _ves_icall_Mono_Security_Cryptography_KeyPairPersistence_CanSecure
0x0019C720	0x00000060	[ 92] _ves_icall_Mono_Security_Cryptography_KeyPairPersistence_IsMachineProtected
0x0019C780	0x00000060	[ 92] _ves_icall_Mono_Security_Cryptography_KeyPairPersistence_IsUserProtected
0x0019C7E0	0x00000030	[ 92] _ves_icall_Mono_Security_Cryptography_KeyPairPersistence_ProtectMachine
0x0019C810	0x00000070	[ 92] _Protect
0x0019C880	0x00000030	[ 92] _ves_icall_Mono_Security_Cryptography_KeyPairPersistence_ProtectUser
0x0019C8B0	0x00000040	[ 92] _ves_icall_System_Security_Policy_Evidence_IsAuthenticodePresent
0x0019C8F0	0x00000030	[ 92] _ves_icall_System_Security_SecureString_DecryptInternal
0x0019C920	0x00000110	[ 92] _invoke_protected_memory_method
0x0019CA30	0x00000025	[ 92] _ves_icall_System_Security_SecureString_EncryptInternal
0x0019CA60	0x00000040	[ 93] _mono_wsq_init
0x0019CAA0	0x00000040	[ 93] _mono_wsq_cleanup
0x0019CAE0	0x00000130	[ 93] _mono_wsq_create
0x0019CC10	0x000000F0	[ 93] _mono_wsq_destroy
0x0019CD00	0x00000020	[ 93] _mono_wsq_suspend
0x0019CD20	0x00000020	[ 93] _mono_wsq_count
0x0019CD40	0x00000260	[ 93] _mono_wsq_local_push
0x0019CFA0	0x00000150	[ 93] _mono_wsq_local_pop
0x0019D0F0	0x000000E8	[ 93] _mono_wsq_try_steal
0x0019D1E0	0x000000D0	[ 94] _mono_runtime_object_init
0x0019D2B0	0x00000050	[ 94] _mono_object_unbox
0x0019D300	0x000000A0	[ 94] _mono_runtime_invoke
0x0019D3A0	0x00000060	[ 94] _mono_thread_set_main
0x0019D400	0x00000020	[ 94] _mono_thread_get_main
0x0019D420	0x000000D0	[ 94] _mono_type_initialization_init
0x0019D4F0	0x00000090	[ 94] _mono_type_initialization_cleanup
0x0019D580	0x00000020	[ 94] _mono_runtime_class_init
0x0019D5A0	0x00000630	[ 94] _mono_runtime_class_init_full
0x0019DBD0	0x00000020	[ 94] _mono_raise_exception
0x0019DBF0	0x00000AB0	[ 94] _mono_class_vtable_full
0x0019E6A0	0x000000F0	[ 94] _get_type_init_exception_for_vtable
0x0019E790	0x00000050	[ 94] _mono_release_type_locks
0x0019E7E0	0x00000060	[ 94] _release_type_locks
0x0019E840	0x00000050	[ 94] _mono_install_callbacks
0x0019E890	0x00000020	[ 94] _mono_get_runtime_callbacks
0x0019E8B0	0x00000020	[ 94] _mono_install_trampoline
0x0019E8D0	0x00000010	[ 94] _default_trampoline
0x0019E8E0	0x00000020	[ 94] _mono_install_jump_trampoline
0x0019E900	0x00000030	[ 94] _default_jump_trampoline
0x0019E930	0x00000020	[ 94] _mono_install_delegate_trampoline
0x0019E950	0x00000030	[ 94] _default_delegate_trampoline
0x0019E980	0x00000020	[ 94] _mono_install_imt_thunk_builder
0x0019E9A0	0x00000020	[ 94] _mono_install_compile_method
0x0019E9C0	0x00000050	[ 94] _mono_compile_method
0x0019EA10	0x00000020	[ 94] _mono_runtime_create_jump_trampoline
0x0019EA30	0x00000030	[ 94] _mono_runtime_create_delegate_trampoline
0x0019EA60	0x00000020	[ 94] _mono_install_free_method
0x0019EA80	0x00000050	[ 94] _mono_runtime_free_method
0x0019EAD0	0x00000040	[ 94] _mono_class_compute_bitmap
0x0019EB10	0x000003B0	[ 94] _compute_class_bitmap
0x0019EEC0	0x00000030	[ 94] _mono_string_alloc
0x0019EEF0	0x000000F0	[ 94] _mono_string_new_size
0x0019EFE0	0x000002E0	[ 94] _mono_class_compute_gc_descriptor
0x0019F2C0	0x00000020	[ 94] _mono_object_new_ptrfree
0x0019F2E0	0x00000020	[ 94] _mono_object_new_ptrfree_box
0x0019F300	0x00000020	[ 94] _mono_object_new_fast
0x0019F320	0x00000260	[ 94] _mono_method_get_imt_slot
0x0019F580	0x000000A0	[ 94] _mono_vtable_build_imt_slot
0x0019F620	0x00000390	[ 94] _build_imt_slots
0x0019F9B0	0x00000190	[ 94] _mono_method_alloc_generic_virtual_thunk
0x0019FB40	0x00000380	[ 94] _mono_method_add_generic_virtual_invocation
0x0019FEC0	0x000000C0	[ 94] _get_generic_virtual_entries
0x0019FF80	0x000000A0	[ 94] _imt_sort_slot_entries
0x001A0020	0x00000030	[ 94] _mono_class_vtable
0x001A0050	0x00000070	[ 94] _mono_class_try_get_vtable
0x001A00C0	0x00000070	[ 94] _mono_class_field_is_special_static
0x001A0130	0x000000E0	[ 94] _field_is_special_static
0x001A0210	0x00000060	[ 94] _mono_class_field_get_special_static_type
0x001A0270	0x000000E0	[ 94] _mono_class_has_special_static_fields
0x001A0350	0x00000220	[ 94] _mono_object_get_virtual_method
0x001A0570	0x00000060	[ 94] _mono_method_get_unmanaged_thunk
0x001A05D0	0x00000080	[ 94] _mono_field_set_value
0x001A0650	0x00000240	[ 94] _set_value
0x001A0890	0x00000100	[ 94] _mono_field_static_set_value
0x001A0990	0x00000020	[ 94] _mono_vtable_get_static_field_data
0x001A09B0	0x000000B0	[ 94] _mono_field_get_value
0x001A0A60	0x00000810	[ 94] _mono_field_get_value_object
0x001A1270	0x00000040	[ 94] _mono_field_static_get_value
0x001A12B0	0x00000210	[ 94] _mono_nullable_box
0x001A14C0	0x00000080	[ 94] _mono_object_new
0x001A1540	0x00000100	[ 94] _mono_get_constant_value_from_blob
0x001A1640	0x00000130	[ 94] _mono_ldstr_metadata_sig
0x001A1770	0x000000F0	[ 94] _mono_field_static_get_value_for_thread
0x001A1860	0x00000040	[ 94] _mono_property_set_value
0x001A18A0	0x00000040	[ 94] _mono_property_get_value
0x001A18E0	0x000001B0	[ 94] _mono_nullable_init
0x001A1A90	0x00000050	[ 94] _mono_get_delegate_invoke
0x001A1AE0	0x00000050	[ 94] _mono_get_delegate_begin_invoke
0x001A1B30	0x00000050	[ 94] _mono_get_delegate_end_invoke
0x001A1B80	0x000000A0	[ 94] _mono_runtime_delegate_invoke
0x001A1C20	0x000000F0	[ 94] _mono_runtime_get_main_args
0x001A1D10	0x00000080	[ 94] _mono_array_new
0x001A1D90	0x00000020	[ 94] _mono_array_addr_with_size
0x001A1DB0	0x000000D0	[ 94] _mono_string_new
0x001A1E80	0x000000F0	[ 94] _mono_runtime_set_main_args
0x001A1F70	0x00000390	[ 94] _mono_runtime_run_main
0x001A2300	0x00000210	[ 94] _mono_runtime_exec_main
0x001A2510	0x000001C0	[ 94] _mono_object_xdomain_representation
0x001A26D0	0x00000020	[ 94] _mono_runtime_unhandled_exception_policy_set
0x001A26F0	0x00000020	[ 94] _mono_runtime_unhandled_exception_policy_get
0x001A2710	0x00000120	[ 94] _mono_unhandled_exception
0x001A2830	0x00000160	[ 94] _mono_print_unhandled_exception
0x001A2990	0x000003E0	[ 94] _call_unhandled_exception_delegate
0x001A2D70	0x00000030	[ 94] _mono_runtime_exec_managed_code
0x001A2DA0	0x00000020	[ 94] _mono_install_runtime_invoke
0x001A2DC0	0x00000040	[ 94] _dummy_mono_runtime_invoke
0x001A2E00	0x000009A0	[ 94] _mono_runtime_invoke_array
0x001A37A0	0x00000010	[ 94] _mono_array_length
0x001A37B0	0x00000180	[ 94] _mono_value_box
0x001A3930	0x00000060	[ 94] _mono_object_new_specific
0x001A3990	0x00000050	[ 94] _mono_object_new_pinned
0x001A39E0	0x00000060	[ 94] _mono_object_new_alloc_specific
0x001A3A40	0x00000090	[ 94] _mono_class_get_allocation_ftn
0x001A3AD0	0x00000100	[ 94] _mono_object_new_from_token
0x001A3BD0	0x000000C0	[ 94] _mono_object_clone
0x001A3C90	0x00000020	[ 94] _mono_array_clone
0x001A3CB0	0x00000170	[ 94] _mono_array_full_copy
0x001A3E20	0x000000A0	[ 94] _mono_value_copy_array
0x001A3EC0	0x000002F0	[ 94] _mono_array_clone_in_domain
0x001A41B0	0x00000240	[ 94] _mono_array_new_full
0x001A43F0	0x00000050	[ 94] _mono_array_calc_byte_len
0x001A4440	0x000000A0	[ 94] _mono_array_new_specific
0x001A44E0	0x00000080	[ 94] _mono_string_new_utf16
0x001A4560	0x00000010	[ 94] _mono_string_chars
0x001A4570	0x000000E0	[ 94] _mono_string_new_utf32
0x001A4650	0x000000D0	[ 94] _mono_string_new_len
0x001A4720	0x00000030	[ 94] _mono_string_new_wrapper
0x001A4750	0x00000030	[ 94] _mono_value_copy
0x001A4780	0x00000010	[ 94] _mono_object_get_domain
0x001A4790	0x00000010	[ 94] _mono_object_get_class
0x001A47A0	0x00000070	[ 94] _mono_object_get_size
0x001A4810	0x00000010	[ 94] _mono_string_length
0x001A4820	0x00000060	[ 94] _mono_object_isinst
0x001A4880	0x00000090	[ 94] _mono_object_isinst_mbyref
0x001A4910	0x00000060	[ 94] _mono_object_castclass_mbyref
0x001A4970	0x00000020	[ 94] _mono_string_is_interned
0x001A4990	0x00000130	[ 94] _mono_string_is_interned_lookup
0x001A4AC0	0x00000020	[ 94] _mono_string_intern
0x001A4AE0	0x00000070	[ 94] _mono_ldstr
0x001A4B50	0x00000070	[ 94] _mono_string_to_utf8
0x001A4BC0	0x000000F0	[ 94] _mono_string_to_utf8_checked
0x001A4CB0	0x000000A0	[ 94] _mono_string_to_utf8_ignore
0x001A4D50	0x00000060	[ 94] _mono_string_to_utf8_image_ignore
0x001A4DB0	0x000000B0	[ 94] _mono_string_to_utf8_internal
0x001A4E60	0x00000030	[ 94] _mono_string_to_utf8_mp_ignore
0x001A4E90	0x00000060	[ 94] _mono_string_to_utf16
0x001A4EF0	0x00000060	[ 94] _mono_string_to_utf32
0x001A4F50	0x000000A0	[ 94] _mono_string_from_utf16
0x001A4FF0	0x00000100	[ 94] _mono_string_from_utf32
0x001A50F0	0x00000030	[ 94] _mono_string_to_utf8_image
0x001A5120	0x00000030	[ 94] _mono_string_to_utf8_mp
0x001A5150	0x00000040	[ 94] _mono_install_eh_callbacks
0x001A5190	0x00000020	[ 94] _mono_get_eh_callbacks
0x001A51B0	0x00000020	[ 94] _mono_raise_exception_with_context
0x001A51D0	0x000000E0	[ 94] _mono_wait_handle_new
0x001A52B0	0x00000180	[ 94] _mono_wait_handle_get_handle
0x001A5430	0x000001F0	[ 94] _mono_async_result_new
0x001A5620	0x00000360	[ 94] _mono_message_init
0x001A5980	0x000002C0	[ 94] _mono_message_invoke
0x001A5C40	0x00000100	[ 94] _mono_object_to_string
0x001A5D40	0x000000C0	[ 94] _mono_delegate_ctor_with_method
0x001A5E00	0x00000170	[ 94] _mono_delegate_ctor
0x001A5F70	0x00000020	[ 94] _mono_get_addr_from_ftnptr
0x001A5F90	0x000001E0	[ 94] _mono_method_call_message_new
0x001A6170	0x000001C0	[ 94] _mono_method_return_message_restore
0x001A6330	0x00000020	[ 94] _mono_create_ftnptr
0x001A6350	0x00000040	[ 94] _str_lookup
0x001A6390	0x00000030	[ 94] _compare_imt_builder_entries
0x001A63C0	0x00000110	[ 94] _imt_emit_ir
0x001A64D0	0x0000009D	[ 94] _initialize_imt_slot
0x001A6570	0x00000020	[ 95] _mono_opcode_name
0x001A6590	0x00000054	[ 95] _mono_opcode_value
0x001A65F0	0x00000030	[ 96] _ves_icall_System_Diagnostics_Process_GetProcess_internal
0x001A6620	0x00000010	[ 96] _ves_icall_System_Diagnostics_Process_GetPid_internal
0x001A6630	0x00000020	[ 96] _ves_icall_System_Diagnostics_Process_Process_free_internal
0x001A6650	0x00000540	[ 96] _ves_icall_System_Diagnostics_Process_GetModules_internal
0x001A6B90	0x000000A0	[ 96] _ves_icall_System_Diagnostics_FileVersionInfo_GetVersionInfo_internal
0x001A6C30	0x00000A80	[ 96] _process_get_fileversion
0x001A76B0	0x00000120	[ 96] _ves_icall_System_Diagnostics_Process_ShellExecuteEx_internal
0x001A77D0	0x00000530	[ 96] _ves_icall_System_Diagnostics_Process_CreateProcess_internal
0x001A7D00	0x00000050	[ 96] _ves_icall_System_Diagnostics_Process_WaitForExit_internal
0x001A7D50	0x00000040	[ 96] _ves_icall_System_Diagnostics_Process_WaitForInputIdle_internal
0x001A7D90	0x00000050	[ 96] _ves_icall_System_Diagnostics_Process_ExitTime_internal
0x001A7DE0	0x00000050	[ 96] _ves_icall_System_Diagnostics_Process_StartTime_internal
0x001A7E30	0x00000020	[ 96] _ves_icall_System_Diagnostics_Process_ExitCode_internal
0x001A7E50	0x000000B0	[ 96] _ves_icall_System_Diagnostics_Process_ProcessName_internal
0x001A7F00	0x000000A0	[ 96] _ves_icall_System_Diagnostics_Process_GetProcesses_internal
0x001A7FA0	0x00000040	[ 96] _ves_icall_System_Diagnostics_Process_GetWorkingSet_internal
0x001A7FE0	0x00000060	[ 96] _ves_icall_System_Diagnostics_Process_SetWorkingSet_internal
0x001A8040	0x00000030	[ 96] _ves_icall_System_Diagnostics_Process_Kill_internal
0x001A8070	0x00000070	[ 96] _ves_icall_System_Diagnostics_Process_Times
0x001A80E0	0x00000030	[ 96] _ves_icall_System_Diagnostics_Process_GetPriorityClass
0x001A8110	0x00000040	[ 96] _ves_icall_System_Diagnostics_Process_SetPriorityClass
0x001A8150	0x00000050	[ 96] _ves_icall_System_Diagnostics_Process_ProcessHandle_duplicate
0x001A81A0	0x00000010	[ 96] _ves_icall_System_Diagnostics_Process_ProcessHandle_close
0x001A81B0	0x00000040	[ 96] _ves_icall_System_Diagnostics_Process_GetProcessData
0x001A81F0	0x0000010A	[ 96] _process_module_string_read
0x001A8300	0x000000B0	[ 97] _mono_profiler_install
0x001A83B0	0x00000050	[ 97] _mono_profiler_set_events
0x001A8400	0x00000020	[ 97] _mono_profiler_get_events
0x001A8420	0x00000030	[ 97] _mono_profiler_install_enter_leave
0x001A8450	0x00000030	[ 97] _mono_profiler_install_jit_compile
0x001A8480	0x00000020	[ 97] _mono_profiler_install_jit_end
0x001A84A0	0x00000020	[ 97] _mono_profiler_install_method_free
0x001A84C0	0x00000030	[ 97] _mono_profiler_install_method_invoke
0x001A84F0	0x00000030	[ 97] _mono_profiler_install_thread
0x001A8520	0x00000020	[ 97] _mono_profiler_install_thread_name
0x001A8540	0x00000020	[ 97] _mono_profiler_install_transition
0x001A8560	0x00000020	[ 97] _mono_profiler_install_allocation
0x001A8580	0x00000020	[ 97] _mono_profiler_install_monitor
0x001A85A0	0x00000030	[ 97] _mono_profiler_set_statistical_mode
0x001A85D0	0x00000020	[ 97] _mono_profiler_install_statistical
0x001A85F0	0x00000020	[ 97] _mono_profiler_get_sampling_rate
0x001A8610	0x00000020	[ 97] _mono_profiler_get_sampling_mode
0x001A8630	0x00000050	[ 97] _mono_profiler_install_statistical_call_chain
0x001A8680	0x00000020	[ 97] _mono_profiler_stat_get_call_chain_depth
0x001A86A0	0x00000020	[ 97] _mono_profiler_stat_get_call_chain_strategy
0x001A86C0	0x00000040	[ 97] _mono_profiler_install_exception
0x001A8700	0x00000020	[ 97] _mono_profiler_install_coverage_filter
0x001A8720	0x00000050	[ 97] _mono_profiler_install_appdomain
0x001A8770	0x00000050	[ 97] _mono_profiler_install_assembly
0x001A87C0	0x00000050	[ 97] _mono_profiler_install_module
0x001A8810	0x00000050	[ 97] _mono_profiler_install_class
0x001A8860	0x00000050	[ 97] _mono_profiler_method_enter
0x001A88B0	0x00000050	[ 97] _mono_profiler_method_leave
0x001A8900	0x00000050	[ 97] _mono_profiler_method_jit
0x001A8950	0x00000070	[ 97] _mono_profiler_method_end_jit
0x001A89C0	0x00000050	[ 97] _mono_profiler_method_free
0x001A8A10	0x00000050	[ 97] _mono_profiler_method_start_invoke
0x001A8A60	0x00000050	[ 97] _mono_profiler_method_end_invoke
0x001A8AB0	0x00000050	[ 97] _mono_profiler_code_transition
0x001A8B00	0x00000050	[ 97] _mono_profiler_allocation
0x001A8B50	0x00000050	[ 97] _mono_profiler_monitor_event
0x001A8BA0	0x00000050	[ 97] _mono_profiler_stat_hit
0x001A8BF0	0x00000060	[ 97] _mono_profiler_stat_call_chain
0x001A8C50	0x00000050	[ 97] _mono_profiler_exception_thrown
0x001A8CA0	0x00000050	[ 97] _mono_profiler_exception_method_leave
0x001A8CF0	0x00000060	[ 97] _mono_profiler_exception_clause_handler
0x001A8D50	0x00000050	[ 97] _mono_profiler_thread_start
0x001A8DA0	0x00000050	[ 97] _mono_profiler_thread_end
0x001A8DF0	0x00000050	[ 97] _mono_profiler_thread_name
0x001A8E40	0x000000B0	[ 97] _mono_profiler_assembly_event
0x001A8EF0	0x00000050	[ 97] _mono_profiler_assembly_loaded
0x001A8F40	0x00000060	[ 97] _mono_profiler_iomap
0x001A8FA0	0x000000B0	[ 97] _mono_profiler_module_event
0x001A9050	0x00000050	[ 97] _mono_profiler_module_loaded
0x001A90A0	0x000000B0	[ 97] _mono_profiler_class_event
0x001A9150	0x00000050	[ 97] _mono_profiler_class_loaded
0x001A91A0	0x000000B0	[ 97] _mono_profiler_appdomain_event
0x001A9250	0x00000050	[ 97] _mono_profiler_appdomain_loaded
0x001A92A0	0x00000080	[ 97] _mono_profiler_shutdown
0x001A9320	0x00000050	[ 97] _mono_profiler_gc_heap_resize
0x001A9370	0x00000050	[ 97] _mono_profiler_gc_event
0x001A93C0	0x00000050	[ 97] _mono_profiler_gc_moves
0x001A9410	0x00000060	[ 97] _mono_profiler_gc_handle
0x001A9470	0x00000060	[ 97] _mono_profiler_gc_roots
0x001A94D0	0x00000040	[ 97] _mono_profiler_install_gc
0x001A9510	0x00000020	[ 97] _mono_profiler_install_gc_moves
0x001A9530	0x00000030	[ 97] _mono_profiler_install_gc_roots
0x001A9560	0x00000020	[ 97] _mono_profiler_install_runtime_initialized
0x001A9580	0x00000040	[ 97] _mono_profiler_runtime_initialized
0x001A95C0	0x00000020	[ 97] _mono_profiler_install_code_chunk_new
0x001A95E0	0x00000050	[ 97] _mono_profiler_code_chunk_new
0x001A9630	0x00000020	[ 97] _mono_profiler_install_code_chunk_destroy
0x001A9650	0x00000050	[ 97] _mono_profiler_code_chunk_destroy
0x001A96A0	0x00000020	[ 97] _mono_profiler_install_code_buffer_new
0x001A96C0	0x00000020	[ 97] _mono_profiler_install_iomap
0x001A96E0	0x00000060	[ 97] _mono_profiler_code_buffer_new
0x001A9740	0x000000F0	[ 97] _mono_profiler_coverage_alloc
0x001A9830	0x00000070	[ 97] _mono_profiler_coverage_free
0x001A98A0	0x00000160	[ 97] _mono_profiler_coverage_get
0x001A9A00	0x000003D0	[ 97] _mono_profiler_load
0x001A9DD0	0x000000C0	[ 97] _load_profiler_from_directory
0x001A9E90	0x00000090	[ 98] _ves_icall_System_Security_Cryptography_RNGCryptoServiceProvider_RngOpen
0x001A9F20	0x00000030	[ 98] _ves_icall_System_Security_Cryptography_RNGCryptoServiceProvider_RngInitialize
0x001A9F50	0x00000450	[ 98] _ves_icall_System_Security_Cryptography_RNGCryptoServiceProvider_RngGetBytes
0x001AA3A0	0x00000005	[ 98] _ves_icall_System_Security_Cryptography_RNGCryptoServiceProvider_RngClose
0x001AA3B0	0x00000010	[ 99] _mono_reflection_init
0x001AA3C0	0x00000020	[ 99] _mono_class_get_ref_info
0x001AA3E0	0x00000060	[ 99] _mono_class_set_ref_info
0x001AA440	0x00000030	[ 99] _mono_class_free_ref_info
0x001AA470	0x00000020	[ 99] _mono_custom_attrs_free
0x001AA490	0x00002D50	[ 99] _mono_image_build_metadata
0x001AD1E0	0x000000F0	[ 99] _string_heap_insert
0x001AD2D0	0x00000490	[ 99] _mono_image_get_method_info
0x001AD760	0x000005A0	[ 99] _mono_image_get_field_info
0x001ADD00	0x000000D0	[ 99] _collect_types
0x001ADDD0	0x00000030	[ 99] _compare_types_by_table_idx
0x001ADE00	0x00000250	[ 99] _mono_image_add_cattrs
0x001AE050	0x00000220	[ 99] _mono_image_add_decl_security
0x001AE270	0x000005A0	[ 99] _fixup_method
0x001AE810	0x000001D0	[ 99] _mono_image_add_methodimpl
0x001AE9E0	0x00000230	[ 99] _mono_image_insert_string
0x001AEC10	0x000001F0	[ 99] _mono_image_module_basic_init
0x001AEE00	0x000006E0	[ 99] _mono_image_create_method_token
0x001AF4E0	0x00000490	[ 99] _mono_reflection_type_get_handle
0x001AF970	0x00000240	[ 99] _method_encode_signature
0x001AFBB0	0x00000190	[ 99] _reflection_methodbuilder_from_method_builder
0x001AFD40	0x000004C0	[ 99] _method_builder_encode_signature
0x001B0200	0x00001FD0	[ 99] _mono_image_create_token
0x001B21D0	0x00000160	[ 99] _mono_image_get_fieldref_token
0x001B2330	0x00000230	[ 99] _mono_image_typedef_or_ref_full
0x001B2560	0x000002D0	[ 99] _mono_image_get_methodspec_token
0x001B2830	0x00000050	[ 99] _mono_image_register_token
0x001B2880	0x000000C0	[ 99] _mono_dynamic_image_release_gc_roots
0x001B2940	0x000002A0	[ 99] _mono_dynamic_image_free
0x001B2BE0	0x00000010	[ 99] _free_blob_cache_entry
0x001B2BF0	0x00000010	[ 99] _mono_dynamic_image_free_image
0x001B2C00	0x00000300	[ 99] _mono_image_basic_init
0x001B2F00	0x000008D0	[ 99] _create_dynamic_mono_image
0x001B37D0	0x00001E50	[ 99] _mono_image_create_pefile
0x001B5620	0x00000430	[ 99] _assembly_add_resource
0x001B5A50	0x00000070	[ 99] _fixup_resource_directory
0x001B5AC0	0x000001A0	[ 99] _mono_image_load_module_dynamic
0x001B5C60	0x00000310	[ 99] _mono_module_get_object
0x001B5F70	0x00000030	[ 99] _mono_reflection_cleanup_domain
0x001B5FA0	0x00000060	[ 99] _mono_image_set_wrappers_type
0x001B6000	0x000001B0	[ 99] _mono_assembly_get_object
0x001B61B0	0x00000020	[ 99] _reflected_hash
0x001B61D0	0x00000030	[ 99] _reflected_equal
0x001B6200	0x00000270	[ 99] _mono_module_file_get_object
0x001B6470	0x00000280	[ 99] _mono_type_get_object
0x001B66F0	0x000001E0	[ 99] _mono_type_normalize
0x001B68D0	0x00000430	[ 99] _mono_method_get_object
0x001B6D00	0x00000190	[ 99] _mono_method_clear_object
0x001B6E90	0x00000220	[ 99] _mono_field_get_object
0x001B70B0	0x000000B0	[ 99] _get_field_on_inst_generic_type
0x001B7160	0x00000160	[ 99] _mono_property_get_object
0x001B72C0	0x00000160	[ 99] _mono_event_get_object
0x001B7420	0x00000990	[ 99] _mono_param_get_objects_internal
0x001B7DB0	0x000000F0	[ 99] _get_reflection_missing
0x001B7EA0	0x00000090	[ 99] _mono_get_object_from_blob
0x001B7F30	0x00000200	[ 99] _mono_reflection_marshal_as_attribute_from_marshal_spec
0x001B8130	0x00000030	[ 99] _mono_param_get_objects
0x001B8160	0x00000680	[ 99] _mono_method_body_get_object
0x001B87E0	0x000000E0	[ 99] _mono_get_dbnull_object
0x001B88C0	0x00000030	[ 99] _mono_reflection_parse_type
0x001B88F0	0x000005F0	[ 99] __mono_reflection_parse_type
0x001B8EE0	0x00000030	[ 99] _mono_reflection_get_type
0x001B8F10	0x00000180	[ 99] _mono_reflection_get_type_with_rootimage
0x001B9090	0x00000080	[ 99] _mono_reflection_free_type_info
0x001B9110	0x00000090	[ 99] _mono_reflection_type_from_name
0x001B91A0	0x00000110	[ 99] __mono_reflection_get_type_from_info
0x001B92B0	0x00000410	[ 99] _mono_reflection_get_token
0x001B96C0	0x000001A0	[ 99] _mono_class_is_reflection_method_or_constructor
0x001B9860	0x00000670	[ 99] _mono_reflection_create_custom_attr_data_args
0x001B9ED0	0x00000AB0	[ 99] _load_cattr_value
0x001BA980	0x000003E0	[ 99] _mono_reflection_resolve_custom_attribute_data
0x001BAD60	0x00000100	[ 99] _create_cattr_typed_arg
0x001BAE60	0x00000090	[ 99] _mono_custom_attrs_construct
0x001BAEF0	0x00000A20	[ 99] _mono_custom_attrs_construct_by_type
0x001BB910	0x00000290	[ 99] _mono_custom_attrs_from_index
0x001BBBA0	0x00000090	[ 99] _mono_custom_attrs_from_method
0x001BBC30	0x000000A0	[ 99] _mono_custom_attrs_from_class
0x001BBCD0	0x00000060	[ 99] _mono_custom_attrs_from_assembly
0x001BBD30	0x000000B0	[ 99] _mono_custom_attrs_from_property
0x001BBDE0	0x000000B0	[ 99] _mono_custom_attrs_from_event
0x001BBE90	0x000000C0	[ 99] _mono_custom_attrs_from_field
0x001BBF50	0x00000150	[ 99] _mono_custom_attrs_from_param
0x001BC0A0	0x000000C0	[ 99] _mono_custom_attrs_has_attr
0x001BC160	0x000000A0	[ 99] _mono_custom_attrs_get_attr
0x001BC200	0x000000E0	[ 99] _mono_custom_attrs_get_attr_checked
0x001BC2E0	0x00000700	[ 99] _mono_reflection_get_custom_attrs_info
0x001BC9E0	0x00000460	[ 99] _mono_reflection_method_on_tb_inst_get_handle
0x001BCE40	0x000001D0	[ 99] _mono_custom_attrs_from_builders
0x001BD010	0x000000E0	[ 99] _mono_reflection_get_custom_attrs_by_type
0x001BD0F0	0x00000050	[ 99] _mono_reflection_get_custom_attrs
0x001BD140	0x00000210	[ 99] _mono_reflection_get_custom_attrs_data
0x001BD350	0x00000250	[ 99] _mono_reflection_bind_generic_parameters
0x001BD5A0	0x00000010	[ 99] _mono_reflection_create_unmanaged_type
0x001BD5B0	0x000000D0	[ 99] _mono_reflection_register_with_runtime
0x001BD680	0x000004C0	[ 99] _mono_reflection_get_custom_attrs_blob
0x001BDB40	0x000000E0	[ 99] _ctor_builder_to_signature
0x001BDC20	0x000006B0	[ 99] _encode_cattr_value
0x001BE2D0	0x00000140	[ 99] _encode_named_val
0x001BE410	0x00000460	[ 99] _mono_reflection_setup_internal_class
0x001BE870	0x00000100	[ 99] _mono_reflection_type_resolve_user_types
0x001BE970	0x00000010	[ 99] _mono_reflection_setup_generic_class
0x001BE980	0x00000200	[ 99] _mono_reflection_create_generic_class
0x001BEB80	0x000001A0	[ 99] _mono_reflection_create_internal_class
0x001BED20	0x00000080	[ 99] _mono_class_bind_generic_parameters
0x001BEDA0	0x00000250	[ 99] _mono_reflection_bind_generic_method_parameters
0x001BEFF0	0x00000180	[ 99] _methodbuilder_to_mono_method
0x001BF170	0x000004C0	[ 99] _mono_reflection_generic_class_initialize
0x001BF630	0x00000090	[ 99] _mono_reflection_free_dynamic_generic_class
0x001BF6C0	0x00000650	[ 99] _mono_reflection_get_dynamic_overrides
0x001BFD10	0x00000100	[ 99] _mono_reflection_event_builder_get_event_info
0x001BFE10	0x00000F60	[ 99] _mono_reflection_create_runtime_class
0x001C0D70	0x00000070	[ 99] _check_array_for_usertypes
0x001C0DE0	0x00000090	[ 99] _mono_save_custom_attrs
0x001C0E70	0x00000230	[ 99] _ensure_runtime_vtable
0x001C10A0	0x00000040	[ 99] _remove_instantiations_of_and_ensure_contents
0x001C10E0	0x00000210	[ 99] _mono_reflection_initialize_generic_parameter
0x001C12F0	0x000001F0	[ 99] _mono_reflection_sighelper_get_signature_local
0x001C14E0	0x00000190	[ 99] _mono_reflection_sighelper_get_signature_field
0x001C1670	0x000004B0	[ 99] _mono_reflection_create_dynamic_method
0x001C1B20	0x00000030	[ 99] _free_dynamic_method
0x001C1B50	0x00001130	[ 99] _resolve_object
0x001C2C80	0x00001070	[ 99] _reflection_methodbuilder_to_mono_method
0x001C3CF0	0x00000030	[ 99] _mono_reflection_is_valid_dynamic_token
0x001C3D20	0x00000080	[ 99] _mono_reflection_lookup_signature
0x001C3DA0	0x000000A0	[ 99] _mono_reflection_lookup_dynamic_token
0x001C3E40	0x00000040	[ 99] _mono_declsec_flags_from_method
0x001C3E80	0x000000F0	[ 99] _mono_declsec_get_flags
0x001C3F70	0x00000070	[ 99] _mono_declsec_flags_from_class
0x001C3FE0	0x00000020	[ 99] _mono_declsec_flags_from_assembly
0x001C4000	0x000001E0	[ 99] _mono_declsec_get_demands
0x001C41E0	0x000001D0	[ 99] _mono_declsec_get_linkdemands
0x001C43B0	0x00000110	[ 99] _mono_declsec_get_inheritdemands_class
0x001C44C0	0x000000E0	[ 99] _mono_declsec_get_inheritdemands_method
0x001C45A0	0x00000050	[ 99] _mono_declsec_get_method_action
0x001C45F0	0x000000E0	[ 99] _get_declsec_action
0x001C46D0	0x000000A0	[ 99] _mono_declsec_get_class_action
0x001C4770	0x00000030	[ 99] _mono_declsec_get_assembly_action
0x001C47A0	0x000001E0	[ 99] _mono_reflection_call_is_assignable_to
0x001C4980	0x00000050	[ 99] _mono_reflection_type_get_type
0x001C49D0	0x00000050	[ 99] _mono_reflection_assembly_get_assembly
0x001C4A20	0x000001B0	[ 99] _fill_actions_from_index
0x001C4BD0	0x000000B0	[ 99] _ensure_complete_type
0x001C4C80	0x000001A0	[ 99] _inflate_mono_method
0x001C4E20	0x00000270	[ 99] _encode_constant
0x001C5090	0x000001C0	[ 99] _add_to_blob_cached
0x001C5250	0x00000540	[ 99] _encode_type
0x001C5790	0x000001E0	[ 99] _encode_generic_class
0x001C5970	0x00000380	[ 99] _fix_partial_generic_class
0x001C5CF0	0x00000080	[ 99] _ctorbuilder_to_mono_method
0x001C5D70	0x000001C0	[ 99] _reflection_methodbuilder_from_ctor_builder
0x001C5F30	0x00000170	[ 99] _add_custom_modifiers
0x001C60A0	0x00000070	[ 99] _type_get_qualified_name
0x001C6110	0x00000100	[ 99] _encode_field_or_prop_type
0x001C6210	0x00000130	[ 99] _mono_reflection_get_type_internal_dynamic
0x001C6340	0x00000420	[ 99] _mono_reflection_get_type_internal
0x001C6760	0x00000540	[ 99] _assembly_name_to_aname
0x001C6CA0	0x000001A0	[ 99] _resource_tree_encode
0x001C6E40	0x00000050	[ 99] _resource_tree_free
0x001C6E90	0x00000010	[ 99] _resource_tree_compare_by_id
0x001C6EA0	0x00000050	[ 99] _compare_genericparam
0x001C6EF0	0x00000020	[ 99] _compare_constants
0x001C6F10	0x00000020	[ 99] _compare_semantics
0x001C6F30	0x00000010	[ 99] _compare_custom_attrs
0x001C6F40	0x00000010	[ 99] _compare_field_marshal
0x001C6F50	0x00000010	[ 99] _compare_nested
0x001C6F60	0x00000020	[ 99] _compare_declsecurity_attrs
0x001C6F80	0x00000020	[ 99] _compare_interface_impl
0x001C6FA0	0x00000110	[ 99] _assembly_add_resource_manifest
0x001C70B0	0x00000070	[ 99] _mono_blob_entry_hash
0x001C7120	0x00000060	[ 99] _mono_blob_entry_equal
0x001C7180	0x00000160	[ 99] _mono_image_add_memberef_row
0x001C72E0	0x000001F0	[ 99] _field_encode_signature
0x001C74D0	0x00000330	[ 99] _fieldref_encode_signature
0x001C7800	0x00000200	[ 99] _encode_custom_modifiers
0x001C7A00	0x00000250	[ 99] _create_typespec
0x001C7C50	0x00000190	[ 99] _encode_generic_method_sig
0x001C7DE0	0x000003B0	[ 99] _resolution_scope_from_image
0x001C8190	0x00000400	[ 99] _create_generic_typespec
0x001C8590	0x00000110	[ 99] _mono_image_get_methodref_token_for_methodbuilder
0x001C86A0	0x00000320	[ 99] _type_add_cattrs
0x001C89C0	0x000011F0	[ 99] _mono_image_basic_method
0x001C9BB0	0x00000670	[ 99] _encode_marshal_blob
0x001CA220	0x000002D0	[ 99] _mono_image_fill_file_table
0x001CA4F0	0x000000B0	[ 99] _mono_image_fill_export_table
0x001CA5A0	0x000001B0	[ 99] _add_exported_type
0x001CA750	0x00000173	[ 99] _mono_image_fill_export_table_from_class
0x001CA8D0	0x00000010	[100] _mono_remoting_init
0x001CA8E0	0x00000220	[100] _mono_marshal_xdomain_copy_value
0x001CAB00	0x000000EC	[100] _mono_get_xdomain_marshal_type
0x001CABF0	0x00000020	[101] _mono_runtime_set_shutting_down
0x001CAC10	0x00000020	[101] _mono_runtime_is_shutting_down
0x001CAC30	0x00000060	[101] _mono_runtime_try_shutdown
0x001CAC90	0x00000010	[101] _mono_runtime_is_critical_method
0x001CACA0	0x00000020	[101] _mono_runtime_init_tls
0x001CACC0	0x000000A8	[101] _fire_process_exit_event
0x001CAD70	0x00000020	[102] _mono_security_core_clr_set_options
0x001CAD90	0x00000020	[102] _mono_security_core_clr_get_options
0x001CADB0	0x00000020	[102] _mono_security_core_clr_determine_platform_image
0x001CADD0	0x00000020	[102] _mono_security_set_core_clr_platform_callback
0x001CADF0	0x00000020	[102] _mono_security_core_clr_is_platform_image
0x001CAE10	0x00000250	[102] _mono_security_core_clr_check_inheritance
0x001CB060	0x00000070	[102] _mono_security_core_clr_class_level
0x001CB0D0	0x000000B0	[102] _get_default_ctor
0x001CB180	0x000000C0	[102] _mono_security_core_clr_method_level
0x001CB240	0x000000F0	[102] _mono_security_core_clr_check_override
0x001CB330	0x000000D0	[102] _set_type_load_exception_methods
0x001CB400	0x00000060	[102] _mono_security_core_clr_require_elevated_permissions
0x001CB460	0x00000100	[102] _get_caller_of_elevated_trust_code
0x001CB560	0x00000250	[102] _mono_security_core_clr_ensure_reflection_access_field
0x001CB7B0	0x000000B0	[102] _check_field_access
0x001CB860	0x00000240	[102] _mono_security_core_clr_ensure_reflection_access_method
0x001CBAA0	0x00000320	[102] _mono_security_core_clr_ensure_delegate_creation
0x001CBDC0	0x00000280	[102] _mono_security_core_clr_ensure_dynamic_method_resolved_object
0x001CC040	0x00000060	[102] _mono_security_core_clr_can_access_internals
0x001CC0A0	0x00000120	[102] _mono_security_core_clr_is_field_access_allowed
0x001CC1C0	0x000000E0	[102] _mono_security_core_clr_is_call_allowed
0x001CC2A0	0x00000120	[102] _mono_security_core_clr_level_from_cinfo
0x001CC3C0	0x00000030	[102] _mono_security_enable_core_clr
0x001CC3F0	0x00000200	[102] _get_caller_no_reflection_related
0x001CC5F0	0x0000005C	[102] _default_platform_check
0x001CC650	0x00000020	[103] _mono_security_set_mode
0x001CC670	0x00000020	[103] _mono_security_get_mode
0x001CC690	0x00000020	[103] _mono_activate_security_manager
0x001CC6B0	0x00000020	[103] _mono_is_security_manager_active
0x001CC6D0	0x00000450	[103] _mono_security_manager_get_methods
0x001CCB20	0x000000F0	[103] _mono_secman_inheritancedemand_class
0x001CCC10	0x00000100	[103] _mono_secman_inheritancedemand_method
0x001CCD10	0x00000040	[103] _mono_is_ecma_key
0x001CCD50	0x00000090	[103] _mono_get_context_capture_method
0x001CCDE0	0x00000030	[103] _ves_icall_System_Security_SecurityManager_get_SecurityEnabled
0x001CCE10	0x00000020	[103] _ves_icall_System_Security_SecurityManager_set_SecurityEnabled
0x001CCE30	0x00000020	[103] _ves_icall_System_Security_SecurityManager_get_CheckExecutionRights
0x001CCE50	0x00000020	[103] _ves_icall_System_Security_SecurityManager_set_CheckExecutionRights
0x001CCE70	0x000000DF	[103] _ves_icall_System_Security_SecurityManager_GetLinkDemandSecurity
0x001CCF50	0x00000150	[104] _mono_gc_alloc_obj
0x001CD0A0	0x00000470	[104] _mono_gc_try_alloc_obj_nolock
0x001CD510	0x00000610	[104] _mono_gc_alloc_obj_nolock
0x001CDB20	0x000000B0	[104] _mono_gc_alloc_vector
0x001CDBD0	0x000000D0	[104] _mono_gc_alloc_array
0x001CDCA0	0x000000B0	[104] _mono_gc_alloc_string
0x001CDD50	0x000000E0	[104] _mono_gc_alloc_pinned_obj
0x001CDE30	0x000000C0	[104] _mono_gc_alloc_mature
0x001CDEF0	0x00000140	[104] _alloc_degraded
0x001CE030	0x00000060	[104] _mono_gc_alloc_fixed
0x001CE090	0x00000020	[104] _mono_gc_free_fixed
0x001CE0B0	0x00000040	[104] _sgen_init_tlab_info
0x001CE0F0	0x00000070	[104] _sgen_clear_tlabs
0x001CE160	0x00000010	[104] _mono_gc_get_aligned_size_for_allocator
0x001CE170	0x000000C0	[104] _mono_gc_get_managed_allocator
0x001CE230	0x00000DB0	[104] _mono_gc_get_managed_allocator_by_type
0x001CEFE0	0x00000090	[104] _mono_gc_get_managed_array_allocator
0x001CF070	0x00000020	[104] _sgen_set_use_managed_allocator
0x001CF090	0x00000010	[104] _mono_gc_get_managed_allocator_types
0x001CF0A0	0x00000040	[104] _sgen_is_managed_allocator
0x001CF0E0	0x00000037	[104] _sgen_has_managed_allocator
0x001CF120	0x00000050	[105] _mono_gc_wait_for_bridge_processing
0x001CF170	0x00000090	[105] _mono_gc_register_bridge_callbacks
0x001CF200	0x00000050	[105] _sgen_set_bridge_implementation
0x001CF250	0x000001A0	[105] _init_bridge_processor
0x001CF3F0	0x00000030	[105] _sgen_is_bridge_object
0x001CF420	0x00000020	[105] _sgen_need_bridge_processing
0x001CF440	0x00000030	[105] _sgen_bridge_reset_data
0x001CF470	0x00000040	[105] _sgen_bridge_processing_stw_step
0x001CF4B0	0x00000390	[105] _sgen_bridge_processing_finish
0x001CF840	0x00000020	[105] _sgen_bridge_class_kind
0x001CF860	0x00000040	[105] _sgen_bridge_register_finalized_object
0x001CF8A0	0x00000020	[105] _sgen_bridge_describe_pointer
0x001CF8C0	0x00000270	[105] _sgen_bridge_handle_gc_debug
0x001CFB30	0x000000B0	[105] _sgen_bridge_print_gc_debug_usage
0x001CFBE0	0x00000040	[105] _bridge_test_bridge_class_kind
0x001CFC20	0x00000010	[105] _bridge_test_is_bridge_object
0x001CFC30	0x00000330	[105] _bridge_test_cross_reference2
0x001CFF60	0x000000E0	[105] _bridge_test_cross_reference
0x001D0040	0x0000002B	[105] _is_bridge_object_alive
0x001D0070	0x00000060	[106] _sgen_card_table_get_card_data
0x001D00D0	0x00000010	[106] _sgen_card_table_align_pointer
0x001D00E0	0x00000060	[106] _sgen_card_table_mark_range
0x001D0140	0x00000100	[106] _sgen_card_table_update_mod_union_from_cards
0x001D0240	0x000001C0	[106] _sgen_card_table_update_mod_union
0x001D0400	0x00000030	[106] _mono_gc_get_card_table
0x001D0430	0x00000020	[106] _mono_gc_card_table_nursery_check
0x001D0450	0x00000400	[106] _sgen_cardtable_scan_object
0x001D0850	0x000000B0	[106] _sgen_par_object_get_size
0x001D0900	0x00000100	[106] _sgen_card_table_init
0x001D0A00	0x00000050	[106] _sgen_card_table_wbarrier_set_field
0x001D0A50	0x00000050	[106] _sgen_card_table_wbarrier_set_arrayref
0x001D0AA0	0x00000110	[106] _sgen_card_table_wbarrier_arrayref_copy
0x001D0BB0	0x000000B0	[106] _sgen_card_table_wbarrier_value_copy
0x001D0C60	0x000000B0	[106] _sgen_card_table_wbarrier_object_copy
0x001D0D10	0x00000020	[106] _sgen_card_table_wbarrier_generic_nostore
0x001D0D30	0x00000020	[106] _sgen_card_table_record_pointer
0x001D0D50	0x00000090	[106] _sgen_card_table_finish_scan_remsets
0x001D0DE0	0x00000010	[106] _sgen_card_table_finish_minor_collection
0x001D0DF0	0x00000030	[106] _sgen_card_table_prepare_for_major_collection
0x001D0E20	0x00000030	[106] _sgen_card_table_find_address
0x001D0E50	0x00000020	[106] _sgen_card_table_find_address_with_cards
0x001D0E70	0x00000053	[106] _clear_cards
0x001D0ED0	0x00000020	[107] _describe_ptr
0x001D0EF0	0x00000440	[107] _describe_pointer
0x001D1330	0x000000F0	[107] _sgen_check_consistency
0x001D1420	0x00000B40	[107] _check_consistency_callback
0x001D1F60	0x00000090	[107] _sgen_check_mod_union_consistency
0x001D1FF0	0x00000D90	[107] _check_mod_union_callback
0x001D2D80	0x00000050	[107] _sgen_check_major_refs
0x001D2DD0	0x000005B0	[107] _check_major_refs_callback
0x001D3380	0x00000440	[107] _check_object
0x001D37C0	0x00000120	[107] _sgen_check_whole_heap
0x001D38E0	0x00000E40	[107] _verify_object_pointers_callback
0x001D4720	0x00000080	[107] _sgen_check_objref
0x001D47A0	0x00000110	[107] _sgen_check_heap_marked
0x001D48B0	0x000008B0	[107] _check_marked_callback
0x001D5160	0x00000050	[107] _sgen_check_nursery_objects_pinned
0x001D51B0	0x000000C0	[107] _check_nursery_objects_pinned_callback
0x001D5270	0x00000130	[107] _mono_gc_scan_for_specific_ref
0x001D53A0	0x00000590	[107] _scan_object_for_specific_ref_callback
0x001D5930	0x00000220	[107] _scan_roots_for_specific_ref
0x001D5B50	0x00000210	[107] _sgen_scan_for_registered_roots_in_domain
0x001D5D60	0x00000050	[107] _check_obj_not_in_domain_callback
0x001D5DB0	0x000000A0	[107] _sgen_check_for_xdomain_refs
0x001D5E50	0x00000380	[107] _scan_object_for_xdomain_refs
0x001D61D0	0x00000650	[107] _sgen_compare_bridge_processor_results
0x001D6820	0x00000040	[107] _compare_xrefs
0x001D6860	0x00000320	[107] _check_reference_for_xdomain
0x001D6B80	0x00000040	[107] _check_root_obj_specific_ref_from_marker
0x001D6BC0	0x000000B0	[107] _sgen_par_object_get_size
0x001D6C70	0x000000F0	[107] _is_valid_object_pointer
0x001D6D60	0x00000028	[107] _setup_mono_sgen_scan_area_with_callback
0x001D6D90	0x00000020	[108] _sgen_get_complex_descriptor
0x001D6DB0	0x00000010	[108] _mono_gc_make_descr_for_string
0x001D6DC0	0x000000E0	[108] _mono_gc_make_descr_for_object
0x001D6EA0	0x000001B0	[108] _alloc_complex_descriptor
0x001D7050	0x000000F0	[108] _mono_gc_make_descr_for_array
0x001D7140	0x00000270	[108] _mono_gc_get_bitmap_for_descr
0x001D73B0	0x00000040	[108] _mono_gc_make_descr_from_bitmap
0x001D73F0	0x000000E0	[108] _mono_gc_make_root_descr_all_refs
0x001D74D0	0x00000070	[108] _mono_gc_make_root_descr_user
0x001D7540	0x00000020	[108] _sgen_get_complex_descriptor_bitmap
0x001D7560	0x00000020	[108] _sgen_get_user_descriptor_func
0x001D7580	0x00000005	[108] _sgen_init_descriptors
0x001D7590	0x00000080	[109] _sgen_mark_bridge_object
0x001D7610	0x00000240	[109] _sgen_collect_bridge_objects
0x001D7850	0x00000260	[109] _sgen_finalize_in_range
0x001D7AB0	0x000001F0	[109] _sgen_process_fin_stage_entries
0x001D7CA0	0x00000260	[109] _mono_gc_register_for_finalization
0x001D7F00	0x000001B0	[109] _add_stage_entry
0x001D80B0	0x000001E0	[109] _mono_gc_finalizers_for_domain
0x001D8290	0x00000250	[109] _sgen_null_link_in_range
0x001D84E0	0x00000120	[109] _sgen_null_links_for_domain
0x001D8600	0x00000110	[109] _sgen_null_links_with_predicate
0x001D8710	0x000000E0	[109] _sgen_remove_finalizers_for_domain
0x001D87F0	0x00000110	[109] _sgen_process_dislink_stage_entries
0x001D8900	0x000000A0	[109] _process_dislink_stage_entry
0x001D89A0	0x00000390	[109] _sgen_register_disappearing_link
0x001D8D30	0x00000010	[109] _sgen_init_fin_weak_hash
0x001D8D40	0x000000B0	[109] _sgen_par_object_get_size
0x001D8DF0	0x00000020	[109] _tagged_object_hash
0x001D8E10	0x00000019	[109] _tagged_object_equals
0x001D8E30	0x00000020	[110] _nursery_canaries_enabled
0x001D8E50	0x00000020	[110] _sgen_safe_name
0x001D8E70	0x00000220	[110] _sgen_scan_area_with_callback
0x001D9090	0x00000350	[110] _mono_gc_clear_domain
0x001D93E0	0x000007B0	[110] _sgen_perform_collection
0x001D9B90	0x00000050	[110] _clear_domain_process_minor_object_callback
0x001D9BE0	0x00000020	[110] _clear_domain_process_major_object_callback
0x001D9C00	0x000000B0	[110] _clear_domain_process_object
0x001D9CB0	0x00000030	[110] _clear_domain_free_major_non_pinned_object_callback
0x001D9CE0	0x00000030	[110] _clear_domain_free_major_pinned_object_callback
0x001D9D10	0x00000040	[110] _sgen_gc_unlock
0x001D9D50	0x000001A0	[110] _sgen_add_to_global_remset
0x001D9EF0	0x00000020	[110] _sgen_concurrent_collection_in_progress
0x001D9F10	0x000000C0	[110] _sgen_drain_gray_stack
0x001D9FD0	0x00000110	[110] _sgen_pin_object
0x001DA0E0	0x000000C0	[110] _sgen_parallel_pin_or_update
0x001DA1A0	0x000000D0	[110] _sgen_sort_addresses
0x001DA270	0x00000060	[110] _sgen_update_heap_boundaries
0x001DA2D0	0x00000030	[110] _mono_gc_get_nursery
0x001DA300	0x00000060	[110] _mono_gc_set_current_thread_appdomain
0x001DA360	0x00000020	[110] _mono_gc_precise_stack_mark_enabled
0x001DA380	0x00000020	[110] _mono_gc_get_logfile
0x001DA3A0	0x00000050	[110] _sgen_generation_name
0x001DA3F0	0x00000020	[110] _sgen_get_current_object_ops
0x001DA410	0x000000A0	[110] _sgen_check_section_scan_starts
0x001DA4B0	0x00000040	[110] _sgen_dump_occupied
0x001DA4F0	0x00000160	[110] _sgen_dump_section
0x001DA650	0x000000A0	[110] _sgen_register_moved_object
0x001DA6F0	0x00000020	[110] _sgen_set_pinned_from_failed_allocation
0x001DA710	0x00000060	[110] _sgen_collection_is_concurrent
0x001DA770	0x000000B0	[110] _sgen_ensure_free_space
0x001DA820	0x00000F10	[110] _collect_nursery
0x001DB730	0x000000E0	[110] _major_do_collection
0x001DB810	0x00000120	[110] _sgen_gc_is_object_ready_for_finalization
0x001DB930	0x00000130	[110] _sgen_queue_finalization_entry
0x001DBA60	0x00000120	[110] _sgen_object_is_live
0x001DBB80	0x000001E0	[110] _mono_gc_invoke_finalizers
0x001DBD60	0x00000030	[110] _mono_gc_pending_finalizers
0x001DBD90	0x00000040	[110] _mono_gc_register_root
0x001DBDD0	0x00000160	[110] _mono_gc_register_root_inner
0x001DBF30	0x00000030	[110] _mono_gc_register_root_wbarrier
0x001DBF60	0x000000D0	[110] _mono_gc_deregister_root
0x001DC030	0x00000020	[110] _sgen_get_current_collection_generation
0x001DC050	0x00000030	[110] _mono_gc_set_gc_callbacks
0x001DC080	0x00000020	[110] _mono_gc_get_gc_callbacks
0x001DC0A0	0x00000040	[110] _mono_gc_conservatively_scan_area
0x001DC0E0	0x00000120	[110] _conservatively_pin_objects_from
0x001DC200	0x00000040	[110] _mono_gc_scan_object
0x001DC240	0x00000020	[110] _mono_gc_register_thread
0x001DC260	0x000000A0	[110] _mono_gc_set_stack_end
0x001DC300	0x00000010	[110] _mono_gc_pthread_create
0x001DC310	0x00000010	[110] _mono_gc_pthread_join
0x001DC320	0x00000010	[110] _mono_gc_pthread_detach
0x001DC330	0x00000020	[110] _mono_gc_pthread_exit
0x001DC350	0x00000040	[110] _mono_gc_wbarrier_set_field
0x001DC390	0x00000040	[110] _mono_gc_wbarrier_set_arrayref
0x001DC3D0	0x00000060	[110] _mono_gc_wbarrier_arrayref_copy
0x001DC430	0x000000C0	[110] _find_object_for_ptr
0x001DC4F0	0x00000070	[110] _find_object_for_ptr_callback
0x001DC560	0x00000080	[110] _mono_gc_wbarrier_generic_nostore
0x001DC5E0	0x000000A0	[110] _mono_gc_wbarrier_generic_store
0x001DC680	0x000000B0	[110] _mono_gc_wbarrier_generic_store_atomic
0x001DC730	0x000000F0	[110] _mono_gc_wbarrier_value_copy_bitmap
0x001DC820	0x000000F0	[110] _mono_gc_wbarrier_value_copy
0x001DC910	0x00000080	[110] _mono_gc_wbarrier_object_copy
0x001DC990	0x000000A0	[110] _mono_gc_walk_heap
0x001DCA30	0x00000870	[110] _walk_references
0x001DD2A0	0x00000090	[110] _mono_gc_collect
0x001DD330	0x00000010	[110] _mono_gc_max_generation
0x001DD340	0x00000020	[110] _mono_gc_collection_count
0x001DD360	0x000000A0	[110] _mono_gc_get_used_size
0x001DD400	0x00000010	[110] _mono_gc_get_los_limit
0x001DD410	0x000001B0	[110] _mono_gc_set_string_length
0x001DD5C0	0x00000010	[110] _mono_gc_user_markers_supported
0x001DD5D0	0x00000010	[110] _mono_object_is_alive
0x001DD5E0	0x00000030	[110] _mono_gc_get_generation
0x001DD610	0x00000010	[110] _mono_gc_enable_events
0x001DD620	0x00000030	[110] _mono_gc_weak_link_add
0x001DD650	0x00000030	[110] _mono_gc_weak_link_remove
0x001DD680	0x00000060	[110] _mono_gc_weak_link_get
0x001DD6E0	0x000000A0	[110] _mono_gc_ephemeron_array_add
0x001DD780	0x00000030	[110] _mono_gc_set_allow_synchronous_major
0x001DD7B0	0x00000040	[110] _mono_gc_invoke_with_gc_lock
0x001DD7F0	0x00000060	[110] _mono_gc_is_gc_thread
0x001DD850	0x00000090	[110] _sgen_env_var_error
0x001DD8E0	0x00002030	[110] _mono_gc_base_init
0x001DF910	0x00000180	[110] _sgen_thread_register
0x001DFA90	0x00000030	[110] _sgen_thread_detach
0x001DFAC0	0x00000070	[110] _sgen_thread_unregister
0x001DFB30	0x00000080	[110] _sgen_thread_attach
0x001DFBB0	0x00000040	[110] _is_critical_method
0x001DFBF0	0x00000310	[110] _init_stats
0x001DFF00	0x00000020	[110] _mono_gc_get_gc_name
0x001DFF20	0x00000030	[110] _sgen_is_critical_method
0x001DFF50	0x00000030	[110] _sgen_has_critical_method
0x001DFF80	0x00000270	[110] _mono_gc_get_write_barrier
0x001E01F0	0x00000020	[110] _mono_gc_get_description
0x001E0210	0x00000010	[110] _mono_gc_set_desktop_mode
0x001E0220	0x00000010	[110] _mono_gc_is_moving
0x001E0230	0x00000010	[110] _mono_gc_is_disabled
0x001E0240	0x00000020	[110] _sgen_get_nursery_clear_policy
0x001E0260	0x000000E0	[110] _sgen_get_array_fill_vtable
0x001E0340	0x00000030	[110] _sgen_gc_lock
0x001E0370	0x00000020	[110] _sgen_major_collector_iterate_live_block_ranges
0x001E0390	0x00000030	[110] _sgen_major_collector_scan_card_table
0x001E03C0	0x00000020	[110] _sgen_get_major_collector
0x001E03E0	0x00000070	[110] _mono_gc_set_skip_thread
0x001E0450	0x00000020	[110] _sgen_get_remset
0x001E0470	0x00000060	[110] _mono_gc_get_vtable_bits
0x001E04D0	0x00000010	[110] _mono_gc_register_altstack
0x001E04E0	0x00000040	[110] _sgen_check_whole_heap_stw
0x001E0520	0x00000040	[110] _sgen_gc_event_moves
0x001E0560	0x00000030	[110] _sgen_timestamp
0x001E0590	0x00000070	[110] _mono_gc_register_finalizer_callbacks
0x001E0600	0x00000270	[110] _major_start_collection
0x001E0870	0x00000760	[110] _major_finish_collection
0x001E0FD0	0x00000970	[110] _major_copy_or_mark_from_roots
0x001E1940	0x00000180	[110] _check_nursery_is_clean
0x001E1AC0	0x00000AF0	[110] _finish_gray_stack
0x001E25B0	0x00000240	[110] _dump_heap
0x001E27F0	0x000001F0	[110] _dump_object
0x001E29E0	0x00000450	[110] _mark_ephemerons_in_range
0x001E2E30	0x000000D0	[110] _gray_queue_redirect
0x001E2F00	0x000000F0	[110] _pin_from_roots
0x001E2FF0	0x00000770	[110] _pin_objects_in_nursery
0x001E3760	0x00000210	[110] _job_scan_from_registered_roots
0x001E3970	0x00000060	[110] _job_scan_thread_data
0x001E39D0	0x000001E0	[110] _report_finalizer_roots
0x001E3BB0	0x00000050	[110] _job_scan_finalizer_entries
0x001E3C00	0x00000070	[110] _job_scan_major_mod_union_cardtable
0x001E3C70	0x00000070	[110] _job_scan_los_mod_union_cardtable
0x001E3CE0	0x00000190	[110] _scan_thread_data
0x001E3E70	0x00000020	[110] _single_arg_user_copy_or_mark
0x001E3E90	0x00000340	[110] _report_registered_roots_by_type
0x001E41D0	0x00000080	[110] _single_arg_report_root
0x001E4250	0x00000030	[110] _scan_nursery_objects_callback
0x001E4280	0x00000060	[110] _job_finish_remembered_set_scan
0x001E42E0	0x000000A1	[110] _sgen_par_object_get_size
0x001E4390	0x00000050	[111] _sgen_gray_object_alloc_queue_section
0x001E43E0	0x00000020	[111] _sgen_gray_object_free_queue_section
0x001E4400	0x00000080	[111] _sgen_gray_object_enqueue
0x001E4480	0x00000060	[111] _sgen_gray_object_dequeue
0x001E44E0	0x00000040	[111] _sgen_gray_object_dequeue_section
0x001E4520	0x00000040	[111] _sgen_gray_object_enqueue_section
0x001E4560	0x00000070	[111] _sgen_gray_object_queue_trim_free_list
0x001E45D0	0x000000A0	[111] _sgen_gray_object_queue_init
0x001E4670	0x000000C0	[111] _sgen_gray_object_queue_init_invalid
0x001E4730	0x00000030	[111] _invalid_prepare_func
0x001E4760	0x00000060	[111] _sgen_gray_queue_set_alloc_prepare
0x001E47C0	0x000000F0	[111] _sgen_gray_object_queue_init_with_alloc_prepare
0x001E48B0	0x00000070	[111] _sgen_gray_object_queue_deinit
0x001E4920	0x00000020	[111] _sgen_gray_object_queue_disable_alloc_prepare
0x001E4940	0x000000A0	[111] _sgen_section_gray_queue_init
0x001E49E0	0x00000020	[111] _sgen_section_gray_queue_is_empty
0x001E4A00	0x00000050	[111] _sgen_section_gray_queue_dequeue
0x001E4A50	0x00000040	[111] _sgen_section_gray_queue_enqueue
0x001E4A90	0x00000005	[111] _sgen_init_gray_queues
0x001E4AA0	0x00000070	[112] _sgen_hash_table_lookup
0x001E4B10	0x00000120	[112] _sgen_hash_table_replace
0x001E4C30	0x00000130	[112] _rehash_if_necessary
0x001E4D60	0x000000C0	[112] _sgen_hash_table_set_value
0x001E4E20	0x00000080	[112] _sgen_hash_table_set_key
0x001E4EA0	0x000000D0	[112] _sgen_hash_table_remove
0x001E4F70	0x000000E0	[112] _sgen_hash_table_clean
0x001E5050	0x00000005	[112] _sgen_init_hash_table
0x001E5060	0x00000140	[113] _sgen_register_fixed_internal_mem_type
0x001E51A0	0x00000140	[113] _sgen_alloc_internal_dynamic
0x001E52E0	0x000000B0	[113] _sgen_free_internal_dynamic
0x001E5390	0x00000090	[113] _sgen_alloc_internal
0x001E5420	0x00000090	[113] _sgen_free_internal
0x001E54B0	0x00000010	[113] _sgen_dump_internal_mem_usage
0x001E54C0	0x00000010	[113] _sgen_report_internal_mem_usage
0x001E54D0	0x0000017F	[113] _sgen_init_internal_allocator
0x001E5650	0x000001C0	[114] _sgen_los_free_object
0x001E5810	0x00000360	[114] _sgen_los_alloc_large_inner
0x001E5B70	0x000002B0	[114] _sgen_los_sweep
0x001E5E20	0x00000060	[114] _sgen_ptr_is_in_los
0x001E5E80	0x00000050	[114] _sgen_los_iterate_objects
0x001E5ED0	0x00000040	[114] _sgen_los_is_valid_object
0x001E5F10	0x00000110	[114] _mono_sgen_los_describe_pointer
0x001E6020	0x00000010	[114] _sgen_los_object_size
0x001E6030	0x00000010	[114] _sgen_los_object_is_pinned
0x001E6040	0x00000060	[114] _sgen_los_iterate_live_block_ranges
0x001E60A0	0x000000C0	[114] _sgen_los_scan_card_table
0x001E6160	0x000002F0	[114] _sgen_los_count_cards
0x001E6450	0x00000070	[114] _sgen_los_update_cardtable_mod_union
0x001E64C0	0x00000010	[114] _sgen_los_header_for_object
0x001E64D0	0x00000010	[114] _sgen_los_pin_object
0x001E64E0	0x00000010	[114] _sgen_los_unpin_object
0x001E64F0	0x00000104	[114] _get_from_size_list
0x001E6600	0x00000020	[115] _sgen_marksweep_init
0x001E6620	0x000006C0	[115] _sgen_marksweep_init_internal
0x001E6CE0	0x00000020	[115] _sgen_marksweep_conc_init
0x001E6D00	0x00000010	[115] _major_get_and_reset_num_major_objects_marked
0x001E6D10	0x00000050	[115] _major_alloc_heap
0x001E6D60	0x00000080	[115] _major_is_object_live
0x001E6DE0	0x00000080	[115] _major_alloc_small_pinned_obj
0x001E6E60	0x000000A0	[115] _major_alloc_degraded
0x001E6F00	0x00000030	[115] _major_alloc_object
0x001E6F30	0x00000020	[115] _free_pinned_object
0x001E6F50	0x00000180	[115] _major_iterate_objects
0x001E70D0	0x00000020	[115] _major_free_non_pinned_object
0x001E70F0	0x00000070	[115] _major_find_pin_queue_start_ends
0x001E7160	0x00000180	[115] _major_pin_objects
0x001E72E0	0x000000D0	[115] _pin_major_object
0x001E73B0	0x00000320	[115] _major_scan_card_table
0x001E76D0	0x00000060	[115] _major_iterate_live_block_ranges
0x001E7730	0x000000A0	[115] _update_cardtable_mod_union
0x001E77D0	0x00000030	[115] _major_get_cardtable_mod_union_for_object
0x001E7800	0x00000010	[115] _major_init_to_space
0x001E7810	0x00000010	[115] _major_sweep
0x001E7820	0x00000010	[115] _major_check_scan_starts
0x001E7830	0x00000380	[115] _major_dump_heap
0x001E7BB0	0x000000A0	[115] _major_get_used_size
0x001E7C50	0x00000020	[115] _major_start_nursery_collection
0x001E7C70	0x00000030	[115] _major_finish_nursery_collection
0x001E7CA0	0x000000C0	[115] _major_start_major_collection
0x001E7D60	0x00000010	[115] _major_finish_major_collection
0x001E7D70	0x00000470	[115] _major_have_computer_minor_collection_allowance
0x001E81E0	0x000000A0	[115] _major_ptr_is_in_non_pinned_space
0x001E8280	0x00000060	[115] _obj_is_from_pinned_alloc
0x001E82E0	0x00000030	[115] _major_report_pinned_memory_usage
0x001E8310	0x00000020	[115] _get_num_major_sections
0x001E8330	0x000000E0	[115] _major_handle_gc_param
0x001E8410	0x00000040	[115] _major_print_gc_param_usage
0x001E8450	0x00000020	[115] _post_param_init
0x001E8470	0x000000A0	[115] _major_is_valid_object
0x001E8510	0x00000200	[115] _major_describe_pointer
0x001E8710	0x000003D0	[115] _major_count_cards
0x001E8AE0	0x00000360	[115] _major_copy_or_mark_object_canonical
0x001E8E40	0x00001CB0	[115] _major_scan_object_with_evacuation
0x001EAAF0	0x00000020	[115] _major_copy_or_mark_object_concurrent_canonical
0x001EAB10	0x00000830	[115] _major_scan_object_no_mark_concurrent
0x001EB340	0x000006C0	[115] _major_scan_vtype_concurrent
0x001EBA00	0x00001C30	[115] _drain_gray_stack
0x001ED630	0x00000240	[115] _copy_object_no_checks
0x001ED870	0x000000B0	[115] _sgen_par_object_get_size
0x001ED920	0x000001B0	[115] _major_copy_or_mark_object_with_evacuation_concurrent
0x001EDAD0	0x00000020	[115] _compare_pointers
0x001EDAF0	0x00000200	[115] _sweep_block
0x001EDCF0	0x000015F0	[115] _ms_sweep
0x001EF2E0	0x00000100	[115] _free_object
0x001EF3E0	0x00000468	[115] _alloc_obj
0x001EF850	0x00000070	[116] _sgen_need_major_collection
0x001EF8C0	0x00000010	[116] _sgen_memgov_minor_collection_start
0x001EF8D0	0x00000210	[116] _sgen_memgov_try_calculate_minor_collection_allowance
0x001EFAE0	0x00000010	[116] _sgen_memgov_minor_collection_end
0x001EFAF0	0x00000040	[116] _sgen_memgov_major_collection_start
0x001EFB30	0x00000040	[116] _sgen_memgov_major_collection_end
0x001EFB70	0x00000040	[116] _sgen_memgov_collection_start
0x001EFBB0	0x00000280	[116] _sgen_memgov_collection_end
0x001EFE30	0x00000020	[116] _sgen_register_major_sections_alloced
0x001EFE50	0x00000020	[116] _sgen_get_minor_collection_allowance
0x001EFE70	0x00000040	[116] _mono_gc_add_memory_pressure
0x001EFEB0	0x00000060	[116] _sgen_assert_memory_alloc
0x001EFF10	0x00000100	[116] _sgen_alloc_os_memory
0x001F0010	0x00000100	[116] _sgen_alloc_os_memory_aligned
0x001F0110	0x000000B0	[116] _sgen_free_os_memory
0x001F01C0	0x00000020	[116] _mono_gc_get_heap_size
0x001F01E0	0x00000030	[116] _sgen_memgov_release_space
0x001F0210	0x000000B0	[116] _sgen_memgov_try_alloc_space
0x001F02C0	0x0000016C	[116] _sgen_memgov_init
0x001F0430	0x00000070	[117] _sgen_new_bridge_init
0x001F04A0	0x00000050	[117] _reset_data
0x001F04F0	0x00001E70	[117] _processing_stw_step
0x001F2360	0x00001190	[117] _processing_build_callback_data
0x001F34F0	0x00000280	[117] _processing_after_callback
0x001F3770	0x00000070	[117] _class_kind
0x001F37E0	0x00000120	[117] _register_finalized_object
0x001F3900	0x00000100	[117] _describe_pointer
0x001F3A00	0x00000060	[117] _enable_accounting
0x001F3A60	0x00000030	[117] _set_dump_prefix
0x001F3A90	0x000000E0	[117] _dyn_array_ensure_capacity
0x001F3B70	0x000000B0	[117] _sgen_par_object_get_size
0x001F3C20	0x000000D0	[117] _rec_hash_entries
0x001F3CF0	0x00000400	[117] _dump_graph
0x001F40F0	0x00000072	[117] _object_needs_expansion
0x001F4170	0x00000040	[118] _sgen_fragment_allocator_alloc
0x001F41B0	0x000000A0	[118] _sgen_fragment_allocator_add
0x001F4250	0x00000050	[118] _sgen_fragment_allocator_release
0x001F42A0	0x00000060	[118] _sgen_fragment_allocator_par_alloc
0x001F4300	0x00000150	[118] _par_alloc_from_fragment
0x001F4450	0x00000080	[118] _sgen_fragment_allocator_serial_alloc
0x001F44D0	0x00000100	[118] _sgen_fragment_allocator_serial_range_alloc
0x001F45D0	0x00000090	[118] _sgen_fragment_allocator_par_range_alloc
0x001F4660	0x00000030	[118] _sgen_clear_allocator_fragments
0x001F4690	0x00000130	[118] _sgen_clear_range
0x001F47C0	0x00000070	[118] _sgen_clear_nursery_fragments
0x001F4830	0x00000050	[118] _sgen_nursery_allocator_prepare_for_pinning
0x001F4880	0x000002A0	[118] _sgen_build_nursery_fragments
0x001F4B20	0x00000110	[118] _add_nursery_frag
0x001F4C30	0x00000020	[118] _sgen_nursery_alloc_get_upper_alloc_bound
0x001F4C50	0x00000010	[118] _sgen_nursery_retire_region
0x001F4C60	0x00000050	[118] _sgen_can_alloc_size
0x001F4CB0	0x000000B0	[118] _sgen_nursery_alloc
0x001F4D60	0x00000040	[118] _sgen_nursery_alloc_range
0x001F4DA0	0x00000020	[118] _sgen_init_nursery_allocator
0x001F4DC0	0x00000040	[118] _sgen_nursery_alloc_prepare_for_minor
0x001F4E00	0x00000040	[118] _sgen_nursery_alloc_prepare_for_major
0x001F4E40	0x00000080	[118] _sgen_nursery_allocator_set_nursery_bounds
0x001F4EC0	0x000000A1	[118] _sgen_par_object_get_size
0x001F4F70	0x00000060	[119] _sgen_old_bridge_init
0x001F4FD0	0x00000020	[119] _reset_data
0x001F4FF0	0x00000D30	[119] _processing_stw_step
0x001F5D20	0x00000D80	[119] _processing_build_callback_data
0x001F6AA0	0x00000270	[119] _processing_after_callback
0x001F6D10	0x00000020	[119] _class_kind
0x001F6D30	0x00000060	[119] _register_finalized_object
0x001F6D90	0x000000B0	[119] _describe_pointer
0x001F6E40	0x00000060	[119] _enable_accounting
0x001F6EA0	0x000000B0	[119] _dyn_array_add
0x001F6F50	0x000000B0	[119] _sgen_par_object_get_size
0x001F7000	0x000000A0	[119] _dyn_array_int_ensure_capacity
0x001F70A0	0x000000D8	[119] _rec_hash_entries
0x001F7180	0x00000030	[120] _sgen_resume_thread
0x001F71B0	0x00000230	[120] _sgen_suspend_thread
0x001F73E0	0x00000010	[120] _sgen_wait_for_suspend_ack
0x001F73F0	0x000000F0	[120] _sgen_thread_handshake
0x001F74E0	0x00000010	[120] _sgen_os_init
0x001F74F0	0x00000010	[120] _mono_gc_get_suspend_signal
0x001F7500	0x0000000A	[120] _mono_gc_get_restart_signal
0x001F7510	0x00000080	[121] _sgen_pin_stats_reset
0x001F7590	0x00000040	[121] _pin_stats_tree_free
0x001F75D0	0x00000090	[121] _sgen_pin_stats_register_address
0x001F7660	0x00000120	[121] _sgen_pin_stats_register_object
0x001F7780	0x000000E0	[121] _pin_stats_count_object_from_tree
0x001F7860	0x000000A0	[121] _sgen_pin_stats_register_global_remset
0x001F7900	0x00000180	[121] _sgen_pin_stats_print_class_stats
0x001F7A80	0x00000020	[121] _sgen_pin_stats_get_pinned_byte_count
0x001F7AA0	0x00000011	[121] _sgen_pin_stats_get_object_list
0x001F7AC0	0x00000040	[122] _sgen_init_pinning
0x001F7B00	0x00000030	[122] _sgen_finish_pinning
0x001F7B30	0x00000050	[122] _sgen_pin_stage_ptr
0x001F7B80	0x000000A0	[122] _sgen_find_optimized_pin_queue_area
0x001F7C20	0x00000060	[122] _sgen_pinning_get_entry
0x001F7C80	0x00000090	[122] _sgen_find_section_pin_queue_start_end
0x001F7D10	0x00000020	[122] _sgen_pinning_setup_section
0x001F7D30	0x00000060	[122] _sgen_pinning_trim_queue_to_section
0x001F7D90	0x000000B0	[122] _sgen_pin_queue_clear_discarded_entries
0x001F7E40	0x00000020	[122] _sgen_optimize_pin_queue
0x001F7E60	0x00000020	[122] _sgen_get_pinned_count
0x001F7E80	0x00000010	[122] _sgen_dump_pin_queue
0x001F7E90	0x00000020	[122] _sgen_cement_init
0x001F7EB0	0x00000070	[122] _sgen_cement_reset
0x001F7F20	0x00000070	[122] _sgen_cement_concurrent_start
0x001F7F90	0x00000070	[122] _sgen_cement_concurrent_finish
0x001F8000	0x000000B0	[122] _sgen_cement_lookup
0x001F80B0	0x000001B0	[122] _sgen_cement_lookup_or_register
0x001F8260	0x00000110	[122] _sgen_pin_cemented_objects
0x001F8370	0x00000060	[122] _sgen_cement_clear_below_threshold
0x001F83D0	0x000000A1	[122] _sgen_par_object_get_size
0x001F8480	0x00000010	[123] _sgen_pointer_queue_clear
0x001F8490	0x00000030	[123] _sgen_pointer_queue_init
0x001F84C0	0x000000A0	[123] _sgen_pointer_queue_add
0x001F8560	0x00000060	[123] _sgen_pointer_queue_pop
0x001F85C0	0x00000090	[123] _sgen_pointer_queue_search
0x001F8650	0x00000040	[123] _sgen_pointer_queue_remove_nulls
0x001F8690	0x00000080	[123] _sgen_pointer_queue_sort_uniq
0x001F8710	0x00000040	[123] _sgen_pointer_queue_find
0x001F8750	0x00000020	[123] _sgen_pointer_queue_is_empty
0x001F8770	0x00000029	[123] _sgen_pointer_queue_free
0x001F87A0	0x00000070	[124] _binary_protocol_init
0x001F8810	0x00000130	[124] _binary_protocol_open_file
0x001F8940	0x00000020	[124] _binary_protocol_is_enabled
0x001F8960	0x00000480	[124] _binary_protocol_flush_buffers
0x001F8DE0	0x00000030	[124] _binary_protocol_collection_force
0x001F8E10	0x000001A0	[124] _protocol_entry
0x001F8FB0	0x00000040	[124] _binary_protocol_collection_begin
0x001F8FF0	0x00000060	[124] _binary_protocol_collection_end
0x001F9050	0x00000020	[124] _binary_protocol_concurrent_start
0x001F9070	0x00000020	[124] _binary_protocol_concurrent_update
0x001F9090	0x00000020	[124] _binary_protocol_concurrent_finish
0x001F90B0	0x00000030	[124] _binary_protocol_world_stopping
0x001F90E0	0x00000060	[124] _binary_protocol_world_stopped
0x001F9140	0x00000070	[124] _binary_protocol_world_restarting
0x001F91B0	0x00000040	[124] _binary_protocol_world_restarted
0x001F91F0	0x00000030	[124] _binary_protocol_thread_suspend
0x001F9220	0x00000030	[124] _binary_protocol_thread_restart
0x001F9250	0x00000030	[124] _binary_protocol_thread_register
0x001F9280	0x00000030	[124] _binary_protocol_thread_unregister
0x001F92B0	0x00000050	[124] _binary_protocol_missing_remset
0x001F9300	0x00000040	[124] _binary_protocol_cement
0x001F9340	0x00000020	[124] _binary_protocol_cement_reset
0x001F9360	0x00000030	[124] _binary_protocol_domain_unload_begin
0x001F9390	0x00000025	[124] _binary_protocol_domain_unload_end
0x001F93C0	0x00000070	[125] _sgen_qsort
0x001F9430	0x000001DE	[125] _qsort_rec
0x001F9610	0x00000070	[126] _sgen_simple_nursery_init
0x001F9680	0x00000030	[126] _alloc_for_promotion
0x001F96B0	0x00000010	[126] _prepare_to_space
0x001F96C0	0x00000010	[126] _clear_fragments
0x001F96D0	0x00000010	[126] _build_fragments_get_exclude_head
0x001F96E0	0x00000010	[126] _build_fragments_release_exclude_head
0x001F96F0	0x00000010	[126] _build_fragments_finish
0x001F9700	0x00000010	[126] _init_nursery
0x001F9710	0x00000060	[126] _simple_nursery_serial_copy_object
0x001F9770	0x00000870	[126] _simple_nursery_serial_scan_object
0x001F9FE0	0x000006F0	[126] _simple_nursery_serial_scan_vtype
0x001FA6D0	0x000001C0	[126] _copy_object_no_checks
0x001FA890	0x000000A1	[126] _sgen_par_object_get_size
0x001FA940	0x00000080	[127] _sgen_split_nursery_init
0x001FA9C0	0x00000180	[127] _minor_alloc_for_promotion
0x001FAB40	0x000002B0	[127] _prepare_to_space
0x001FADF0	0x00000020	[127] _clear_fragments
0x001FAE10	0x00000050	[127] _build_fragments_get_exclude_head
0x001FAE60	0x00000020	[127] _build_fragments_release_exclude_head
0x001FAE80	0x00000160	[127] _build_fragments_finish
0x001FAFE0	0x00000080	[127] _init_nursery
0x001FB060	0x00000120	[127] _handle_gc_param
0x001FB180	0x00000040	[127] _print_gc_param_usage
0x001FB1C0	0x000000C0	[127] _split_nursery_serial_copy_object
0x001FB280	0x00000C90	[127] _split_nursery_serial_scan_object
0x001FBF10	0x00000A70	[127] _split_nursery_serial_scan_vtype
0x001FC980	0x00000300	[127] _copy_object_no_checks
0x001FCC80	0x000000A1	[127] _sgen_par_object_get_size
0x001FCD30	0x00000550	[128] _sgen_stop_world
0x001FD280	0x000002B0	[128] _sgen_restart_world
0x001FD530	0x00000053	[128] _sgen_init_stw
0x001FD590	0x00000080	[129] _sgen_tarjan_bridge_init
0x001FD610	0x00000020	[129] _reset_data
0x001FD630	0x00000C40	[129] _processing_stw_step
0x001FE270	0x00000420	[129] _processing_build_callback_data
0x001FE690	0x00000300	[129] _processing_after_callback
0x001FE990	0x00000070	[129] _class_kind
0x001FEA00	0x00000080	[129] _register_finalized_object
0x001FEA80	0x00000060	[129] _describe_pointer
0x001FEAE0	0x00000010	[129] _enable_accounting
0x001FEAF0	0x000000A0	[129] _dyn_array_ensure_capacity
0x001FEB90	0x000000A0	[129] _gather_xrefs
0x001FEC30	0x00000040	[129] _reset_xrefs
0x001FEC70	0x00000400	[129] _new_color
0x001FF070	0x000000F0	[129] _compute_low_index
0x001FF160	0x00000187	[129] _push_object
0x001FF2F0	0x00000120	[130] _sgen_process_togglerefs
0x001FF410	0x00000080	[130] _sgen_mark_togglerefs
0x001FF490	0x000000B0	[130] _sgen_clear_togglerefs
0x001FF540	0x00000130	[130] _mono_gc_toggleref_add
0x001FF670	0x00000020	[130] _mono_gc_toggleref_register_callback
0x001FF690	0x00000020	[130] _sgen_register_test_toggleref_callback
0x001FF6B0	0x000000A2	[130] _test_toggleref_callback
0x001FF760	0x00000070	[131] _sgen_workers_ensure_awake
0x001FF7D0	0x000000B0	[131] _sgen_workers_enqueue_job
0x001FF880	0x00000050	[131] _sgen_workers_wait_for_jobs_finished
0x001FF8D0	0x00000180	[131] _sgen_workers_signal_start_nursery_collection_and_wait
0x001FFA50	0x000000C0	[131] _assert_not_working
0x001FFB10	0x00000140	[131] _assert_nursery_collection
0x001FFC50	0x00000070	[131] _sgen_workers_signal_finish_nursery_collection
0x001FFCC0	0x000000E0	[131] _workers_signal_enqueue_work
0x001FFDA0	0x00000030	[131] _sgen_workers_init_distribute_gray_queue
0x001FFDD0	0x000000E0	[131] _init_distribute_gray_queue
0x001FFEB0	0x00000210	[131] _sgen_workers_init
0x002000C0	0x000001E0	[131] _sgen_workers_start_all_workers
0x002002A0	0x00000020	[131] _sgen_workers_have_started
0x002002C0	0x00000270	[131] _sgen_workers_join
0x00200530	0x00000020	[131] _sgen_workers_all_done
0x00200550	0x00000030	[131] _sgen_workers_are_working
0x00200580	0x00000070	[131] _sgen_is_worker_thread
0x002005F0	0x00000020	[131] _sgen_workers_get_distribute_section_gray_queue
0x00200610	0x00000040	[131] _sgen_workers_reset_data
0x00200650	0x000003F0	[131] _workers_thread_func
0x00200A40	0x000002E0	[131] _workers_wait
0x00200D20	0x00000120	[131] _workers_gray_queue_share_redirect
0x00200E40	0x00000190	[131] _workers_steal
0x00200FD0	0x000000BD	[131] _concurrent_enqueue_check
0x00201090	0x00000220	[132] _ves_icall_System_Net_Sockets_Socket_Socket_internal
0x002012B0	0x00000030	[132] _ves_icall_System_Net_Sockets_Socket_Close_internal
0x002012E0	0x00000010	[132] _ves_icall_System_Net_Sockets_SocketException_WSAGetLastError_internal
0x002012F0	0x00000050	[132] _ves_icall_System_Net_Sockets_Socket_Available_internal
0x00201340	0x00000050	[132] _ves_icall_System_Net_Sockets_Socket_Blocking_internal
0x00201390	0x00000040	[132] _ves_icall_System_Net_Sockets_Socket_Accept_internal
0x002013D0	0x00000040	[132] _ves_icall_System_Net_Sockets_Socket_Listen_internal
0x00201410	0x00000190	[132] _ves_icall_System_Net_Sockets_Socket_LocalEndPoint_internal
0x002015A0	0x000006C0	[132] _create_object_from_sockaddr
0x00201C60	0x00000190	[132] _ves_icall_System_Net_Sockets_Socket_RemoteEndPoint_internal
0x00201DF0	0x00000060	[132] _ves_icall_System_Net_Sockets_Socket_Bind_internal
0x00201E50	0x00000460	[132] _create_sockaddr_from_object
0x002022B0	0x00000190	[132] _ves_icall_System_Net_Sockets_Socket_Poll_internal
0x00202440	0x00000060	[132] _ves_icall_System_Net_Sockets_Socket_Connect_internal
0x002024A0	0x000001A0	[132] _ves_icall_System_Net_Sockets_Socket_Disconnect_internal
0x00202640	0x000000A0	[132] _ves_icall_System_Net_Sockets_Socket_Receive_internal
0x002026E0	0x000000C0	[132] _ves_icall_System_Net_Sockets_Socket_Receive_array_internal
0x002027A0	0x000000F0	[132] _ves_icall_System_Net_Sockets_Socket_RecvFrom_internal
0x00202890	0x000000A0	[132] _ves_icall_System_Net_Sockets_Socket_Send_internal
0x00202930	0x000000B0	[132] _ves_icall_System_Net_Sockets_Socket_Send_array_internal
0x002029E0	0x000000D0	[132] _ves_icall_System_Net_Sockets_Socket_SendTo_internal
0x00202AB0	0x00000410	[132] _ves_icall_System_Net_Sockets_Socket_Select_internal
0x00202EC0	0x00000230	[132] _ves_icall_System_Net_Sockets_Socket_GetSocketOption_obj_internal
0x002030F0	0x00000480	[132] _convert_sockopt_level_and_name
0x00203570	0x00000080	[132] _get_socket_assembly
0x002035F0	0x000000B0	[132] _ves_icall_System_Net_Sockets_Socket_GetSocketOption_arr_internal
0x002036A0	0x000005A0	[132] _ves_icall_System_Net_Sockets_Socket_SetSocketOption_internal
0x00203C40	0x00000040	[132] _ves_icall_System_Net_Sockets_Socket_Shutdown_internal
0x00203C80	0x00000110	[132] _ves_icall_System_Net_Sockets_Socket_WSAIoctl
0x00203D90	0x00000140	[132] _ves_icall_System_Net_Dns_GetHostByName_internal
0x00203ED0	0x000001A0	[132] _get_addrinfo_family_hint
0x00204070	0x00000470	[132] _addrinfo_to_IPHostEntry
0x002044E0	0x000001C0	[132] _ves_icall_System_Net_Dns_GetHostByAddr_internal
0x002046A0	0x00000070	[132] _ves_icall_System_Net_Dns_GetHostName_internal
0x00204710	0x00000120	[132] _ves_icall_System_Net_Sockets_Socket_SendFile
0x00204830	0x00000010	[132] _mono_network_init
0x00204840	0x00000020	[132] _mono_network_cleanup
0x00204860	0x00000044	[132] _icall_cancel_blocking_socket_operation
0x002048B0	0x00000030	[133] _ves_icall_System_String_ctor_RedirectToCreateString
0x002048E0	0x00000030	[133] _ves_icall_System_String_InternalAllocateStr
0x00204910	0x00000030	[133] _ves_icall_System_String_InternalIntern
0x00204940	0x00000010	[133] _ves_icall_System_String_InternalIsInterned
0x00204950	0x00000020	[133] _ves_icall_System_String_GetLOSLimit
0x00204970	0x00000009	[133] _ves_icall_System_String_InternalSetLength
0x00204980	0x00000010	[134] _ves_icall_System_Math_Floor
0x00204990	0x000000C0	[134] _ves_icall_System_Math_Round
0x00204A50	0x000000B0	[134] _ves_icall_System_Math_Round2
0x00204B00	0x00000010	[134] _ves_icall_System_Math_Sin
0x00204B10	0x00000010	[134] _ves_icall_System_Math_Cos
0x00204B20	0x00000010	[134] _ves_icall_System_Math_Tan
0x00204B30	0x00000010	[134] _ves_icall_System_Math_Sinh
0x00204B40	0x00000010	[134] _ves_icall_System_Math_Cosh
0x00204B50	0x00000010	[134] _ves_icall_System_Math_Tanh
0x00204B60	0x00000040	[134] _ves_icall_System_Math_Acos
0x00204BA0	0x00000040	[134] _ves_icall_System_Math_Asin
0x00204BE0	0x00000010	[134] _ves_icall_System_Math_Atan
0x00204BF0	0x000000B0	[134] _ves_icall_System_Math_Atan2
0x00204CA0	0x00000010	[134] _ves_icall_System_Math_Exp
0x00204CB0	0x00000050	[134] _ves_icall_System_Math_Log
0x00204D00	0x00000050	[134] _ves_icall_System_Math_Log10
0x00204D50	0x00000100	[134] _ves_icall_System_Math_Pow
0x00204E50	0x00000033	[134] _ves_icall_System_Math_Sqrt
0x00204E90	0x00000030	[135] _socket_io_cleanup
0x00204EC0	0x00000090	[135] _get_events_from_list
0x00204F50	0x000000E0	[135] _get_io_event
0x00205030	0x00000120	[135] _mono_thread_pool_remove_socket
0x00205150	0x00000010	[135] _mono_thread_pool_init_tls
0x00205160	0x000006E0	[135] _mono_thread_pool_init
0x00205840	0x00000B40	[135] _async_invoke_thread
0x00206380	0x00000070	[135] _icall_append_io_job
0x002063F0	0x000002A0	[135] _socket_io_add
0x00206690	0x000002C0	[135] _mono_thread_pool_add
0x00206950	0x00000180	[135] _mono_thread_pool_finish
0x00206AD0	0x00000210	[135] _mono_thread_pool_cleanup
0x00206CE0	0x00000030	[135] _icall_append_job
0x00206D10	0x000001E0	[135] _threadpool_append_jobs
0x00206EF0	0x00000030	[135] _threadpool_append_async_io_jobs
0x00206F20	0x00000150	[135] _mono_thread_pool_remove_domain_jobs
0x00207070	0x000000F0	[135] _threadpool_clear_queue
0x00207160	0x00000060	[135] _remove_sockstate_for_domain
0x002071C0	0x00000010	[135] _mono_thread_pool_is_queue_array
0x002071D0	0x00000040	[135] _check_for_interruption_critical
0x00207210	0x00000030	[135] _ves_icall_System_Threading_ThreadPool_GetAvailableThreads
0x00207240	0x00000030	[135] _ves_icall_System_Threading_ThreadPool_GetMaxThreads
0x00207270	0x00000030	[135] _ves_icall_System_Threading_ThreadPool_GetMinThreads
0x002072A0	0x00000110	[135] _ves_icall_System_Threading_ThreadPool_SetMinThreads
0x002073B0	0x000000B0	[135] _threadpool_start_idle_threads
0x00207460	0x00000090	[135] _ves_icall_System_Threading_ThreadPool_SetMaxThreads
0x002074F0	0x00000030	[135] _mono_install_threadpool_thread_hooks
0x00207520	0x00000030	[135] _mono_install_threadpool_item_hooks
0x00207550	0x000000E0	[135] _mono_internal_thread_unhandled_exception
0x00207630	0x00000020	[135] _mono_thread_pool_suspend
0x00207650	0x00000020	[135] _mono_thread_pool_resume
0x00207670	0x00000110	[135] _dequeue_or_steal
0x00207780	0x00000510	[135] _monitor_thread
0x00207C90	0x00000132	[135] _threadpool_start_thread
0x00207DD0	0x00000020	[136] _mono_thread_get_tls_key
0x00207DF0	0x00000020	[136] _mono_thread_get_tls_offset
0x00207E10	0x00000020	[136] _mono_thread_new_init
0x00207E30	0x00000020	[136] _mono_threads_set_default_stacksize
0x00207E50	0x00000020	[136] _mono_threads_get_default_stacksize
0x00207E70	0x000000F0	[136] _mono_thread_create_internal
0x00207F60	0x000000F0	[136] _create_internal_thread
0x00208050	0x00000330	[136] _create_thread
0x00208380	0x00000040	[136] _mono_thread_create
0x002083C0	0x00000020	[136] _mono_thread_attach
0x002083E0	0x00000300	[136] _mono_thread_attach_full
0x002086E0	0x00000020	[136] _mono_thread_internal_current
0x00208700	0x000000F0	[136] _mono_thread_current
0x002087F0	0x00000110	[136] _handle_store
0x00208900	0x00000120	[136] _init_root_domain_thread
0x00208A20	0x00000090	[136] _mono_thread_detach_internal
0x00208AB0	0x000004A0	[136] _thread_cleanup
0x00208F50	0x000000A0	[136] _mono_thread_detach
0x00208FF0	0x00000070	[136] _mono_thread_detach_if_exiting
0x00209060	0x00000090	[136] _mono_thread_exit
0x002090F0	0x00000030	[136] _ves_icall_System_Threading_Thread_ConstructInternalThread
0x00209120	0x0000027F	[136] _ves_icall_System_Threading_Thread_Thread_internal
0x0020939F	0x00000051	[136] _mono_set_pending_exception
0x002093F0	0x00000060	[136] _ves_icall_System_Threading_InternalThread_Thread_free_internal
0x00209450	0x00000090	[136] _ves_icall_System_Threading_Thread_Sleep_internal
0x002094E0	0x00000130	[136] _mono_thread_current_check_pending_interrupt
0x00209610	0x000000F0	[136] _mono_thread_set_state
0x00209700	0x000000F0	[136] _mono_thread_clr_state
0x002097F0	0x00000360	[136] _mono_thread_execute_interruption
0x00209B50	0x00000010	[136] _ves_icall_System_Threading_Thread_SpinWait_nop
0x00209B60	0x00000020	[136] _ves_icall_System_Threading_Thread_GetDomainID
0x00209B80	0x00000010	[136] _ves_icall_System_Threading_Thread_Yield
0x00209B90	0x00000130	[136] _mono_thread_get_name
0x00209CC0	0x00000120	[136] _ves_icall_System_Threading_Thread_GetName_internal
0x00209DE0	0x000001F0	[136] _mono_thread_set_name_internal
0x00209FD0	0x00000030	[136] _ves_icall_System_Threading_Thread_SetName_internal
0x0020A000	0x00000010	[136] _ves_icall_System_Threading_Thread_GetPriority
0x0020A010	0x00000010	[136] _ves_icall_System_Threading_Thread_SetPriority
0x0020A020	0x000000A0	[136] _ves_icall_System_Threading_Thread_ByteArrayToRootDomain
0x0020A0C0	0x000000A0	[136] _ves_icall_System_Threading_Thread_ByteArrayToCurrentDomain
0x0020A160	0x00000130	[136] _get_current_thread_ptr_for_domain
0x0020A290	0x000001E0	[136] _ves_icall_System_Threading_Thread_Join_internal
0x0020A470	0x00000190	[136] _ves_icall_System_Threading_WaitHandle_WaitAll_internal
0x0020A600	0x000001B0	[136] _ves_icall_System_Threading_WaitHandle_WaitAny_internal
0x0020A7B0	0x00000110	[136] _ves_icall_System_Threading_WaitHandle_WaitOne_internal
0x0020A8C0	0x00000090	[136] _ves_icall_System_Threading_WaitHandle_SignalAndWait_Internal
0x0020A950	0x00000070	[136] _ves_icall_System_Threading_Mutex_CreateMutex_internal
0x0020A9C0	0x00000020	[136] _ves_icall_System_Threading_Mutex_ReleaseMutex_internal
0x0020A9E0	0x00000050	[136] _ves_icall_System_Threading_Mutex_OpenMutex_internal
0x0020AA30	0x00000080	[136] _ves_icall_System_Threading_Semaphore_CreateSemaphore_internal
0x0020AAB0	0x00000040	[136] _ves_icall_System_Threading_Semaphore_ReleaseSemaphore_internal
0x0020AAF0	0x00000050	[136] _ves_icall_System_Threading_Semaphore_OpenSemaphore_internal
0x0020AB40	0x00000080	[136] _ves_icall_System_Threading_Events_CreateEvent_internal
0x0020ABC0	0x00000010	[136] _ves_icall_System_Threading_Events_SetEvent_internal
0x0020ABD0	0x00000010	[136] _ves_icall_System_Threading_Events_ResetEvent_internal
0x0020ABE0	0x00000010	[136] _ves_icall_System_Threading_Events_CloseEvent_internal
0x0020ABF0	0x00000050	[136] _ves_icall_System_Threading_Events_OpenEvent_internal
0x0020AC40	0x00000020	[136] _ves_icall_System_Threading_Interlocked_Increment_Int
0x0020AC60	0x00000080	[136] _ves_icall_System_Threading_Interlocked_Increment_Long
0x0020ACE0	0x00000020	[136] _ves_icall_System_Threading_Interlocked_Decrement_Int
0x0020AD00	0x00000080	[136] _ves_icall_System_Threading_Interlocked_Decrement_Long
0x0020AD80	0x00000030	[136] _ves_icall_System_Threading_Interlocked_Exchange_Int
0x0020ADB0	0x00000030	[136] _ves_icall_System_Threading_Interlocked_Exchange_Object
0x0020ADE0	0x00000030	[136] _ves_icall_System_Threading_Interlocked_Exchange_IntPtr
0x0020AE10	0x00000030	[136] _ves_icall_System_Threading_Interlocked_Exchange_Single
0x0020AE40	0x00000080	[136] _ves_icall_System_Threading_Interlocked_Exchange_Long
0x0020AEC0	0x00000050	[136] _ves_icall_System_Threading_Interlocked_Exchange_Double
0x0020AF10	0x00000020	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_Int
0x0020AF30	0x00000020	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_Int_Success
0x0020AF50	0x00000030	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_Object
0x0020AF80	0x00000020	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_IntPtr
0x0020AFA0	0x00000030	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_Single
0x0020AFD0	0x00000060	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_Double
0x0020B030	0x00000080	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_Long
0x0020B0B0	0x00000030	[136] _ves_icall_System_Threading_Interlocked_CompareExchange_T
0x0020B0E0	0x00000030	[136] _ves_icall_System_Threading_Interlocked_Exchange_T
0x0020B110	0x00000020	[136] _ves_icall_System_Threading_Interlocked_Add_Int
0x0020B130	0x00000080	[136] _ves_icall_System_Threading_Interlocked_Add_Long
0x0020B1B0	0x00000060	[136] _ves_icall_System_Threading_Interlocked_Read_Long
0x0020B210	0x00000010	[136] _ves_icall_System_Threading_Thread_MemoryBarrier
0x0020B220	0x00000040	[136] _ves_icall_System_Threading_Thread_ClrState
0x0020B260	0x00000040	[136] _ves_icall_System_Threading_Thread_SetState
0x0020B2A0	0x000000F0	[136] _ves_icall_System_Threading_Thread_GetState
0x0020B390	0x00000130	[136] _ves_icall_System_Threading_Thread_Interrupt_internal
0x0020B4C0	0x00000210	[136] _abort_thread_internal
0x0020B6D0	0x00000010	[136] _mono_thread_get_abort_signal
0x0020B6E0	0x000001B0	[136] _ves_icall_System_Threading_Thread_Abort
0x0020B890	0x00000270	[136] _mono_thread_resume
0x0020BB00	0x000001B0	[136] _ves_icall_System_Threading_Thread_ResetAbort
0x0020BCB0	0x00000120	[136] _mono_thread_internal_reset_abort
0x0020BDD0	0x00000140	[136] _ves_icall_System_Threading_Thread_GetAbortExceptionState
0x0020BF10	0x000000B0	[136] _ves_icall_System_Threading_Thread_Suspend
0x0020BFC0	0x00000130	[136] _mono_thread_suspend
0x0020C0F0	0x000000B0	[136] _ves_icall_System_Threading_Thread_Resume
0x0020C1A0	0x00000120	[136] _mono_thread_internal_stop
0x0020C2C0	0x00000020	[136] _mono_thread_stop
0x0020C2E0	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileRead1
0x0020C2F0	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileRead2
0x0020C300	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileRead4
0x0020C310	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileRead8
0x0020C320	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileReadIntPtr
0x0020C330	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileReadObject
0x0020C340	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileReadDouble
0x0020C350	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileReadFloat
0x0020C360	0x00000020	[136] _ves_icall_System_Threading_Volatile_Read1
0x0020C380	0x00000020	[136] _ves_icall_System_Threading_Volatile_Read2
0x0020C3A0	0x00000010	[136] _ves_icall_System_Threading_Volatile_Read4
0x0020C3B0	0x00000060	[136] _ves_icall_System_Threading_Volatile_Read8
0x0020C410	0x00000010	[136] _ves_icall_System_Threading_Volatile_ReadIntPtr
0x0020C420	0x00000070	[136] _ves_icall_System_Threading_Volatile_ReadDouble
0x0020C490	0x00000020	[136] _ves_icall_System_Threading_Volatile_ReadFloat
0x0020C4B0	0x00000010	[136] _ves_icall_System_Threading_Volatile_Read_T
0x0020C4C0	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileWrite1
0x0020C4D0	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileWrite2
0x0020C4E0	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileWrite4
0x0020C4F0	0x00000020	[136] _ves_icall_System_Threading_Thread_VolatileWrite8
0x0020C510	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileWriteIntPtr
0x0020C520	0x00000010	[136] _ves_icall_System_Threading_Thread_VolatileWriteObject
0x0020C530	0x00000020	[136] _ves_icall_System_Threading_Thread_VolatileWriteDouble
0x0020C550	0x00000020	[136] _ves_icall_System_Threading_Thread_VolatileWriteFloat
0x0020C570	0x00000030	[136] _ves_icall_System_Threading_Volatile_Write1
0x0020C5A0	0x00000030	[136] _ves_icall_System_Threading_Volatile_Write2
0x0020C5D0	0x00000020	[136] _ves_icall_System_Threading_Volatile_Write4
0x0020C5F0	0x00000070	[136] _ves_icall_System_Threading_Volatile_Write8
0x0020C660	0x00000020	[136] _ves_icall_System_Threading_Volatile_WriteIntPtr
0x0020C680	0x00000070	[136] _ves_icall_System_Threading_Volatile_WriteDouble
0x0020C6F0	0x00000020	[136] _ves_icall_System_Threading_Volatile_WriteFloat
0x0020C710	0x00000010	[136] _ves_icall_System_Threading_Volatile_Write_T
0x0020C720	0x00000040	[136] _mono_thread_init_tls
0x0020C760	0x000001B0	[136] _mono_thread_init
0x0020C910	0x00000040	[136] _mono_thread_cleanup
0x0020C950	0x00000020	[136] _mono_threads_install_cleanup
0x0020C970	0x00000020	[136] _mono_thread_set_manage_callback
0x0020C990	0x00000020	[136] _mono_threads_install_notify_pending_exc
0x0020C9B0	0x00000180	[136] _mono_threads_set_shutting_down
0x0020CB30	0x000002A0	[136] _mono_thread_manage
0x0020CDD0	0x000000C0	[136] _build_wait_tids
0x0020CE90	0x000000B0	[136] _remove_and_abort_threads
0x0020CF40	0x00000100	[136] _wait_for_tids
0x0020D040	0x00000050	[136] _mono_thread_abort_all_other_threads
0x0020D090	0x00000010	[136] _terminate_thread
0x0020D0A0	0x00000510	[136] _mono_thread_suspend_all_other_threads
0x0020D5B0	0x00000060	[136] _collect_threads_for_suspend
0x0020D610	0x000002C0	[136] _suspend_thread_internal
0x0020D8D0	0x000000A0	[136] _signal_thread_state_change
0x0020D970	0x00000090	[136] _mono_threads_perform_thread_dump
0x0020DA00	0x00000170	[136] _dump_thread
0x0020DB70	0x000000F0	[136] _mono_threads_request_thread_dump
0x0020DC60	0x00000050	[136] _collect_threads
0x0020DCB0	0x00000100	[136] _mono_thread_push_appdomain_ref
0x0020DDB0	0x00000070	[136] _mono_thread_pop_appdomain_ref
0x0020DE20	0x00000070	[136] _mono_thread_internal_has_appdomain_ref
0x0020DE90	0x00000070	[136] _mono_thread_has_appdomain_ref
0x0020DF00	0x00000110	[136] _mono_threads_abort_appdomain_threads
0x0020E010	0x000000A0	[136] _collect_appdomain_thread
0x0020E0B0	0x00000050	[136] _mono_threads_clear_cached_culture
0x0020E100	0x00000070	[136] _clear_cached_culture
0x0020E170	0x00000070	[136] _mono_thread_get_undeniable_exception
0x0020E1E0	0x000001A0	[136] _mono_alloc_special_static_data
0x0020E380	0x000000D0	[136] _mono_alloc_static_data_slot
0x0020E450	0x00000020	[136] _alloc_thread_static_data_helper
0x0020E470	0x000000A0	[136] _mono_get_special_static_data_for_thread
0x0020E510	0x000000D0	[136] _mono_alloc_static_data
0x0020E5E0	0x00000030	[136] _mono_get_special_static_data
0x0020E610	0x00000050	[136] _mono_alloc_special_static_data_free
0x0020E660	0x00000030	[136] _do_free_special
0x0020E690	0x00000040	[136] _mono_special_static_data_free_slot
0x0020E6D0	0x00000140	[136] _do_free_special_slot
0x0020E810	0x00000110	[136] _mono_thread_alloc_tls
0x0020E920	0x00000020	[136] _mono_thread_destroy_tls
0x0020E940	0x00000090	[136] _destroy_tls
0x0020E9D0	0x00000030	[136] _mono_thread_destroy_domain_tls
0x0020EA00	0x00000100	[136] _mono_thread_free_local_slot_values
0x0020EB00	0x00000070	[136] _clear_local_slot
0x0020EB70	0x000000A0	[136] _mono_thread_request_interruption
0x0020EC10	0x00000140	[136] _mono_thread_resume_interruption
0x0020ED50	0x00000040	[136] _mono_thread_interruption_requested
0x0020ED90	0x00000060	[136] _mono_thread_interruption_checkpoint
0x0020EDF0	0x00000040	[136] _mono_thread_force_interruption_checkpoint_noraise
0x0020EE30	0x00000040	[136] _mono_thread_force_interruption_checkpoint
0x0020EE70	0x00000070	[136] _mono_thread_get_and_clear_pending_exception
0x0020EEE0	0x00000020	[136] _mono_thread_interruption_request_flag
0x0020EF00	0x00000010	[136] _mono_thread_init_apartment_state
0x0020EF10	0x00000010	[136] _mono_thread_cleanup_apartment_state
0x0020EF20	0x00000100	[136] _mono_thread_test_state
0x0020F020	0x00000020	[136] _mono_thread_get_execution_context
0x0020F040	0x00000130	[136] _get_execution_context_addr
0x0020F170	0x00000020	[136] _mono_thread_set_execution_context
0x0020F190	0x00000020	[136] _mono_runtime_set_has_tls_get
0x0020F1B0	0x00000020	[136] _mono_runtime_has_tls_get
0x0020F1D0	0x00000030	[136] _mono_thread_kill
0x0020F200	0x00000020	[136] _mono_thread_is_foreign
0x0020F220	0x00000080	[136] _mono_threads_add_joinable_thread
0x0020F2A0	0x000000D0	[136] _mono_threads_join_threads
0x0020F370	0x000000A0	[136] _mono_thread_join
0x0020F410	0x00000020	[136] _last_managed
0x0020F430	0x00000060	[136] _self_interrupt_thread
0x0020F490	0x00000040	[136] _free_thread_static_data_helper
0x0020F4D0	0x000000A0	[136] _mark_tls_slots
0x0020F570	0x00000040	[136] _find_wrapper
0x0020F5B0	0x00000090	[136] _print_stack_frame_to_string
0x0020F640	0x0000033A	[136] _start_wrapper
0x0020F980	0x000000C0	[137] _tp_poll_init
0x0020FA40	0x00000060	[137] _tp_poll_shutdown
0x0020FAA0	0x00000070	[137] _tp_poll_modify
0x0020FB10	0x0000068A	[137] _tp_poll_wait
0x002101A0	0x00000020	[138] _mono_verifier_set_mode
0x002101C0	0x00000020	[138] _mono_verifier_enable_verify_all
0x002101E0	0x00000040	[138] _mono_free_verify_list
0x00210220	0x00000020	[138] _mono_verifier_is_signature_compatible
0x00210240	0x000000E0	[138] _mono_delegate_signature_equal
0x00210320	0x0000BE00	[138] _mono_method_verify
0x0021C120	0x000003C0	[138] _mono_type_is_valid_in_context
0x0021C4E0	0x000001F0	[138] _init_stack_with_value_at_exception_boundary
0x0021C6D0	0x000009F0	[138] _merge_stacks
0x0021D0C0	0x00000380	[138] _push_arg
0x0021D440	0x00000300	[138] _do_binop
0x0021D740	0x000001F0	[138] _push_local
0x0021D930	0x00000230	[138] _store_local
0x0021DB60	0x00000230	[138] _store_arg
0x0021DD90	0x00000450	[138] _do_branch_op
0x0021E1E0	0x00000140	[138] _do_static_branch
0x0021E320	0x000002E0	[138] _do_boolean_branch_op
0x0021E600	0x00000300	[138] _do_conversion
0x0021E900	0x00000790	[138] _do_ldelem
0x0021F090	0x00000700	[138] _do_stelem
0x0021F790	0x00000180	[138] _do_leave
0x0021F910	0x000003A0	[138] _do_cmp_op
0x0021FCB0	0x000001E0	[138] _set_stack_value
0x0021FE90	0x00000540	[138] _do_load_function_ptr
0x002203D0	0x00000250	[138] _get_boxable_mono_type
0x00220620	0x00000010	[138] _mono_verify_corlib
0x00220630	0x00000080	[138] _mono_verifier_is_enabled_for_method
0x002206B0	0x00000050	[138] _mono_verifier_is_enabled_for_class
0x00220700	0x00000030	[138] _mono_verifier_is_enabled_for_image
0x00220730	0x000000A0	[138] _mono_verifier_is_method_full_trust
0x002207D0	0x00000080	[138] _mono_verifier_is_class_full_trust
0x00220850	0x00000070	[138] _mono_method_verify_with_current_settings
0x002208C0	0x00000610	[138] _mono_verifier_verify_class
0x00220ED0	0x00000030	[138] _mono_verifier_class_is_valid_generic_instantiation
0x00220F00	0x00000040	[138] _mono_verifier_is_method_valid_generic_instantiation
0x00220F40	0x00000320	[138] _is_valid_generic_instantiation
0x00221260	0x00000140	[138] _mono_type_is_valid_type_in_context_full
0x002213A0	0x000000D0	[138] _verify_valuetype_layout_with_target
0x00221470	0x00000030	[138] _field_hash
0x002214A0	0x00000050	[138] _field_equals
0x002214F0	0x000000E0	[138] _recursive_mark_constraint_args
0x002215D0	0x000000E0	[138] _stack_pop
0x002216B0	0x000001F0	[138] _verifier_load_type
0x002218A0	0x00000090	[138] _check_unverifiable_type
0x00221930	0x00000980	[138] _verify_type_compatibility_full
0x002222B0	0x000005F0	[138] _verifier_class_is_assignable_from
0x002228A0	0x000001C0	[138] _verifier_load_method
0x00222A60	0x000000E0	[138] _verify_stack_type_compatibility_full
0x00222B40	0x00000110	[138] _is_compatible_boxed_valuetype
0x00222C50	0x000000E0	[138] _get_generic_param
0x00222D30	0x000000E0	[138] _recursive_boxed_constraint_type_check
0x00222E10	0x00000210	[138] _mono_method_is_valid_in_context
0x00223020	0x00000130	[138] _generic_arguments_respect_constraints
0x00223150	0x00000410	[138] _mono_generic_param_is_constraint_compatible
0x00223560	0x00000260	[138] _stack_slot_full_name
0x002237C0	0x000000B0	[138] _stack_push_stack_val
0x00223870	0x00000280	[138] _verifier_load_field
0x00223AF0	0x000005C0	[138] _check_is_valid_type_for_field_ops
0x002240B0	0x00000170	[138] _is_valid_branch_instruction
0x00224220	0x00000370	[138] _mono_delegate_type_equal
0x00224590	0x000000D1	[138] _ensure_stack_size
0x00224670	0x000001B0	[139] __wapi_collection_init
0x00224820	0x00000060	[139] _collection_thread
0x00224880	0x00000015	[139] __wapi_handle_collect
0x002248A0	0x00000050	[140] __wapi_error_cleanup
0x002248F0	0x00000050	[140] _GetLastError
0x00224940	0x00000060	[140] _error_init
0x002249A0	0x00000080	[140] _SetLastError
0x00224A20	0x000002E0	[140] _errno_to_WSA
0x00224D00	0x00000178	[140] __wapi_get_win32_file_error
0x00224E80	0x00000070	[141] _event_signal
0x00224EF0	0x00000120	[141] _event_own
0x00225010	0x00000070	[141] _namedevent_signal
0x00225080	0x00000150	[141] _namedevent_own
0x002251D0	0x00000040	[141] __wapi_event_details
0x00225210	0x00000540	[141] _wapi_CreateEvent
0x00225750	0x00000040	[141] _event_ops_init
0x00225790	0x00000070	[141] _wapi_PulseEvent
0x00225800	0x00000070	[141] _wapi_ResetEvent
0x00225870	0x00000070	[141] _wapi_SetEvent
0x002258E0	0x00000130	[141] _wapi_OpenEvent
0x00225A10	0x00000380	[141] _event_pulse
0x00225D90	0x00000270	[141] _event_reset
0x00226000	0x000001D0	[141] _event_set
0x002261D0	0x00000230	[141] _namedevent_pulse
0x00226400	0x00000190	[141] _namedevent_reset
0x00226590	0x00000150	[141] _namedevent_set
0x002266E0	0x000002C8	[141] __wapi_handle_set_signal_state
0x002269B0	0x00000040	[142] __wapi_getpid
0x002269F0	0x00000020	[142] _pid_init
0x00226A10	0x00000010	[142] _wapi_getdtablesize
0x00226A20	0x00000110	[142] _wapi_init
0x00226B30	0x00000210	[142] __wapi_handle_new
0x00226D40	0x00000160	[142] _wapi_cleanup
0x00226EA0	0x00000140	[142] __wapi_handle_new_internal
0x00226FE0	0x000001B0	[142] __wapi_handle_new_shared
0x00227190	0x000003E0	[142] __wapi_handle_new_from_offset
0x00227570	0x000000D0	[142] __wapi_handle_ref
0x00227640	0x00000180	[142] __wapi_handle_new_fd
0x002277C0	0x000000E0	[142] _init_handles_slot
0x002278A0	0x00000150	[142] __wapi_handle_init
0x002279F0	0x00000090	[142] __wapi_lookup_handle
0x00227A80	0x00000130	[142] __wapi_handle_foreach
0x00227BB0	0x00000390	[142] __wapi_search_handle
0x00227F40	0x00000020	[142] __wapi_handle_unref
0x00227F60	0x00000100	[142] __wapi_search_handle_namespace
0x00228060	0x00000470	[142] __wapi_handle_unref_full
0x002284D0	0x00000020	[142] __wapi_handle_register_capabilities
0x002284F0	0x00000050	[142] __wapi_handle_test_capabilities
0x00228540	0x00000050	[142] __wapi_handle_ops_close
0x00228590	0x00000050	[142] __wapi_handle_ops_signal
0x002285E0	0x00000050	[142] __wapi_handle_ops_own
0x00228630	0x00000050	[142] __wapi_handle_ops_isowned
0x00228680	0x00000050	[142] __wapi_handle_ops_special_wait
0x002286D0	0x00000050	[142] __wapi_handle_ops_prewait
0x00228720	0x00000050	[142] _wapi_CloseHandle
0x00228770	0x00000080	[142] _wapi_DuplicateHandle
0x002287F0	0x00000400	[142] __wapi_handle_count_signalled_handles
0x00228BF0	0x00000140	[142] __wapi_handle_unlock_handles
0x00228D30	0x00000040	[142] __wapi_handle_wait_signal
0x00228D70	0x00000230	[142] __wapi_handle_timedwait_signal_handle
0x00228FA0	0x00000040	[142] __wapi_handle_timedwait_signal
0x00228FE0	0x00000030	[142] __wapi_handle_wait_signal_handle
0x00229010	0x00000050	[142] __wapi_free_share_info
0x00229060	0x00000240	[142] __wapi_handle_get_or_set_share
0x002292A0	0x00000010	[142] _wapi_share_info_hash
0x002292B0	0x00000040	[142] _wapi_share_info_equal
0x002292F0	0x00000110	[142] __wapi_handle_check_share
0x00229400	0x000001A0	[142] __wapi_handle_dump
0x002295A0	0x00000210	[142] __wapi_handle_update_refs
0x002297B0	0x00000028	[142] __wapi_shared_details
0x002297E0	0x00000120	[143] __wapi_open
0x00229900	0x000000B0	[143] __wapi_access
0x002299B0	0x000000B0	[143] __wapi_chmod
0x00229A60	0x00000090	[143] __wapi_utime
0x00229AF0	0x000000B0	[143] __wapi_unlink
0x00229BA0	0x00000110	[143] __wapi_rename
0x00229CB0	0x000000B0	[143] __wapi_stat
0x00229D60	0x000000B0	[143] __wapi_lstat
0x00229E10	0x00000060	[143] __wapi_mkdir
0x00229E70	0x000000B0	[143] __wapi_rmdir
0x00229F20	0x000000B0	[143] __wapi_chdir
0x00229FD0	0x000000D0	[143] __wapi_basename
0x0022A0A0	0x000000D0	[143] __wapi_dirname
0x0022A170	0x000000C0	[143] __wapi_g_dir_open
0x0022A230	0x00000220	[143] __wapi_io_scandir
0x0022A450	0x00000021	[143] _file_compare
0x0022A480	0x000000E0	[144] _file_close
0x0022A560	0x000000D0	[144] __wapi_file_details
0x0022A630	0x00000030	[144] _console_close
0x0022A660	0x000000D0	[144] __wapi_console_details
0x0022A730	0x00000020	[144] _pipe_close
0x0022A750	0x000000D0	[144] __wapi_pipe_details
0x0022A820	0x000003B0	[144] _wapi_CreateFile
0x0022ABD0	0x00000030	[144] _io_ops_init
0x0022AC00	0x00000080	[144] __wapi_set_last_path_error_from_errno
0x0022AC80	0x00000080	[144] _wapi_DeleteFile
0x0022AD00	0x000000D0	[144] _wapi_GetFileAttributes
0x0022ADD0	0x000003B0	[144] _wapi_MoveFile
0x0022B180	0x00000260	[144] _wapi_CopyFile
0x0022B3E0	0x00000100	[144] _write_file
0x0022B4E0	0x000002A0	[144] _wapi_ReplaceFile
0x0022B780	0x00000110	[144] _wapi_GetStdHandle
0x0022B890	0x00000080	[144] _wapi_ReadFile
0x0022B910	0x00000080	[144] _wapi_WriteFile
0x0022B990	0x00000060	[144] _wapi_FlushFileBuffers
0x0022B9F0	0x00000060	[144] _wapi_SetEndOfFile
0x0022BA50	0x00000060	[144] _wapi_SetFilePointer
0x0022BAB0	0x00000070	[144] _wapi_GetFileType
0x0022BB20	0x00000060	[144] _wapi_GetFileSize
0x0022BB80	0x00000060	[144] _wapi_GetFileTime
0x0022BBE0	0x00000060	[144] _wapi_SetFileTime
0x0022BC40	0x000005C0	[144] _wapi_FileTimeToSystemTime
0x0022C200	0x000001B0	[144] _wapi_FindFirstFile
0x0022C3B0	0x00000470	[144] _wapi_FindNextFile
0x0022C820	0x000001F0	[144] _wapi_FindClose
0x0022CA10	0x00000110	[144] __wapi_stat_to_file_attributes
0x0022CB20	0x00000070	[144] _wapi_CreateDirectory
0x0022CB90	0x00000070	[144] _wapi_RemoveDirectory
0x0022CC00	0x00000130	[144] _wapi_GetFileAttributesEx
0x0022CD30	0x000000F0	[144] _wapi_SetFileAttributes
0x0022CE20	0x00000110	[144] _wapi_GetCurrentDirectory
0x0022CF30	0x00000070	[144] _wapi_SetCurrentDirectory
0x0022CFA0	0x000001D0	[144] _wapi_CreatePipe
0x0022D170	0x000000E0	[144] _wapi_GetTempPath
0x0022D250	0x00000120	[144] _wapi_GetLogicalDriveStrings
0x0022D370	0x00000120	[144] _wapi_GetDiskFreeSpaceEx
0x0022D490	0x00000120	[144] _wapi_GetDriveType
0x0022D5B0	0x00000120	[144] _wapi_GetVolumeInformation
0x0022D6D0	0x00000030	[144] __wapi_io_init
0x0022D700	0x00000010	[144] _file_getfiletype
0x0022D710	0x000000F0	[144] _file_read
0x0022D800	0x000001D0	[144] _file_write
0x0022D9D0	0x000000B0	[144] _file_flush
0x0022DA80	0x000000F0	[144] _file_seek
0x0022DB70	0x00000130	[144] _file_setendoffile
0x0022DCA0	0x000000D0	[144] _file_getfilesize
0x0022DD70	0x00000150	[144] _file_getfiletime
0x0022DEC0	0x000001A0	[144] _file_setfiletime
0x0022E060	0x00000010	[144] _console_getfiletype
0x0022E070	0x000000F0	[144] _console_read
0x0022E160	0x00000100	[144] _console_write
0x0022E260	0x00000010	[144] _pipe_getfiletype
0x0022E270	0x00000100	[144] _pipe_read
0x0022E370	0x00000100	[144] _pipe_write
0x0022E470	0x00000140	[144] _share_allows_open
0x0022E5B0	0x000000B0	[145] __wapi_lock_file_region
0x0022E660	0x000000A0	[145] __wapi_unlock_file_region
0x0022E700	0x000000B0	[145] _wapi_LockFile
0x0022E7B0	0x000000A5	[145] _wapi_UnlockFile
0x0022E860	0x00000480	[146] _wapi_FormatMessage
0x0022ECE0	0x0000000F	[146] _msg_compare
0x0022ECF0	0x00000070	[147] __wapi_calc_timeout
0x0022ED60	0x00000070	[148] _mutex_signal
0x0022EDD0	0x00000100	[148] _mutex_own
0x0022EED0	0x000000A0	[148] _mutex_is_owned
0x0022EF70	0x00000040	[148] __wapi_mutex_details
0x0022EFB0	0x00000070	[148] _namedmutex_signal
0x0022F020	0x00000120	[148] _namedmutex_own
0x0022F140	0x000000B0	[148] _namedmutex_is_owned
0x0022F1F0	0x000001A0	[148] _namedmutex_prewait
0x0022F390	0x00000340	[148] __wapi_mutex_abandon
0x0022F6D0	0x00000510	[148] _wapi_CreateMutex
0x0022FBE0	0x00000040	[148] _mutex_ops_init
0x0022FC20	0x00000070	[148] _wapi_ReleaseMutex
0x0022FC90	0x00000130	[148] _wapi_OpenMutex
0x0022FDC0	0x00000220	[148] _mutex_release
0x0022FFE0	0x000001C0	[148] _namedmutex_release
0x002301A0	0x00000265	[148] __wapi_handle_set_signal_state
0x00230410	0x00000135	[149] __wapi_stdhandle_create
0x00230550	0x00000030	[150] _process_close
0x00230580	0x00000490	[150] _process_wait
0x00230A10	0x00000260	[150] _wapi_ShellExecuteEx
0x00230C70	0x00000110	[150] _utf16_concat
0x00230D80	0x000012A0	[150] _wapi_CreateProcess
0x00232020	0x00000060	[150] _wapi_CreateProcessWithLogonW
0x00232080	0x00000080	[150] _process_add_sigchld_handler
0x00232100	0x00000180	[150] _mono_processes_cleanup
0x00232280	0x00000100	[150] _wapi_processes_init
0x00232380	0x00000030	[150] __wapi_process_duplicate
0x002323B0	0x00000010	[150] _wapi_GetCurrentProcess
0x002323C0	0x00000050	[150] _wapi_GetProcessId
0x00232410	0x00000020	[150] _wapi_CloseProcess
0x00232430	0x00000080	[150] _wapi_OpenProcess
0x002324B0	0x00000110	[150] _process_open_compare
0x002325C0	0x00000130	[150] _wapi_GetExitCodeProcess
0x002326F0	0x00000190	[150] _wapi_GetProcessTimes
0x00232880	0x00000180	[150] _wapi_EnumProcessModules
0x00232A00	0x00000170	[150] _load_modules
0x00232B70	0x000000E0	[150] _match_procname_to_modulename
0x00232C50	0x00000010	[150] _wapi_process_get_path
0x00232C60	0x00000110	[150] _get_process_name_from_proc
0x00232D70	0x00000040	[150] _wapi_process_set_cli_launcher
0x00232DB0	0x00000030	[150] _wapi_GetModuleBaseName
0x00232DE0	0x000001D0	[150] _get_module_name
0x00232FB0	0x00000030	[150] _wapi_GetModuleFileNameEx
0x00232FE0	0x00000140	[150] _wapi_GetModuleInformation
0x00233120	0x00000060	[150] _wapi_GetProcessWorkingSetSize
0x00233180	0x00000050	[150] _wapi_SetProcessWorkingSetSize
0x002331D0	0x000000C0	[150] _wapi_TerminateProcess
0x00233290	0x00000100	[150] _wapi_GetPriorityClass
0x00233390	0x00000120	[150] _wapi_SetPriorityClass
0x002334B0	0x00000020	[150] _wapi_processes_cleanup
0x002334D0	0x000000A0	[150] _mono_sigchld_signal_handler
0x00233570	0x00000034	[150] _find_procmodule
0x002335B0	0x00000020	[151] _wapi_ImpersonateLoggedOnUser
0x002335D0	0x0000000A	[151] _wapi_RevertToSelf
0x002335E0	0x00000080	[152] _sema_signal
0x00233660	0x000000F0	[152] _sema_own
0x00233750	0x00000030	[152] __wapi_sem_details
0x00233780	0x00000080	[152] _namedsema_signal
0x00233800	0x00000100	[152] _namedsema_own
0x00233900	0x00000540	[152] _wapi_CreateSemaphore
0x00233E40	0x00000040	[152] _sem_ops_init
0x00233E80	0x00000070	[152] _wapi_ReleaseSemaphore
0x00233EF0	0x00000130	[152] _wapi_OpenSemaphore
0x00234020	0x000001D0	[152] _sem_release
0x002341F0	0x00000170	[152] _namedsem_release
0x00234360	0x000002C8	[152] __wapi_handle_set_signal_state
0x00234630	0x000000D0	[153] __wapi_shm_semaphores_init
0x00234700	0x00000010	[153] __wapi_shm_semaphores_remove
0x00234710	0x00000030	[153] __wapi_shm_sem_lock
0x00234740	0x00000030	[153] __wapi_shm_sem_trylock
0x00234770	0x00000030	[153] __wapi_shm_sem_unlock
0x002347A0	0x00000070	[153] __wapi_shm_attach
0x00234810	0x00000030	[153] __wapi_shm_detach
0x00234840	0x00000007	[153] __wapi_shm_enabled_internal
0x00234850	0x000000A0	[154] _socket_close
0x002348F0	0x00000040	[154] __wapi_cleanup_networking
0x00234930	0x00000030	[154] _cleanup_close
0x00234960	0x00000010	[154] _wapi_WSASetLastError
0x00234970	0x00000010	[154] _wapi_WSAGetLastError
0x00234980	0x00000060	[154] _closesocket
0x002349E0	0x000001E0	[154] __wapi_accept
0x00234BC0	0x00000090	[154] __wapi_bind
0x00234C50	0x00000270	[154] __wapi_connect
0x00234EC0	0x00000090	[154] __wapi_getpeername
0x00234F50	0x00000090	[154] __wapi_getsockname
0x00234FE0	0x000001B0	[154] __wapi_getsockopt
0x00235190	0x00000090	[154] __wapi_listen
0x00235220	0x00000040	[154] __wapi_recv
0x00235260	0x00000110	[154] __wapi_recvfrom
0x00235370	0x00000100	[154] __wapi_send
0x00235470	0x000000D0	[154] __wapi_sendto
0x00235540	0x00000180	[154] __wapi_setsockopt
0x002356C0	0x00000100	[154] __wapi_shutdown
0x002357C0	0x000001B0	[154] __wapi_socket
0x00235970	0x00000010	[154] _socket_ops_init
0x00235980	0x000001E0	[154] _TransmitFile
0x00235B60	0x000001F0	[154] _wapi_WSAIoctl
0x00235D50	0x00000130	[154] _ioctlsocket
0x00235E80	0x000000E0	[154] __wapi_select
0x00235F60	0x00000080	[154] __wapi_FD_CLR
0x00235FE0	0x00000080	[154] __wapi_FD_ISSET
0x00236060	0x00000080	[154] __wapi_FD_SET
0x002360E0	0x00000250	[154] _wapi_WSARecv
0x00236330	0x00000210	[154] _wapi_WSASend
0x00236540	0x000000FA	[154] _wapi_disconnectex
0x00236640	0x00000020	[155] __wapi_time_t_to_filetime
0x00236660	0x00000040	[155] __wapi_timeval_to_filetime
0x002366A0	0x00000020	[155] __wapi_guint64_to_filetime
0x002366C0	0x00000010	[155] _wapi_QueryPerformanceCounter
0x002366D0	0x00000010	[155] _wapi_QueryPerformanceFrequency
0x002366E0	0x00000009	[155] _wapi_GetTickCount
0x002366F0	0x000007D0	[156] _wapi_VerQueryValue
0x00236EC0	0x00000070	[156] _wapi_GetFileVersionInfoSize
0x00236F30	0x00000130	[156] _map_pe_file
0x00237060	0x00000140	[156] _find_pe_file_resources
0x002371A0	0x00000080	[156] _wapi_GetFileVersionInfo
0x00237220	0x000010D0	[156] _wapi_VerLanguageName
0x002382F0	0x00000157	[156] _scan_resource_dir
0x00238450	0x00000330	[157] _wapi_WaitForSingleObjectEx
0x00238780	0x00000100	[157] _own_if_owned
0x00238880	0x00000160	[157] _own_if_signalled
0x002389E0	0x00000030	[157] _wapi_WaitForSingleObject
0x00238A10	0x00000360	[157] _wapi_SignalObjectAndWait
0x00238D70	0x000007B0	[157] _wapi_WaitForMultipleObjectsEx
0x00239520	0x00000040	[157] _wapi_WaitForMultipleObjects
0x00239560	0x0000000A	[157] _wapi_WaitForInputIdle
0x00239570	0x000003C0	[158] __wapi_glob
0x00239930	0x00000050	[158] __wapi_globfree
0x00239980	0x000000D5	[158] _match
0x00239A60	0x00000010	[159] __wapi_thread_cleanup
0x00239A70	0x00000460	[159] _wapi_thread_handle_set_exited
0x00239ED0	0x000000E0	[159] __wapi_thread_disown_mutex
0x00239FB0	0x00000100	[159] _wapi_create_thread_handle
0x0023A0B0	0x00000020	[159] _thread_ops_init
0x0023A0D0	0x00000010	[159] _wapi_ref_thread_handle
0x0023A0E0	0x00000080	[159] _wapi_get_current_thread_handle
0x0023A160	0x00000010	[159] _wapi_GetCurrentThreadId
0x0023A170	0x000001A0	[159] _wapi_SleepEx
0x0023A310	0x00000070	[159] __wapi_thread_apc_pending
0x0023A380	0x00000090	[159] _wapi_Sleep
0x0023A410	0x000000D0	[159] __wapi_thread_cur_apc_pending
0x0023A4E0	0x000000D0	[159] _wapi_interrupt_thread
0x0023A5B0	0x00000090	[159] _wapi_prepare_interrupt_thread
0x0023A640	0x00000060	[159] _wapi_finish_interrupt_thread
0x0023A6A0	0x00000100	[159] _wapi_self_interrupt
0x0023A7A0	0x000000D0	[159] _wapi_clear_interruption
0x0023A870	0x00000120	[159] _wapi_thread_set_wait_handle
0x0023A990	0x00000120	[159] _wapi_thread_clear_wait_handle
0x0023AAB0	0x000000E0	[159] __wapi_thread_own_mutex
0x0023AB90	0x00000214	[159] _wapi_current_thread_desc
0x0023ADB0	0x00000063	[160] _mono_binary_search
0x0023AE20	0x00001600	[161] _mono_dlmalloc
0x0023C420	0x00000CC0	[161] _mono_dlfree
0x0023D0E0	0x00000274	[161] _mono_dlmemalign
0x0023D360	0x00000300	[162] _mono_thread_small_id_alloc
0x0023D660	0x000000D0	[162] _mono_thread_small_id_free
0x0023D730	0x00000060	[162] _mono_hazard_pointer_get
0x0023D790	0x00000070	[162] _get_hazardous_pointer
0x0023D800	0x00000170	[162] _mono_hazard_pointer_save_for_signal_handler
0x0023D970	0x00000160	[162] _mono_hazard_pointer_restore_for_signal_handler
0x0023DAD0	0x000001D0	[162] _mono_thread_hazardous_free_or_queue
0x0023DCA0	0x000000F0	[162] _mono_thread_hazardous_try_free_all
0x0023DD90	0x00000100	[162] _mono_thread_hazardous_try_free_some
0x0023DE90	0x000000D0	[162] _mono_thread_smr_init
0x0023DF60	0x00000024	[162] _mono_thread_smr_cleanup
0x0023DF90	0x00000060	[163] _json_writer_init
0x0023DFF0	0x00000060	[163] _json_writer_destroy
0x0023E050	0x00000050	[163] _json_writer_indent_push
0x0023E0A0	0x00000050	[163] _json_writer_indent_pop
0x0023E0F0	0x00000070	[163] _json_writer_indent
0x0023E160	0x00000060	[163] _json_writer_vprintf
0x0023E1C0	0x00000060	[163] _json_writer_printf
0x0023E220	0x00000060	[163] _json_writer_array_begin
0x0023E280	0x00000060	[163] _json_writer_array_end
0x0023E2E0	0x00000060	[163] _json_writer_object_begin
0x0023E340	0x00000060	[163] _json_writer_object_end
0x0023E3A0	0x0000008E	[163] _json_writer_object_key
0x0023E430	0x000005E0	[164] _mono_lock_free_alloc
0x0023EA10	0x00000350	[164] _mono_lock_free_free
0x0023ED60	0x00000100	[164] _desc_retire
0x0023EE60	0x000000F0	[164] _mono_lock_free_allocator_check_consistency
0x0023EF50	0x000002D0	[164] _descriptor_check_consistency
0x0023F220	0x000000D0	[164] _mono_lock_free_allocator_init_size_class
0x0023F2F0	0x00000020	[164] _mono_lock_free_allocator_init_allocator
0x0023F310	0x00000070	[164] _desc_put_partial
0x0023F380	0x000000A4	[164] _desc_enqueue_avail
0x0023F430	0x00000200	[165] _mono_lock_free_array_nth
0x0023F630	0x00000060	[165] _mono_lock_free_array_iterate
0x0023F690	0x00000040	[165] _mono_lock_free_array_cleanup
0x0023F6D0	0x000000A0	[165] _mono_lock_free_array_queue_push
0x0023F770	0x000000A0	[165] _mono_lock_free_array_queue_pop
0x0023F810	0x00000048	[165] _mono_lock_free_array_queue_cleanup
0x0023F860	0x00000040	[166] _mono_lock_free_queue_init
0x0023F8A0	0x00000020	[166] _mono_lock_free_queue_node_init
0x0023F8C0	0x00000050	[166] _mono_lock_free_queue_node_free
0x0023F910	0x00000140	[166] _mono_lock_free_queue_enqueue
0x0023FA50	0x000002C0	[166] _mono_lock_free_queue_dequeue
0x0023FD10	0x00000085	[166] _free_dummy
0x0023FDA0	0x00000010	[167] _mono_mach_arch_get_ip
0x0023FDB0	0x00000010	[167] _mono_mach_arch_get_sp
0x0023FDC0	0x00000010	[167] _mono_mach_arch_get_mcontext_size
0x0023FDD0	0x00000060	[167] _mono_mach_arch_thread_state_to_mcontext
0x0023FE30	0x00000060	[167] _mono_mach_arch_mcontext_to_thread_state
0x0023FE90	0x00000010	[167] _mono_mach_arch_get_thread_state_size
0x0023FEA0	0x00000040	[167] _mono_mach_arch_get_thread_state
0x0023FEE0	0x00000030	[167] _mono_mach_arch_set_thread_state
0x0023FF10	0x00000020	[167] _mono_mach_get_tls_address_from_thread
0x0023FF30	0x00000020	[167] _mono_mach_arch_get_tls_value_from_thread
0x0023FF50	0x000000EF	[167] _mono_mach_init
0x00240040	0x00000080	[168] _mono_code_manager_init
0x002400C0	0x000000A0	[168] _mono_code_manager_cleanup
0x00240160	0x00000020	[168] _mono_code_manager_new
0x00240180	0x00000020	[168] _mono_code_manager_new_dynamic
0x002401A0	0x00000030	[168] _mono_code_manager_destroy
0x002401D0	0x00000120	[168] _free_chunklist
0x002402F0	0x00000070	[168] _mono_code_manager_invalidate
0x00240360	0x00000010	[168] _mono_code_manager_set_read_only
0x00240370	0x00000090	[168] _mono_code_manager_foreach
0x00240400	0x00000190	[168] _mono_code_manager_reserve_align
0x00240590	0x00000130	[168] _new_codechunk
0x002406C0	0x00000030	[168] _mono_code_manager_reserve
0x002406F0	0x00000070	[168] _mono_code_manager_commit
0x00240760	0x00000060	[168] _mono_code_manager_size
0x002407C0	0x0000015A	[168] _codechunk_valloc
0x00240920	0x00000080	[169] _mono_conc_hashtable_new
0x002409A0	0x00000090	[169] _mono_conc_hashtable_new_full
0x00240A30	0x00000090	[169] _mono_conc_hashtable_destroy
0x00240AC0	0x00000020	[169] _conc_table_free
0x00240AE0	0x00000110	[169] _mono_conc_hashtable_lookup
0x00240BF0	0x00000190	[169] _mono_conc_hashtable_remove
0x00240D80	0x00000258	[169] _mono_conc_hashtable_insert
0x00240FE0	0x00000060	[170] _mono_sigctx_to_monoctx
0x00241040	0x0000005D	[170] _mono_monoctx_to_sigctx
0x002410A0	0x00000010	[171] _mono_counter_get_variance
0x002410B0	0x00000010	[171] _mono_counter_get_unit
0x002410C0	0x00000010	[171] _mono_counter_get_section
0x002410D0	0x00000010	[171] _mono_counter_get_type
0x002410E0	0x00000010	[171] _mono_counter_get_name
0x002410F0	0x00000010	[171] _mono_counter_get_size
0x00241100	0x00000020	[171] _mono_counters_enable
0x00241120	0x00000190	[171] _mono_counters_init
0x002412B0	0x00000090	[171] _mono_counters_register
0x00241340	0x00000160	[171] _register_internal
0x002414A0	0x00000060	[171] _mono_counters_register_with_size
0x00241500	0x00000080	[171] _mono_counters_on_register
0x00241580	0x00000090	[171] _mono_counters_foreach
0x00241610	0x00000060	[171] _mono_counters_sample
0x00241670	0x00000160	[171] _sample_internal
0x002417D0	0x00000370	[171] _mono_counters_dump
0x00241B40	0x00000070	[171] _mono_counters_cleanup
0x00241BB0	0x00000060	[171] _mono_runtime_resource_check_limit
0x00241C10	0x00000040	[171] _mono_runtime_resource_limit
0x00241C50	0x00000020	[171] _mono_runtime_resource_set_callback
0x00241C70	0x00000020	[171] _user_time
0x00241C90	0x00000020	[171] _system_time
0x00241CB0	0x00000020	[171] _total_time
0x00241CD0	0x00000020	[171] _working_set
0x00241CF0	0x00000020	[171] _private_bytes
0x00241D10	0x00000020	[171] _virtual_bytes
0x00241D30	0x00000020	[171] _page_faults
0x00241D50	0x00000060	[171] _cpu_load_1min
0x00241DB0	0x00000060	[171] _cpu_load_5min
0x00241E10	0x00000053	[171] _cpu_load_15min
0x00241E70	0x00000020	[172] _mono_dl_get_so_prefix
0x00241E90	0x00000020	[172] _mono_dl_get_so_suffixes
0x00241EB0	0x00000040	[172] _mono_dl_get_executable_path
0x00241EF0	0x00000011	[172] _mono_dl_get_system_dir
0x00241F10	0x00000010	[173] _mono_dl_open_file
0x00241F20	0x00000020	[173] _mono_dl_close_handle
0x00241F40	0x00000020	[173] _mono_dl_lookup_symbol
0x00241F60	0x00000030	[173] _mono_dl_convert_flags
0x00241F90	0x00000020	[173] _mono_dl_current_error_string
0x00241FB0	0x00000540	[174] _mono_dl_open
0x002424F0	0x00000080	[174] _mono_dl_symbol
0x00242570	0x00000040	[174] _mono_dl_close
0x002425B0	0x00000160	[174] _mono_dl_build_path
0x00242710	0x000000D0	[174] _mono_dl_fallback_register
0x002427E0	0x00000050	[174] _mono_dl_fallback_unregister
0x00242830	0x00000310	[174] _mono_dl_open_runtime_lib
0x00242B40	0x0000017A	[174] _read_string
0x00242CC0	0x00000020	[175] _mono_error_init_flags
0x00242CE0	0x00000010	[175] _mono_error_init
0x00242CF0	0x00000060	[175] _mono_error_cleanup
0x00242D50	0x00000020	[175] _mono_error_ok
0x00242D70	0x00000010	[175] _mono_error_get_error_code
0x00242D80	0x00000020	[175] _mono_error_get_message
0x00242DA0	0x000000A0	[175] _mono_error_dup_strings
0x00242E40	0x000000B0	[175] _mono_error_set_error
0x00242EF0	0x000000C0	[175] _mono_error_set_assembly_load
0x00242FB0	0x00000040	[175] _mono_error_set_assembly_load_simple
0x00242FF0	0x000000C0	[175] _mono_error_set_type_load_class
0x002430B0	0x000000C0	[175] _mono_error_set_type_load_name
0x00243170	0x000000C0	[175] _mono_error_set_method_load
0x00243230	0x000000C0	[175] _mono_error_set_field_load
0x002432F0	0x000000C0	[175] _mono_error_set_bad_image_name
0x002433B0	0x000000D0	[175] _mono_error_set_bad_image
0x00243480	0x000000C0	[175] _mono_error_set_generic_error
0x00243540	0x000002C0	[175] _mono_error_set_from_loader_error
0x00243800	0x00000090	[175] _mono_error_set_out_of_memory
0x00243890	0x00000140	[175] _mono_loader_set_error_from_mono_error
0x002439D0	0x000000B0	[175] _mono_error_set_argument
0x00243A80	0x000000D0	[175] _mono_error_set_not_verifiable
0x00243B50	0x000005F0	[175] _mono_error_prepare_exception
0x00244140	0x00000080	[175] _get_type_name_as_mono_string
0x002441C0	0x000000D0	[175] _mono_error_convert_to_exception
0x00244290	0x00000022	[175] _mono_error_raise_exception
0x002442C0	0x00000030	[176] _mono_file_map_open
0x002442F0	0x00000040	[176] _mono_file_map_size
0x00244330	0x00000010	[176] _mono_file_map_fd
0x00244340	0x00000010	[176] _mono_file_map_close
0x00244350	0x00000030	[176] _mono_file_map_set_allocator
0x00244380	0x000000E0	[176] _mono_file_map_fileio
0x00244460	0x0000001F	[176] _mono_file_unmap_fileio
0x00244480	0x00000160	[177] _mono_hwcap_arch_init
0x002445E0	0x00000130	[177] _mono_hwcap_print
0x00244710	0x00000060	[178] _mono_hwcap_init
0x00244770	0x00000040	[179] _mono_internal_hash_table_init
0x002447B0	0x00000020	[179] _mono_internal_hash_table_destroy
0x002447D0	0x00000090	[179] _mono_internal_hash_table_lookup
0x00244860	0x00000230	[179] _mono_internal_hash_table_insert
0x00244A90	0x0000008D	[179] _mono_internal_hash_table_remove
0x00244B20	0x00000110	[180] _mono_portability_helpers_init
0x00244C30	0x00000610	[180] _mono_portability_find_file
0x00245240	0x00000048	[180] _append_report
0x00245290	0x00000080	[181] _get_hazardous_pointer_with_mask
0x00245310	0x00000020	[181] _mono_lls_init
0x00245330	0x00000100	[181] _mono_lls_find
0x00245430	0x00000070	[181] _mono_lls_insert
0x002454A0	0x00000102	[181] _mono_lls_remove
0x002455B0	0x00000070	[182] _mono_trace_cleanup
0x00245620	0x000000A0	[182] _mono_trace
0x002456C0	0x00000090	[182] _mono_tracev
0x00245750	0x00000070	[182] _mono_trace_set_level
0x002457C0	0x00000070	[182] _mono_trace_set_mask
0x00245830	0x000000A0	[182] _mono_trace_push
0x002458D0	0x00000090	[182] _mono_trace_pop
0x00245960	0x000000D0	[182] _mono_trace_set_level_string
0x00245A30	0x00000110	[182] _mono_trace_set_mask_string
0x00245B40	0x00000030	[182] _mono_trace_is_traced
0x00245B70	0x00000060	[182] _mono_trace_set_log_handler
0x00245BD0	0x000000B0	[182] _log_adapter
0x00245C80	0x00000060	[182] _mono_trace_set_print_handler
0x00245CE0	0x00000030	[182] _print_handler
0x00245D10	0x00000060	[182] _mono_trace_set_printerr_handler
0x00245D70	0x00000025	[182] _printerr_handler
0x00245DA0	0x00000030	[183] _mono_pagesize
0x00245DD0	0x000000D0	[183] _mono_valloc
0x00245EA0	0x00000010	[183] _mono_vfree
0x00245EB0	0x00000070	[183] _mono_file_map
0x00245F20	0x00000010	[183] _mono_file_unmap
0x00245F30	0x00000070	[183] _mono_mprotect
0x00245FA0	0x00000290	[183] _mono_shared_area
0x00246230	0x000002A0	[183] _mono_shared_area_instances_helper
0x002464D0	0x000000B0	[183] _mono_shared_area_remove
0x00246580	0x00000120	[183] _mono_shared_area_for_pid
0x002466A0	0x00000040	[183] _mono_shared_area_unload
0x002466E0	0x00000020	[183] _mono_shared_area_instances
0x00246700	0x000000C0	[183] _mono_valloc_aligned
0x002467C0	0x0000033F	[183] _mono_pages_not_faulted
0x00246B00	0x00000080	[184] _pthread_mutex_timedlock
0x00246B80	0x000000D0	[184] _mono_once
0x00246C50	0x000000A8	[184] _mono_mutex_init_suspend_safe
0x00246D00	0x00000210	[185] _mono_networkinterface_list
0x00246F10	0x000002C3	[185] _mono_network_get_data
0x002471E0	0x00000180	[186] _mono_path_canonicalize
0x00247360	0x0000024B	[186] _mono_path_resolve_symlinks
0x002475B0	0x000002C7	[187] _mono_poll
0x00247880	0x00000210	[188] _mono_process_list
0x00247A90	0x000000E0	[188] _mono_process_get_name
0x00247B70	0x000001B0	[188] _mono_process_get_data_with_error
0x00247D20	0x00000190	[188] _get_pid_status_item
0x00247EB0	0x00000350	[188] _get_process_stat_item
0x00248200	0x00000030	[188] _mono_process_get_data
0x00248230	0x00000010	[188] _mono_process_current_pid
0x00248240	0x00000090	[188] _mono_cpu_count
0x002482D0	0x00000100	[188] _mono_cpu_get_data
0x002483D0	0x00000620	[188] _get_cpu_times
0x002489F0	0x00000009	[188] _mono_atexit
0x00248A00	0x00000040	[189] _mono_property_hash_new
0x00248A40	0x00000040	[189] _mono_property_hash_destroy
0x00248A80	0x00000020	[189] _free_hash
0x00248AA0	0x00000080	[189] _mono_property_hash_insert
0x00248B20	0x00000030	[189] _mono_property_hash_remove_object
0x00248B50	0x00000020	[189] _remove_object
0x00248B70	0x00000036	[189] _mono_property_hash_lookup
0x00248BB0	0x00000009	[190] _mono_free
0x00248BC0	0x00000100	[191] _mono_sem_timedwait
0x00248CC0	0x00000040	[191] _mono_sem_wait
0x00248D00	0x0000001C	[191] _mono_sem_post
0x00248D20	0x00000010	[192] _mono_sha1_init
0x00248D30	0x00000010	[192] _mono_sha1_update
0x00248D40	0x00000020	[192] _mono_sha1_final
0x00248D60	0x00000050	[192] _mono_sha1_get_digest
0x00248DB0	0x000000E0	[192] _mono_sha1_get_digest_from_file
0x00248E90	0x000000D9	[192] _mono_digest_get_public_token
0x00248F70	0x000000D0	[193] _mono_threads_install_dead_letter
0x00249040	0x000001F0	[193] _mono_threads_init_dead_letter
0x00249230	0x0000003A	[193] _mono_dead_letter_dealloc
0x00249270	0x00000010	[194] _mono_threads_init_platform
0x00249280	0x00000020	[194] _mono_threads_core_interrupt
0x002492A0	0x00000010	[194] _mono_threads_core_abort_syscall
0x002492B0	0x00000010	[194] _mono_threads_core_needs_abort_syscall
0x002492C0	0x00000080	[194] _mono_threads_core_suspend
0x00249340	0x000001A0	[194] _mono_threads_core_resume
0x002494E0	0x00000020	[194] _mono_threads_platform_register
0x00249500	0x00000030	[194] _mono_threads_platform_free
0x00249530	0x00000010	[194] _mono_native_thread_id_get
0x00249540	0x00000010	[194] _mono_native_thread_id_equals
0x00249550	0x00000040	[194] _mono_native_thread_create
0x00249590	0x00000010	[194] _mono_threads_core_set_name
0x002495A0	0x00000035	[194] _mono_threads_core_get_stack_bounds
0x002495E0	0x00000190	[195] _mono_threads_core_create_thread
0x00249770	0x000001E0	[195] _inner_start_thread
0x00249950	0x00000020	[195] _mono_threads_core_resume_created
0x00249970	0x00000020	[195] _mono_threads_core_yield
0x00249990	0x00000080	[195] _mono_threads_core_exit
0x00249A10	0x00000040	[195] _mono_threads_core_unregister
0x00249A50	0x00000070	[195] _mono_threads_core_open_handle
0x00249AC0	0x00000050	[195] _mono_threads_get_max_stack_size
0x00249B10	0x00000020	[195] _mono_threads_core_open_thread_handle
0x00249B30	0x00000010	[195] _mono_threads_core_prepare_interrupt
0x00249B40	0x00000010	[195] _mono_threads_core_finish_interrupt
0x00249B50	0x00000010	[195] _mono_threads_core_self_interrupt
0x00249B60	0x00000010	[195] _mono_threads_core_clear_interruption
0x00249B70	0x00000020	[195] _mono_threads_pthread_kill
0x00249B90	0x00000060	[196] _mono_thread_info_lookup
0x00249BF0	0x00000040	[196] _mono_thread_info_register_small_id
0x00249C30	0x000000B0	[196] _mono_thread_info_current
0x00249CE0	0x00000030	[196] _mono_thread_info_get_small_id
0x00249D10	0x00000020	[196] _mono_thread_info_list_head
0x00249D30	0x00000070	[196] _mono_threads_attach_tools_thread
0x00249DA0	0x000001E0	[196] _mono_thread_info_attach
0x00249F80	0x00000050	[196] _mono_thread_info_detach
0x00249FD0	0x000001B0	[196] _unregister_thread
0x0024A180	0x00000030	[196] _mono_thread_info_is_exiting
0x0024A1B0	0x00000160	[196] _mono_threads_init
0x0024A310	0x00000030	[196] _thread_exited_dtor
0x0024A340	0x00000030	[196] _mono_threads_runtime_init
0x0024A370	0x00000020	[196] _mono_threads_get_callbacks
0x0024A390	0x00000020	[196] _mono_threads_get_runtime_callbacks
0x0024A3B0	0x00000120	[196] _mono_thread_info_self_suspend
0x0024A4D0	0x00000080	[196] _mono_thread_info_resume
0x0024A550	0x00000100	[196] _mono_thread_info_core_resume
0x0024A650	0x00000020	[196] _mono_thread_info_finish_suspend
0x0024A670	0x00000040	[196] _mono_thread_info_finish_suspend_and_resume
0x0024A6B0	0x00000260	[196] _mono_thread_info_safe_suspend_sync
0x0024A910	0x00000040	[196] _mono_thread_info_suspend_lock
0x0024A950	0x00000020	[196] _mono_thread_info_suspend_unlock
0x0024A970	0x00000080	[196] _mono_thread_info_setup_async_call
0x0024A9F0	0x00000020	[196] _mono_thread_info_disable_new_interrupt
0x0024AA10	0x000000E0	[196] _mono_thread_info_abort_socket_syscall_for_close
0x0024AAF0	0x00000020	[196] _mono_thread_info_new_interrupt_enabled
0x0024AB10	0x00000020	[196] _mono_thread_info_set_is_async_context
0x0024AB30	0x00000020	[196] _mono_thread_info_is_async_context
0x0024AB50	0x00000010	[196] _mono_threads_create_thread
0x0024AB60	0x00000080	[196] _mono_thread_info_get_stack_bounds
0x0024ABE0	0x00000010	[196] _mono_thread_info_yield
0x0024ABF0	0x00000010	[196] _mono_thread_info_tls_get
0x0024AC00	0x00000020	[196] _mono_thread_info_tls_set
0x0024AC20	0x00000020	[196] _mono_thread_info_exit
0x0024AC40	0x00000010	[196] _mono_thread_info_open_handle
0x0024AC50	0x00000010	[196] _mono_threads_open_thread_handle
0x0024AC60	0x00000010	[196] _mono_thread_info_set_name
0x0024AC70	0x00000010	[196] _mono_thread_info_prepare_interrupt
0x0024AC80	0x00000010	[196] _mono_thread_info_finish_interrupt
0x0024AC90	0x00000020	[196] _mono_thread_info_interrupt
0x0024ACB0	0x00000010	[196] _mono_thread_info_self_interrupt
0x0024ACC0	0x00000010	[196] _mono_thread_info_clear_interruption
0x0024ACD0	0x00000040	[196] _mono_threads_add_async_job
0x0024AD10	0x00000050	[196] _mono_threads_consume_async_jobs
0x0024AD60	0x0000005D	[196] _free_thread_info
0x0024ADC0	0x00000140	[197] _mono_msec_ticks
0x0024AF00	0x00000080	[197] _mono_100ns_ticks
0x0024AF80	0x0000005A	[197] _mono_100ns_datetime
0x0024AFE0	0x00000060	[198] _mono_tls_key_get_offset
0x0024B040	0x00000023	[198] _mono_tls_key_set_offset
0x0024B070	0x00000142	[199] _mono_escape_uri_string
0x0024B1C0	0x00000020	[200] _mono_bitset_alloc_size
0x0024B1E0	0x00000040	[200] _mono_bitset_new
0x0024B220	0x00000020	[200] _mono_bitset_mem_new
0x0024B240	0x00000020	[200] _mono_bitset_free
0x0024B260	0x00000060	[200] _mono_bitset_set
0x0024B2C0	0x00000070	[200] _mono_bitset_test
0x0024B330	0x00000020	[200] _mono_bitset_test_bulk
0x0024B350	0x00000060	[200] _mono_bitset_clear
0x0024B3B0	0x00000030	[200] _mono_bitset_clear_all
0x0024B3E0	0x00000030	[200] _mono_bitset_set_all
0x0024B410	0x00000020	[200] _mono_bitset_invert
0x0024B430	0x00000010	[200] _mono_bitset_size
0x0024B440	0x00000AB0	[200] _mono_bitset_count
0x0024BEF0	0x00000050	[200] _mono_bitset_find_start
0x0024BF40	0x000000C0	[200] _mono_bitset_find_first
0x0024C000	0x00000140	[200] _mono_bitset_find_last
0x0024C140	0x00000110	[200] _mono_bitset_find_first_unset
0x0024C250	0x00000070	[200] _mono_bitset_clone
0x0024C2C0	0x00000070	[200] _mono_bitset_copyto
0x0024C330	0x00000160	[200] _mono_bitset_union
0x0024C490	0x00000160	[200] _mono_bitset_intersection
0x0024C5F0	0x000001F0	[200] _mono_bitset_intersection_2
0x0024C7E0	0x00000160	[200] _mono_bitset_sub
0x0024C940	0x00000050	[200] _mono_bitset_equal
0x0024C990	0x00000080	[200] _mono_bitset_foreach
0x0024CA10	0x000001E0	[201] _mono_get_address_info
0x0024CBF0	0x00000060	[201] _mono_networking_get_tcp_protocol
0x0024CC50	0x00000050	[201] _mono_networking_get_ip_protocol
0x0024CCA0	0x00000060	[201] _mono_networking_get_ipv6_protocol
0x0024CD00	0x000002D0	[201] _mono_get_local_interfaces
0x0024CFD0	0x00000080	[201] _mono_networking_addr_to_str
0x0024D050	0x00000010	[201] _mono_networking_init
0x0024D060	0x00000005	[201] _mono_networking_shutdown
0x0024D070	0x00000020	[202] _mono_address_size_for_family
0x0024D090	0x00000060	[202] _mono_free_address_info
0x0024D0F0	0x000000D0	[202] _mono_socket_address_init
0x0024D1C0	0x00000063	[202] _mono_address_init
0x0024D230	0x000001E0	[203] _mono_unicode_from_external
0x0024D410	0x000001A0	[203] _mono_utf8_from_external
0x0024D5B0	0x00000190	[203] _mono_unicode_to_external
0x0024D740	0x000002D0	[203] _mono_utf8_validate_and_len
0x0024DA10	0x000002F8	[203] _mono_utf8_validate_and_len_with_bounds
0x0024DD10	0x00001C90	[204] _mono_strtod
0x0024F9A0	0x000000F0	[204] _pow5mult
0x0024FA90	0x00000170	[204] _mult
0x0024FC00	0x00000140	[204] _lshift
0x0024FD40	0x00000160	[204] _b2d
0x0024FEA0	0x0000019E	[204] _multadd
0x00250040	0x00000090	[205] _monoeg_g_array_new
0x002500D0	0x00000090	[205] _monoeg_g_array_sized_new
0x00250160	0x00000080	[205] _monoeg_g_array_free
0x002501E0	0x00000120	[205] _monoeg_g_array_append_vals
0x00250300	0x00000150	[205] _monoeg_g_array_insert_vals
0x00250450	0x000000C0	[205] _monoeg_g_array_remove_index
0x00250510	0x000000B0	[205] _monoeg_g_array_remove_index_fast
0x002505C0	0x000000EA	[205] _monoeg_g_array_set_size
0x002506B0	0x00000030	[206] _monoeg_g_byte_array_new
0x002506E0	0x00000010	[206] _monoeg_g_byte_array_free
0x002506F0	0x00000009	[206] _monoeg_g_byte_array_append
0x00250700	0x00000080	[207] _monoeg_g_get_current_time
0x00250780	0x0000006C	[207] _monoeg_g_usleep
0x002507F0	0x00000100	[208] _monoeg_g_dir_open
0x002508F0	0x000000C0	[208] _monoeg_g_dir_read_name
0x002509B0	0x00000080	[208] _monoeg_g_dir_rewind
0x00250A30	0x00000080	[208] _monoeg_g_dir_close
0x00250AB0	0x000000D6	[208] _monoeg_g_mkdir_with_parents
0x00250B90	0x00000070	[209] _monoeg_g_error_new
0x00250C00	0x00000040	[209] _monoeg_g_clear_error
0x00250C40	0x00000070	[209] _monoeg_g_error_free
0x00250CB0	0x00000080	[209] _monoeg_g_set_error
0x00250D30	0x00000030	[209] _monoeg_g_propagate_error
0x00250D60	0x00000230	[210] _monoeg_g_file_get_contents
0x00250F90	0x00000190	[210] _monoeg_g_file_open_tmp
0x00251120	0x0000004B	[210] _monoeg_g_get_current_dir
0x00251170	0x0000011C	[211] _monoeg_g_file_test
0x00251290	0x00000020	[212] _monoeg_g_file_error_quark
0x002512B0	0x00000170	[212] _monoeg_g_file_error_from_errno
0x00251420	0x000006E8	[212] _monoeg_g_file_set_contents
0x00251B10	0x000000B0	[213] _monoeg_g_spaced_primes_closest
0x00251BC0	0x00000070	[213] _monoeg_g_hash_table_new
0x00251C30	0x00000010	[213] _monoeg_g_direct_hash
0x00251C40	0x00000020	[213] _monoeg_g_direct_equal
0x00251C60	0x00000080	[213] _monoeg_g_hash_table_new_full
0x00251CE0	0x00000110	[213] _monoeg_g_hash_table_insert_replace
0x00251DF0	0x00000150	[213] _rehash
0x00251F40	0x000000B0	[213] _monoeg_g_hash_table_get_keys
0x00251FF0	0x00000030	[213] _monoeg_g_hash_table_iter_init
0x00252020	0x000000B0	[213] _monoeg_g_hash_table_iter_next
0x002520D0	0x000000B0	[213] _monoeg_g_hash_table_get_values
0x00252180	0x00000060	[213] _monoeg_g_hash_table_size
0x002521E0	0x000000B0	[213] _monoeg_g_hash_table_lookup
0x00252290	0x000000C0	[213] _monoeg_g_hash_table_lookup_extended
0x00252350	0x000000E0	[213] _monoeg_g_hash_table_foreach
0x00252430	0x000000F0	[213] _monoeg_g_hash_table_find
0x00252520	0x000000B0	[213] _monoeg_g_hash_table_remove_all
0x002525D0	0x00000100	[213] _monoeg_g_hash_table_remove
0x002526D0	0x00000180	[213] _monoeg_g_hash_table_foreach_remove
0x00252850	0x000000E0	[213] _monoeg_g_hash_table_steal
0x00252930	0x00000160	[213] _monoeg_g_hash_table_foreach_steal
0x00252A90	0x000000E0	[213] _monoeg_g_hash_table_destroy
0x00252B70	0x000000A0	[213] _monoeg_g_hash_table_print_stats
0x00252C10	0x00000020	[213] _monoeg_g_int_equal
0x00252C30	0x00000010	[213] _monoeg_g_int_hash
0x00252C40	0x00000030	[213] _monoeg_g_str_equal
0x00252C70	0x0000001F	[213] _monoeg_g_str_hash
0x00252C90	0x00000100	[214] _monoeg_g_iconv_open
0x00252D90	0x00000030	[214] _monoeg_g_iconv_close
0x00252DC0	0x00000170	[214] _monoeg_g_iconv
0x00252F30	0x00000020	[214] _monoeg_g_convert_error_quark
0x00252F50	0x00000380	[214] _monoeg_g_convert
0x002532D0	0x00000110	[214] _monoeg_g_unichar_to_utf8
0x002533E0	0x000000D0	[214] _monoeg_g_utf8_to_ucs4_fast
0x002534B0	0x00000040	[214] _monoeg_g_utf8_to_utf16
0x002534F0	0x00000530	[214] _eg_utf8_to_utf16_general
0x00253A20	0x00000040	[214] _eg_utf8_to_utf16_with_nuls
0x00253A60	0x00000440	[214] _monoeg_utf8_to_ucs4
0x00253EA0	0x00000130	[214] _decode_utf8
0x00253FD0	0x000003C0	[214] _monoeg_g_utf16_to_utf8
0x00254390	0x000000C0	[214] _decode_utf16le
0x00254450	0x00000210	[214] _monoeg_g_utf16_to_ucs4
0x00254660	0x00000390	[214] _monoeg_g_ucs4_to_utf8
0x002549F0	0x000002A0	[214] _monoeg_g_ucs4_to_utf16
0x00254C90	0x00000020	[214] _decode_latin1
0x00254CB0	0x00000050	[214] _encode_latin1
0x00254D00	0x00000080	[214] _decode_utf32be
0x00254D80	0x00000050	[214] _encode_utf32be
0x00254DD0	0x00000080	[214] _decode_utf32le
0x00254E50	0x00000050	[214] _encode_utf32le
0x00254EA0	0x000000C0	[214] _decode_utf16be
0x00254F60	0x00000080	[214] _encode_utf16be
0x00254FE0	0x00000080	[214] _encode_utf16le
0x00255060	0x0000010E	[214] _encode_utf8
0x00255170	0x00000020	[215] _monoeg_g_list_alloc
0x00255190	0x00000050	[215] _monoeg_g_list_prepend
0x002551E0	0x00000010	[215] _monoeg_g_list_free_1
0x002551F0	0x00000030	[215] _monoeg_g_list_free
0x00255220	0x00000060	[215] _monoeg_g_list_append
0x00255280	0x00000020	[215] _monoeg_g_list_last
0x002552A0	0x00000040	[215] _monoeg_g_list_concat
0x002552E0	0x00000020	[215] _monoeg_g_list_length
0x00255300	0x00000070	[215] _monoeg_g_list_remove
0x00255370	0x00000030	[215] _monoeg_g_list_find
0x002553A0	0x00000090	[215] _monoeg_g_list_remove_all
0x00255430	0x00000040	[215] _monoeg_g_list_remove_link
0x00255470	0x00000050	[215] _monoeg_g_list_delete_link
0x002554C0	0x00000050	[215] _monoeg_g_list_find_custom
0x00255510	0x00000030	[215] _monoeg_g_list_reverse
0x00255540	0x00000020	[215] _monoeg_g_list_first
0x00255560	0x000000A0	[215] _monoeg_g_list_insert_sorted
0x00255600	0x00000090	[215] _monoeg_g_list_insert_before
0x00255690	0x00000040	[215] _monoeg_g_list_foreach
0x002556D0	0x00000040	[215] _monoeg_g_list_index
0x00255710	0x00000030	[215] _monoeg_g_list_nth
0x00255740	0x00000040	[215] _monoeg_g_list_nth_data
0x00255780	0x00000090	[215] _monoeg_g_list_copy
0x00255810	0x00000439	[215] _monoeg_g_list_sort
0x00255C50	0x00000050	[216] _monoeg_g_markup_parse_context_new
0x00255CA0	0x000000C0	[216] _monoeg_g_markup_parse_context_free
0x00255D60	0x00000A30	[216] _monoeg_g_markup_parse_context_parse
0x00256790	0x00000058	[216] _monoeg_g_markup_parse_context_end_parse
0x002567F0	0x00000020	[217] _monoeg_g_free
0x00256810	0x00000080	[217] _monoeg_g_memdup
0x00256890	0x00000060	[217] _monoeg_malloc
0x002568F0	0x00000070	[217] _monoeg_realloc
0x00256960	0x00000070	[217] _monoeg_malloc0
0x002569D0	0x00000020	[217] _monoeg_try_malloc
0x002569F0	0x0000002C	[217] _monoeg_try_realloc
0x00256A20	0x00000010	[218] _monoeg_g_getenv
0x00256A30	0x00000030	[218] _monoeg_g_setenv
0x00256A60	0x00000010	[218] _monoeg_g_unsetenv
0x00256A70	0x00000010	[218] _monoeg_g_win32_getlocale
0x00256A80	0x00000070	[218] _monoeg_g_path_is_absolute
0x00256AF0	0x00000020	[218] _monoeg_g_get_home_dir
0x00256B10	0x00000090	[218] _get_pw_data
0x00256BA0	0x00000020	[218] _monoeg_g_get_user_name
0x00256BC0	0x00000096	[218] _monoeg_g_get_tmp_dir
0x00256C60	0x00000060	[219] _monoeg_g_print
0x00256CC0	0x00000040	[219] _default_stdout_handler
0x00256D00	0x00000060	[219] _monoeg_g_printerr
0x00256D60	0x00000040	[219] _default_stderr_handler
0x00256DA0	0x00000020	[219] _monoeg_g_log_set_always_fatal
0x00256DC0	0x00000010	[219] _monoeg_g_log_set_fatal_mask
0x00256DD0	0x00000080	[219] _monoeg_g_logv
0x00256E50	0x000000B0	[219] _monoeg_log_default_handler
0x00256F00	0x00000080	[219] _monoeg_g_log
0x00256F80	0x00000090	[219] _monoeg_assertion_message
0x00257010	0x00000030	[219] _monoeg_log_set_default_handler
0x00257040	0x00000020	[219] _monoeg_set_print_handler
0x00257060	0x0000001A	[219] _monoeg_set_printerr_handler
0x00257080	0x00000190	[220] _monoeg_g_build_path
0x00257210	0x000000C0	[220] _monoeg_g_path_get_dirname
0x002572D0	0x000000F0	[220] _monoeg_g_path_get_basename
0x002573C0	0x00000150	[220] _monoeg_g_find_program_in_path
0x00257510	0x00000030	[220] _monoeg_g_set_prgname
0x00257540	0x00000011	[220] _monoeg_g_get_prgname
0x00257560	0x00000030	[221] _monoeg_g_ptr_array_new
0x00257590	0x000000D0	[221] _monoeg_g_ptr_array_sized_new
0x00257660	0x00000080	[221] _monoeg_g_ptr_array_free
0x002576E0	0x000000D0	[221] _monoeg_g_ptr_array_set_size
0x002577B0	0x000000B0	[221] _monoeg_g_ptr_array_add
0x00257860	0x000000E0	[221] _monoeg_g_ptr_array_remove_index
0x00257940	0x000000C0	[221] _monoeg_g_ptr_array_remove_index_fast
0x00257A00	0x000000A0	[221] _monoeg_g_ptr_array_remove
0x00257AA0	0x000000B0	[221] _monoeg_g_ptr_array_remove_fast
0x00257B50	0x00000040	[221] _monoeg_g_ptr_array_foreach
0x00257B90	0x00000080	[221] _monoeg_g_ptr_array_sort
0x00257C10	0x0000007D	[221] _monoeg_g_ptr_array_sort_with_data
0x00257C90	0x00001D0C	[222] _monoeg_g_qsort_with_data
0x002599A0	0x00000050	[223] _monoeg_g_queue_pop_head
0x002599F0	0x00000020	[223] _monoeg_g_queue_is_empty
0x00259A10	0x00000040	[223] _monoeg_g_queue_push_head
0x00259A50	0x00000040	[223] _monoeg_g_queue_push_tail
0x00259A90	0x00000020	[223] _monoeg_g_queue_new
0x00259AB0	0x00000030	[223] _monoeg_g_queue_free
0x00259AE0	0x00000026	[223] _monoeg_g_queue_foreach
0x00259B10	0x000004E0	[224] _monoeg_g_shell_parse_argv
0x00259FF0	0x00000090	[224] _monoeg_g_shell_quote
0x0025A080	0x00000201	[224] _monoeg_g_shell_unquote
0x0025A290	0x00000020	[225] _monoeg_g_slist_alloc
0x0025A2B0	0x00000010	[225] _monoeg_g_slist_free_1
0x0025A2C0	0x00000050	[225] _monoeg_g_slist_append
0x0025A310	0x00000030	[225] _monoeg_g_slist_concat
0x0025A340	0x00000030	[225] _monoeg_g_slist_prepend
0x0025A370	0x00000070	[225] _monoeg_g_slist_insert_before
0x0025A3E0	0x00000030	[225] _monoeg_g_slist_free
0x0025A410	0x00000080	[225] _monoeg_g_slist_copy
0x0025A490	0x00000020	[225] _monoeg_g_slist_last
0x0025A4B0	0x00000040	[225] _monoeg_g_slist_foreach
0x0025A4F0	0x00000030	[225] _monoeg_g_slist_find
0x0025A520	0x00000050	[225] _monoeg_g_slist_find_custom
0x0025A570	0x00000020	[225] _monoeg_g_slist_length
0x0025A590	0x00000070	[225] _monoeg_g_slist_remove
0x0025A600	0x00000090	[225] _monoeg_g_slist_remove_all
0x0025A690	0x00000060	[225] _monoeg_g_slist_remove_link
0x0025A6F0	0x00000080	[225] _monoeg_g_slist_delete_link
0x0025A770	0x00000030	[225] _monoeg_g_slist_reverse
0x0025A7A0	0x000000A0	[225] _monoeg_g_slist_insert_sorted
0x0025A840	0x00000040	[225] _monoeg_g_slist_index
0x0025A880	0x00000030	[225] _monoeg_g_slist_nth
0x0025A8B0	0x00000040	[225] _monoeg_g_slist_nth_data
0x0025A8F0	0x0000040E	[225] _monoeg_g_slist_sort
0x0025AD00	0x00000060	[226] _eg_getdtablesize
0x0025AD60	0x000007A0	[226] _monoeg_g_spawn_command_line_sync
0x0025B500	0x00000923	[226] _monoeg_g_spawn_async_with_pipes
0x0025BE30	0x00000050	[227] _monoeg_g_strndup
0x0025BE80	0x00000050	[227] _monoeg_g_strfreev
0x0025BED0	0x00000080	[227] _monoeg_g_strdupv
0x0025BF50	0x00000070	[227] _monoeg_g_strv_length
0x0025BFC0	0x000000D0	[227] _monoeg_g_str_has_suffix
0x0025C090	0x000000C0	[227] _monoeg_g_str_has_prefix
0x0025C150	0x00000030	[227] _monoeg_g_strdup_vprintf
0x0025C180	0x00000040	[227] _monoeg_g_strdup_printf
0x0025C1C0	0x00000010	[227] _monoeg_g_strerror
0x0025C1D0	0x00000110	[227] _monoeg_g_strconcat
0x0025C2E0	0x00000350	[227] _monoeg_g_strsplit
0x0025C630	0x00000320	[227] _monoeg_g_strsplit_set
0x0025C950	0x00000050	[227] _monoeg_g_strreverse
0x0025C9A0	0x00000220	[227] _monoeg_g_strjoin
0x0025CBC0	0x000000B0	[227] _monoeg_g_stpcpy
0x0025CC70	0x00000270	[227] _monoeg_g_strjoinv
0x0025CEE0	0x00000090	[227] _monoeg_g_strchug
0x0025CF70	0x00000080	[227] _monoeg_g_strchomp
0x0025CFF0	0x00000020	[227] _monoeg_g_printf
0x0025D010	0x00000030	[227] _monoeg_g_fprintf
0x0025D040	0x00000040	[227] _monoeg_g_sprintf
0x0025D080	0x00000040	[227] _monoeg_g_snprintf
0x0025D0C0	0x00000250	[227] _monoeg_g_filename_to_uri
0x0025D310	0x00000240	[227] _monoeg_g_filename_from_uri
0x0025D550	0x00000080	[227] _monoeg_g_strdown
0x0025D5D0	0x00000020	[227] _monoeg_g_ascii_tolower
0x0025D5F0	0x00000260	[227] _monoeg_g_ascii_strdown
0x0025D850	0x00000020	[227] _monoeg_ascii_toupper
0x0025D870	0x00000260	[227] _monoeg_ascii_strup
0x0025DAD0	0x000000F0	[227] _monoeg_g_ascii_strncasecmp
0x0025DBC0	0x000000E0	[227] _monoeg_ascii_strcasecmp
0x0025DCA0	0x000000A0	[227] _monoeg_g_strdelimit
0x0025DD40	0x00000010	[227] _monoeg_g_strlcpy
0x0025DD50	0x00000180	[227] _monoeg_g_strescape
0x0025DED0	0x00000060	[227] _monoeg_g_ascii_xdigit_value
0x0025DF30	0x00000039	[227] _monoeg_g_strnfill
0x0025DF70	0x00000080	[228] _monoeg_g_string_new_len
0x0025DFF0	0x00000080	[228] _monoeg_g_string_new
0x0025E070	0x00000040	[228] _monoeg_g_string_sized_new
0x0025E0B0	0x00000080	[228] _monoeg_g_string_free
0x0025E130	0x00000110	[228] _monoeg_g_string_append_len
0x0025E240	0x000000C0	[228] _monoeg_g_string_append
0x0025E300	0x000000A0	[228] _monoeg_g_string_append_c
0x0025E3A0	0x00000090	[228] _monoeg_g_string_append_unichar
0x0025E430	0x000000F0	[228] _monoeg_g_string_prepend
0x0025E520	0x00000140	[228] _monoeg_g_string_insert
0x0025E660	0x00000100	[228] _monoeg_g_string_append_printf
0x0025E760	0x00000100	[228] _monoeg_g_string_append_vprintf
0x0025E860	0x000000C0	[228] _monoeg_g_string_printf
0x0025E920	0x00000070	[228] _monoeg_g_string_truncate
0x0025E990	0x00000090	[228] _monoeg_g_string_set_size
0x0025EA20	0x000000A2	[228] _monoeg_g_string_erase
0x0025EAD0	0x00000090	[229] _monoeg_g_timer_new
0x0025EB60	0x00000080	[229] _monoeg_g_timer_start
0x0025EBE0	0x00000060	[229] _monoeg_g_timer_destroy
0x0025EC40	0x00000070	[229] _monoeg_g_timer_stop
0x0025ECB0	0x000000DA	[229] _monoeg_g_timer_elapsed
0x0025ED90	0x000000A0	[230] _monoeg_g_unichar_type
0x0025EE30	0x00000010	[230] _monoeg_unichar_break_type
0x0025EE40	0x000000A0	[230] _monoeg_g_unichar_case
0x0025EEE0	0x00000070	[230] _monoeg_g_unichar_toupper
0x0025EF50	0x00000070	[230] _monoeg_g_unichar_tolower
0x0025EFC0	0x000000C0	[230] _monoeg_g_unichar_totitle
0x0025F080	0x00000040	[230] _monoeg_g_unichar_isxdigit
0x0025F0C0	0x00000030	[230] _monoeg_g_unichar_xdigit_value
0x0025F0F0	0x000000B0	[230] _monoeg_unichar_isspace
0x0025F1A0	0x00000050	[230] _monoeg_g_filename_from_utf8
0x0025F1F0	0x00000060	[230] _monoeg_g_get_charset
0x0025F250	0x00000090	[230] _monoeg_g_locale_to_utf8
0x0025F2E0	0x0000008C	[230] _monoeg_g_locale_from_utf8
0x0025F370	0x00000080	[231] _monoeg_g_utf8_strup
0x0025F3F0	0x00000080	[231] _monoeg_g_utf8_strdown
0x0025F470	0x000000E0	[231] _monoeg_g_utf8_validate
0x0025F550	0x000001B0	[231] _utf8_validate
0x0025F700	0x00000170	[231] _monoeg_utf8_get_char_validated
0x0025F870	0x00000070	[231] _monoeg_g_utf8_strlen
0x0025F8E0	0x000000D0	[231] _monoeg_g_utf8_get_char
0x0025F9B0	0x00000020	[231] _monoeg_utf8_find_prev_char
0x0025F9D0	0x00000010	[231] _monoeg_utf8_prev_char
0x0025F9E0	0x000000B0	[231] _monoeg_g_utf8_offset_to_pointer
0x0025FA90	0x0000005A	[231] _monoeg_g_utf8_pointer_to_offset
0x0025FAF0	0x0000009F	[232] _vasprintf
0x0025FB90	0x00000020	[233] _monotouch_set_connection_mode
0x0025FBB0	0x00000020	[233] _monotouch_set_monodevelop_port
0x0025FBD0	0x00000210	[233] _monotouch_start_debugging
0x0025FDE0	0x00000120	[233] _monotouch_start_profiling
0x0025FF00	0x00001040	[233] _monotouch_configure_debugging
0x00260F40	0x000002F0	[233] _get_preference
0x00261230	0x00000BD0	[233] _monotouch_connect_wifi
0x00261E00	0x00000040	[233] _sdb_connect
0x00261E40	0x00000030	[233] _sdb_close1
0x00261E70	0x00000040	[233] _sdb_close2
0x00261EB0	0x00000090	[233] _send_uninterrupted
0x00261F40	0x000000D0	[233] _recv_uninterrupted
0x00262010	0x00000040	[233] _sdb_send
0x00262050	0x00000040	[233] _sdb_recv
0x00262090	0x00000030	[233] __OSSwapInt16
0x002620C0	0x00000040	[233] ___darwin_fd_isset
0x00262100	0x00000BD0	[233] _monotouch_process_connection
0x00262CD0	0x00000740	[233] _monotouch_connect_usb
0x00263410	0x00000240	[233] _monotouch_dump_objc_api
0x00263650	0x00000110	[233] _monotouch_load_debugger
0x00263760	0x000000D0	[233] _monotouch_load_profiler
0x00263830	0x000006C0	[233] _monotouch_debug_listen
0x00263EF0	0x00000CDB	[233] _monotouch_debug_connect
0x00264BD0	0x00000590	[234] _assembly_preload_hook
0x00265160	0x000000C0	[234] -[XamarinGCSupport init]
0x00265220	0x00000020	[234] -[XamarinGCSupport start]
0x00265240	0x00000030	[234] -[XamarinGCSupport memoryWarning:]
0x00265270	0x00000A2F	[234] _xamarin_main
0x00265CA0	0x00000080	[235] _xamarin_get_locale_country_code
0x00265D20	0x00000030	[235] _xamarin_log
0x00265D50	0x00000190	[235] _xamarin_timezone_get_data
0x00265EE0	0x000000E0	[235] _xamarin_timezone_get_names
0x00265FC0	0x00000010	[235] _xamarin_start_wwan
0x00265FD0	0x00000010	[235] _monotouch_get_locale_country_code
0x00265FE0	0x00000020	[235] _monotouch_log
0x00266000	0x00000030	[235] _monotouch_timezone_get_data
0x00266030	0x00000020	[235] _monotouch_timezone_get_names
0x00266050	0x00000020	[235] _monotouch_start_wwan
0x00266070	0x000000BB	[235] _monotouch_GetFolderPath
0x00266130	0x000000B0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr
0x002661E0	0x000000B0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr
0x00266290	0x000000B0	[236] _xamarin_float_objc_msgSend
0x00266340	0x000000B0	[236] _xamarin_float_objc_msgSendSuper
0x002663F0	0x000000B0	[236] _xamarin_nfloat_objc_msgSend
0x002664A0	0x000000B0	[236] _xamarin_nfloat_objc_msgSendSuper
0x00266550	0x000000C0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_IntPtr_int
0x00266610	0x000000C0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_IntPtr_int
0x002666D0	0x000000C0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_IntPtr_UInt32
0x00266790	0x000000C0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_IntPtr_UInt32
0x00266850	0x000000E0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_IntPtr_UInt64
0x00266930	0x000000E0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_IntPtr_UInt64
0x00266A10	0x000000F0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_int_int_int_int
0x00266B00	0x000000F0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_int_int_int_int
0x00266BF0	0x000000F0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_nint_nint_nint_UInt32
0x00266CE0	0x000000F0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_nint_nint_nint_UInt32
0x00266DD0	0x00000100	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_nint_nint_nint_UInt64
0x00266ED0	0x00000100	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_nint_nint_nint_UInt64
0x00266FD0	0x000000E0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_int_int_int
0x002670B0	0x000000E0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_int_int_int
0x00267190	0x000000E0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_UInt32_nint_UInt32
0x00267270	0x000000E0	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_UInt32_nint_UInt32
0x00267350	0x000000F0	[236] _xamarin_IntPtr_objc_msgSend_IntPtr_UInt64_nint_UInt64
0x00267440	0x00000100	[236] _xamarin_IntPtr_objc_msgSendSuper_IntPtr_UInt64_nint_UInt64
0x00267540	0x00000080	[236] _xamarin_vector_float3__Vector4_objc_msgSend
0x002675C0	0x00000070	[236] _xamarin_vector_float3__Vector4_objc_msgSend_stret
0x00267630	0x000000A0	[236] _xamarin_vector_float3__void_objc_msgSend_Vector4
0x002676D0	0x00000080	[236] _xamarin_vector_float3__Vector4_objc_msgSendSuper
0x00267750	0x00000070	[236] _xamarin_vector_float3__Vector4_objc_msgSendSuper_stret
0x002677C0	0x000000A0	[236] _xamarin_vector_float3__void_objc_msgSendSuper_Vector4
0x00267860	0x00000070	[236] _xamarin_vector_float3__Vector3_objc_msgSend
0x002678D0	0x00000060	[236] _xamarin_vector_float3__Vector3_objc_msgSend_stret
0x00267930	0x000000A0	[236] _xamarin_vector_float3__void_objc_msgSend_Vector3
0x002679D0	0x000000D0	[236] _xamarin_vector_float3__Vector3_objc_msgSend_stret_Vector3
0x00267AA0	0x000000E0	[236] _xamarin_vector_float3__Vector3_objc_msgSend_Vector3
0x00267B80	0x00000070	[236] _xamarin_vector_float3__Vector3_objc_msgSendSuper
0x00267BF0	0x00000060	[236] _xamarin_vector_float3__Vector3_objc_msgSendSuper_stret
0x00267C50	0x000000A0	[236] _xamarin_vector_float3__void_objc_msgSendSuper_Vector3
0x00267CF0	0x000000D0	[236] _xamarin_vector_float3__Vector3_objc_msgSendSuper_stret_Vector3
0x00267DC0	0x000000E0	[236] _xamarin_vector_float3__Vector3_objc_msgSendSuper_Vector3
0x00267EA0	0x00000040	[236] _monotouch_IntPtr_objc_msgSend_IntPtr
0x00267EE0	0x00000036	[236] _monotouch_IntPtr_objc_msgSendSuper_IntPtr
0x00267F20	0x000000D0	[237] -[XamarinNSThreadObject initWithData:selector:argument:is_direct_binding:]
0x00267FF0	0x000000D0	[237] -[XamarinNSThreadObject start:]
0x002680C0	0x00000100	[237] -[XamarinNSThreadObject dealloc]
0x002681C0	0x00000060	[237] ___32-[XamarinNSThreadObject dealloc]_block_invoke
0x00268220	0x000000F0	[237] _xamarin_init_nsthread
0x00268310	0x000000A0	[237] -[CocoaThreadInitializer entryPoint:]
0x002683B0	0x000000B0	[237] -[CocoaThreadInitializer initWithFunc:]
0x00268460	0x00000070	[237] _initialize_cocoa_threads
0x002684D0	0x000000A0	[237] _install_nsautoreleasepool_hooks
0x00268570	0x00000030	[237] _thread_start
0x002685A0	0x00000030	[237] _thread_end
0x002685D0	0x00000050	[237] _xamarin_copy_helper
0x00268620	0x00000040	[237] _xamarin_dispose_helper
0x00268660	0x00000020	[237] _xamarin_get_block_descriptor
0x00268680	0x000000C0	[237] _xamarin_thread_finish
0x00268740	0x000000C0	[237] _xamarin_thread_start
0x00268800	0x0000001F	[237] _create_thread_helper
0x00268820	0x00000040	[238] _xamarin_register_nsobject
0x00268860	0x00000030	[238] _xamarin_register_assembly
0x00268890	0x00000030	[238] _xamarin_throw_ns_exception
0x002688C0	0x00000040	[238] _xamarin_get_block_wrapper_creator
0x00268900	0x00000040	[238] _xamarin_create_block_proxy
0x00268940	0x00000030	[238] _xamarin_register_entry_assembly
0x00268970	0x00000030	[238] _xamarin_get_class
0x002689A0	0x00000030	[238] _xamarin_get_selector
0x002689D0	0x00000030	[238] _xamarin_get_class_handle
0x00268A00	0x00000030	[238] _xamarin_get_selector_handle
0x00268A30	0x00000040	[238] _xamarin_get_method_for_selector
0x00268A70	0x00000030	[238] _xamarin_try_get_nsobject
0x00268AA0	0x00000030	[238] _xamarin_get_nsobject
0x00268AD0	0x00000030	[238] _xamarin_get_handle_for_inativeobject
0x00268B00	0x00000040	[238] _xamarin_unregister_nsobject
0x00268B40	0x00000050	[238] _xamarin_get_method_direct
0x00268B90	0x00000060	[238] _xamarin_get_generic_method_direct
0x00268BF0	0x00000030	[238] _xamarin_try_get_or_construct_nsobject
0x00268C20	0x00000050	[238] _xamarin_get_inative_object_dynamic
0x00268C70	0x00000060	[238] _xamarin_get_inative_object_static
0x00268CD0	0x00000050	[238] _xamarin_get_nsobject_with_type
0x00268D20	0x00000030	[238] _xamarin_dispose
0x00268D50	0x00000040	[238] _xamarin_is_parameter_transient
0x00268D90	0x00000070	[238] _xamarin_get_method_and_object_for_selector
0x00268E00	0x00000040	[238] _xamarin_throw_product_exception
0x00268E40	0x00000030	[238] _xamarin_reflection_type_get_full_name
0x00268E70	0x00000030	[238] _xamarin_lookup_managed_type_name
0x00268EA0	0x00000020	[238] _xamarin_get_nsobject_handle
0x00268EC0	0x00000030	[238] _xamarin_set_nsobject_handle
0x00268EF0	0x00000030	[238] _xamarin_set_nsobject_flags
0x00268F20	0x00000080	[238] _xamarin_get_parameter_type
0x00268FA0	0x00000050	[238] _xamarin_get_nsobject_with_type_for_ptr
0x00268FF0	0x00000120	[238] _xamarin_get_nsobject_with_type_for_ptr_created
0x00269110	0x00000020	[238] _xamarin_get_gchandle
0x00269130	0x000000B0	[238] _xamarin_get_managed_object_for_ptr
0x002691E0	0x00000100	[238] _xamarin_get_managed_object_for_ptr_fast
0x002692E0	0x00000080	[238] _xamarin_assertion_message
0x00269360	0x00000030	[238] _xamarin_class_get_full_name
0x00269390	0x00000040	[238] _xamarin_framework_peer_lock
0x002693D0	0x00000040	[238] _xamarin_framework_peer_unlock
0x00269410	0x00000050	[238] _xamarin_is_class_nsobject
0x00269460	0x00000050	[238] _xamarin_is_class_inativeobject
0x002694B0	0x00000050	[238] _xamarin_is_class_array
0x00269500	0x00000030	[238] _get_gchandle
0x00269530	0x00000020	[238] _xamarin_get_gchandle_with_flags
0x00269550	0x00000040	[238] _get_raw_gchandle
0x00269590	0x00000030	[238] _xamarin_has_managed_ref
0x002695C0	0x00000060	[238] _xamarin_throw_exception
0x00269620	0x00000050	[238] _xamarin_create_exception
0x00269670	0x00000020	[238] _xamarin_get_reflection_method_method
0x00269690	0x00000110	[238] _xamarin_get_handle
0x002697A0	0x00000040	[238] _xamarin_strdup_printf
0x002697E0	0x00000030	[238] _xamarin_free
0x00269810	0x00000180	[238] _xamarin_check_for_gced_object
0x00269990	0x00000170	[238] _verify_cast
0x00269B00	0x00000050	[238] _xamarin_verify_parameter
0x00269B50	0x00000040	[238] _xamarin_check_objc_type
0x00269B90	0x00000030	[238] _xamarin_type_get_full_name
0x00269BC0	0x00000040	[238] _xamarin_file_exists
0x00269C00	0x00000030	[238] _xamarin_open_and_register
0x00269C30	0x00000230	[238] _open_assembly
0x00269E60	0x00000050	[238] _register_assembly
0x00269EB0	0x00000040	[238] _xamarin_setup_classmap
0x00269EF0	0x00000020	[238] _xamarin_install_unhandled_exception_hook
0x00269F10	0x00000160	[238] _xamarin_unhandled_exception_handler
0x0026A070	0x000001C0	[238] _print_exception
0x0026A230	0x00000470	[238] _xamarin_initialize
0x0026A6A0	0x00000070	[238] _log_callback
0x0026A710	0x00000040	[238] _print_callback
0x0026A750	0x00000080	[238] _is_class_finalization_aware
0x0026A7D0	0x00000030	[238] _object_queued_for_finalization
0x0026A800	0x000000C0	[238] _exception_handler
0x0026A8C0	0x00000080	[238] _get_class_from_name
0x0026A940	0x00000050	[238] _pump_gc
0x0026A990	0x00000120	[238] _gc_enable_new_refcount
0x0026AAB0	0x000000E0	[238] _xamarin_get_bundle_path
0x0026AB90	0x00000040	[238] _xamarin_set_bundle_path
0x0026ABD0	0x00000540	[238] _xamarin_objc_type_size
0x0026B110	0x00000360	[238] _objc_skip_type
0x0026B470	0x00000150	[238] _xamarin_create_gchandle
0x0026B5C0	0x00000180	[238] _xamarin_switch_gchandle
0x0026B740	0x00000070	[238] _xamarin_free_gchandle
0x0026B7B0	0x00000040	[238] _xamarin_clear_gchandle
0x0026B7F0	0x00000040	[238] _xamarin_set_gchandle
0x0026B830	0x000000D0	[238] _xamarin_release_managed_ref
0x0026B900	0x00000090	[238] _is_user_type
0x0026B990	0x000000D0	[238] _xamarin_create_managed_ref
0x0026BA60	0x00000020	[238] _mt_dummy_use
0x0026BA80	0x000000E0	[238] _xamarin_get_delegate_for_block_parameter
0x0026BB60	0x000001B0	[238] _get_method_block_wrapper_creator
0x0026BD10	0x00000050	[238] _xamarin_set_use_sgen
0x0026BD60	0x00000020	[238] _xamarin_get_use_sgen
0x0026BD80	0x00000050	[238] _xamarin_set_is_unified
0x0026BDD0	0x00000020	[238] _xamarin_get_is_unified
0x0026BDF0	0x000000A0	[238] _xamarin_skip_encoding_flags
0x0026BE90	0x00000020	[238] _method_and_par_hash
0x0026BEB0	0x00000060	[238] _method_and_par_compare
0x0026BF10	0x00000080	[238] _gc_toggleref_callback
0x0026BF90	0x00000030	[238] _gc_register_toggleref
0x0026BFC0	0x00000090	[238] _gc_event_callback
0x0026C050	0x00000200	[238] _detect_product_assembly
0x0026C250	0x00000070	[238] _fetch_exception_property_string
0x0026C2C0	0x000000F8	[238] _fetch_exception_property
0x0026C3C0	0x00000090	[239] _x_init_mutex
0x0026C450	0x000004A0	[239] _xamarin_marshal_return_value
0x0026C8F0	0x00000020	[239] _mt_dummy_use
0x0026C910	0x00000060	[239] _xamarin_get_frame_length
0x0026C970	0x000000E0	[239] _xamarin_release_trampoline
0x0026CA50	0x00000060	[239] _invoke_objc_method_implementation
0x0026CAB0	0x000000E0	[239] _xamarin_calayer_release_trampoline
0x0026CB90	0x000000B0	[239] _xamarin_dealloc_trampoline
0x0026CC40	0x00000090	[239] _xamarin_retain_trampoline
0x0026CCD0	0x00001970	[239] _xamarin_fpret_double_trampoline
0x0026E640	0x00000050	[239] _s_list_prepend
0x0026E690	0x00000040	[239] _s_list_free
0x0026E6D0	0x00001970	[239] _xamarin_fpret_single_trampoline
0x00270040	0x00001980	[239] _xamarin_longret_trampoline
0x002719C0	0x000019C0	[239] _xamarin_stret_trampoline
0x00273380	0x00001B90	[239] _xamarin_trampoline
0x00274F10	0x00001470	[239] _xamarin_ctor_trampoline
0x00276380	0x00001900	[239] _xamarin_static_trampoline
0x00277C80	0x000018A0	[239] _xamarin_static_fpret_single_trampoline
0x00279520	0x000018A0	[239] _xamarin_static_fpret_double_trampoline
0x0027ADC0	0x000018A0	[239] _xamarin_static_longret_trampoline
0x0027C660	0x000018E0	[239] _xamarin_static_stret_trampoline
0x0027DF40	0x000000D1	[239] _find_objc_method_implementation
0x0027E020	0x000001E0	[240] _CreateZStream
0x0027E200	0x00000030	[240] _z_alloc
0x0027E230	0x00000030	[240] _z_free
0x0027E260	0x00000150	[240] _CloseZStream
0x0027E3B0	0x000000A0	[240] _flush_internal
0x0027E450	0x00000030	[240] _Flush
0x0027E480	0x000001A0	[240] _ReadZStream
0x0027E620	0x00000150	[240] _WriteZStream
0x0027E770	0x00000096	[240] _write_to_managed
0x0027E806	0x00000007	[241] _xamarin_x86_double_abi_stret_trampoline
0x0027E80D	0x00000066	[241] _xamarin_static_x86_double_abi_stret_trampoline
0x0027E880	0x00000017	[242] _xamarin_extension_main
0x0027E898	0x00000006	[  5] _NSLog
0x0027E89E	0x00000006	[  5] _NSSetUncaughtExceptionHandler
0x0027E8A4	0x00000006	[  5] _NSStringFromClass
0x0027E8AA	0x00000006	[  6] _UIApplicationMain
0x0027E8B0	0x00000006	[  7] _deflate
0x0027E8B6	0x00000006	[  7] _deflateEnd
0x0027E8BC	0x00000006	[  7] _deflateInit2_
0x0027E8C2	0x00000006	[  7] _inflate
0x0027E8C8	0x00000006	[  7] _inflateEnd
0x0027E8CE	0x00000006	[  7] _inflateInit2_
0x0027E8D4	0x00000006	[  8] _iconv
0x0027E8DA	0x00000006	[  8] _iconv_close
0x0027E8E0	0x00000006	[  8] _iconv_open
0x0027E8E6	0x00000006	[  8] _locale_charset
0x0027E8EC	0x00000006	[243] __ZdlPv
0x0027E8F2	0x00000006	[243] __Znwm
0x0027E8F8	0x00000006	[244] _CC_SHA1_Final
0x0027E8FE	0x00000006	[244] _CC_SHA1_Init
0x0027E904	0x00000006	[244] _CC_SHA1_Update
0x0027E90A	0x00000006	[244] __Block_copy
0x0027E910	0x00000006	[244] __NSGetEnviron
0x0027E916	0x00000006	[244] __NSGetExecutablePath
0x0027E91C	0x00000006	[244] __Unwind_Resume
0x0027E922	0x00000006	[244] ___assert_rtn
0x0027E928	0x00000006	[244] ___divdi3
0x0027E92E	0x00000006	[244] ___error
0x0027E934	0x00000006	[244] ___fixunsdfdi
0x0027E93A	0x00000006	[244] ___fixunssfdi
0x0027E940	0x00000006	[244] ___maskrune
0x0027E946	0x00000006	[244] ___memcpy_chk
0x0027E94C	0x00000006	[244] ___memset_chk
0x0027E952	0x00000006	[244] ___moddi3
0x0027E958	0x00000006	[244] ___snprintf_chk
0x0027E95E	0x00000006	[244] ___sprintf_chk
0x0027E964	0x00000006	[244] ___stack_chk_fail
0x0027E96A	0x00000006	[244] ___strcat_chk
0x0027E970	0x00000006	[244] ___strcpy_chk
0x0027E976	0x00000006	[244] ___strncpy_chk
0x0027E97C	0x00000006	[244] ___tolower
0x0027E982	0x00000006	[244] ___udivdi3
0x0027E988	0x00000006	[244] ___umoddi3
0x0027E98E	0x00000006	[244] ___vsnprintf_chk
0x0027E994	0x00000006	[244] ___vsprintf_chk
0x0027E99A	0x00000006	[244] __dyld_get_image_header
0x0027E9A0	0x00000006	[244] __dyld_get_image_name
0x0027E9A6	0x00000006	[244] __dyld_image_count
0x0027E9AC	0x00000006	[244] __exit
0x0027E9B2	0x00000006	[244] _abort
0x0027E9B8	0x00000006	[244] _accept
0x0027E9BE	0x00000006	[244] _access
0x0027E9C4	0x00000006	[244] _acos
0x0027E9CA	0x00000006	[244] _asin
0x0027E9D0	0x00000006	[244] _asl_log
0x0027E9D6	0x00000006	[244] _atan
0x0027E9DC	0x00000006	[244] _atan2
0x0027E9E2	0x00000006	[244] _atexit
0x0027E9E8	0x00000006	[244] _atoi
0x0027E9EE	0x00000006	[244] _backtrace
0x0027E9F4	0x00000006	[244] _backtrace_symbols
0x0027E9FA	0x00000006	[244] _bind
0x0027EA00	0x00000006	[244] _calloc
0x0027EA06	0x00000006	[244] _ceil
0x0027EA0C	0x00000006	[244] _chdir
0x0027EA12	0x00000006	[244] _chmod
0x0027EA18	0x00000006	[244] _close
0x0027EA1E	0x00000006	[244] _closedir
0x0027EA24	0x00000006	[244] _connect
0x0027EA2A	0x00000006	[244] _cos
0x0027EA30	0x00000006	[244] _cosh
0x0027EA36	0x00000006	[244] _dispatch_async
0x0027EA3C	0x00000006	[244] _div
0x0027EA42	0x00000006	[244] _dlclose
0x0027EA48	0x00000006	[244] _dlerror
0x0027EA4E	0x00000006	[244] _dlopen
0x0027EA54	0x00000006	[244] _dlsym
0x0027EA5A	0x00000006	[244] _dup
0x0027EA60	0x00000006	[244] _dup2
0x0027EA66	0x00000006	[244] _execv
0x0027EA6C	0x00000006	[244] _execve
0x0027EA72	0x00000006	[244] _execvp
0x0027EA78	0x00000006	[244] _exit
0x0027EA7E	0x00000006	[244] _exp
0x0027EA84	0x00000006	[244] _fclose
0x0027EA8A	0x00000006	[244] _fcntl
0x0027EA90	0x00000006	[244] _fdopen
0x0027EA96	0x00000006	[244] _feof
0x0027EA9C	0x00000006	[244] _ferror
0x0027EAA2	0x00000006	[244] _fflush
0x0027EAA8	0x00000006	[244] _fgets
0x0027EAAE	0x00000006	[244] _fileno
0x0027EAB4	0x00000006	[244] _floor
0x0027EABA	0x00000006	[244] _fopen
0x0027EAC0	0x00000006	[244] _fopen$DARWIN_EXTSN
0x0027EAC6	0x00000006	[244] _fork
0x0027EACC	0x00000006	[244] _fprintf
0x0027EAD2	0x00000006	[244] _fputc
0x0027EAD8	0x00000006	[244] _fputs
0x0027EADE	0x00000006	[244] _fread
0x0027EAE4	0x00000006	[244] _free
0x0027EAEA	0x00000006	[244] _freeaddrinfo
0x0027EAF0	0x00000006	[244] _freeifaddrs
0x0027EAF6	0x00000006	[244] _fscanf
0x0027EAFC	0x00000006	[244] _fstat
0x0027EB02	0x00000006	[244] _fsync
0x0027EB08	0x00000006	[244] _ftok
0x0027EB0E	0x00000006	[244] _ftruncate
0x0027EB14	0x00000006	[244] _fwrite
0x0027EB1A	0x00000006	[244] _getaddrinfo
0x0027EB20	0x00000006	[244] _getcwd
0x0027EB26	0x00000006	[244] _getegid
0x0027EB2C	0x00000006	[244] _getenv
0x0027EB32	0x00000006	[244] _geteuid
0x0027EB38	0x00000006	[244] _getfsstat
0x0027EB3E	0x00000006	[244] _getgrgid_r
0x0027EB44	0x00000006	[244] _getgrnam_r
0x0027EB4A	0x00000006	[244] _gethostname
0x0027EB50	0x00000006	[244] _getifaddrs
0x0027EB56	0x00000006	[244] _getloadavg
0x0027EB5C	0x00000006	[244] _getnameinfo
0x0027EB62	0x00000006	[244] _getpagesize
0x0027EB68	0x00000006	[244] _getpeername
0x0027EB6E	0x00000006	[244] _getpid
0x0027EB74	0x00000006	[244] _getpriority
0x0027EB7A	0x00000006	[244] _getprotobyname
0x0027EB80	0x00000006	[244] _getpwnam_r
0x0027EB86	0x00000006	[244] _getpwuid_r
0x0027EB8C	0x00000006	[244] _getrlimit
0x0027EB92	0x00000006	[244] _getrusage
0x0027EB98	0x00000006	[244] _getsectbynamefromheader
0x0027EB9E	0x00000006	[244] _getsockname
0x0027EBA4	0x00000006	[244] _getsockopt
0x0027EBAA	0x00000006	[244] _gettimeofday
0x0027EBB0	0x00000006	[244] _getuid
0x0027EBB6	0x00000006	[244] _host_statistics
0x0027EBBC	0x00000006	[244] _if_nametoindex
0x0027EBC2	0x00000006	[244] _inet_pton
0x0027EBC8	0x00000006	[244] _ioctl
0x0027EBCE	0x00000006	[244] _isatty
0x0027EBD4	0x00000006	[244] _isdigit
0x0027EBDA	0x00000006	[244] _kill
0x0027EBE0	0x00000006	[244] _listen
0x0027EBE6	0x00000006	[244] _localtime
0x0027EBEC	0x00000006	[244] _log
0x0027EBF2	0x00000006	[244] _log10
0x0027EBF8	0x00000006	[244] _lseek
0x0027EBFE	0x00000006	[244] _lstat
0x0027EC04	0x00000006	[244] _mach_absolute_time
0x0027EC0A	0x00000006	[244] _mach_host_self
0x0027EC10	0x00000006	[244] _mach_port_deallocate
0x0027EC16	0x00000006	[244] _mach_thread_self
0x0027EC1C	0x00000006	[244] _mach_timebase_info
0x0027EC22	0x00000006	[244] _madvise
0x0027EC28	0x00000006	[244] _malloc
0x0027EC2E	0x00000006	[244] _memchr
0x0027EC34	0x00000006	[244] _memcmp
0x0027EC3A	0x00000006	[244] _memcpy
0x0027EC40	0x00000006	[244] _memmove
0x0027EC46	0x00000006	[244] _memset
0x0027EC4C	0x00000006	[244] _memset_pattern16
0x0027EC52	0x00000006	[244] _mincore
0x0027EC58	0x00000006	[244] _mkdir
0x0027EC5E	0x00000006	[244] _mkstemp
0x0027EC64	0x00000006	[244] _mktime
0x0027EC6A	0x00000006	[244] _mmap
0x0027EC70	0x00000006	[244] _mprotect
0x0027EC76	0x00000006	[244] _msync
0x0027EC7C	0x00000006	[244] _munmap
0x0027EC82	0x00000006	[244] _nanosleep
0x0027EC88	0x00000006	[244] _open
0x0027EC8E	0x00000006	[244] _opendir
0x0027EC94	0x00000006	[244] _perror
0x0027EC9A	0x00000006	[244] _pipe
0x0027ECA0	0x00000006	[244] _pow
0x0027ECA6	0x00000006	[244] _printf
0x0027ECAC	0x00000006	[244] _pthread_attr_init
0x0027ECB2	0x00000006	[244] _pthread_attr_setstacksize
0x0027ECB8	0x00000006	[244] _pthread_cond_broadcast
0x0027ECBE	0x00000006	[244] _pthread_cond_destroy
0x0027ECC4	0x00000006	[244] _pthread_cond_init
0x0027ECCA	0x00000006	[244] _pthread_cond_signal
0x0027ECD0	0x00000006	[244] _pthread_cond_timedwait
0x0027ECD6	0x00000006	[244] _pthread_cond_wait
0x0027ECDC	0x00000006	[244] _pthread_create
0x0027ECE2	0x00000006	[244] _pthread_detach
0x0027ECE8	0x00000006	[244] _pthread_equal
0x0027ECEE	0x00000006	[244] _pthread_exit
0x0027ECF4	0x00000006	[244] _pthread_get_stackaddr_np
0x0027ECFA	0x00000006	[244] _pthread_get_stacksize_np
0x0027ED00	0x00000006	[244] _pthread_getspecific
0x0027ED06	0x00000006	[244] _pthread_join
0x0027ED0C	0x00000006	[244] _pthread_key_create
0x0027ED12	0x00000006	[244] _pthread_key_delete
0x0027ED18	0x00000006	[244] _pthread_kill
0x0027ED1E	0x00000006	[244] _pthread_mutex_destroy
0x0027ED24	0x00000006	[244] _pthread_mutex_init
0x0027ED2A	0x00000006	[244] _pthread_mutex_lock
0x0027ED30	0x00000006	[244] _pthread_mutex_trylock
0x0027ED36	0x00000006	[244] _pthread_mutex_unlock
0x0027ED3C	0x00000006	[244] _pthread_mutexattr_destroy
0x0027ED42	0x00000006	[244] _pthread_mutexattr_init
0x0027ED48	0x00000006	[244] _pthread_mutexattr_settype
0x0027ED4E	0x00000006	[244] _pthread_self
0x0027ED54	0x00000006	[244] _pthread_setspecific
0x0027ED5A	0x00000006	[244] _putchar
0x0027ED60	0x00000006	[244] _puts
0x0027ED66	0x00000006	[244] _qsort
0x0027ED6C	0x00000006	[244] _read
0x0027ED72	0x00000006	[244] _readdir
0x0027ED78	0x00000006	[244] _readlink
0x0027ED7E	0x00000006	[244] _realloc
0x0027ED84	0x00000006	[244] _recv
0x0027ED8A	0x00000006	[244] _recvfrom
0x0027ED90	0x00000006	[244] _recvmsg
0x0027ED96	0x00000006	[244] _rename
0x0027ED9C	0x00000006	[244] _rint
0x0027EDA2	0x00000006	[244] _rmdir
0x0027EDA8	0x00000006	[244] _round
0x0027EDAE	0x00000006	[244] _sched_yield
0x0027EDB4	0x00000006	[244] _select
0x0027EDBA	0x00000006	[244] _semaphore_create
0x0027EDC0	0x00000006	[244] _semaphore_destroy
0x0027EDC6	0x00000006	[244] _semaphore_signal
0x0027EDCC	0x00000006	[244] _semaphore_timedwait
0x0027EDD2	0x00000006	[244] _semaphore_wait
0x0027EDD8	0x00000006	[244] _send
0x0027EDDE	0x00000006	[244] _sendmsg
0x0027EDE4	0x00000006	[244] _sendto
0x0027EDEA	0x00000006	[244] _setenv
0x0027EDF0	0x00000006	[244] _setitimer
0x0027EDF6	0x00000006	[244] _setlocale
0x0027EDFC	0x00000006	[244] _setpgid
0x0027EE02	0x00000006	[244] _setpriority
0x0027EE08	0x00000006	[244] _setsockopt
0x0027EE0E	0x00000006	[244] _shm_open
0x0027EE14	0x00000006	[244] _shm_unlink
0x0027EE1A	0x00000006	[244] _shmat
0x0027EE20	0x00000006	[244] _shmdt
0x0027EE26	0x00000006	[244] _shmget
0x0027EE2C	0x00000006	[244] _shutdown
0x0027EE32	0x00000006	[244] _sigaction
0x0027EE38	0x00000006	[244] _sigaltstack
0x0027EE3E	0x00000006	[244] _signal
0x0027EE44	0x00000006	[244] _sigprocmask
0x0027EE4A	0x00000006	[244] _sin
0x0027EE50	0x00000006	[244] _sinh
0x0027EE56	0x00000006	[244] _sleep
0x0027EE5C	0x00000006	[244] _socket
0x0027EE62	0x00000006	[244] _sscanf
0x0027EE68	0x00000006	[244] _stat
0x0027EE6E	0x00000006	[244] _statfs
0x0027EE74	0x00000006	[244] _statvfs
0x0027EE7A	0x00000006	[244] _stpcpy
0x0027EE80	0x00000006	[244] _strchr
0x0027EE86	0x00000006	[244] _strcmp
0x0027EE8C	0x00000006	[244] _strcpy
0x0027EE92	0x00000006	[244] _strdup
0x0027EE98	0x00000006	[244] _strerror
0x0027EE9E	0x00000006	[244] _strftime
0x0027EEA4	0x00000006	[244] _strlcpy
0x0027EEAA	0x00000006	[244] _strlen
0x0027EEB0	0x00000006	[244] _strncasecmp
0x0027EEB6	0x00000006	[244] _strncmp
0x0027EEBC	0x00000006	[244] _strncpy
0x0027EEC2	0x00000006	[244] _strndup
0x0027EEC8	0x00000006	[244] _strrchr
0x0027EECE	0x00000006	[244] _strstr
0x0027EED4	0x00000006	[244] _strtod
0x0027EEDA	0x00000006	[244] _strtok_r
0x0027EEE0	0x00000006	[244] _strtol
0x0027EEE6	0x00000006	[244] _strtoul
0x0027EEEC	0x00000006	[244] _strtoull
0x0027EEF2	0x00000006	[244] _sysconf
0x0027EEF8	0x00000006	[244] _sysctl
0x0027EEFE	0x00000006	[244] _system
0x0027EF04	0x00000006	[244] _tan
0x0027EF0A	0x00000006	[244] _tanh
0x0027EF10	0x00000006	[244] _task_for_pid
0x0027EF16	0x00000006	[244] _task_info
0x0027EF1C	0x00000006	[244] _task_threads
0x0027EF22	0x00000006	[244] _tcflush
0x0027EF28	0x00000006	[244] _tcgetattr
0x0027EF2E	0x00000006	[244] _tcsetattr
0x0027EF34	0x00000006	[244] _thread_abort
0x0027EF3A	0x00000006	[244] _thread_get_state
0x0027EF40	0x00000006	[244] _thread_info
0x0027EF46	0x00000006	[244] _thread_resume
0x0027EF4C	0x00000006	[244] _thread_set_state
0x0027EF52	0x00000006	[244] _thread_suspend
0x0027EF58	0x00000006	[244] _time
0x0027EF5E	0x00000006	[244] _trunc
0x0027EF64	0x00000006	[244] _truncf
0x0027EF6A	0x00000006	[244] _uname
0x0027EF70	0x00000006	[244] _unlink
0x0027EF76	0x00000006	[244] _unsetenv
0x0027EF7C	0x00000006	[244] _usleep
0x0027EF82	0x00000006	[244] _utime
0x0027EF88	0x00000006	[244] _vfprintf
0x0027EF8E	0x00000006	[244] _vm_allocate
0x0027EF94	0x00000006	[244] _vm_deallocate
0x0027EF9A	0x00000006	[244] _vm_remap
0x0027EFA0	0x00000006	[244] _vprintf
0x0027EFA6	0x00000006	[244] _waitpid
0x0027EFAC	0x00000006	[244] _write
0x0027EFB2	0x00000006	[245] _class_addMethod
0x0027EFB8	0x00000006	[245] _class_copyIvarList
0x0027EFBE	0x00000006	[245] _class_copyMethodList
0x0027EFC4	0x00000006	[245] _class_copyPropertyList
0x0027EFCA	0x00000006	[245] _class_getClassMethod
0x0027EFD0	0x00000006	[245] _class_getInstanceVariable
0x0027EFD6	0x00000006	[245] _class_getMethodImplementation
0x0027EFDC	0x00000006	[245] _class_getName
0x0027EFE2	0x00000006	[245] _class_getSuperclass
0x0027EFE8	0x00000006	[245] _ivar_getName
0x0027EFEE	0x00000006	[245] _method_getName
0x0027EFF4	0x00000006	[245] _method_getTypeEncoding
0x0027EFFA	0x00000006	[245] _objc_allocateClassPair
0x0027F000	0x00000006	[245] _objc_begin_catch
0x0027F006	0x00000006	[245] _objc_end_catch
0x0027F00C	0x00000006	[245] _objc_enumerationMutation
0x0027F012	0x00000006	[245] _objc_getClass
0x0027F018	0x00000006	[245] _objc_msgSend
0x0027F01E	0x00000006	[245] _objc_msgSendSuper
0x0027F024	0x00000006	[245] _objc_msgSendSuper2
0x0027F02A	0x00000006	[245] _objc_msgSend_fpret
0x0027F030	0x00000006	[245] _objc_registerClassPair
0x0027F036	0x00000006	[245] _object_getClass
0x0027F03C	0x00000006	[245] _object_getClassName
0x0027F042	0x00000006	[245] _object_getInstanceVariable
0x0027F048	0x00000006	[245] _object_setInstanceVariable
0x0027F04E	0x00000006	[245] _property_getName
0x0027F054	0x00000006	[245] _sel_getName
0x0027F05A	0x00000006	[245] _sel_registerName
0x0027F060	0x00000006	[246] _CFDictionaryCreateMutable
0x0027F066	0x00000006	[246] _CFDictionaryGetValue
0x0027F06C	0x00000006	[246] _CFDictionaryRemoveValue
0x0027F072	0x00000006	[246] _CFDictionarySetValue
0x0027F078	0x00000006	[246] _CFLocaleCopyCurrent
0x0027F07E	0x00000006	[246] _CFLocaleGetIdentifier
0x0027F084	0x00000006	[246] _CFLocaleGetValue
0x0027F08A	0x00000006	[246] _CFRelease
0x0027F090	0x00000006	[246] _CFStringGetBytes
0x0027F096	0x00000006	[246] _CFStringGetCString
0x0027F09C	0x00000006	[246] _CFStringGetLength
0x0027F0A2	0x00000006	[246] _CFStringGetMaximumSizeForEncoding
0x0027F0A8	0x0000000C	[  0] helper helper
0x0027F0B4	0x0000000A	[  5] _NSLog
0x0027F0BE	0x0000000A	[  5] _NSSetUncaughtExceptionHandler
0x0027F0C8	0x0000000A	[  5] _NSStringFromClass
0x0027F0D2	0x0000000A	[  6] _UIApplicationMain
0x0027F0DC	0x0000000A	[  7] _deflate
0x0027F0E6	0x0000000A	[  7] _deflateEnd
0x0027F0F0	0x0000000A	[  7] _deflateInit2_
0x0027F0FA	0x0000000A	[  7] _inflate
0x0027F104	0x0000000A	[  7] _inflateEnd
0x0027F10E	0x0000000A	[  7] _inflateInit2_
0x0027F118	0x0000000A	[  8] _iconv
0x0027F122	0x0000000A	[  8] _iconv_close
0x0027F12C	0x0000000A	[  8] _iconv_open
0x0027F136	0x0000000A	[  8] _locale_charset
0x0027F140	0x0000000A	[243] __ZdlPv
0x0027F14A	0x0000000A	[243] __Znwm
0x0027F154	0x0000000A	[244] _CC_SHA1_Final
0x0027F15E	0x0000000A	[244] _CC_SHA1_Init
0x0027F168	0x0000000A	[244] _CC_SHA1_Update
0x0027F172	0x0000000A	[244] __Block_copy
0x0027F17C	0x0000000A	[244] __NSGetEnviron
0x0027F186	0x0000000A	[244] __NSGetExecutablePath
0x0027F190	0x0000000A	[244] __Unwind_Resume
0x0027F19A	0x0000000A	[244] ___assert_rtn
0x0027F1A4	0x0000000A	[244] ___divdi3
0x0027F1AE	0x0000000A	[244] ___error
0x0027F1B8	0x0000000A	[244] ___fixunsdfdi
0x0027F1C2	0x0000000A	[244] ___fixunssfdi
0x0027F1CC	0x0000000A	[244] ___maskrune
0x0027F1D6	0x0000000A	[244] ___memcpy_chk
0x0027F1E0	0x0000000A	[244] ___memset_chk
0x0027F1EA	0x0000000A	[244] ___moddi3
0x0027F1F4	0x0000000A	[244] ___snprintf_chk
0x0027F1FE	0x0000000A	[244] ___sprintf_chk
0x0027F208	0x0000000A	[244] ___stack_chk_fail
0x0027F212	0x0000000A	[244] ___strcat_chk
0x0027F21C	0x0000000A	[244] ___strcpy_chk
0x0027F226	0x0000000A	[244] ___strncpy_chk
0x0027F230	0x0000000A	[244] ___tolower
0x0027F23A	0x0000000A	[244] ___udivdi3
0x0027F244	0x0000000A	[244] ___umoddi3
0x0027F24E	0x0000000A	[244] ___vsnprintf_chk
0x0027F258	0x0000000A	[244] ___vsprintf_chk
0x0027F262	0x0000000A	[244] __dyld_get_image_header
0x0027F26C	0x0000000A	[244] __dyld_get_image_name
0x0027F276	0x0000000A	[244] __dyld_image_count
0x0027F280	0x0000000A	[244] __exit
0x0027F28A	0x0000000A	[244] _abort
0x0027F294	0x0000000A	[244] _accept
0x0027F29E	0x0000000A	[244] _access
0x0027F2A8	0x0000000A	[244] _acos
0x0027F2B2	0x0000000A	[244] _asin
0x0027F2BC	0x0000000A	[244] _asl_log
0x0027F2C6	0x0000000A	[244] _atan
0x0027F2D0	0x0000000A	[244] _atan2
0x0027F2DA	0x0000000A	[244] _atexit
0x0027F2E4	0x0000000A	[244] _atoi
0x0027F2EE	0x0000000A	[244] _backtrace
0x0027F2F8	0x0000000A	[244] _backtrace_symbols
0x0027F302	0x0000000A	[244] _bind
0x0027F30C	0x0000000A	[244] _calloc
0x0027F316	0x0000000A	[244] _ceil
0x0027F320	0x0000000A	[244] _chdir
0x0027F32A	0x0000000A	[244] _chmod
0x0027F334	0x0000000A	[244] _close
0x0027F33E	0x0000000A	[244] _closedir
0x0027F348	0x0000000A	[244] _connect
0x0027F352	0x0000000A	[244] _cos
0x0027F35C	0x0000000A	[244] _cosh
0x0027F366	0x0000000A	[244] _dispatch_async
0x0027F370	0x0000000A	[244] _div
0x0027F37A	0x0000000A	[244] _dlclose
0x0027F384	0x0000000A	[244] _dlerror
0x0027F38E	0x0000000A	[244] _dlopen
0x0027F398	0x0000000A	[244] _dlsym
0x0027F3A2	0x0000000A	[244] _dup
0x0027F3AC	0x0000000A	[244] _dup2
0x0027F3B6	0x0000000A	[244] _execv
0x0027F3C0	0x0000000A	[244] _execve
0x0027F3CA	0x0000000A	[244] _execvp
0x0027F3D4	0x0000000A	[244] _exit
0x0027F3DE	0x0000000A	[244] _exp
0x0027F3E8	0x0000000A	[244] _fclose
0x0027F3F2	0x0000000A	[244] _fcntl
0x0027F3FC	0x0000000A	[244] _fdopen
0x0027F406	0x0000000A	[244] _feof
0x0027F410	0x0000000A	[244] _ferror
0x0027F41A	0x0000000A	[244] _fflush
0x0027F424	0x0000000A	[244] _fgets
0x0027F42E	0x0000000A	[244] _fileno
0x0027F438	0x0000000A	[244] _floor
0x0027F442	0x0000000A	[244] _fopen
0x0027F44C	0x0000000A	[244] _fopen$DARWIN_EXTSN
0x0027F456	0x0000000A	[244] _fork
0x0027F460	0x0000000A	[244] _fprintf
0x0027F46A	0x0000000A	[244] _fputc
0x0027F474	0x0000000A	[244] _fputs
0x0027F47E	0x0000000A	[244] _fread
0x0027F488	0x0000000A	[244] _free
0x0027F492	0x0000000A	[244] _freeaddrinfo
0x0027F49C	0x0000000A	[244] _freeifaddrs
0x0027F4A6	0x0000000A	[244] _fscanf
0x0027F4B0	0x0000000A	[244] _fstat
0x0027F4BA	0x0000000A	[244] _fsync
0x0027F4C4	0x0000000A	[244] _ftok
0x0027F4CE	0x0000000A	[244] _ftruncate
0x0027F4D8	0x0000000A	[244] _fwrite
0x0027F4E2	0x0000000A	[244] _getaddrinfo
0x0027F4EC	0x0000000A	[244] _getcwd
0x0027F4F6	0x0000000A	[244] _getegid
0x0027F500	0x0000000A	[244] _getenv
0x0027F50A	0x0000000A	[244] _geteuid
0x0027F514	0x0000000A	[244] _getfsstat
0x0027F51E	0x0000000A	[244] _getgrgid_r
0x0027F528	0x0000000A	[244] _getgrnam_r
0x0027F532	0x0000000A	[244] _gethostname
0x0027F53C	0x0000000A	[244] _getifaddrs
0x0027F546	0x0000000A	[244] _getloadavg
0x0027F550	0x0000000A	[244] _getnameinfo
0x0027F55A	0x0000000A	[244] _getpagesize
0x0027F564	0x0000000A	[244] _getpeername
0x0027F56E	0x0000000A	[244] _getpid
0x0027F578	0x0000000A	[244] _getpriority
0x0027F582	0x0000000A	[244] _getprotobyname
0x0027F58C	0x0000000A	[244] _getpwnam_r
0x0027F596	0x0000000A	[244] _getpwuid_r
0x0027F5A0	0x0000000A	[244] _getrlimit
0x0027F5AA	0x0000000A	[244] _getrusage
0x0027F5B4	0x0000000A	[244] _getsectbynamefromheader
0x0027F5BE	0x0000000A	[244] _getsockname
0x0027F5C8	0x0000000A	[244] _getsockopt
0x0027F5D2	0x0000000A	[244] _gettimeofday
0x0027F5DC	0x0000000A	[244] _getuid
0x0027F5E6	0x0000000A	[244] _host_statistics
0x0027F5F0	0x0000000A	[244] _if_nametoindex
0x0027F5FA	0x0000000A	[244] _inet_pton
0x0027F604	0x0000000A	[244] _ioctl
0x0027F60E	0x0000000A	[244] _isatty
0x0027F618	0x0000000A	[244] _isdigit
0x0027F622	0x0000000A	[244] _kill
0x0027F62C	0x0000000A	[244] _listen
0x0027F636	0x0000000A	[244] _localtime
0x0027F640	0x0000000A	[244] _log
0x0027F64A	0x0000000A	[244] _log10
0x0027F654	0x0000000A	[244] _lseek
0x0027F65E	0x0000000A	[244] _lstat
0x0027F668	0x0000000A	[244] _mach_absolute_time
0x0027F672	0x0000000A	[244] _mach_host_self
0x0027F67C	0x0000000A	[244] _mach_port_deallocate
0x0027F686	0x0000000A	[244] _mach_thread_self
0x0027F690	0x0000000A	[244] _mach_timebase_info
0x0027F69A	0x0000000A	[244] _madvise
0x0027F6A4	0x0000000A	[244] _malloc
0x0027F6AE	0x0000000A	[244] _memchr
0x0027F6B8	0x0000000A	[244] _memcmp
0x0027F6C2	0x0000000A	[244] _memcpy
0x0027F6CC	0x0000000A	[244] _memmove
0x0027F6D6	0x0000000A	[244] _memset
0x0027F6E0	0x0000000A	[244] _memset_pattern16
0x0027F6EA	0x0000000A	[244] _mincore
0x0027F6F4	0x0000000A	[244] _mkdir
0x0027F6FE	0x0000000A	[244] _mkstemp
0x0027F708	0x0000000A	[244] _mktime
0x0027F712	0x0000000A	[244] _mmap
0x0027F71C	0x0000000A	[244] _mprotect
0x0027F726	0x0000000A	[244] _msync
0x0027F730	0x0000000A	[244] _munmap
0x0027F73A	0x0000000A	[244] _nanosleep
0x0027F744	0x0000000A	[244] _open
0x0027F74E	0x0000000A	[244] _opendir
0x0027F758	0x0000000A	[244] _perror
0x0027F762	0x0000000A	[244] _pipe
0x0027F76C	0x0000000A	[244] _pow
0x0027F776	0x0000000A	[244] _printf
0x0027F780	0x0000000A	[244] _pthread_attr_init
0x0027F78A	0x0000000A	[244] _pthread_attr_setstacksize
0x0027F794	0x0000000A	[244] _pthread_cond_broadcast
0x0027F79E	0x0000000A	[244] _pthread_cond_destroy
0x0027F7A8	0x0000000A	[244] _pthread_cond_init
0x0027F7B2	0x0000000A	[244] _pthread_cond_signal
0x0027F7BC	0x0000000A	[244] _pthread_cond_timedwait
0x0027F7C6	0x0000000A	[244] _pthread_cond_wait
0x0027F7D0	0x0000000A	[244] _pthread_create
0x0027F7DA	0x0000000A	[244] _pthread_detach
0x0027F7E4	0x0000000A	[244] _pthread_equal
0x0027F7EE	0x0000000A	[244] _pthread_exit
0x0027F7F8	0x0000000A	[244] _pthread_get_stackaddr_np
0x0027F802	0x0000000A	[244] _pthread_get_stacksize_np
0x0027F80C	0x0000000A	[244] _pthread_getspecific
0x0027F816	0x0000000A	[244] _pthread_join
0x0027F820	0x0000000A	[244] _pthread_key_create
0x0027F82A	0x0000000A	[244] _pthread_key_delete
0x0027F834	0x0000000A	[244] _pthread_kill
0x0027F83E	0x0000000A	[244] _pthread_mutex_destroy
0x0027F848	0x0000000A	[244] _pthread_mutex_init
0x0027F852	0x0000000A	[244] _pthread_mutex_lock
0x0027F85C	0x0000000A	[244] _pthread_mutex_trylock
0x0027F866	0x0000000A	[244] _pthread_mutex_unlock
0x0027F870	0x0000000A	[244] _pthread_mutexattr_destroy
0x0027F87A	0x0000000A	[244] _pthread_mutexattr_init
0x0027F884	0x0000000A	[244] _pthread_mutexattr_settype
0x0027F88E	0x0000000A	[244] _pthread_self
0x0027F898	0x0000000A	[244] _pthread_setspecific
0x0027F8A2	0x0000000A	[244] _putchar
0x0027F8AC	0x0000000A	[244] _puts
0x0027F8B6	0x0000000A	[244] _qsort
0x0027F8C0	0x0000000A	[244] _read
0x0027F8CA	0x0000000A	[244] _readdir
0x0027F8D4	0x0000000A	[244] _readlink
0x0027F8DE	0x0000000A	[244] _realloc
0x0027F8E8	0x0000000A	[244] _recv
0x0027F8F2	0x0000000A	[244] _recvfrom
0x0027F8FC	0x0000000A	[244] _recvmsg
0x0027F906	0x0000000A	[244] _rename
0x0027F910	0x0000000A	[244] _rint
0x0027F91A	0x0000000A	[244] _rmdir
0x0027F924	0x0000000A	[244] _round
0x0027F92E	0x0000000A	[244] _sched_yield
0x0027F938	0x0000000A	[244] _select
0x0027F942	0x0000000A	[244] _semaphore_create
0x0027F94C	0x0000000A	[244] _semaphore_destroy
0x0027F956	0x0000000A	[244] _semaphore_signal
0x0027F960	0x0000000A	[244] _semaphore_timedwait
0x0027F96A	0x0000000A	[244] _semaphore_wait
0x0027F974	0x0000000A	[244] _send
0x0027F97E	0x0000000A	[244] _sendmsg
0x0027F988	0x0000000A	[244] _sendto
0x0027F992	0x0000000A	[244] _setenv
0x0027F99C	0x0000000A	[244] _setitimer
0x0027F9A6	0x0000000A	[244] _setlocale
0x0027F9B0	0x0000000A	[244] _setpgid
0x0027F9BA	0x0000000A	[244] _setpriority
0x0027F9C4	0x0000000A	[244] _setsockopt
0x0027F9CE	0x0000000A	[244] _shm_open
0x0027F9D8	0x0000000A	[244] _shm_unlink
0x0027F9E2	0x0000000A	[244] _shmat
0x0027F9EC	0x0000000A	[244] _shmdt
0x0027F9F6	0x0000000A	[244] _shmget
0x0027FA00	0x0000000A	[244] _shutdown
0x0027FA0A	0x0000000A	[244] _sigaction
0x0027FA14	0x0000000A	[244] _sigaltstack
0x0027FA1E	0x0000000A	[244] _signal
0x0027FA28	0x0000000A	[244] _sigprocmask
0x0027FA32	0x0000000A	[244] _sin
0x0027FA3C	0x0000000A	[244] _sinh
0x0027FA46	0x0000000A	[244] _sleep
0x0027FA50	0x0000000A	[244] _socket
0x0027FA5A	0x0000000A	[244] _sscanf
0x0027FA64	0x0000000A	[244] _stat
0x0027FA6E	0x0000000A	[244] _statfs
0x0027FA78	0x0000000A	[244] _statvfs
0x0027FA82	0x0000000A	[244] _stpcpy
0x0027FA8C	0x0000000A	[244] _strchr
0x0027FA96	0x0000000A	[244] _strcmp
0x0027FAA0	0x0000000A	[244] _strcpy
0x0027FAAA	0x0000000A	[244] _strdup
0x0027FAB4	0x0000000A	[244] _strerror
0x0027FABE	0x0000000A	[244] _strftime
0x0027FAC8	0x0000000A	[244] _strlcpy
0x0027FAD2	0x0000000A	[244] _strlen
0x0027FADC	0x0000000A	[244] _strncasecmp
0x0027FAE6	0x0000000A	[244] _strncmp
0x0027FAF0	0x0000000A	[244] _strncpy
0x0027FAFA	0x0000000A	[244] _strndup
0x0027FB04	0x0000000A	[244] _strrchr
0x0027FB0E	0x0000000A	[244] _strstr
0x0027FB18	0x0000000A	[244] _strtod
0x0027FB22	0x0000000A	[244] _strtok_r
0x0027FB2C	0x0000000A	[244] _strtol
0x0027FB36	0x0000000A	[244] _strtoul
0x0027FB40	0x0000000A	[244] _strtoull
0x0027FB4A	0x0000000A	[244] _sysconf
0x0027FB54	0x0000000A	[244] _sysctl
0x0027FB5E	0x0000000A	[244] _system
0x0027FB68	0x0000000A	[244] _tan
0x0027FB72	0x0000000A	[244] _tanh
0x0027FB7C	0x0000000A	[244] _task_for_pid
0x0027FB86	0x0000000A	[244] _task_info
0x0027FB90	0x0000000A	[244] _task_threads
0x0027FB9A	0x0000000A	[244] _tcflush
0x0027FBA4	0x0000000A	[244] _tcgetattr
0x0027FBAE	0x0000000A	[244] _tcsetattr
0x0027FBB8	0x0000000A	[244] _thread_abort
0x0027FBC2	0x0000000A	[244] _thread_get_state
0x0027FBCC	0x0000000A	[244] _thread_info
0x0027FBD6	0x0000000A	[244] _thread_resume
0x0027FBE0	0x0000000A	[244] _thread_set_state
0x0027FBEA	0x0000000A	[244] _thread_suspend
0x0027FBF4	0x0000000A	[244] _time
0x0027FBFE	0x0000000A	[244] _trunc
0x0027FC08	0x0000000A	[244] _truncf
0x0027FC12	0x0000000A	[244] _uname
0x0027FC1C	0x0000000A	[244] _unlink
0x0027FC26	0x0000000A	[244] _unsetenv
0x0027FC30	0x0000000A	[244] _usleep
0x0027FC3A	0x0000000A	[244] _utime
0x0027FC44	0x0000000A	[244] _vfprintf
0x0027FC4E	0x0000000A	[244] _vm_allocate
0x0027FC58	0x0000000A	[244] _vm_deallocate
0x0027FC62	0x0000000A	[244] _vm_remap
0x0027FC6C	0x0000000A	[244] _vprintf
0x0027FC76	0x0000000A	[244] _waitpid
0x0027FC80	0x0000000A	[244] _write
0x0027FC8A	0x0000000A	[245] _class_addMethod
0x0027FC94	0x0000000A	[245] _class_copyIvarList
0x0027FC9E	0x0000000A	[245] _class_copyMethodList
0x0027FCA8	0x0000000A	[245] _class_copyPropertyList
0x0027FCB2	0x0000000A	[245] _class_getClassMethod
0x0027FCBC	0x0000000A	[245] _class_getInstanceVariable
0x0027FCC6	0x0000000A	[245] _class_getMethodImplementation
0x0027FCD0	0x0000000A	[245] _class_getName
0x0027FCDA	0x0000000A	[245] _class_getSuperclass
0x0027FCE4	0x0000000A	[245] _ivar_getName
0x0027FCEE	0x0000000A	[245] _method_getName
0x0027FCF8	0x0000000A	[245] _method_getTypeEncoding
0x0027FD02	0x0000000A	[245] _objc_allocateClassPair
0x0027FD0C	0x0000000A	[245] _objc_begin_catch
0x0027FD16	0x0000000A	[245] _objc_end_catch
0x0027FD20	0x0000000A	[245] _objc_enumerationMutation
0x0027FD2A	0x0000000A	[245] _objc_getClass
0x0027FD34	0x0000000A	[245] _objc_msgSend
0x0027FD3E	0x0000000A	[245] _objc_msgSendSuper
0x0027FD48	0x0000000A	[245] _objc_msgSendSuper2
0x0027FD52	0x0000000A	[245] _objc_msgSend_fpret
0x0027FD5C	0x0000000A	[245] _objc_registerClassPair
0x0027FD66	0x0000000A	[245] _object_getClass
0x0027FD70	0x0000000A	[245] _object_getClassName
0x0027FD7A	0x0000000A	[245] _object_getInstanceVariable
0x0027FD84	0x0000000A	[245] _object_setInstanceVariable
0x0027FD8E	0x0000000A	[245] _property_getName
0x0027FD98	0x0000000A	[245] _sel_getName
0x0027FDA2	0x0000000A	[245] _sel_registerName
0x0027FDAC	0x0000000A	[246] _CFDictionaryCreateMutable
0x0027FDB6	0x0000000A	[246] _CFDictionaryGetValue
0x0027FDC0	0x0000000A	[246] _CFDictionaryRemoveValue
0x0027FDCA	0x0000000A	[246] _CFDictionarySetValue
0x0027FDD4	0x0000000A	[246] _CFLocaleCopyCurrent
0x0027FDDE	0x0000000A	[246] _CFLocaleGetIdentifier
0x0027FDE8	0x0000000A	[246] _CFLocaleGetValue
0x0027FDF2	0x0000000A	[246] _CFRelease
0x0027FDFC	0x0000000A	[246] _CFStringGetBytes
0x0027FE06	0x0000000A	[246] _CFStringGetCString
0x0027FE10	0x0000000A	[246] _CFStringGetLength
0x0027FE1A	0x0000000A	[246] _CFStringGetMaximumSizeForEncoding
0x0027FE24	0x0000002C	[  3] GCC_except_table0
0x0027FE50	0x00000040	[236] GCC_except_table0
0x0027FE90	0x00000040	[236] GCC_except_table1
0x0027FED0	0x00000040	[236] GCC_except_table2
0x0027FF10	0x00000040	[236] GCC_except_table3
0x0027FF50	0x00000040	[236] GCC_except_table4
0x0027FF90	0x00000040	[236] GCC_except_table5
0x0027FFD0	0x00000040	[236] GCC_except_table6
0x00280010	0x00000040	[236] GCC_except_table7
0x00280050	0x00000040	[236] GCC_except_table8
0x00280090	0x00000040	[236] GCC_except_table9
0x002800D0	0x00000040	[236] GCC_except_table10
0x00280110	0x00000040	[236] GCC_except_table11
0x00280150	0x00000040	[236] GCC_except_table12
0x00280190	0x00000040	[236] GCC_except_table13
0x002801D0	0x00000040	[236] GCC_except_table14
0x00280210	0x00000040	[236] GCC_except_table15
0x00280250	0x00000040	[236] GCC_except_table16
0x00280290	0x00000040	[236] GCC_except_table17
0x002802D0	0x00000040	[236] GCC_except_table18
0x00280310	0x00000040	[236] GCC_except_table19
0x00280350	0x00000040	[236] GCC_except_table20
0x00280390	0x00000040	[236] GCC_except_table21
0x002803D0	0x00000040	[236] GCC_except_table22
0x00280410	0x00000040	[236] GCC_except_table23
0x00280450	0x00000006	[  4] literal string: alloc
0x00280456	0x00000044	[  4] literal string: initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
0x0028049A	0x00000005	[  4] literal string: show
0x0028049F	0x00000008	[  4] literal string: release
0x002804A7	0x0000001F	[  4] literal string: applicationDidFinishLaunching:
0x002804C6	0x0000002C	[  4] literal string: application:willFinishLaunchingWithOptions:
0x002804F2	0x0000002B	[  4] literal string: application:didFinishLaunchingWithOptions:
0x0028051D	0x0000001C	[  4] literal string: applicationDidBecomeActive:
0x00280539	0x0000001D	[  4] literal string: applicationWillResignActive:
0x00280556	0x0000001B	[  4] literal string: application:handleOpenURL:
0x00280571	0x00000032	[  4] literal string: application:openURL:sourceApplication:annotation:
0x002805A3	0x00000024	[  4] literal string: applicationDidReceiveMemoryWarning:
0x002805C7	0x0000001A	[  4] literal string: applicationWillTerminate:
0x002805E1	0x00000022	[  4] literal string: applicationSignificantTimeChange:
0x00280603	0x00000035	[  4] literal string: application:willChangeStatusBarOrientation:duration:
0x00280638	0x0000002B	[  4] literal string: application:didChangeStatusBarOrientation:
0x00280663	0x00000026	[  4] literal string: application:willChangeStatusBarFrame:
0x00280689	0x00000025	[  4] literal string: application:didChangeStatusBarFrame:
0x002806AE	0x00000031	[  4] literal string: application:didRegisterUserNotificationSettings:
0x002806DF	0x0000003E	[  4] literal string: application:didRegisterForRemoteNotificationsWithDeviceToken:
0x0028071D	0x0000003E	[  4] literal string: application:didFailToRegisterForRemoteNotificationsWithError:
0x0028075B	0x0000002A	[  4] literal string: application:didReceiveRemoteNotification:
0x00280785	0x00000029	[  4] literal string: application:didReceiveLocalNotification:
0x002807AE	0x0000004F	[  4] literal string: application:handleActionWithIdentifier:forLocalNotification:completionHandler:
0x002807FD	0x00000050	[  4] literal string: application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
0x0028084D	0x00000041	[  4] literal string: application:didReceiveRemoteNotification:fetchCompletionHandler:
0x0028088E	0x0000002F	[  4] literal string: application:performFetchWithCompletionHandler:
0x002808BD	0x00000043	[  4] literal string: application:handleEventsForBackgroundURLSession:completionHandler:
0x00280900	0x00000032	[  4] literal string: application:handleWatchKitExtensionRequest:reply:
0x00280932	0x0000001F	[  4] literal string: applicationDidEnterBackground:
0x00280951	0x00000020	[  4] literal string: applicationWillEnterForeground:
0x00280971	0x0000002F	[  4] literal string: applicationProtectedDataWillBecomeUnavailable:
0x002809A0	0x0000002C	[  4] literal string: applicationProtectedDataDidBecomeAvailable:
0x002809CC	0x00000035	[  4] literal string: application:supportedInterfaceOrientationsForWindow:
0x00280A01	0x00000031	[  4] literal string: application:shouldAllowExtensionPointIdentifier:
0x00280A32	0x0000003F	[  4] literal string: application:viewControllerWithRestorationIdentifierPath:coder:
0x00280A71	0x00000028	[  4] literal string: application:shouldSaveApplicationState:
0x00280A99	0x0000002B	[  4] literal string: application:shouldRestoreApplicationState:
0x00280AC4	0x00000030	[  4] literal string: application:willEncodeRestorableStateWithCoder:
0x00280AF4	0x0000002F	[  4] literal string: application:didDecodeRestorableStateWithCoder:
0x00280B23	0x0000002E	[  4] literal string: application:willContinueUserActivityWithType:
0x00280B51	0x00000035	[  4] literal string: application:continueUserActivity:restorationHandler:
0x00280B86	0x00000039	[  4] literal string: application:didFailToContinueUserActivityWithType:error:
0x00280BBF	0x00000023	[  4] literal string: application:didUpdateUserActivity:
0x00280BE2	0x00000007	[  4] literal string: window
0x00280BE9	0x0000000B	[  4] literal string: setWindow:
0x00280BF4	0x00000009	[  4] literal string: isEqual:
0x00280BFD	0x00000006	[  4] literal string: class
0x00280C03	0x00000005	[  4] literal string: self
0x00280C08	0x00000011	[  4] literal string: performSelector:
0x00280C19	0x0000001C	[  4] literal string: performSelector:withObject:
0x00280C35	0x00000027	[  4] literal string: performSelector:withObject:withObject:
0x00280C5C	0x00000008	[  4] literal string: isProxy
0x00280C64	0x0000000F	[  4] literal string: isKindOfClass:
0x00280C73	0x00000011	[  4] literal string: isMemberOfClass:
0x00280C84	0x00000014	[  4] literal string: conformsToProtocol:
0x00280C98	0x00000014	[  4] literal string: respondsToSelector:
0x00280CAC	0x00000007	[  4] literal string: retain
0x00280CB3	0x0000000C	[  4] literal string: autorelease
0x00280CBF	0x0000000C	[  4] literal string: retainCount
0x00280CCB	0x00000005	[  4] literal string: zone
0x00280CD0	0x00000005	[  4] literal string: hash
0x00280CD5	0x0000000B	[  4] literal string: superclass
0x00280CE0	0x0000000C	[  4] literal string: description
0x00280CEC	0x00000011	[  4] literal string: debugDescription
0x00280CFD	0x00000005	[  4] literal string: init
0x00280D02	0x00000006	[  4] literal string: drain
0x00280D08	0x00000015	[233] literal string: standardUserDefaults
0x00280D1D	0x00000016	[233] literal string: stringWithUTF8String:
0x00280D33	0x00000020	[233] literal string: stringByAppendingPathComponent:
0x00280D53	0x0000001E	[233] literal string: dictionaryWithContentsOfFile:
0x00280D71	0x00000006	[233] literal string: array
0x00280D77	0x00000011	[233] literal string: isEqualToString:
0x00280D88	0x0000000C	[233] literal string: boolForKey:
0x00280D94	0x0000000B	[233] literal string: addObject:
0x00280D9F	0x0000001D	[233] literal string: componentsSeparatedByString:
0x00280DBC	0x00000010	[233] literal string: containsObject:
0x00280DCC	0x0000002B	[233] literal string: countByEnumeratingWithState:objects:count:
0x00280DF7	0x0000000E	[233] literal string: stringForKey:
0x00280E05	0x0000000E	[234] literal string: defaultCenter
0x00280E13	0x0000000F	[234] literal string: memoryWarning:
0x00280E22	0x00000022	[234] literal string: addObserver:selector:name:object:
0x00280E44	0x00000006	[234] literal string: start
0x00280E4A	0x0000000E	[235] literal string: currentLocale
0x00280E58	0x0000000E	[235] literal string: objectForKey:
0x00280E66	0x0000000B	[235] literal string: UTF8String
0x00280E71	0x00000014	[235] literal string: initWithUTF8String:
0x00280E85	0x0000000E	[235] literal string: initWithName:
0x00280E93	0x0000000E	[235] literal string: localTimeZone
0x00280EA1	0x00000005	[235] literal string: data
0x00280EA6	0x00000007	[235] literal string: length
0x00280EAD	0x00000006	[235] literal string: bytes
0x00280EB3	0x00000013	[235] literal string: knownTimeZoneNames
0x00280EC6	0x00000006	[235] literal string: count
0x00280ECC	0x0000000F	[235] literal string: objectAtIndex:
0x00280EDB	0x0000000F	[235] literal string: defaultManager
0x00280EEA	0x0000001C	[235] literal string: URLsForDirectory:inDomains:
0x00280F06	0x0000000B	[235] literal string: lastObject
0x00280F11	0x00000005	[235] literal string: path
0x00280F16	0x00000008	[237] literal string: dealloc
0x00280F1E	0x00000032	[237] literal string: initWithData:selector:argument:is_direct_binding:
0x00280F50	0x00000007	[237] literal string: start:
0x00280F57	0x00000007	[237] literal string: target
0x00280F5E	0x00000009	[237] literal string: selector
0x00280F67	0x00000009	[237] literal string: argument
0x00280F70	0x00000012	[237] literal string: is_direct_binding
0x00280F82	0x00000020	[237] literal string: initWithTarget:selector:object:
0x00280FA2	0x0000000C	[237] literal string: entryPoint:
0x00280FAE	0x0000002D	[237] literal string: detachNewThreadSelector:toTarget:withObject:
0x00280FDB	0x0000000E	[237] literal string: initWithFunc:
0x00280FE9	0x00000009	[237] literal string: the_func
0x00280FF2	0x0000000B	[238] literal string: mainBundle
0x00280FFD	0x0000000B	[238] literal string: bundlePath
0x00281008	0x00000005	[238] literal string: name
0x0028100D	0x00000007	[238] literal string: reason
0x00281014	0x0000000E	[238] literal string: appendString:
0x00281022	0x0000000E	[238] literal string: appendFormat:
0x00281030	0x00000017	[239] literal string: initWithObjects:count:
0x00281047	0x0000001C	[239] literal string: methodSignatureForSelector:
0x00281063	0x0000000C	[239] literal string: frameLength
0x0028106F	0x00000012	[239] literal string: numberOfArguments
0x00281081	0x00000018	[239] literal string: getArgumentTypeAtIndex:
0x00281099	0x00000005	[239] literal string: copy
0x0028109E	0x00000013	[239] literal string: methodReturnLength
0x002810B1	0x00000011	[239] literal string: methodReturnType
0x002810C2	0x00000018	[239] literal string: signatureWithObjCTypes:
0x002810E0	0x00000006	[  4] literal string: Trial
0x002810E6	0x0000002E	[  4] literal string: Trial executable has expired (24 hours limit)
0x00281114	0x00000006	[  4] literal string: Close
0x0028111A	0x00000005	[  4] literal string: hash
0x0028111F	0x00000005	[  4] literal string: TI,R
0x00281124	0x0000000B	[  4] literal string: superclass
0x0028112F	0x00000005	[  4] literal string: T#,R
0x00281134	0x0000000C	[  4] literal string: description
0x00281140	0x00000011	[  4] literal string: T@"NSString",R,C
0x00281151	0x00000011	[  4] literal string: debugDescription
0x00281162	0x00000007	[  4] literal string: window
0x00281169	0x00000011	[  4] literal string: T@"UIWindow",&,N
0x0028117A	0x00000010	[  4] literal string: Xamarin.iOS.dll
0x0028118A	0x00000017	[  4] literal string: XamarinPInvokeTest.exe
0x002811A1	0x0000000F	[  4] literal string: MONO_GC_PARAMS
0x002811B0	0x00000012	[  4] literal string: nursery-size=512k
0x002811D0	0x00000024	[  9] literal string: 
Removing array bound checks in %s

0x002811F4	0x00000013	[  9] literal string: 
ABCREM BLOCK %d:

0x00281207	0x0000000E	[  9] literal string: [var%d <= %d]
0x00281215	0x0000000E	[  9] literal string: [var%d >= %d]
0x00281223	0x00000019	[  9] literal string: Summarized variable %d: 
0x0028123C	0x00000044	[  9] literal string: Added symmetric summarized value for variable variable %d (to %d): 
0x00281280	0x00000022	[  9] literal string: 
Processing block %d [dfn %d]...

0x002812A2	0x00000023	[  9] literal string: Adding relation 1 on variable %d: 
0x002812C5	0x00000023	[  9] literal string: Adding relation 2 on variable %d: 
0x002812E8	0x0000001B	[  9] literal string: Processing instruction %d

0x00281303	0x00000024	[  9] literal string: Processing block %d [dfn %d] done.

0x00281327	0x0000002D	[  9] literal string: Evaluating variable %d (target variable %d)

0x00281354	0x0000004F	[  9] literal string: Target variable reached (%d), continuing to evaluate relations with constants

0x002813A3	0x00000012	[  9] literal string: Processing (%d): 
0x002813B5	0x00000043	[  9] literal string: Recursivity detected for variable %d (target variable %d), status 
0x002813F8	0x00000010	[  9] literal string:  (delta is %d)

0x00281415	0x0000002B	[  9] literal string: ../../../../../mono/mono/mini/abcremoval.c
0x00281440	0x0000004F	[  9] literal string: Recursivity for variable %d (target variable %d) discards computation, status 
0x0028148F	0x00000037	[  9] literal string: Ranges for variable %d (target variable %d) computed: 
0x002814C6	0x00000044	[  9] literal string: Evaluation of variable %d (target variable %d) already in progress

0x0028150A	0x00000017	[  9] literal string: Recursivity accepted (
0x00281521	0x00000048	[  9] literal string: Variable %d (target variable %d) already in a recursive ring, skipping

0x00281569	0x00000011	[  9] literal string: Context status: 
0x0028157A	0x00000029	[  9] literal string: (ranges: zero [%d,%d], variable [%d,%d])
0x002815A3	0x00000017	[  9] literal string: EVALUATION_NOT_STARTED
0x002815BA	0x00000017	[  9] literal string: EVALUATION_IN_PROGRESS
0x002815D1	0x00000015	[  9] literal string: EVALUATION_COMPLETED
0x002815E6	0x00000016	[  9] literal string: RECURSIVELY_ASCENDING
0x002815FC	0x00000017	[  9] literal string: RECURSIVELY_DESCENDING
0x00281613	0x00000017	[  9] literal string: RECURSIVELY_INDEFINITE
0x0028162A	0x0000003E	[  9] literal string: ARRAY-ACCESS: removed bounds check on array %d with index %d

0x00281668	0x00000043	[  9] literal string: ARRAY-ACCESS: Removed lower bound check on array %d with index %d

0x002816AB	0x00000056	[  9] literal string: ARRAY-ACCESS: Removed upper bound check (through variable) on array %d with index %d

0x00281701	0x00000056	[  9] literal string: ARRAY-ACCESS: Removed upper bound check (through constant) on array %d with index %d

0x00281757	0x0000000A	[  9] literal string: Relation 
0x00281761	0x0000000D	[  9] literal string:  with value 
0x0028176E	0x00000003	[  9] literal string: LT
0x00281771	0x00000003	[  9] literal string: EQ
0x00281774	0x00000003	[  9] literal string: GT
0x00281777	0x00000004	[  9] literal string: ANY
0x0028177B	0x0000000C	[  9] literal string: CONSTANT %d
0x00281787	0x00000016	[  9] literal string: VARIABLE %d, delta %d
0x0028179D	0x00000006	[  9] literal string: PHI (
0x002817B0	0x0000002E	[  9] literal string: ARRAY-ACCESS: removed check_this instruction.
0x002817E0	0x0000001C	[  9] literal string: Attempting check removal...
0x00281800	0x00000045	[  9] literal string: Recursivity rejected (some relation in the cycle is not a defintion)
0x00281845	0x00000002	[  9] literal string: )
0x00281850	0x00000025	[  9] literal string: Broken recursive ring in ABC removal
0x00281880	0x00000016	[  9] literal string: , ranges not computed
0x002818A0	0x00000024	[  9] literal string: , ranges already computed, result: 
0x002818D0	0x00000034	[  9] literal string: Relation is a back-edge in this traversal, skipping
0x00281910	0x00000016	[ 10] literal string: BEFORE ALIAS_ANALYSIS
0x00281926	0x00000015	[ 10] literal string: AFTER ALIAS_ANALYSIS
0x0028193B	0x0000000A	[ 10] literal string: Killing :
0x00281945	0x0000000B	[ 10] literal string: Found op :
0x00281950	0x0000000C	[ 10] literal string: Restoring :
0x0028195C	0x0000000C	[ 10] literal string: Method: %s

0x00281968	0x00000012	[ 10] literal string: Kills %d Adds %d

0x0028197A	0x0000000E	[ 10] literal string: New address: 
0x00281988	0x0000000C	[ 10] literal string: New alias: 
0x00281994	0x0000000F	[ 10] literal string: Killed alias: 
0x002819A3	0x00000016	[ 10] literal string: Found candidate load:
0x002819B9	0x00000017	[ 10] literal string: Found candidate store:
0x002819D0	0x0000001B	[ 10] literal string: Found candidate store-imm:
0x002819EB	0x0000001E	[ 10] literal string: Found null check over local: 
0x00281A09	0x00000014	[ 10] literal string: mem2reg replacing: 
0x00281A1D	0x0000002A	[ 10] literal string: Incompatible store_vtype classes %s x %s

0x00281A47	0x00000035	[ 10] literal string: Incompatible store_reg type: expected %s but got %s

0x00281A7C	0x00000029	[ 10] literal string: Incompatible load_vtype classes %s x %s

0x00281AA5	0x00000030	[ 10] literal string: Incompatible load type: expected %s but got %s

0x00281AE0	0x00000023	[ 10] literal string: Incompatible variable of size != 8
0x00281B10	0x00000023	[ 10] literal string: Incompatible variable of size != 4
0x00281B40	0x00000006	[ 11] literal string: %s_%s
0x00281B55	0x0000002D	[ 11] literal string: ../../../../../mono/mono/mini/aot-compiler.c
0x00281B82	0x0000000A	[ 11] literal string: llvm_acfg
0x00281B8C	0x00000017	[ 11] literal string: hindex == hashes_count
0x00281BAE	0x00000003	[ 11] literal string: %s
0x00281BB1	0x00000004	[ 11] literal string: `1.
0x00281BB5	0x00000003	[ 11] literal string: s2
0x00281BB8	0x00000006	[ 11] literal string: IList
0x00281BBE	0x00000012	[ 11] literal string: InternalArray__%s
0x00281BD0	0x00000015	[ 11] literal string: InternalArray__%s_%s
0x00281BEE	0x00000003	[ 11] literal string: a+
0x00281BF1	0x0000002E	[ 11] literal string: -O=gsharedvt not supported on this platform.

0x00281C1F	0x00000035	[ 11] literal string: Mono Ahead of Time compiler - compiling assembly %s

0x00281C54	0x00000048	[ 11] literal string: The 'direct-pinvoke' AOT option also requires the 'static' AOT option.

0x00281C9C	0x00000038	[ 11] literal string: The soft-debug AOT option requires the --debug option.

0x00281CD4	0x00000044	[ 11] literal string: The 'soft-debug' option is not supported when compiling with LLVM.

0x00281D18	0x00000040	[ 11] literal string: The llvm-outputfile= option is not supported on this platform.

0x00281D58	0x00000002	[ 11] literal string: w
0x00281D5A	0x00000021	[ 11] literal string: Unable to create logfile: '%s'.

0x00281D7B	0x00000010	[ 11] literal string: mono_aot_%s_got
0x00281D8B	0x00000015	[ 11] literal string: mono_aot_%s_llvm_got
0x00281DA0	0x00000012	[ 11] literal string: %smono_aot_%s_plt
0x00281DB2	0x00000005	[ 11] literal string: %s%s
0x00281DB7	0x00000015	[ 11] literal string: mono_aot_%s_eh_frame
0x00281DCC	0x0000000E	[ 11] literal string: mono_eh_frame
0x00281DDA	0x00000007	[ 11] literal string: .dylib
0x00281DE1	0x00000007	[ 11] literal string: %s.tmp
0x00281DE8	0x0000002A	[ 11] literal string: Unable to create temporary file '%s': %s

0x00281E12	0x00000005	[ 11] literal string: %s.s
0x00281E1A	0x00000010	[ 11] literal string: mono_aot_XXXXXX
0x00281E2A	0x0000001E	[ 11] literal string: Unable to open file '%s': %s

0x00281E48	0x00000009	[ 11] literal string: %s%sm_%x
0x00281E51	0x00000033	[ 11] literal string: The dwarf AOT option requires the --debug option.

0x00281E84	0x0000000A	[ 11] literal string: thumb_end
0x00281E8E	0x00000006	[ 11] literal string: .text
0x00281E94	0x00000006	[ 11] literal string: .arm

0x00281E9A	0x00000028	[ 11] literal string: 
.section	.note.GNU-stack,"",@progbits

0x00281EC2	0x00000012	[ 11] literal string: , LLVM: %d (%d%%)
0x00281ED4	0x00000097	[ 11] literal string: Code: %d(%d%%) Info: %d(%d%%) Ex Info: %d(%d%%) Unwind Info: %d(%d%%) Class Info: %d(%d%%) PLT: %d(%d%%) GOT Info: %d(%d%%) Offsets: %d(%d%%) GOT: %d

0x00281F6B	0x0000004C	[ 11] literal string: Compiled: %d/%d (%d%%)%s, No GOT slots: %d (%d%%), Direct calls: %d (%d%%)

0x00281FB7	0x0000001F	[ 11] literal string: %d methods are generic (%d%%)

0x00281FD6	0x0000002E	[ 11] literal string: %d methods contain absolute addresses (%d%%)

0x00282004	0x00000028	[ 11] literal string: %d methods contain lmf pointers (%d%%)

0x0028202C	0x00000027	[ 11] literal string: %d methods have other problems (%d%%)

0x00282053	0x00000023	[ 11] literal string: Unable to rename '%s' to '%s': %s

0x00282076	0x00000018	[ 11] literal string: GOT slot distribution:

0x0028208E	0x0000000E	[ 11] literal string: 	%s: %d (%d)

0x0028209C	0x00000045	[ 11] literal string: JIT time: %d ms, Generation time: %d ms, Assembly+Link time: %d ms.

0x002820E1	0x00000008	[ 11] literal string: methods
0x002820EE	0x00000007	[ 11] literal string: "%s",

0x002820F9	0x00000007	[ 11] literal string: "%d",

0x00282100	0x00000006	[ 11] literal string: class
0x00282106	0x0000000A	[ 11] literal string: namespace
0x00282110	0x0000000D	[ 11] literal string: wrapper_type
0x0028211D	0x00000003	[ 11] literal string: ,

0x00282120	0x00000008	[ 11] literal string: %s.json
0x00282128	0x00000005	[ 11] literal string: none
0x0028212D	0x00000010	[ 11] literal string: delegate-invoke
0x0028213D	0x00000016	[ 11] literal string: delegate-begin-invoke
0x00282153	0x00000014	[ 11] literal string: delegate-end-invoke
0x00282167	0x0000000F	[ 11] literal string: runtime-invoke
0x00282176	0x00000012	[ 11] literal string: native-to-managed
0x00282188	0x00000012	[ 11] literal string: managed-to-native
0x0028219A	0x00000013	[ 11] literal string: managed-to-managed
0x002821AD	0x00000010	[ 11] literal string: remoting-invoke
0x002821BD	0x0000001B	[ 11] literal string: remoting-invoke-with-check
0x002821D8	0x0000000F	[ 11] literal string: xdomain-invoke
0x002821E7	0x00000011	[ 11] literal string: xdomain-dispatch
0x002821F8	0x00000006	[ 11] literal string: ldfld
0x002821FE	0x00000006	[ 11] literal string: stfld
0x00282204	0x0000000D	[ 11] literal string: ldfld-remote
0x00282211	0x0000000D	[ 11] literal string: stfld-remote
0x0028221E	0x0000000D	[ 11] literal string: synchronized
0x0028222B	0x0000000F	[ 11] literal string: dynamic-method
0x0028223A	0x00000007	[ 11] literal string: isinst
0x0028224B	0x0000000D	[ 11] literal string: proxy_isinst
0x00282258	0x0000000A	[ 11] literal string: stelemref
0x00282262	0x00000006	[ 11] literal string: unbox
0x00282268	0x00000007	[ 11] literal string: ldflda
0x0028226F	0x0000000E	[ 11] literal string: write-barrier
0x00282285	0x00000012	[ 11] literal string: cominterop-invoke
0x00282297	0x0000000B	[ 11] literal string: cominterop
0x002822A2	0x00000006	[ 11] literal string: alloc
0x002822A8	0x00000014	[ 11] literal string: Output file: '%s'.

0x002822BC	0x00000017	[ 11] literal string: Linking symbol: '%s'.

0x002822D3	0x00000019	[ 11] literal string: LLVM output file: '%s'.

0x002822EC	0x00000005	[ 11] literal string: %s.o
0x002822F1	0x00000016	[ 11] literal string: "%s%s" %s %s -o %s %s
0x00282307	0x00000003	[ 11] literal string: as
0x0028230A	0x0000000B	[ 11] literal string: -arch i386
0x00282315	0x00000024	[ 11] literal string: Executing the native assembler: %s

0x0028233B	0x00000014	[ 11] literal string: %s -o %s %s %s.o %s
0x0028234F	0x00000017	[ 11] literal string: clang -m32 -dynamiclib
0x00282366	0x00000021	[ 11] literal string: Executing the native linker: %s

0x00282387	0x0000000C	[ 11] literal string: dsymutil %s
0x00282393	0x00000018	[ 11] literal string: Executing dsymutil: %s

0x002823AB	0x00000016	[ 11] literal string: Retained input file.

0x002823C1	0x00000008	[ 11] literal string: mem_end
0x002823C9	0x00000008	[ 11] literal string: %sme_%x
0x002823D1	0x0000000C	[ 11] literal string: _%s_autoreg
0x002823DD	0x0000000F	[ 11] literal string: .Lglobals_hash
0x002823EC	0x00000019	[ 11] literal string: .section __TEXT, __const
0x00282405	0x00000013	[ 11] literal string: table_size < 65000
0x00282418	0x00000008	[ 11] literal string: name_%d
0x00282420	0x00000008	[ 11] literal string: globals
0x00282428	0x00000006	[ 11] literal string: .data
0x0028242E	0x0000000F	[ 11] literal string: %sglobals_hash
0x0028243D	0x00000020	[ 11] literal string: strlen (name) < sizeof (symbol)
0x0028245D	0x00000009	[ 11] literal string: acfg->fp
0x00282466	0x0000003F	[ 11] literal string: .section	__DATA,__objc_selrefs,literal_pointers,no_dead_strip

0x002824A5	0x0000000A	[ 11] literal string: .align	3

0x002824AF	0x00000020	[ 11] literal string: L_OBJC_SELECTOR_REFERENCES_%d:

0x002824CF	0x0000001F	[ 11] literal string: .long	L_OBJC_METH_VAR_NAME_%d

0x002824EE	0x0000002C	[ 11] literal string: .section	__TEXT,__cstring,cstring_literals

0x0028251A	0x0000001A	[ 11] literal string: L_OBJC_METH_VAR_NAME_%d:

0x00282534	0x0000000D	[ 11] literal string: .asciz "%s"

0x00282541	0x00000038	[ 11] literal string: .section	__DATA,__objc_imageinfo,regular,no_dead_strip

0x00282579	0x00000014	[ 11] literal string: L_OBJC_IMAGE_INFO:

0x0028258D	0x00000009	[ 11] literal string: .long	0

0x00282596	0x0000000A	[ 11] literal string: .long	16

0x002825A0	0x00000005	[ 11] literal string: blob
0x002825A5	0x0000000E	[ 11] literal string: assembly_guid
0x002825B3	0x00000010	[ 11] literal string: runtime_version
0x002825C3	0x0000000E	[ 11] literal string: assembly_name
0x002825D1	0x00000015	[ 11] literal string: %smono_aot_file_info
0x002825E6	0x0000000F	[ 11] literal string: jit_code_start
0x002825F5	0x0000000D	[ 11] literal string: jit_code_end
0x00282602	0x00000011	[ 11] literal string: class_name_table
0x00282613	0x00000013	[ 11] literal string: class_info_offsets
0x00282626	0x00000014	[ 11] literal string: method_info_offsets
0x0028263A	0x00000010	[ 11] literal string: ex_info_offsets
0x0028264A	0x00000011	[ 11] literal string: method_addresses
0x0028265B	0x0000001A	[ 11] literal string: extra_method_info_offsets
0x00282675	0x00000013	[ 11] literal string: extra_method_table
0x00282688	0x00000011	[ 11] literal string: got_info_offsets
0x00282699	0x00000016	[ 11] literal string: llvm_got_info_offsets
0x002826AF	0x0000000C	[ 11] literal string: unwind_info
0x002826BB	0x0000000C	[ 11] literal string: image_table
0x002826C7	0x00000004	[ 11] literal string: plt
0x002826CB	0x00000008	[ 11] literal string: plt_end
0x002826D3	0x00000015	[ 11] literal string: specific_trampolines
0x002826E8	0x00000019	[ 11] literal string: static_rgctx_trampolines
0x00282701	0x0000000B	[ 11] literal string: imt_thunks
0x0028270C	0x0000001A	[ 11] literal string: gsharedvt_arg_trampolines
0x00282726	0x00000012	[ 11] literal string: unbox_trampolines
0x00282738	0x00000016	[ 11] literal string: unbox_trampolines_end
0x0028274E	0x0000001B	[ 11] literal string: unbox_trampoline_addresses
0x00282769	0x0000001A	[ 11] literal string: %smono_aot_module_%s_info
0x00282786	0x00000005	[ 11] literal string: .bss
0x0028278B	0x00000008	[ 11] literal string: got_end
0x00282793	0x00000020	[ 11] literal string: image->assembly->image == image
0x002827B3	0x00000014	[ 11] literal string: .private_extern %s

0x002827C7	0x00000014	[ 11] literal string: 	.no_dead_strip %s

0x002827DD	0x00000009	[ 11] literal string: %s_thumb
0x002827E6	0x00000011	[ 11] literal string: 	.thumb_func %s

0x002827F7	0x0000000E	[ 11] literal string: 
.thumb_func

0x00282812	0x0000001D	[ 11] literal string: klass->nested_classes_inited
0x0028282F	0x00000013	[ 11] literal string: p - buf < buf_size
0x00282847	0x00000017	[ 11] literal string: info->alloc_type != -1
0x0028285E	0x00000052	[ 11] literal string: info->subtype == WRAPPER_SUBTYPE_NONE || info->subtype == WRAPPER_SUBTYPE_PINVOKE
0x002828B0	0x0000000C	[ 11] literal string: m != method
0x002828BC	0x0000001E	[ 11] literal string: image_index < MAX_IMAGE_INDEX
0x002828DE	0x00000011	[ 11] literal string: declaring->token
0x002828EF	0x00000037	[ 11] literal string: mono_metadata_token_table (token) == MONO_TABLE_METHOD
0x00282926	0x00000014	[ 11] literal string: method->klass->rank
0x00282940	0x00000004	[ 11] literal string: Get
0x00282944	0x00000008	[ 11] literal string: Address
0x0028294C	0x00000004	[ 11] literal string: Set
0x00282950	0x00000010	[ 11] literal string: inst->type_argc
0x00282960	0x00000011	[ 11] literal string: t->num_mods == 0
0x00282971	0x00000012	[ 11] literal string: klass->type_token
0x00282983	0x00000010	[ 11] literal string: p - buf2 < 1024
0x00282993	0x00000044	[ 11] literal string: mono_metadata_token_code (klass->type_token) == MONO_TOKEN_TYPE_DEF
0x002829D7	0x00000011	[ 11] literal string: par->serial == 0
0x002829E8	0x00000010	[ 11] literal string: klass->rank > 0
0x002829F8	0x0000000B	[ 11] literal string: len < 4096
0x00282A03	0x00000011	[ 11] literal string: entry->from == 0
0x00282A14	0x0000001D	[ 11] literal string: jinfo->d.method->is_inflated
0x00282A31	0x0000001B	[ 11] literal string: debug_info_size < buf_size
0x00282A4C	0x00000014	[ 11] literal string: p - buf <= buf_size
0x00282A60	0x00000036	[ 11] literal string: mono_metadata_token_code (token) == MONO_TOKEN_STRING
0x00282A9D	0x00000009	[ 11] literal string: ex_class
0x00282AA6	0x00000011	[ 11] literal string: p2 - buf2 < 1024
0x00282AB7	0x0000001C	[ 11] literal string: (int)entry->info_type < 256
0x00282AD3	0x00000018	[ 11] literal string: entry->data->type < 256
0x00282AEB	0x0000001E	[ 11] literal string: unable to handle jump info %d
0x00282B09	0x00000039	[ 11] literal string: mono_metadata_token_code (token) == MONO_TOKEN_FIELD_DEF
0x00282B42	0x00000013	[ 11] literal string: table->len < 65000
0x00282B55	0x00000016	[ 11] literal string: acfg->image->assembly
0x00282B74	0x00000019	[ 11] literal string: gsharedvt_out_trampoline
0x00282B8D	0x00000005	[ 11] literal string: %s_e
0x00282B92	0x0000000B	[ 11] literal string: tramp_size
0x00282B9D	0x0000001A	[ 11] literal string: code - buf == *tramp_size
0x00282BB7	0x0000000B	[ 11] literal string: %snamed_%s
0x00282BC2	0x0000000C	[ 11] literal string: %snamede_%s
0x00282BCE	0x00000007	[ 11] literal string: %s%s_p
0x00282BDF	0x0000000E	[ 11] literal string: .loc %d %d 0

0x00282BED	0x0000001F	[ 11] literal string: strlen (direct_pinvoke) < 1000
0x00282C0C	0x00000014	[ 11] literal string: strlen (sym) < 1000
0x00282C20	0x00000009	[ 11] literal string: call %s

0x00282C29	0x0000000F	[ 11] literal string: .file %d "%s"

0x00282C38	0x00000015	[ 11] literal string: (p - buf) < buf_size
0x00282C4D	0x00000011	[ 11] literal string: !cfg->ldstr_list
0x00282C5E	0x00000013	[ 11] literal string: cfg->has_got_slots
0x00282C71	0x00000006	[ 11] literal string: ut_%d
0x00282C77	0x00000013	[ 11] literal string: .no_dead_strip %s

0x00282C8A	0x00000015	[ 11] literal string: method_addresses_end
0x00282C9F	0x00000013	[ 11] literal string: index > prev_index
0x00282CB2	0x00000019	[ 11] literal string: Method %s emitted as %s

0x00282CCB	0x0000000A	[ 11] literal string: .code 32

0x00282CD5	0x0000000A	[ 11] literal string: .code 16

0x00282CDF	0x00000008	[ 11] literal string: len > 0
0x00282CE7	0x00000021	[ 11] literal string: Skip (gshared failure): %s (%s)

0x00282D08	0x00000018	[ 11] literal string: Skip (JIT failure): %s

0x00282D20	0x00000015	[ 11] literal string: Skip (disabled): %s

0x00282D35	0x00000015	[ 11] literal string: Skip (abs call): %s

0x00282D4A	0x00000014	[ 11] literal string: Skip (patches): %s

0x00282D5E	0x0000000B	[ 11] literal string: %s ### %d

0x00282D70	0x00000007	[ 11] literal string: vtable
0x00282D77	0x00000025	[ 11] literal string: %*sAdding generic instance %s [%s].

0x00282D9C	0x0000000D	[ 11] literal string: Dictionary`2
0x00282DA9	0x00000007	[ 11] literal string: List`1
0x00282DB0	0x00000015	[ 11] literal string: ReadOnlyCollection`1
0x00282DCB	0x00000016	[ 11] literal string: %*sAdding method %s.

0x00282DE1	0x00000007	[ 11] literal string: parent
0x00282DE8	0x0000000E	[ 11] literal string: ICollection`1
0x00282DF6	0x0000000E	[ 11] literal string: IEnumerable`1
0x00282E04	0x00000008	[ 11] literal string: IList`1
0x00282E0C	0x0000000E	[ 11] literal string: IEnumerator`1
0x00282E1A	0x00000010	[ 11] literal string: IReadOnlyList`1
0x00282E2A	0x00000006	[ 11] literal string: %s.%s
0x00282E30	0x00000015	[ 11] literal string: InternalEnumerator`1
0x00282E45	0x00000007	[ 11] literal string: nclass
0x00282E4C	0x0000000F	[ 11] literal string: ICollection<T>
0x00282E5B	0x0000000B	[ 11] literal string: Comparer`1
0x00282E66	0x0000000E	[ 11] literal string: IComparable`1
0x00282E74	0x0000000C	[ 11] literal string: icomparable
0x00282E80	0x00000012	[ 11] literal string: GenericComparer`1
0x00282E92	0x0000000A	[ 11] literal string: gcomparer
0x00282E9C	0x0000000C	[ 11] literal string: Comparer<T>
0x00282EA8	0x00000013	[ 11] literal string: EqualityComparer`1
0x00282EBB	0x0000000D	[ 11] literal string: IEquatable`1
0x00282EC8	0x00000006	[ 11] literal string: iface
0x00282ECE	0x0000001A	[ 11] literal string: GenericEqualityComparer`1
0x00282EE8	0x00000014	[ 11] literal string: EqualityComparer<T>
0x00282EFC	0x00000004	[ 11] literal string: arg
0x00282F00	0x00000006	[ 11] literal string: local
0x00282F06	0x00000027	[ 11] literal string: Failed to load method 0x%x from '%s'.

0x00282F2D	0x00000035	[ 11] literal string: Run with MONO_LOG_LEVEL=debug for more information.

0x00282F62	0x00000012	[ 11] literal string: System.Reflection
0x00282F74	0x00000009	[ 11] literal string: Assembly
0x00282F86	0x0000000C	[ 11] literal string: BeginInvoke
0x00282F92	0x0000000A	[ 11] literal string: EndInvoke
0x00282F9C	0x00000023	[ 11] literal string: MonoNativeFunctionWrapperAttribute
0x00282FC0	0x0000001D	[ 11] literal string: MonoPInvokeCallbackAttribute
0x00282FDD	0x000000A5	[ 11] literal string: AOT restriction: Method '%s' must be static since it is decorated with [MonoPInvokeCallback]. See http://ios.xamarin.com/Documentation/Limitations#Reverse_Callbacks
0x00283082	0x00000016	[ 11] literal string: sig->param_count == 1
0x00283098	0x00000005	[ 11] literal string: Type
0x0028309D	0x00000070	[ 11] literal string: sig->params [0]->type == MONO_TYPE_CLASS && !strcmp (mono_class_from_mono_type (sig->params [0])->name, "Type")
0x0028310F	0x00000037	[ 11] literal string: klass->parent == mono_defaults.multicastdelegate_class
0x00283146	0x0000000E	[ 11] literal string: num_named < 2
0x00283154	0x00000013	[ 11] literal string: named_type == 0x54
0x00283167	0x0000000D	[ 11] literal string: ExportSymbol
0x00283174	0x0000001F	[ 11] literal string: !strcmp (name, "ExportSymbol")
0x00283193	0x00000015	[ 11] literal string: *named != (char)0xff
0x002831A8	0x0000001F	[ 11] literal string: <PrivateImplementationDetails>
0x002831C7	0x0000002B	[ 11] literal string: System.Net.NetworkInformation.MacOsStructs
0x002831F2	0x0000000C	[ 11] literal string: sockaddr_dl
0x002831FE	0x0000000A	[ 11] literal string: ValueType
0x00283208	0x00000013	[ 11] literal string: __icall_wrapper_%s
0x0028321B	0x00000004	[ 11] literal string: FOO
0x0028321F	0x00000009	[ 11] literal string: typespec
0x0028322C	0x00000011	[ 11] literal string: System.Threading
0x00283240	0x00000006	[ 11] literal string: Write
0x00283246	0x0000001A	[ 11] literal string:  -march=x86 -mattr=sse4.1
0x00283260	0x00000002	[ 11] literal string: _
0x00283262	0x00000006	[ 11] literal string: .word
0x00283268	0x00000020	[ 11] literal string: %s/.mono/aot-profile-data/%s-%d
0x00283288	0x00000002	[ 11] literal string: r
0x0028328A	0x00000007	[ 11] literal string: infile
0x00283291	0x0000001E	[ 11] literal string: Using profile data file '%s'

0x002832AF	0x00000006	[ 11] literal string: %32s

0x002832B5	0x00000007	[ 11] literal string: #VER:2
0x002832BC	0x00000002	[ 11] literal string: ,
0x002832BE	0x00000009	[ 11] literal string: outfile=
0x002832C7	0x0000000E	[ 11] literal string: llvm-outfile=
0x002832D5	0x0000000B	[ 11] literal string: save-temps
0x002832E0	0x0000000B	[ 11] literal string: keep-temps
0x002832EB	0x0000000E	[ 11] literal string: write-symbols
0x002832F9	0x00000011	[ 11] literal string: no-write-symbols
0x0028330A	0x0000000E	[ 11] literal string: metadata-only
0x00283318	0x00000018	[ 11] literal string: bind-to-runtime-version
0x00283330	0x00000005	[ 11] literal string: full
0x00283335	0x00000009	[ 11] literal string: threads=
0x0028333E	0x00000007	[ 11] literal string: static
0x00283345	0x00000008	[ 11] literal string: asmonly
0x0028334D	0x0000000A	[ 11] literal string: asmwriter
0x00283357	0x00000008	[ 11] literal string: nodebug
0x0028335F	0x0000000B	[ 11] literal string: dwarfdebug
0x0028336A	0x00000012	[ 11] literal string: nopagetrampolines
0x0028337C	0x0000000E	[ 11] literal string: ntrampolines=
0x0028338A	0x00000014	[ 11] literal string: nrgctx-trampolines=
0x0028339E	0x00000012	[ 11] literal string: nimt-trampolines=
0x002833B0	0x00000018	[ 11] literal string: ngsharedvt-trampolines=
0x002833C8	0x00000008	[ 11] literal string: autoreg
0x002833D0	0x0000000D	[ 11] literal string: tool-prefix=
0x002833DD	0x0000000A	[ 11] literal string: ld-flags=
0x002833E7	0x0000000B	[ 11] literal string: soft-debug
0x002833F2	0x0000000F	[ 11] literal string: direct-pinvoke
0x00283401	0x0000000E	[ 11] literal string: direct-icalls
0x0028340F	0x00000010	[ 11] literal string: no-direct-calls
0x0028341F	0x0000000E	[ 11] literal string: print-skipped
0x0028342D	0x00000006	[ 11] literal string: stats
0x00283433	0x0000000D	[ 11] literal string: no-instances
0x00283440	0x0000000D	[ 11] literal string: log-generics
0x0028344D	0x0000000F	[ 11] literal string: log-instances=
0x0028345C	0x0000000E	[ 11] literal string: log-instances
0x0028346A	0x00000012	[ 11] literal string: internal-logfile=
0x0028347C	0x00000009	[ 11] literal string: mtriple=
0x00283485	0x0000000B	[ 11] literal string: llvm-path=
0x00283490	0x00000002	[ 11] literal string: /
0x00283492	0x00000005	[ 11] literal string: llvm
0x00283497	0x00000010	[ 11] literal string: readonly-value=
0x002834A7	0x00000017	[ 11] literal string: AOT target setup: %s.

0x002834BE	0x0000001D	[ 11] literal string: X86 (!native client codegen)
0x002834DB	0x00000008	[ 11] literal string: gc-maps
0x002834E3	0x00000005	[ 11] literal string: dump
0x002834E8	0x00000005	[ 11] literal string: help
0x002834ED	0x0000001E	[ 11] literal string: AOT : Unknown argument '%s'.

0x0028350B	0x0000003A	[ 11] literal string: AOT : invalid format for readonly field '%s', missing /.

0x00283545	0x0000003A	[ 11] literal string: AOT : invalid format for readonly field '%s', missing =.

0x0028357F	0x00000003	[ 11] literal string: i1
0x00283582	0x00000003	[ 11] literal string: i2
0x00283585	0x00000003	[ 11] literal string: i4
0x00283588	0x00000031	[ 11] literal string: AOT : unsupported type for readonly field '%s'.

0x002835BF	0x00000006	[ 11] literal string: %s_%d
0x002835C5	0x0000000B	[ 11] literal string: %s_%s_llvm
0x002835D0	0x00000008	[ 11] literal string: %s_llvm
0x002835D8	0x00000008	[ 11] literal string: plt_%s_
0x002835E0	0x00000005	[ 11] literal string: plt_
0x002835E5	0x00000010	[ 11] literal string: %s_jit_icall_%s
0x002835F5	0x00000012	[ 11] literal string: %s__class_init_%s
0x00283607	0x00000012	[ 11] literal string: %s_rgctx_fetch_%d
0x00283619	0x00000013	[ 11] literal string: %s_icall_native_%s
0x0028362C	0x00000017	[ 11] literal string: %s_jit_icall_native_%s
0x00283643	0x00000016	[ 11] literal string: %s_generic_class_init
0x00283659	0x00000006	[ 11] literal string: _0x%x
0x0028365F	0x00000003	[ 11] literal string: %x
0x00283662	0x00000007	[ 11] literal string: %sp_%d
0x00283669	0x00000004	[ 11] literal string: _%d
0x00283670	0x0000001D	[ 11] literal string: Supported options for --aot:
0x0028368D	0x0000000D	[ 11] literal string:     outfile=
0x002836A0	0x00000012	[ 11] literal string:     llvm-outfile=
0x002836B2	0x0000000F	[ 11] literal string:     save-temps
0x002836C1	0x0000000F	[ 11] literal string:     keep-temps
0x002836D0	0x00000012	[ 11] literal string:     write-symbols
0x002836F0	0x00000012	[ 11] literal string:     metadata-only
0x00283710	0x0000001C	[ 11] literal string:     bind-to-runtime-version
0x0028372C	0x00000009	[ 11] literal string:     full
0x00283735	0x0000000D	[ 11] literal string:     threads=
0x00283742	0x0000000B	[ 11] literal string:     static
0x0028374D	0x0000000C	[ 11] literal string:     asmonly
0x00283759	0x0000000E	[ 11] literal string:     asmwriter
0x00283767	0x0000000C	[ 11] literal string:     nodebug
0x00283773	0x0000000F	[ 11] literal string:     dwarfdebug
0x00283790	0x00000012	[ 11] literal string:     ntrampolines=
0x002837B0	0x00000018	[ 11] literal string:     nrgctx-trampolines=
0x002837D0	0x00000016	[ 11] literal string:     nimt-trampolines=
0x002837F0	0x0000001C	[ 11] literal string:     ngsharedvt-trampolines=
0x0028380C	0x0000000C	[ 11] literal string:     autoreg
0x00283820	0x00000011	[ 11] literal string:     tool-prefix=
0x00283840	0x00000014	[ 11] literal string:     readonly-value=
0x00283854	0x0000000F	[ 11] literal string:     soft-debug
0x00283863	0x0000000C	[ 11] literal string:     gc-maps
0x00283870	0x00000012	[ 11] literal string:     print-skipped
0x00283890	0x00000011	[ 11] literal string:     no-instances
0x002838A1	0x0000000A	[ 11] literal string:     stats
0x002838AB	0x00000009	[ 11] literal string:     dump
0x002838B4	0x00000009	[ 11] literal string:     info
0x002838BD	0x0000000B	[ 11] literal string:     help/?
0x002838D0	0x0000002B	[ 11] literal string: Profile file has wrong version or invalid.
0x002838FB	0x0000002C	[ 12] literal string: ../../../../../mono/mono/mini/aot-runtime.c
0x00283927	0x00000027	[ 12] literal string: info->version == MONO_AOT_FILE_VERSION
0x0028394E	0x00000014	[ 12] literal string: Async JIT info size
0x00283962	0x0000000D	[ 12] literal string: MONO_LASTAOT
0x0028396F	0x00000008	[ 12] literal string: amodule
0x00283977	0x0000000D	[ 12] literal string: ji->from_aot
0x00283984	0x0000000E	[ 12] literal string: ji_to_amodule
0x00283992	0x0000002B	[ 12] literal string: amodule_contains_code_addr (amodule, code)
0x002839BD	0x00000035	[ 12] literal string: code_offsets [(i * 2)] <= code_offsets [(i + 1) * 2]
0x002839F2	0x00000028	[ 12] literal string: offset < code_offsets [((pos + 1) * 2)]
0x00283A1A	0x0000004B	[ 12] literal string: (guint8*)code <= (guint8*)addr && (guint8*)addr < (guint8*)code + code_len
0x00283A65	0x00000010	[ 12] literal string: pos < table_len
0x00283A75	0x0000002C	[ 12] literal string: (guint8*)addr >= (guint8*)jinfo->code_start
0x00283AA1	0x0000003E	[ 12] literal string: (guint8*)addr < (guint8*)jinfo->code_start + jinfo->code_size
0x00283ADF	0x0000000E	[ 12] literal string: klass->inited
0x00283AED	0x00000013	[ 12] literal string: AOT NOT FOUND: %s.
0x00283B00	0x00000006	[ 12] literal string: image
0x00283B06	0x00000015	[ 12] literal string: Specific trampolines
0x00283B1B	0x00000006	[ 12] literal string: tramp
0x00283B21	0x00000019	[ 12] literal string: method_index != 0xffffff
0x00283B3A	0x0000001F	[ 12] literal string: rgctx_fetch_trampoline_general
0x00283B59	0x0000000A	[ 12] literal string: item->key
0x00283B63	0x00000010	[ 12] literal string: AOT: pagefaults
0x00283B73	0x00000009	[ 12] literal string: res == 0
0x00283B7C	0x0000001A	[ 12] literal string: specific_trampolines_page
0x00283B96	0x00000017	[ 12] literal string: rgctx_trampolines_page
0x00283BAD	0x00000015	[ 12] literal string: imt_trampolines_page
0x00283BC2	0x0000001F	[ 12] literal string: gsharedvt_arg_trampolines_page
0x00283BE1	0x0000002A	[ 12] literal string: Incorrect tramp type for trampolines page
0x00283C0B	0x00000006	[ 12] literal string: tpage
0x00283C11	0x0000002B	[ 12] literal string: Cannot allocate memory for trampolines: %d
0x00283C3C	0x0000002A	[ 12] literal string: Cannot allocate more trampoline pages: %d
0x00283C66	0x00000032	[ 12] literal string: Ran out of trampolines of type %d in '%s' (%d)%s

0x00283C98	0x00000061	[ 12] literal string: . See http://docs.xamarin.com/ios/troubleshooting for instructions on how to fix this condition.
0x00283CF9	0x00000029	[ 12] literal string: Symbol '%s' not found in AOT file '%s'.

0x00283D22	0x0000002B	[ 12] literal string: AOT: FOUND function '%s' in AOT file '%s'.
0x00283D4D	0x00000005	[ 12] literal string: %s_p
0x00283D52	0x00000008	[ 12] literal string: patches
0x00283D5A	0x0000001A	[ 12] literal string: mono_exception_from_token
0x00283D74	0x00000015	[ 12] literal string: mono_throw_exception
0x00283D89	0x00000011	[ 12] literal string: trampoline_func_
0x00283D9A	0x00000020	[ 12] literal string: specific_trampoline_lazy_fetch_
0x00283DBA	0x00000022	[ 12] literal string: specific_trampoline_lazy_fetch_%u
0x00283DDC	0x00000009	[ 12] literal string: res == 1
0x00283DE5	0x00000022	[ 12] literal string: specific_trampoline_monitor_enter
0x00283E07	0x00000025	[ 12] literal string: specific_trampoline_monitor_enter_v4
0x00283E2C	0x00000021	[ 12] literal string: specific_trampoline_monitor_exit
0x00283E4D	0x00000027	[ 12] literal string: specific_trampoline_generic_class_init
0x00283E74	0x0000002C	[ 12] literal string: mono_thread_get_and_clear_pending_exception
0x00283EA0	0x00000014	[ 12] literal string: generic_trampoline_
0x00283EB4	0x00000019	[ 12] literal string: Unknown relocation '%s'

0x00283ECD	0x00000004	[ 12] literal string: _%s
0x00283ED1	0x00000010	[ 12] literal string: ji->data.method
0x00283EE1	0x0000000A	[ 12] literal string: info->sig
0x00283EEB	0x0000000D	[ 12] literal string: info->method
0x00283EF8	0x00000012	[ 12] literal string: unhandled type %d
0x00283F0A	0x00000029	[ 12] literal string: sig->call_convention == MONO_CALL_VARARG
0x00283F33	0x0000001A	[ 12] literal string: gclass->generic_container
0x00283F4D	0x00000021	[ 12] literal string: index < amodule->image_table_len
0x00283F6E	0x00000040	[ 12] literal string: AOT: module %s is unusable because dependency %s is not found.

0x00283FAE	0x00000064	[ 12] literal string: AOT: module %s is unusable (GUID of dependent assembly %s doesn't match (expected '%s', got '%s').

0x00284012	0x00000017	[ 12] literal string: type == MONO_TYPE_MVAR
0x00284029	0x00000016	[ 12] literal string: type == MONO_TYPE_VAR
0x0028403F	0x0000000C	[ 12] literal string: serial == 0
0x0028404B	0x00000014	[ 12] literal string: AOT: NOT FOUND: %s.
0x0028405F	0x00000016	[ 12] literal string: LAST AOT METHOD: %s.

0x00284075	0x00000018	[ 12] literal string: LAST AOT METHOD: %p %d

0x0028408D	0x00000004	[ 12] literal string: got
0x00284091	0x00000022	[ 12] literal string: AOT: FOUND method %s [%p - %p %p]
0x002840B3	0x00000006	[ 12] literal string: jinfo
0x002840B9	0x0000000C	[ 12] literal string: ref->method
0x002840C5	0x0000000F	[ 12] literal string: PtrToStructure
0x002840D4	0x0000000F	[ 12] literal string: StructureToPtr
0x002840E3	0x00000038	[ 12] literal string: target->wrapper_type == MONO_WRAPPER_MANAGED_TO_MANAGED
0x0028411B	0x00000017	[ 12] literal string: runtime_invoke_dynamic
0x00284132	0x0000001B	[ 12] literal string: info->d.runtime_invoke.sig
0x0028414D	0x00000018	[ 12] literal string: unwind_info < (1 << 30)
0x00284165	0x00000007	[ 12] literal string: !async
0x0028416C	0x0000001B	[ 12] literal string: jinfo->has_try_block_holes
0x00284187	0x00000006	[ 12] literal string: table
0x0028418D	0x00000018	[ 12] literal string: jinfo->has_arch_eh_info
0x002841A5	0x0000001C	[ 12] literal string: jinfo->has_generic_jit_info
0x002841C1	0x00000017	[ 12] literal string: amodule->mono_eh_frame
0x002841D8	0x0000000D	[ 12] literal string: version == 3
0x002841E5	0x00000018	[ 12] literal string: table [(pos * 2)] != -1
0x002841FD	0x0000001C	[ 12] literal string: table [(pos + 1) * 2] != -1
0x00284219	0x00000026	[ 12] literal string: code >= code_start && code < code_end
0x0028423F	0x0000001B	[ 12] literal string: clause_index < num_clauses
0x0028425A	0x0000001E	[ 12] literal string: nindex == ei_len + nested_len
0x00284278	0x0000002A	[ 12] literal string: Found statically linked AOT module '%s'.

0x002842A2	0x0000001F	[ 12] literal string: AOT module '%s' not found: %s

0x002842C1	0x0000001A	[ 12] literal string: %s/mono/aot-cache/%s/%s%s
0x002842DB	0x00000004	[ 12] literal string: x86
0x002842DF	0x00000032	[ 12] literal string: Failed to load AOT module '%s' in aot-only mode.

0x00284311	0x00000011	[ 12] literal string: mono_aot_version
0x00284322	0x00000013	[ 12] literal string: mono_aot_file_info
0x00284335	0x0000002F	[ 12] literal string: wrong file format version (expected %d got %d)
0x00284364	0x00000044	[ 12] literal string: Failed to load AOT module '%s' while running in aot-only mode: %s.

0x002843A8	0x00000021	[ 12] literal string: AOT: module %s is unusable: %s.

0x002843C9	0x00000023	[ 12] literal string: info->double_align == align_double
0x002843EC	0x00000020	[ 12] literal string: info->long_align == align_int64
0x0028440C	0x0000002F	[ 12] literal string: info->generic_tramp_num == MONO_TRAMPOLINE_NUM
0x0028443B	0x00000041	[ 12] literal string: AOT: Module %s is unusable because a dependency is out-of-date.

0x0028447C	0x0000007A	[ 12] literal string: Failed to load AOT module '%s' while running in aot-only mode because a dependency cannot be found or it is out of date.

0x002844F6	0x00000020	[ 12] literal string: AOT: loaded AOT Module for %s.

0x00284516	0x00000010	[ 12] literal string: table [0] == -1
0x00284526	0x00000017	[ 12] literal string: doesn't match assembly
0x0028453D	0x0000004A	[ 12] literal string: compiled against runtime version '%s' while this runtime has version '%s'
0x00284587	0x0000001D	[ 12] literal string: not compiled with --aot=full
0x002845A4	0x00000019	[ 12] literal string: compiled with --aot=full
0x002845BD	0x0000001B	[ 12] literal string: not compiled for debugging
0x002845D8	0x0000002C	[ 12] literal string: compiled with unsupported CPU optimizations
0x00284604	0x0000002A	[ 12] literal string: compiled with unsupported SIMD extensions
0x0028462E	0x0000003F	[ 12] literal string: compiled against GC %s, while the current runtime uses GC %s.

0x0028466D	0x00000061	[ 13] literal string: found exception to optimize - returning branch to BB%d (%s) (instead of throw) for method %s:%s

0x002846CE	0x0000002A	[ 13] literal string: 	Branch -> CMove optimization in BB%d on

0x002846F8	0x00000003	[ 13] literal string: 		
0x002846FB	0x0000002C	[ 13] literal string: ../../../../../mono/mono/mini/branch-opts.c
0x00284727	0x0000002E	[ 13] literal string: 	Branch -> CMove optimization (2) in BB%d on

0x00284755	0x00000033	[ 13] literal string: 	Signed->unsigned compare optimization in BB%d on

0x00284788	0x0000001C	[ 13] literal string: inst->inst_target_bb == bbn
0x002847A4	0x00000018	[ 13] literal string: table->table [i] == bbn
0x002847BC	0x00000023	[ 13] literal string: bb->last_ins->inst_false_bb == bbn
0x002847DF	0x00000007	[ 13] literal string: tmp_bb
0x002847E6	0x00000028	[ 13] literal string: remove_critical_edges, BEFORE BB%d (in:
0x0028480E	0x00000008	[ 13] literal string: ) (out:
0x00284816	0x0000003A	[ 13] literal string: remove_critical_edges, added helper BB%d jumping to BB%d

0x00284850	0x0000004D	[ 13] literal string: remove_critical_edges, removed critical edge from BB%d to BB%d (added BB%d)

0x0028489D	0x00000027	[ 13] literal string: remove_critical_edges, AFTER BB%d (in:
0x002848C4	0x0000001C	[ 13] literal string: nullify block triggered %d

0x002848E0	0x00000028	[ 13] literal string: cond branch removal triggered in %d %d

0x00284908	0x0000001F	[ 13] literal string: br removal triggered %d -> %d

0x00284927	0x00000020	[ 13] literal string: block merge triggered %d -> %d

0x00284947	0x0000002B	[ 13] literal string: branch to branch triggered %d -> %d -> %d

0x00284972	0x00000035	[ 13] literal string: cbranch1 to branch triggered %d -> (%d) %d (0x%02x)

0x002849A7	0x00000035	[ 13] literal string: cbranch2 to branch triggered %d -> (%d) %d (0x%02x)

0x002849DC	0x00000015	[ 13] literal string: bbn->in_bb [0] == bb
0x002849F1	0x00000032	[ 13] literal string: merge false branch target triggered BB%d -> BB%d

0x00284A23	0x00000026	[ 13] literal string: cbranch to throw block triggered %d.

0x00284A49	0x00000027	[ 13] literal string: remove_block_if_useless, removed BB%d

0x00284A70	0x00000026	[ 14] literal string: ../../../../../mono/mono/mini/cfold.c
0x00284A96	0x0000002B	[ 15] literal string: ../../../../../mono/mono/mini/debug-mini.c
0x00284AC1	0x00000007	[ 15] literal string: header
0x00284AC8	0x0000000F	[ 15] literal string: p - buf < size
0x00284AD7	0x00000004	[ 15] literal string: Arg
0x00284ADB	0x0000000D	[ 15] literal string: unknown name
0x00284AE8	0x00000006	[ 15] literal string: Local
0x00284AEE	0x0000001B	[ 15] literal string: %s %s (%d) in register %s

0x00284B09	0x0000002D	[ 15] literal string: %s %s (%d) in memory: base register %s + %d

0x00284B36	0x00000033	[ 15] literal string: %s %s (%d) in indir memory: base register %s + %d

0x00284B69	0x0000001D	[ 15] literal string: %s %s (%d) gsharedvt local.

0x00284B86	0x0000002E	[ 15] literal string: %s %s (%d) vt address: base register %s + %d

0x00284BB4	0x0000001F	[ 15] literal string: vtaddr->opcode == OP_REGOFFSET
0x00284BD3	0x00000015	[ 16] literal string: MONO_SDB_ENV_OPTIONS
0x00284BE8	0x00000006	[ 16] literal string: %s,%s
0x00284BEE	0x0000000B	[ 16] literal string: transport=
0x00284BF9	0x00000009	[ 16] literal string: address=
0x00284C02	0x0000000A	[ 16] literal string: loglevel=
0x00284C0C	0x00000009	[ 16] literal string: logfile=
0x00284C15	0x00000009	[ 16] literal string: suspend=
0x00284C1E	0x00000008	[ 16] literal string: suspend
0x00284C26	0x00000008	[ 16] literal string: server=
0x00284C2E	0x00000007	[ 16] literal string: server
0x00284C35	0x0000000C	[ 16] literal string: onuncaught=
0x00284C41	0x0000000B	[ 16] literal string: onuncaught
0x00284C4C	0x00000009	[ 16] literal string: onthrow=
0x00284C55	0x00000008	[ 16] literal string: onthrow
0x00284C5D	0x00000009	[ 16] literal string: timeout=
0x00284C66	0x00000008	[ 16] literal string: launch=
0x00284C6E	0x0000000B	[ 16] literal string: embedding=
0x00284C79	0x0000000B	[ 16] literal string: keepalive=
0x00284C84	0x00000009	[ 16] literal string: setpgid=
0x00284C8D	0x00000008	[ 16] literal string: setpgid
0x00284C95	0x0000000B	[ 16] literal string: 0.0.0.0:%u
0x00284CA0	0x00000036	[ 16] literal string: debugger-agent: The 'transport' option is mandatory.

0x00284CD6	0x00000034	[ 16] literal string: debugger-agent: The 'address' option is mandatory.

0x00284D0A	0x0000000A	[ 16] literal string: dt_socket
0x00284D14	0x00000048	[ 16] literal string: debugger-agent: The format of the 'address' options is '<host>:<port>'

0x00284D5C	0x00000003	[ 16] literal string: w+
0x00284D5F	0x00000025	[ 16] literal string: Unable to create log file '%s': %s.

0x00284D84	0x00000032	[ 16] literal string: [%p] Received interrupt with no TLS, continuing.

0x00284DB6	0x0000002F	[ 16] literal string: ../../../../../mono/mono/mini/debugger-agent.c
0x00284DE5	0x00000023	[ 16] literal string: MONO_CONTEXT_GET_IP (&ctx) != NULL
0x00284E08	0x00000004	[ 16] literal string: tls
0x00284E0C	0x00000043	[ 16] literal string: mono_thread_state_init_from_monoctx (&tls->filter_state, orig_ctx)
0x00284E4F	0x00000009	[ 16] literal string: found_sp
0x00284E58	0x00000048	[ 16] literal string: [%p] Breakpoint hit, method=%s, ip=%p, offset=0x%x, sp il offset=0x%x.

0x00284EA0	0x0000003F	[ 16] literal string: [dbg] No parent frame for step over, transition to step into.

0x00284EDF	0x0000002A	[ 16] literal string: [dbg] Turning on global single stepping.

0x00284F09	0x00000019	[ 16] literal string: Frames for %p(tid=%lx):

0x00284F22	0x00000016	[ 16] literal string: 	Frame: %s:%x(%x) %d

0x00284F38	0x00000028	[ 16] literal string: [dbg] Setting %sbreakpoint at %s:0x%x.

0x00284F60	0x0000000D	[ 16] literal string: single step 
0x00284F6D	0x00000006	[ 16] literal string: <all>
0x00284F73	0x0000000A	[ 16] literal string: count > 0
0x00284F7D	0x00000024	[ 16] literal string: [dbg] Clear breakpoint at %s [%p].

0x00284FA1	0x00000025	[ 16] literal string: Unable to insert breakpoint at %s:%d
0x00284FC6	0x00000004	[ 16] literal string: %d

0x00284FCA	0x00000046	[ 16] literal string: [dbg] Attempting to insert seq point at dead IL offset %d, ignoring.

0x00285010	0x00000030	[ 16] literal string: [dbg] Inserted breakpoint at %s:0x%x [%p](%d).

0x00285040	0x00000056	[ 16] literal string: [%p] Seq point at nonempty stack %x while stepping over, continuing single stepping.

0x00285096	0x00000051	[ 16] literal string: [%p] Breakpoint at lower frame while stepping over, continuing single stepping.

0x002850E7	0x00000054	[ 16] literal string: [%p] Seq point at nonempty stack %x while stepping in, continuing single stepping.

0x0028513B	0x00000048	[ 16] literal string: [%p] No line number info for il offset %x, continuing single stepping.

0x00285183	0x00000039	[ 16] literal string: [%p] Same source line (%d), continuing single stepping.

0x002851BC	0x0000002C	[ 16] literal string: Unable to find seq points for method '%s'.

0x002851E8	0x00000047	[ 16] literal string: [%p] Single step event (depth=%s) at %s (%p)[0x%x], sp %p, last sp %p

0x0028522F	0x00000005	[ 16] literal string: over
0x00285234	0x00000004	[ 16] literal string: out
0x00285238	0x00000005	[ 16] literal string: into
0x0028523D	0x00000031	[ 16] literal string: [%p] Received single step event for suspending.

0x0028526E	0x0000002D	[ 16] literal string: [%p] Ignored during single threaded invoke.

0x0028529B	0x0000002C	[ 16] literal string: debugger_thread_id != GetCurrentThreadId ()
0x002852C7	0x00000011	[ 16] literal string: [%p] Suspended.

0x002852D8	0x0000000F	[ 16] literal string: [%p] Resumed.

0x002852E7	0x00000012	[ 16] literal string: tls->resume_count
0x002852F9	0x0000002F	[ 16] literal string: [%p] Invoke finished (%d), resume_count = %d.

0x00285328	0x00000017	[ 16] literal string: [%p] Suspending vm...

0x0028533F	0x00000019	[ 16] literal string: [%p] Interrupting %p...

0x00285358	0x00000038	[ 16] literal string: [%p] mono_thread_info_suspend_sync () failed for %p...

0x00285390	0x0000002F	[ 16] literal string: [%p] mono_thread_kill () failed for %p: %d...

0x002853BF	0x0000002D	[ 16] literal string: [%p] Invoking method '%s' on receiver '%s'.

0x002853EC	0x00000007	[ 16] literal string: <null>
0x002853F3	0x0000003D	[ 16] literal string: [%p] Error: Static vtype method invoked with this argument.

0x00285430	0x0000003D	[ 16] literal string: [%p] Error: Interface method invoked without this argument.

0x0028546D	0x0000004D	[ 16] literal string: [%p] Error: invoke with INVOKE_FLAG_VIRTUAL flag set without this argument.

0x002854BA	0x00000030	[ 16] literal string: [%p] Invoke result: %p, exc: %s, time: %ld ms.

0x002854EA	0x00000019	[ 16] literal string: [dbg]   send class [%s]

0x00285503	0x00000018	[ 16] literal string: [%p]   send class [%s]

0x0028551B	0x0000002C	[ 16] literal string: [%p] Expected value of type %s, got 0x%0x.

0x00285547	0x00000015	[ 16] literal string: type == MONO_TYPE_I8
0x0028555C	0x0000001C	[ 16] literal string: type == MONO_TYPE_VALUETYPE
0x00285578	0x0000001E	[ 16] literal string: Expected type '%s', got '%s'

0x00285596	0x0000000A	[ 16] literal string: vtype_buf
0x002855A0	0x00000019	[ 16] literal string: [dbg]   recv class [%s]

0x002855B9	0x00000020	[ 16] literal string: id > 0 && id <= ids [type]->len
0x002855D9	0x0000001F	[ 16] literal string: ERR_UNLOADED, id=%d, type=%d.

0x002855F8	0x00000029	[ 16] literal string: [%p] Expected value of type %s, got %s.

0x00285621	0x0000000D	[ 16] literal string: nfields == 0
0x0028562E	0x0000001A	[ 16] literal string: [dbg]   recv method [%s]

0x00285648	0x00000031	[ 16] literal string: Debugger agent not initialized yet: dropping %s

0x00285679	0x0000002A	[ 16] literal string: VM start event not sent yet: dropping %s

0x002856A3	0x0000002B	[ 16] literal string: VM death event has been sent: dropping %s

0x002856CE	0x0000002C	[ 16] literal string: Mono runtime is shutting down: dropping %s

0x002856FA	0x0000002F	[ 16] literal string: Debugger client is not connected: dropping %s

0x00285729	0x00000016	[ 16] literal string: tls->domain_unloading
0x0028573F	0x0000001C	[ 16] literal string: Sending command %s failed.

0x0028575B	0x00000029	[ 16] literal string: [%p] Sent %d events %s(%d), suspend=%d.

0x00285784	0x00000017	[ 16] literal string: debugger_thread_handle
0x0028579B	0x00000024	[ 16] literal string: [dbg] Agent thread started, pid=%p

0x002857BF	0x0000002F	[ 16] literal string: [dbg] Can't attach, aborting debugger thread.

0x002857EE	0x00000033	[ 16] literal string: [dbg] transport_recv () returned %d, expected %d.

0x00285821	0x0000000B	[ 16] literal string: flags == 0
0x0028582C	0x00000024	[ 16] literal string: [dbg] Command %s(%s) [%d][at=%lx].

0x00285850	0x0000001F	[ 16] literal string: [dbg] Debugger thread exited.

0x0028586F	0x00000034	[ 16] literal string: [dbg] Detached - restarting clean debugger thread.

0x002858A3	0x00000030	[ 16] literal string: [dbg] Sent %d buffered reply packets [at=%lx].

0x002858D3	0x00000028	[ 16] literal string: f->type->attrs & FIELD_ATTRIBUTE_STATIC
0x002858FB	0x00000017	[ 16] literal string: index >= 0 && len >= 0
0x00285912	0x00000021	[ 16] literal string: !(index > arr->max_length - len)
0x00285933	0x0000002C	[ 16] literal string: [dbg] No debug information found for '%s'.

0x0028595F	0x00000022	[ 16] literal string: pos >= 0 && pos < jit->num_params
0x00285981	0x00000022	[ 16] literal string: pos >= 0 && pos < jit->num_locals
0x002859A3	0x00000033	[ 16] literal string: [dbg] Setting stack location %p for reg %x to %p.

0x002859D6	0x00000032	[ 16] literal string: [dbg] Setting context location for reg %x to %p.

0x00285A08	0x00000006	[ 16] literal string: gaddr
0x00285A0E	0x00000007	[ 16] literal string: locals
0x00285A15	0x0000000B	[ 16] literal string: seq_points
0x00285A20	0x00000025	[ 16] literal string: [dbg] Setting IP to %s:0x%0x(0x%0x)

0x00285A45	0x0000002A	[ 16] literal string: Waiting for %d(%d) threads to suspend...

0x00285A6F	0x00000017	[ 16] literal string: %d threads suspended.

0x00285A86	0x00000022	[ 16] literal string: Line number table for method %s:

0x00285AA8	0x00000018	[ 16] literal string: IL%x -> %s:%d %d %d %d

0x00285AC0	0x00000002	[ 16] literal string: s
0x00285AC2	0x0000001F	[ 16] literal string: Could not load token due to %s
0x00285AE1	0x00000049	[ 16] literal string: [dbg] mono_reflection_create_custom_attr_data_args () failed with: '%s'

0x00285B2A	0x0000000E	[ 16] literal string: i == nmethods
0x00285B38	0x0000000D	[ 16] literal string: i == nfields
0x00285B45	0x0000000C	[ 16] literal string: i == nprops
0x00285B51	0x00000039	[ 16] literal string: %s, Version=%d.%d.%d.%d, Culture=%s, PublicKeyToken=%s%s
0x00285B8A	0x00000012	[ 16] literal string: domain == domain2
0x00285B9C	0x0000002A	[ 16] literal string: [dbg] 	EXCEPTION_ONLY filter (%s%s%s%s).

0x00285BC6	0x00000009	[ 16] literal string: , caught
0x00285BCF	0x0000000B	[ 16] literal string: , uncaught
0x00285BDA	0x00000015	[ 16] literal string: , include-subclasses
0x00285BEF	0x00000024	[ 16] literal string: [dbg] Failed to set breakpoint: %s

0x00285C13	0x0000000F	[ 16] literal string: step_thread_id
0x00285C22	0x0000000E	[ 16] literal string: ss_req == req
0x00285C30	0x00000049	[ 16] literal string: Received a single step request while the previous one was still active.

0x00285C79	0x00000035	[ 16] literal string: [dbg] Starting single step of thread %p (depth=%s).

0x00285CAE	0x00000013	[ 16] literal string: tls->context.valid
0x00285CC1	0x00000003	[ 16] literal string: sp
0x00285CC4	0x00000008	[ 16] literal string: mono %s
0x00285CCC	0x0000003E	[ 16] literal string: [dbg] Protocol version %d.%d, client protocol version %d.%d.

0x00285D0A	0x0000001B	[ 16] literal string: Suspending all threads...

0x00285D25	0x0000001E	[ 16] literal string: Shutting down the runtime...

0x00285D43	0x0000000C	[ 16] literal string: Exiting...

0x00285D4F	0x0000000C	[ 16] literal string: result >= 0
0x00285D5B	0x0000002C	[ 16] literal string: debugger_thread_id == GetCurrentThreadId ()
0x00285D87	0x00000012	[ 16] literal string: suspend_count > 0
0x00285D99	0x0000001D	[ 16] literal string: [sdb] Resuming thread %p...

0x00285DB6	0x00000027	[ 16] literal string: [%p] Resuming vm, suspend count=%d...

0x00285DDD	0x00000003	[ 16] literal string: VM
0x00285DE0	0x0000000B	[ 16] literal string: OBJECT_REF
0x00285DEB	0x0000000B	[ 16] literal string: STRING_REF
0x00285DF6	0x00000007	[ 16] literal string: THREAD
0x00285DFD	0x0000000A	[ 16] literal string: ARRAY_REF
0x00285E07	0x0000000E	[ 16] literal string: EVENT_REQUEST
0x00285E15	0x0000000C	[ 16] literal string: STACK_FRAME
0x00285E21	0x0000000A	[ 16] literal string: APPDOMAIN
0x00285E2B	0x00000009	[ 16] literal string: ASSEMBLY
0x00285E34	0x00000007	[ 16] literal string: MODULE
0x00285E3B	0x00000006	[ 16] literal string: FIELD
0x00285E41	0x00000006	[ 16] literal string: EVENT
0x00285E47	0x00000009	[ 16] literal string: GET_INFO
0x00285E50	0x0000000C	[ 16] literal string: GET_METHODS
0x00285E5C	0x0000000B	[ 16] literal string: GET_FIELDS
0x00285E67	0x0000000B	[ 16] literal string: GET_VALUES
0x00285E72	0x0000000B	[ 16] literal string: GET_OBJECT
0x00285E7D	0x00000011	[ 16] literal string: GET_SOURCE_FILES
0x00285E8E	0x0000000B	[ 16] literal string: SET_VALUES
0x00285E99	0x00000013	[ 16] literal string: IS_ASSIGNABLE_FROM
0x00285EAC	0x00000010	[ 16] literal string: GET_PROPERTIES 
0x00285EBC	0x0000000B	[ 16] literal string: GET_CATTRS
0x00285EC7	0x00000011	[ 16] literal string: GET_FIELD_CATTRS
0x00285ED8	0x00000014	[ 16] literal string: GET_PROPERTY_CATTRS
0x00285EEC	0x00000013	[ 16] literal string: GET_SOURCE_FILES_2
0x00285EFF	0x0000000D	[ 16] literal string: GET_VALUES_2
0x00285F0C	0x0000001A	[ 16] literal string: GET_METHODS_BY_NAME_FLAGS
0x00285F26	0x0000000F	[ 16] literal string: GET_INTERFACES
0x00285F35	0x00000012	[ 16] literal string: GET_INTERFACE_MAP
0x00285F47	0x0000000F	[ 16] literal string: IS_INITIALIZED
0x00285F56	0x00000009	[ 16] literal string: GET_NAME
0x00285F5F	0x00000013	[ 16] literal string: GET_DECLARING_TYPE
0x00285F72	0x0000000F	[ 16] literal string: GET_DEBUG_INFO
0x00285F81	0x0000000F	[ 16] literal string: GET_PARAM_INFO
0x00285F90	0x00000010	[ 16] literal string: GET_LOCALS_INFO
0x00285FA0	0x00000009	[ 16] literal string: GET_BODY
0x00285FA9	0x0000000E	[ 16] literal string: RESOLVE_TOKEN
0x00285FB7	0x0000000C	[ 16] literal string: GET_CATTRS 
0x00285FC3	0x00000014	[ 16] literal string: MAKE_GENERIC_METHOD
0x00285FD7	0x0000000D	[ 16] literal string: GET_LOCATION
0x00285FE4	0x00000010	[ 16] literal string: GET_ENTRY_POINT
0x00285FF4	0x00000014	[ 16] literal string: GET_MANIFEST_MODULE
0x00286008	0x00000009	[ 16] literal string: GET_TYPE
0x00286011	0x00000010	[ 16] literal string: GET_ROOT_DOMAIN
0x00286021	0x00000012	[ 16] literal string: GET_FRIENDLY_NAME
0x00286033	0x0000000F	[ 16] literal string: GET_ASSEMBLIES
0x00286042	0x00000013	[ 16] literal string: GET_ENTRY_ASSEMBLY
0x00286055	0x0000000E	[ 16] literal string: CREATE_STRING
0x00286063	0x0000000B	[ 16] literal string: GET_CORLIB
0x0028606E	0x00000013	[ 16] literal string: CREATE_BOXED_VALUE
0x00286081	0x00000009	[ 16] literal string: GET_THIS
0x0028608A	0x0000000B	[ 16] literal string: GET_DOMAIN
0x00286095	0x0000000C	[ 16] literal string: REQUEST_SET
0x002860A1	0x0000000E	[ 16] literal string: REQUEST_CLEAR
0x002860AF	0x0000001E	[ 16] literal string: REQUEST_CLEAR_ALL_BREAKPOINTS
0x002860CD	0x0000000B	[ 16] literal string: GET_LENGTH
0x002860D8	0x0000000F	[ 16] literal string: GET_FRAME_INFO
0x002860E7	0x0000000A	[ 16] literal string: GET_STATE
0x002860F1	0x00000007	[ 16] literal string: GET_ID
0x002860F8	0x00000008	[ 16] literal string: GET_TID
0x00286100	0x00000007	[ 16] literal string: SET_IP
0x00286107	0x0000000A	[ 16] literal string: GET_VALUE
0x00286111	0x0000000A	[ 16] literal string: GET_CHARS
0x0028611B	0x0000000D	[ 16] literal string: IS_COLLECTED
0x00286128	0x0000000C	[ 16] literal string: GET_ADDRESS
0x00286134	0x00000008	[ 16] literal string: VERSION
0x0028613C	0x0000000C	[ 16] literal string: ALL_THREADS
0x00286148	0x00000008	[ 16] literal string: SUSPEND
0x00286150	0x00000007	[ 16] literal string: RESUME
0x00286157	0x00000005	[ 16] literal string: EXIT
0x0028615C	0x00000008	[ 16] literal string: DISPOSE
0x00286164	0x0000000E	[ 16] literal string: INVOKE_METHOD
0x00286172	0x00000015	[ 16] literal string: SET_PROTOCOL_VERSION
0x00286187	0x0000000D	[ 16] literal string: ABORT_INVOKE
0x00286194	0x00000027	[ 16] literal string: SET_KEEPALIVEGET_TYPES_FOR_SOURCE_FILE
0x002861BB	0x0000000A	[ 16] literal string: GET_TYPES
0x002861C5	0x0000000F	[ 16] literal string: INVOKE_METHODS
0x002861D4	0x00000020	[ 16] literal string: [dbg] Invalid listening socket

0x002861F4	0x0000001B	[ 16] literal string: Accepted connection on %d

0x0028620F	0x0000001D	[ 16] literal string: [dbg] Bad client connection

0x0028622C	0x0000001D	[ 16] literal string: Transport handshake failed!

0x00286249	0x00000028	[ 16] literal string: debugger-agent: Unable to listen on %d

0x00286271	0x00000034	[ 16] literal string: Accepted connection from client, connection fd=%d.

0x002862A5	0x00000024	[ 16] literal string: [dbg]   send assembly [%s][%s][%d]

0x002862C9	0x0000001A	[ 16] literal string: [dbg]   send method [%s]

0x002862E3	0x00000009	[ 16] literal string: VM_START
0x002862EC	0x00000009	[ 16] literal string: VM_DEATH
0x002862F5	0x0000000D	[ 16] literal string: THREAD_START
0x00286302	0x0000000D	[ 16] literal string: THREAD_DEATH
0x0028630F	0x00000011	[ 16] literal string: APPDOMAIN_CREATE
0x00286320	0x00000011	[ 16] literal string: APPDOMAIN_UNLOAD
0x00286331	0x0000000D	[ 16] literal string: METHOD_ENTRY
0x0028633E	0x0000000C	[ 16] literal string: METHOD_EXIT
0x0028634A	0x0000000E	[ 16] literal string: ASSEMBLY_LOAD
0x00286358	0x00000010	[ 16] literal string: ASSEMBLY_UNLOAD
0x00286368	0x0000000B	[ 16] literal string: BREAKPOINT
0x00286373	0x00000005	[ 16] literal string: STEP
0x00286378	0x0000000A	[ 16] literal string: TYPE_LOAD
0x00286382	0x0000000A	[ 16] literal string: EXCEPTION
0x0028638C	0x0000000A	[ 16] literal string: KEEPALIVE
0x00286396	0x0000000B	[ 16] literal string: USER_BREAK
0x002863A1	0x00000009	[ 16] literal string: USER_LOG
0x002863AA	0x00000018	[ 16] literal string: DebuggerHiddenAttribute
0x002863C2	0x0000000D	[ 16] literal string: hidden_klass
0x002863CF	0x0000001D	[ 16] literal string: DebuggerStepThroughAttribute
0x002863EC	0x00000013	[ 16] literal string: step_through_klass
0x002863FF	0x0000001D	[ 16] literal string: DebuggerNonUserCodeAttribute
0x0028641C	0x0000000F	[ 16] literal string: non_user_klass
0x0028642B	0x00000027	[ 16] literal string: Thread %p is not attached to the JIT.

0x00286452	0x0000001B	[ 16] literal string: pos == count - match_count
0x0028646D	0x00000029	[ 16] literal string: [%p] Thread terminated, obj=%p, tls=%p.

0x00286496	0x00000013	[ 16] literal string: thread->tid == tid
0x002864A9	0x0000003D	[ 16] literal string: [%p] thread_start () called multiple times for %p, ignored.

0x002864E6	0x00000026	[ 16] literal string: [%p] Removing stale data for tid %p.

0x0028650C	0x00000005	[ 16] literal string: !tls
0x00286511	0x00000026	[ 16] literal string: [%p] Thread started, obj=%p, tls=%p.

0x00286537	0x00000036	[ 16] literal string: [%p] Received interrupt while at %s(%p), continuing.

0x0028656D	0x0000003D	[ 16] literal string: [%p] Received interrupt while at %p, treating as suspended.

0x002865AA	0x0000000E	[ 16] literal string: DWP-Handshake
0x002865B8	0x0000000A	[ 16] literal string: res != -1
0x002865C2	0x00000027	[ 16] literal string: debugger-agent: DWP handshake failed.

0x002865E9	0x00000046	[ 16] literal string: debugger-agent: The supported values for the 'transport' option are: 
0x0028662F	0x00000007	[ 16] literal string: %s'%s'
0x00286636	0x0000000A	[ 16] literal string: socket-fd
0x00286640	0x0000003E	[ 16] literal string: debugger-agent: socket-fd transport address is invalid: '%s'

0x0028667E	0x0000002D	[ 16] literal string: debugger-agent: Unable to resolve %s:%d: %d

0x002866AB	0x00000004	[ 16] literal string: sfd
0x002866AF	0x00000036	[ 16] literal string: debugger-agent: Unable to setup listening socket: %s

0x002866E5	0x0000000A	[ 16] literal string: 127.0.0.1
0x002866EF	0x00000027	[ 16] literal string: Listening on %s:%d (timeout=%d ms)...

0x00286716	0x0000002F	[ 16] literal string: debugger-agent: Timed out waiting to connect.

0x00286745	0x00000030	[ 16] literal string: Accepted connection from client, socket fd=%d.

0x00286775	0x0000002C	[ 16] literal string: debugger-agent: Unable to connect to %s:%d

0x002867A1	0x0000001D	[ 16] literal string: ntransports < MAX_TRANSPORTS
0x002867BE	0x00000019	[ 16] literal string: Failed to execute '%s'.

0x002867D7	0x00000039	[ 16] literal string: Usage: mono --debugger-agent=[<option>=<value>,...] ...

0x00286810	0x00000014	[ 16] literal string: Available options:

0x00286824	0x00000074	[ 16] literal string:   transport=<transport>		Transport to use for connecting to the debugger (mandatory, possible values: 'dt_socket')

0x00286898	0x0000003F	[ 16] literal string:   address=<hostname>:<port>	Address to connect to (mandatory)

0x002868D7	0x0000002C	[ 16] literal string:   loglevel=<n>			Log level (defaults to 0)

0x00286903	0x00000037	[ 16] literal string:   logfile=<file>		File to log to (defaults to stdout)

0x0028693A	0x00000033	[ 16] literal string:   suspend=y/n			Whether to suspend after startup.

0x0028696D	0x00000039	[ 16] literal string:   timeout=<n>			Timeout for connecting in milliseconds.

0x002869A6	0x0000003B	[ 16] literal string:   server=y/n			Whether to listen for a client connection.

0x002869E1	0x0000003F	[ 16] literal string:   keepalive=<n>			Send keepalive events every n milliseconds.

0x00286A20	0x0000003D	[ 16] literal string:   setpgid=y/n			Whether to call setpid(0, 0) after startup.

0x00286A5D	0x0000001C	[ 16] literal string:   help				Print this help.

0x00286A79	0x00000002	[ 16] literal string: y
0x00286A7B	0x00000002	[ 16] literal string: n
0x00286A7D	0x00000047	[ 16] literal string: debugger-agent: The valid values for the '%s' option are 'y' and 'n'.

0x00286AC4	0x00000029	[ 18] literal string: float conv.ovf.un opcodes not supported.
0x00286AED	0x0000002A	[ 18] literal string: ../../../../../mono/mono/mini/decompose.c
0x00286B17	0x00000014	[ 18] literal string: !info->sig->hasthis
0x00286B2B	0x0000002C	[ 18] literal string: info->sig->param_count <= MONO_MAX_SRC_REGS
0x00286B57	0x00000024	[ 18] literal string: num_sregs == info->sig->param_count
0x00286B7B	0x00000012	[ 18] literal string: ins->dreg == dreg
0x00286B8D	0x00000005	[ 18] literal string: next
0x00286B92	0x00000019	[ 18] literal string: BEFORE LOWER-VTYPE-OPTS 
0x00286BAB	0x00000015	[ 18] literal string: cfg->cbb == first_bb
0x00286BC0	0x00000018	[ 18] literal string: AFTER LOWER-VTYPE-OPTS 
0x00286BD8	0x0000001F	[ 18] literal string: BEFORE LOWER-VTYPE-OPTS(LLVM) 
0x00286BF7	0x0000001E	[ 18] literal string: AFTER LOWER-VTYPE-OPTS(LLVM) 
0x00286C15	0x00000024	[ 18] literal string: BEFORE DECOMPOSE-ARRAY-ACCESS-OPTS 
0x00286C39	0x00000023	[ 18] literal string: AFTER DECOMPOSE-ARRAY-ACCESS-OPTS 
0x00286C5C	0x0000002B	[ 19] literal string: ../../../../../mono/mono/mini/dominators.c
0x00286C87	0x00000024	[ 19] literal string: !(cfg->comp_done & MONO_COMP_LOOPS)
0x00286CAB	0x00000005	[ 19] literal string: idom
0x00286CB0	0x0000002C	[ 20] literal string: Assembly '%s' doesn't have an entry point.

0x00286CDC	0x0000002C	[ 20] literal string: The entry point method could not be loaded

0x00286D08	0x00000012	[ 20] literal string: --debugger-agent=
0x00286D1A	0x00000013	[ 20] literal string: --soft-breakpoints
0x00286D2D	0x0000000C	[ 20] literal string: --optimize=
0x00286D39	0x00000004	[ 20] literal string: -O=
0x00286D3D	0x00000008	[ 20] literal string: --trace
0x00286D45	0x00000009	[ 20] literal string: --trace=
0x00286D4E	0x0000000A	[ 20] literal string: --verbose
0x00286D58	0x00000003	[ 20] literal string: -v
0x00286D5B	0x0000000C	[ 20] literal string: --breakonex
0x00286D67	0x00000008	[ 20] literal string: --stats
0x00286D6F	0x00000008	[ 20] literal string: --break
0x00286D77	0x00000034	[ 20] literal string: Missing method name in --break command line option

0x00286DAB	0x00000021	[ 20] literal string: Error: invalid method name '%s'

0x00286DCC	0x00000007	[ 20] literal string: --llvm
0x00286DD3	0x00000033	[ 20] literal string: Mono Warning: --llvm not enabled in this runtime.

0x00286E06	0x00000027	[ 20] literal string: Unsupported command line option: '%s'

0x00286E2D	0x0000000C	[ 20] literal string: MONO_NO_SMP
0x00286E39	0x0000000D	[ 20] literal string: --regression
0x00286E46	0x00000011	[ 20] literal string: --single-method=
0x00286E57	0x00000008	[ 20] literal string: -all,%s
0x00286E5F	0x0000000A	[ 20] literal string: --version
0x00286E69	0x00000003	[ 20] literal string: -V
0x00286E6C	0x00000076	[ 20] literal string: Mono JIT compiler version %s
Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com

0x00286EE2	0x00000014	[ 20] literal string: 	GC:            %s

0x00286EF6	0x00000046	[ 20] literal string: The currently installed mscorlib doesn't match this runtime version.

0x00286F3C	0x00000012	[ 20] literal string: The error is: %s

0x00286F4E	0x0000001C	[ 20] literal string: mscorlib.dll loaded at: %s

0x00286F6A	0x00000007	[ 20] literal string: --help
0x00286F71	0x00000003	[ 20] literal string: -h
0x00286F74	0x0000000D	[ 20] literal string: --help-trace
0x00286F81	0x0000000D	[ 20] literal string: --help-devel
0x00286F8E	0x0000000D	[ 20] literal string: --help-debug
0x00286F9B	0x0000000B	[ 20] literal string: --list-opt
0x00286FA6	0x0000000B	[ 20] literal string: --statfile
0x00286FB1	0x00000030	[ 20] literal string: error: --statfile requires a filename argument

0x00286FE1	0x0000000A	[ 20] literal string: --gc=sgen
0x00286FEB	0x0000000B	[ 20] literal string: --gc=boehm
0x00286FF6	0x00000006	[ 20] literal string: boehm
0x00286FFC	0x00000009	[ 20] literal string: --config
0x00287005	0x0000002E	[ 20] literal string: error: --config requires a filename argument

0x00287033	0x0000000B	[ 20] literal string: --ncompile
0x0028703E	0x00000028	[ 20] literal string: error: --ncompile requires an argument

0x00287066	0x0000000E	[ 20] literal string: --break-at-bb
0x00287074	0x00000044	[ 20] literal string: Missing method name or bb num in --break-at-bb command line option.
0x002870B8	0x00000045	[ 20] literal string: Method name is in a bad format in --break-at-bb command line option.
0x002870FD	0x00000013	[ 20] literal string: --inject-async-exc
0x00287110	0x0000004B	[ 20] literal string: Missing method name or position in --inject-async-exc command line option

0x0028715B	0x0000004A	[ 20] literal string: Method name is in a bad format in --inject-async-exc command line option

0x002871A5	0x0000000D	[ 20] literal string: --verify-all
0x002871B2	0x0000000B	[ 20] literal string: --full-aot
0x002871BD	0x0000000F	[ 20] literal string: --print-vtable
0x002871CC	0x00000006	[ 20] literal string: --aot
0x002871D2	0x00000007	[ 20] literal string: --aot=
0x002871D9	0x0000000F	[ 20] literal string: --compile-all=
0x002871E8	0x0000000E	[ 20] literal string: --compile-all
0x002871F6	0x0000000B	[ 20] literal string: --runtime=
0x00287201	0x00000009	[ 20] literal string: --jitmap
0x0028720A	0x0000000A	[ 20] literal string: --profile
0x00287214	0x0000000B	[ 20] literal string: --profile=
0x0028721F	0x00000009	[ 20] literal string: --agent=
0x00287228	0x0000000A	[ 20] literal string: --attach=
0x00287232	0x0000000A	[ 20] literal string: --compile
0x0028723C	0x00000039	[ 20] literal string: error: --compile option requires a method name argument

0x00287275	0x00000009	[ 20] literal string: --graph=
0x0028727E	0x00000037	[ 20] literal string: error: --graph option requires a method name argument

0x002872B5	0x00000008	[ 20] literal string: --graph
0x002872BD	0x00000008	[ 20] literal string: --debug
0x002872C5	0x00000009	[ 20] literal string: --debug=
0x002872CE	0x0000000B	[ 20] literal string: --security
0x002872D9	0x0000000C	[ 20] literal string: --security=
0x002872E5	0x00000014	[ 20] literal string: temporary-smcs-hack
0x002872F9	0x00000009	[ 20] literal string: core-clr
0x00287302	0x0000000E	[ 20] literal string: core-clr-test
0x00287310	0x00000004	[ 20] literal string: cas
0x00287314	0x00000008	[ 20] literal string: validil
0x0028731C	0x0000000B	[ 20] literal string: verifiable
0x00287327	0x00000057	[ 20] literal string: error: --security= option has invalid argument (cas, core-clr, verifiable or validil)

0x0028737E	0x0000000A	[ 20] literal string: --desktop
0x00287388	0x00000009	[ 20] literal string: --server
0x00287391	0x0000000D	[ 20] literal string: --inside-mdb
0x0028739E	0x00000008	[ 20] literal string: --wapi=
0x002873A6	0x00000004	[ 20] literal string: hps
0x002873AA	0x00000007	[ 20] literal string: semdel
0x002873B1	0x00000008	[ 20] literal string: seminfo
0x002873B9	0x00000020	[ 20] literal string: Invalid --wapi suboption: '%s'

0x002873D9	0x00000015	[ 20] literal string: --no-x86-stack-align
0x002873EE	0x00000009	[ 20] literal string: --nollvm
0x002873F7	0x00000023	[ 20] literal string: Unknown command line option: '%s'

0x0028741A	0x0000002B	[ 20] literal string: The Mono Debugger is no longer supported.

0x00287445	0x00000014	[ 20] literal string: Regression ERRORS!

0x00287459	0x00000036	[ 20] literal string: Usage: mini --ncompile num --compile method assembly

0x0028748F	0x00000020	[ 20] literal string: Cannot open assembly '%s': %s.

0x002874AF	0x0000000E	[ 20] literal string: R=NU
0x002874BD	0x00000007	[ 20] literal string: 9O
0x002874C4	0x0000002A	[ 20] literal string: Corlib not in sync with this runtime: %s

0x002874EE	0x00000055	[ 20] literal string: Download a newer corlib or a newer runtime at http://www.mono-project.com/download.

0x00287543	0x00000018	[ 20] literal string: Invalid method name %s

0x0028755B	0x00000017	[ 20] literal string: Cannot find method %s

0x00287572	0x00000026	[ 20] literal string: no SSA info available (use -O=deadce)
0x00287598	0x0000002B	[ 20] literal string: $stattitle = 'Compilations times for %s';

0x002875C3	0x0000000B	[ 20] literal string: @data = (

0x002875CE	0x00000006	[ 20] literal string: "%s",
0x002875D4	0x00000005	[ 20] literal string: ],
[
0x002875D9	0x00000005	[ 20] literal string: %f, 
0x002875DE	0x00000005	[ 20] literal string: , 
[
0x002875E3	0x00000004	[ 20] literal string: %f,
0x002875E7	0x00000004	[ 20] literal string: );

0x002875EB	0x0000002C	[ 20] literal string: Could not retrieve method signature for %s

0x00287617	0x0000002F	[ 20] literal string: Compilation of %s failed with exception '%s':

0x00287646	0x00000017	[ 20] literal string: Can not open image %s

0x0028765D	0x0000006E	[ 20] literal string: Error: Loaded assembly '%s' doesn't match original file name '%s'. Set MONO_PATH to the assembly's location.

0x002876CB	0x00000019	[ 20] literal string: AOT of image %s failed.

0x002876E4	0x0000001C	[ 20] literal string: failed to load assembly: %s
0x00287700	0x0000004D	[ 20] literal string: Overall results: tests: %d, failed: %d, opt combinations: %d (pass: %.2f%%)

0x0028774D	0x0000003E	[ 20] literal string: Overall results: tests: %d, 100%% pass, opt combinations: %d

0x0028778B	0x00000040	[ 20] literal string: $stattitle = 'Mono Benchmark Results (various optimizations)';

0x002877CB	0x00000017	[ 20] literal string: $graph->set_legend(qw(
0x002877E2	0x00000005	[ 20] literal string: ));

0x002877E7	0x00000006	[ 20] literal string: test_
0x002877ED	0x00000004	[ 20] literal string: ],

0x002877F1	0x00000026	[ 20] literal string: Single method regression: %d methods

0x00287817	0x0000001B	[ 20] literal string: Current single method: %s

0x00287832	0x0000001D	[ 20] literal string: Test run: image=%s, opts=%s

0x0028784F	0x00000012	[ 20] literal string: Running '%s' ...

0x00287861	0x00000030	[ 20] literal string: Test '%s' failed result (got %d, expected %d).

0x00287891	0x0000001F	[ 20] literal string: Test '%s' failed compilation.

0x002878B0	0x00000042	[ 20] literal string: Results: total tests: %d, failed: %d, cfailed: %d (pass: %.2f%%)

0x002878F2	0x00000025	[ 20] literal string: Results: total tests: %d, all pass 

0x00287917	0x00000030	[ 20] literal string: Elapsed time: %f secs (%f, %f), Code size: %d


0x00287947	0x00000026	[ 20] literal string: Cannot open agent assembly '%s': %s.

0x0028796D	0x0000003D	[ 20] literal string: The entry point method of assembly '%s' could not be loaded

0x002879AA	0x0000002A	[ 20] literal string: Syntax error; expected debug option name

0x002879D4	0x00000012	[ 20] literal string: mdb-optimizations
0x002879E6	0x00000039	[ 20] literal string: Invalid debug option `%s', use --help-debug for details

0x00287A1F	0x00000021	[ 20] literal string: Invalid graph name provided: %s

0x00287A40	0x00000006	[ 20] literal string: -sgen
0x00287A46	0x00000007	[ 20] literal string: -boehm
0x00287A4D	0x00000025	[ 20] literal string:                            %-10s %s

0x00287A72	0x0000020C	[ 20] literal string: Debugging options:
   --debug[=OPTIONS]     Enable debugging support, optional OPTIONS is a comma
                         separated list of options

OPTIONS is composed of:
    casts                Enable more detailed InvalidCastException messages.
    mdb-optimizations    Disable some JIT optimizations which are normally
                         disabled when running inside the debugger.
                         This is useful if you plan to attach to the running
                         process with the debugger.

0x00287C7E	0x0000054C	[ 20] literal string: Runtime and JIT debugging options:
    --breakonex            Inserts a breakpoint on exceptions
    --break METHOD         Inserts a breakpoint at METHOD entry
    --break-at-bb METHOD N Inserts a breakpoint in METHOD at BB N
    --compile METHOD       Just compile METHOD in assembly
    --compile-all=N        Compiles all the methods in the assembly multiple times (default: 1)
    --ncompile N           Number of times to compile METHOD (default: 1)
    --print-vtable         Print the vtable of all used classes
    --regression           Runs the regression test contained in the assembly
    --single-method=OPTS   Runs regressions with only one method optimized with OPTS at any time
    --statfile FILE        Sets the stat file to FILE
    --stats                Print statistics about the JIT operations
    --wapi=hps|semdel|seminfo IO-layer maintenance
    --inject-async-exc METHOD OFFSET Inject an asynchronous exception at METHOD
    --verify-all           Run the verifier on all assemblies and methods
    --full-aot             Avoid JITting any code
    --agent=ASSEMBLY[:ARG] Loads the specific agent assembly and executes its Main method with the given argument before loading the main assembly.
    --no-x86-stack-align   Don't align stack on x86

Other options:
    --graph[=TYPE] METHOD  Draws a graph of the specified method:

0x002881CA	0x00000304	[ 20] literal string: Tracing options:
   --trace[=EXPR]        Trace every call, optional EXPR controls the scope

EXPR is composed of:
    all                  All assemblies
    none                 No assemblies
    program              Entry point assembly
    assembly             Specifies an assembly
    wrapper              All wrappers bridging native and managed code
    M:Type:Method        Specifies a method
    N:Namespace          Specifies a namespace
    T:Type               Specifies a type
    E:Type               Specifies stack traces for an exception type
    EXPR                 Includes expression
    -EXPR                Excludes expression
    EXPR,EXPR            Multiple expressions
    disabled             Don't print any output until toggled via SIGUSR2

0x002884CE	0x000005CF	[ 20] literal string: Usage is: mono [options] program [program-options]

Development:
    --aot[=<options>]      Compiles the assembly to native code
    --debug[=<options>]    Enable debugging support, use --help-debug for details
    --debugger-agent=options Enable the debugger agent
    --profile[=profiler]   Runs in profiling mode with the specified profiler module
    --trace[=EXPR]         Enable tracing, use --help-trace for details
    --jitmap               Output a jit method map to /tmp/perf-PID.map
    --help-devel           Shows more options available to developers

Runtime:
    --config FILE          Loads FILE as the Mono config
    --verbose, -v          Increases the verbosity level
    --help, -h             Show usage information
    --version, -V          Show version information
    --runtime=VERSION      Use the VERSION runtime, instead of autodetecting
    --optimize=OPT         Turns on or off a specific optimization
                           Use --list-opt to get a list of optimizations
    --security[=mode]      Turns on the unsupported security manager (off by default)
                           mode is one of cas, core-clr, verifiable or validil
    --attach=OPTIONS       Pass OPTIONS to the attach agent in the runtime.
                           Currently the only supported option is 'disable'.
    --llvm, --nollvm       Controls whenever the runtime uses LLVM to compile code.
    --gc=[sgen,boehm]      Select SGen or Boehm GC (runs mono or mono-sgen)

0x00288A9D	0x00000020	[ 20] literal string: Invalid optimization name `%s'

0x00288ABD	0x0000002C	[ 21] literal string: ../../../../../mono/mono/mini/dwarfwriter.c
0x00288AE9	0x00000028	[ 21] literal string: img_writer_subsections_supported (w->w)
0x00288B11	0x0000000E	[ 21] literal string: .debug_abbrev
0x00288B1F	0x0000000C	[ 21] literal string: .debug_info
0x00288B2B	0x00000013	[ 21] literal string: .Ldebug_info_start
0x00288B3E	0x00000011	[ 21] literal string: .Ldebug_info_end
0x00288B4F	0x00000013	[ 21] literal string: .Ldebug_info_begin
0x00288B62	0x00000015	[ 21] literal string: Mono AOT Compiler %s
0x00288B77	0x00000013	[ 21] literal string: .Ldebug_line_start
0x00288B8A	0x0000001B	[ 21] literal string: .Ldebug_line_section_start
0x00288BA5	0x0000000B	[ 21] literal string: .debug_loc
0x00288BB0	0x00000012	[ 21] literal string: .Ldebug_loc_start
0x00288BC2	0x00000008	[ 21] literal string: param%d
0x00288BCA	0x00000005	[ 21] literal string: V_%d
0x00288BCF	0x0000000C	[ 21] literal string: .debug_line
0x00288BDB	0x00000007	[ 21] literal string: // %s

0x00288BE2	0x00000019	[ 21] literal string: IL_%04x: mono_icall <%s>
0x00288BFB	0x0000001E	[ 21] literal string: IL_%04x: mono_classconst <%s>
0x00288C19	0x00000005	[ 21] literal string: <%s>
0x00288C1E	0x00000009	[ 21] literal string: <0x%08x>
0x00288C27	0x00000011	[ 21] literal string: w->file_to_index
0x00288C38	0x0000000A	[ 21] literal string: index > 0
0x00288C42	0x0000000D	[ 21] literal string: .debug_frame
0x00288C4F	0x0000000E	[ 21] literal string: .Lfde%d_start
0x00288C5D	0x0000000C	[ 21] literal string: .Lfde%d_end
0x00288C69	0x0000000D	[ 21] literal string: .Lloclist_%d
0x00288C76	0x0000000D	[ 21] literal string: .LDIE_OBJECT
0x00288C83	0x00000009	[ 21] literal string: .LDIE_I4
0x00288C8C	0x00000008	[ 21] literal string: .LDIE_I
0x00288C94	0x00000005	[ 21] literal string: tdie
0x00288C99	0x0000000A	[ 21] literal string: .LTDIE_%d
0x00288CA3	0x00000012	[ 21] literal string: .LTDIE_%d_POINTER
0x00288CB5	0x00000014	[ 21] literal string: .LTDIE_%d_REFERENCE
0x00288CC9	0x0000001F	[ 21] literal string: k < G_N_ELEMENTS (basic_types)
0x00288CE8	0x00000011	[ 21] literal string: .Ldebug_line_end
0x00288CF9	0x00000018	[ 21] literal string: .Ldebug_line_header_end
0x00288D11	0x0000000B	[ 21] literal string: .Lcie0_end
0x00288D1C	0x0000000D	[ 21] literal string: .Lcie0_start
0x00288D29	0x00000009	[ 21] literal string: .LDIE_I1
0x00288D32	0x00000009	[ 21] literal string: .LDIE_U1
0x00288D3B	0x00000009	[ 21] literal string: .LDIE_I2
0x00288D44	0x00000006	[ 21] literal string: short
0x00288D4A	0x00000009	[ 21] literal string: .LDIE_U2
0x00288D53	0x00000007	[ 21] literal string: ushort
0x00288D5A	0x00000009	[ 21] literal string: .LDIE_U4
0x00288D63	0x00000009	[ 21] literal string: .LDIE_I8
0x00288D6C	0x00000009	[ 21] literal string: .LDIE_U8
0x00288D75	0x00000008	[ 21] literal string: .LDIE_U
0x00288D7D	0x00000009	[ 21] literal string: .LDIE_R4
0x00288D86	0x00000009	[ 21] literal string: .LDIE_R8
0x00288D8F	0x0000000E	[ 21] literal string: .LDIE_BOOLEAN
0x00288D9D	0x0000000B	[ 21] literal string: .LDIE_CHAR
0x00288DA8	0x0000000D	[ 21] literal string: .LDIE_STRING
0x00288DB5	0x0000000E	[ 21] literal string: .LDIE_SZARRAY
0x00288DC3	0x0000002F	[ 22] literal string: ../../../../../mono/mono/mini/exceptions-x86.c
0x00288DF2	0x0000001E	[ 22] literal string: (code - start) < kMaxCodeSize
0x00288E10	0x0000002B	[ 22] literal string: (ctx.esp % MONO_ARCH_FRAME_ALIGNMENT) == 0
0x00288E3B	0x00000020	[ 22] literal string: x86_signal_exception_trampoline
0x00288E5B	0x00000020	[ 22] literal string: llvm_throw_exception_trampoline
0x00288E7B	0x00000022	[ 22] literal string: llvm_rethrow_exception_trampoline
0x00288E9D	0x00000027	[ 22] literal string: llvm_throw_corlib_exception_trampoline
0x00288EC4	0x0000002B	[ 22] literal string: llvm_throw_corlib_exception_abs_trampoline
0x00288EEF	0x0000001E	[ 22] literal string: llvm_resume_unwind_trampoline
0x00288F0D	0x00000015	[ 22] literal string: ext->debugger_invoke
0x00288F22	0x00000015	[ 23] literal string: /tmp/minidtree.graph
0x00288F37	0x00000026	[ 23] literal string: ../../../../../mono/mono/mini/graph.c
0x00288F5D	0x0000001E	[ 23] literal string: dot %s -Tps -o %s.ps;gv %s.ps
0x00288F7B	0x0000000E	[ 23] literal string: digraph %s {

0x00288F89	0x0000002D	[ 23] literal string: node [fontsize=12.0]
edge [len=1,color=red]

0x00288FB6	0x00000015	[ 23] literal string: label="CFG for %s";

0x00288FCB	0x0000001B	[ 23] literal string: BB0 [shape=doublecircle];

0x00288FE6	0x00000012	[ 23] literal string: BB1 [color=red];

0x00288FF8	0x0000000B	[ 23] literal string: color=red,
0x00289003	0x0000002F	[ 23] literal string: BB%d [%sshape=record,labeljust=l,label="{BB%d|
0x00289032	0x00000003	[ 23] literal string: \n
0x00289035	0x00000006	[ 23] literal string: }"];

0x0028903B	0x00000003	[ 23] literal string: }

0x0028903E	0x00000017	[ 23] literal string: subgraph cluster_%d {

0x00289055	0x00000011	[ 23] literal string: label="loop_%d"

0x00289066	0x00000014	[ 23] literal string: BB%d [color=blue];

0x0028907A	0x00000015	[ 23] literal string: BB%d [color=green];

0x0028908F	0x00000016	[ 23] literal string: BB%d [color=yellow];

0x002890A5	0x0000000F	[ 23] literal string: BB%d -> BB%d;

0x002890B4	0x00000022	[ 23] literal string: (cfg->comp_done & MONO_COMP_IDOM)
0x002890D6	0x00000020	[ 23] literal string: label="Dominator tree for %s";

0x002890F6	0x0000001B	[ 24] literal string: unknown opcode name for %d
0x00289111	0x00000004	[ 24] literal string: %s:
0x00289115	0x00000008	[ 24] literal string:  [BB%d]
0x0028911D	0x00000012	[ 24] literal string: MONO_OBJDUMP_ARGS
0x0028912F	0x00000028	[ 24] literal string: ../../../../../mono/mono/mini/helpers.c
0x00289157	0x00000004	[ 24] literal string: ofd
0x0028915B	0x00000003	[ 24] literal string: :

0x0028915E	0x0000001B	[ 24] literal string: .stabs	"",100,0,0,.Ltext0

0x00289179	0x0000001F	[ 24] literal string: .stabs	"<BB>",100,0,0,.Ltext0

0x00289198	0x0000000A	[ 24] literal string: .Ltext0:

0x002891A2	0x00000011	[ 24] literal string: 
.stabd 68,0,%d

0x002891B3	0x0000000A	[ 24] literal string: 
.byte %d
0x002891BD	0x00000004	[ 24] literal string: ,%d
0x002891C1	0x00000017	[ 24] literal string: as -arch i386 %s -o %s
0x002891D8	0x00000012	[ 24] literal string: otool -v -t %s %s
0x002891EA	0x0000002F	[ 25] literal string: ../../../../../mono/mono/mini/image-writer.g.c
0x00289219	0x00000019	[ 25] literal string: acfg->stack_pos < 16 - 1
0x00289232	0x00000014	[ 25] literal string: acfg->stack_pos > 0
0x00289246	0x00000010	[ 25] literal string: !use_bin_writer
0x00289256	0x00000003	[ 25] literal string: fp
0x00289259	0x00000002	[ 25] literal string: L
0x0028925B	0x00000008	[ 25] literal string: 	%s %d

0x00289263	0x00000007	[ 25] literal string: .space
0x0028926A	0x0000000D	[ 25] literal string: %sDIFF_SYM%d
0x00289277	0x0000000C	[ 25] literal string: 
%s=%s - %s
0x00289283	0x00000006	[ 25] literal string: 
	%s 
0x00289289	0x00000006	[ 25] literal string: .long
0x0028928F	0x0000000D	[ 25] literal string: %s - %s + %d
0x0028929C	0x0000000B	[ 25] literal string: %s - %s %d
0x002892A7	0x00000008	[ 25] literal string: %s - %s
0x002892AF	0x00000007	[ 25] literal string: .short
0x002892B6	0x00000008	[ 25] literal string: 	%s %s

0x002892BE	0x00000013	[ 25] literal string: 	.align %d, 0x%0x

0x002892D1	0x0000000C	[ 25] literal string: 	.align %d

0x002892DD	0x0000000A	[ 25] literal string: 	%s "%s"

0x002892E7	0x00000007	[ 25] literal string: .asciz
0x002892EE	0x0000000B	[ 25] literal string: 
	.byte %d
0x002892F9	0x00000005	[ 25] literal string: %s:

0x002892FE	0x0000000C	[ 25] literal string: 	.globl %s

0x0028930A	0x00000007	[ 25] literal string: .debug
0x00289311	0x00000026	[ 25] literal string: .section __DWARF, __%s,regular,debug

0x00289337	0x0000001A	[ 25] literal string: .subsections_via_symbols

0x00289351	0x0000002B	[ 26] literal string: ../../../../../mono/mono/mini/jit-icalls.c
0x0028937C	0x00000015	[ 26] literal string: pcount == (rank * 2)
0x00289391	0x0000000F	[ 26] literal string: rank == pcount
0x002893A0	0x00000012	[ 26] literal string: generic_container
0x002893B2	0x00000023	[ 26] literal string: !vmethod->klass->generic_container
0x002893D5	0x0000005E	[ 26] literal string: !vmethod->klass->generic_class || !vmethod->klass->generic_class->context.class_inst->is_open
0x00289433	0x00000038	[ 26] literal string: !context->method_inst || !context->method_inst->is_open
0x0028946B	0x00000013	[ 26] literal string: Not yet supported.
0x0028947E	0x0000000E	[ 26] literal string: klass->vtable
0x0028948C	0x00000013	[ 26] literal string: iface_offset != -1
0x0028949F	0x0000002C	[ 27] literal string: ../../../../../mono/mono/mini/linear-scan.c
0x002894CB	0x0000001E	[ 27] literal string: regnum < G_N_ELEMENTS (gains)
0x002894E9	0x00000005	[ 27] literal string: regs
0x002894EE	0x00000026	[ 27] literal string: ALLOCATED R%d(%d) TO HREG %d COST %d

0x00289514	0x00000018	[ 27] literal string: COSTLY: R%d C%d C%d %s

0x0028952C	0x00000010	[ 27] literal string: NOT REGVAR: %d

0x0028953C	0x0000000A	[ 27] literal string: reg != -1
0x00289546	0x00000017	[ 27] literal string: REGVAR R%d G%d C%d %s

0x0028955D	0x0000001B	[ 27] literal string: COSTLY: %s R%d G%d C%d %s

0x00289580	0x0000001F	[ 28] literal string: pessimize variables in bb %d.

0x002895AD	0x00000029	[ 28] literal string: ../../../../../mono/mono/mini/liveness.c
0x002895D6	0x00000027	[ 28] literal string: !(cfg->comp_done & MONO_COMP_LIVENESS)
0x002895FD	0x0000000D	[ 28] literal string: BLOCK BB%d (
0x0028960A	0x00000007	[ 28] literal string: BB%d, 
0x00289611	0x0000000C	[ 28] literal string: GEN  BB%d: 
0x0028961D	0x0000000C	[ 28] literal string: KILL BB%d: 
0x00289629	0x00000012	[ 28] literal string: P: BB%d(%d): IN: 
0x0028963B	0x00000006	[ 28] literal string: BB%d 
0x00289641	0x00000005	[ 28] literal string: OUT:
0x00289646	0x0000000A	[ 28] literal string: 	ADD: %d

0x00289650	0x00000011	[ 28] literal string: 	LIVE IN  BB%d: 
0x00289661	0x0000000C	[ 28] literal string: IT: %d %d.

0x0028966D	0x00000010	[ 28] literal string: LIVE IN  BB%d: 
0x0028967D	0x00000010	[ 28] literal string: LIVE OUT BB%d: 
0x0028968D	0x00000014	[ 28] literal string: V%d: [0x%x - 0x%x]

0x002896A1	0x0000000B	[ 28] literal string: to >= from
0x002896AC	0x00000009	[ 28] literal string: [%x-%x] 
0x002896B5	0x0000003F	[ 28] literal string: pos > interval->range->from && pos <= interval->last_range->to
0x002896F4	0x00000013	[ 28] literal string: GC LIVENESS BB%d:

0x00289707	0x0000002B	[ 28] literal string: Var R%d live at exit, last_use set to %x.

0x00289732	0x00000006	[ 28] literal string: 	%x: 
0x00289738	0x0000001D	[ 28] literal string: 	add range to R%d: [%x, %x)

0x00289755	0x0000001C	[ 28] literal string: 	last use of R%d set to %x

0x00289771	0x0000000B	[ 28] literal string: *callsites
0x0028977C	0x00000009	[ 28] literal string: 		live: 
0x00289785	0x00000004	[ 28] literal string: R%d
0x00289789	0x00000003	[ 28] literal string: , 
0x0028978C	0x00000003	[ 28] literal string: %d
0x0028978F	0x0000000F	[ 28] literal string: 	GEN: R%d(%d)

0x0028979E	0x00000010	[ 28] literal string: 	KILL: R%d(%d)

0x002897BC	0x0000000C	[ 28] literal string: 
ITERATION:
0x002897C8	0x00000003	[ 28] literal string: ):
0x002897CB	0x0000000B	[ 28] literal string: 
LIVENESS:
0x002897D6	0x00000002	[ 28] literal string: }
0x002897E0	0x00000026	[ 28] literal string: 
------------ GC LIVENESS: ----------
0x00289806	0x00000032	[ 29] literal string: ../../../../../mono/mono/mini/local-propagation.c
0x00289838	0x0000001C	[ 29] literal string: ins->opcode > MONO_CEE_LAST
0x00289854	0x00000013	[ 29] literal string: CCOPY: R%d -> R%d

0x00289867	0x00000015	[ 29] literal string: CCOPY/2: R%d -> R%d

0x0028987C	0x0000001E	[ 29] literal string: 	Reverse copyprop in BB%d on 
0x002898A0	0x0000002E	[ 30] literal string: * Assertion at %s:%d, condition `%s' not met

0x002898CE	0x0000002D	[ 30] literal string: ../../../../../mono/mono/mini/method-to-ir.c
0x00289908	0x00000028	[ 30] literal string: unknown type 0x%02x in type_to_regstore
0x00289930	0x0000000E	[ 30] literal string: 
%s %d: [IN: 
0x0028993E	0x0000000A	[ 30] literal string:  BB%d(%d)
0x00289948	0x00000008	[ 30] literal string: , OUT: 
0x00289950	0x00000004	[ 30] literal string: ptr
0x00289954	0x00000005	[ 30] literal string: void
0x00289962	0x00000008	[ 30] literal string: ptr ptr
0x0028996A	0x0000000C	[ 30] literal string: void object
0x00289976	0x00000010	[ 30] literal string: void object ptr
0x00289986	0x0000000F	[ 30] literal string: cfg->gsharedvt
0x00289995	0x00000027	[ 30] literal string: unknown type 0x%02x in eval stack type
0x002899BC	0x0000000D	[ 30] literal string: size < 10000
0x002899C9	0x00000004	[ 30] literal string: sig
0x002899D5	0x0000000A	[ 30] literal string: costs > 0
0x002899DF	0x00000024	[ 30] literal string: !MONO_TYPE_IS_VOID (info->sig->ret)
0x00289A09	0x00000008	[ 30] literal string: !native
0x00289A11	0x00000010	[ 30] literal string: bzero_aligned_1
0x00289A21	0x0000000D	[ 30] literal string: bzero_method
0x00289A2E	0x0000002A	[ 30] literal string: Missing or incorrect header for method %s
0x00289A58	0x0000001A	[ 30] literal string: !sig->has_type_parameters
0x00289A72	0x00000014	[ 30] literal string: method->is_inflated
0x00289A86	0x0000002E	[ 30] literal string: mono_method_get_context (method)->method_inst
0x00289AB4	0x00000019	[ 30] literal string: sig->generic_param_count
0x00289ACD	0x00000011	[ 30] literal string: method to IR %s

0x00289ADE	0x00000016	[ 30] literal string: cfg->num_bblocks == 2
0x00289AF4	0x00000017	[ 30] literal string: NullReferenceException
0x00289B0B	0x00000003	[ 30] literal string: bb
0x00289B0E	0x00000017	[ 30] literal string: ip == tblock->cil_code
0x00289B25	0x00000019	[ 30] literal string: loading %d from temp %d

0x00289B3E	0x0000000C	[ 30] literal string: op_size > 0
0x00289B4A	0x00000018	[ 30] literal string: SKIPPING DEAD OP at %x

0x00289B62	0x00000022	[ 30] literal string: converting (in B%d: stack: %d) %s
0x00289B84	0x00000005	[ 30] literal string: var1
0x00289B89	0x00000005	[ 30] literal string: var2
0x00289B8E	0x00000004	[ 30] literal string: jmp
0x00289B92	0x00000015	[ 30] literal string: AOT disabled: %s:%d

0x00289BA7	0x0000001B	[ 30] literal string: DM Constrained call to %s

0x00289BC2	0x00000018	[ 30] literal string: Constrained call to %s

0x00289BDA	0x0000001B	[ 30] literal string: !cmethod->klass->valuetype
0x00289BF5	0x0000000B	[ 30] literal string: linkdemand
0x00289C00	0x0000002D	[ 30] literal string: * Assertion: should not be reached at %s:%d

0x00289C2D	0x0000002A	[ 30] literal string: !mono_method_check_context_used (cmethod)
0x00289C57	0x00000004	[ 30] literal string: ins
0x00289C62	0x0000000C	[ 30] literal string: !vtable_arg
0x00289C6E	0x0000000D	[ 30] literal string: !pass_vtable
0x00289C7B	0x00000008	[ 30] literal string: cmethod
0x00289C83	0x00000012	[ 30] literal string: fsig->is_inflated
0x00289C95	0x00000015	[ 30] literal string: virtual generic call
0x00289CAA	0x00000009	[ 30] literal string: !imt_arg
0x00289CB3	0x00000015	[ 30] literal string: cmethod->is_inflated
0x00289CC8	0x00000006	[ 30] literal string: Enter
0x00289CCE	0x0000000D	[ 30] literal string: wrapper call
0x00289CDB	0x0000000A	[ 30] literal string: tail call
0x00289CE5	0x0000000D	[ 30] literal string: mono_use_imt
0x00289CF2	0x00000008	[ 30] literal string: gshared
0x00289CFA	0x00000028	[ 30] literal string: cfg->generic_sharing_context && cmethod
0x00289D22	0x00000006	[ 30] literal string: !addr
0x00289D28	0x0000000D	[ 30] literal string: context_used
0x00289D35	0x0000000E	[ 30] literal string: indirect call
0x00289D43	0x00000005	[ 30] literal string: call
0x00289D48	0x0000000F	[ 30] literal string: *ip == CEE_RET
0x00289D57	0x0000000C	[ 30] literal string: !return_var
0x00289D63	0x0000000E	[ 30] literal string: !context_used
0x00289D71	0x00000026	[ 30] literal string: class %s.%s needs init call for ctor

0x00289D97	0x00000008	[ 30] literal string: HasFlag
0x00289D9F	0x00000014	[ 30] literal string: var->klass == klass
0x00289DB3	0x0000000E	[ 30] literal string: field->parent
0x00289DC1	0x00000024	[ 30] literal string: class %s.%s needs init call for %s

0x00289DEC	0x0000000B	[ 30] literal string: class init
0x00289DFC	0x00000019	[ 30] literal string: IndexOutOfRangeException
0x00289E1A	0x00000012	[ 30] literal string: GetTypeFromHandle
0x00289E2C	0x00000007	[ 30] literal string: tblock
0x00289E33	0x0000002A	[ 30] literal string: method->wrapper_type != MONO_WRAPPER_NONE
0x00289E5D	0x0000002B	[ 30] literal string: Could not find icall address in wrapper %s
0x00289E88	0x00000009	[ 30] literal string: callinfo
0x00289E91	0x00000011	[ 30] literal string: klass->valuetype
0x00289EA2	0x00000009	[ 30] literal string: cfg->ret
0x00289EAB	0x00000028	[ 30] literal string: mono_method_signature (method)->pinvoke
0x00289ED3	0x00000016	[ 30] literal string: cfg->ret_var_is_local
0x00289EE9	0x00000012	[ 30] literal string: key < TLS_KEY_NUM
0x00289EFB	0x00000021	[ 30] literal string: opcode 0x%02x 0x%02x not handled
0x00289F1C	0x00000012	[ 30] literal string: ArgumentException
0x00289F2E	0x00000009	[ 30] literal string: localloc
0x00289F37	0x00000008	[ 30] literal string: nearest
0x00289F3F	0x0000001F	[ 30] literal string: opcode 0xfe 0x%02x not handled
0x00289F5E	0x0000001A	[ 30] literal string: opcode 0x%02x not handled
0x00289F78	0x0000001D	[ 30] literal string: REGION BB%d IL_%04x ID_%08X

0x00289F95	0x0000001A	[ 30] literal string: Method %s is too complex.
0x00289FAF	0x00000013	[ 30] literal string: AFTER METHOD-TO-IR
0x00289FC2	0x0000001D	[ 30] literal string: !mono_error_ok (&cfg->error)
0x00289FDF	0x0000002B	[ 30] literal string: cfg->exception_type != MONO_EXCEPTION_NONE
0x0028A00A	0x00000020	[ 30] literal string: 
HANDLE-GLOBAL-VREGS BLOCK %d:

0x0028A02A	0x0000001D	[ 30] literal string: ins->opcode >= MONO_CEE_LAST
0x0028A047	0x0000001C	[ 30] literal string: LONG VREG R%d made global.

0x0028A063	0x0000000B	[ 30] literal string: vreg != -1
0x0028A06E	0x0000002D	[ 30] literal string: VREG R%d used in BB%d and BB%d made global.

0x0028A09B	0x0000001C	[ 30] literal string: CONVERTED R%d(%d) TO VREG.

0x0028A0B7	0x0000001C	[ 30] literal string: ins->opcode == OP_REGOFFSET
0x0028A0D3	0x00000005	[ 30] literal string: tree
0x0028A0D8	0x00000012	[ 30] literal string: 
SPILL BLOCK %d:

0x0028A0EA	0x0000002A	[ 30] literal string: var->opcode == OP_GSHAREDVT_ARG_REGOFFSET
0x0028A114	0x00000022	[ 30] literal string: var->opcode == OP_GSHAREDVT_LOCAL
0x0028A136	0x00000009	[ 30] literal string: info_var
0x0028A13F	0x0000000B	[ 30] literal string: locals_var
0x0028A14A	0x0000001C	[ 30] literal string: var->opcode == OP_REGOFFSET
0x0028A166	0x0000000A	[ 30] literal string: 	 %.3s %d
0x0028A170	0x00000004	[ 30] literal string:  %d
0x0028A174	0x00000053	[ 30] literal string: ((ins->dreg == -1) && (regtype == ' ')) || ((ins->dreg != -1) && (regtype != ' '))
0x0028A1C7	0x00000022	[ 30] literal string: store_opcode != OP_STOREV_MEMBASE
0x0028A1E9	0x00000049	[ 30] literal string: ((sreg == -1) && (regtype == ' ')) || ((sreg != -1) && (regtype != ' '))
0x0028A232	0x00000020	[ 30] literal string: load_opcode != OP_LOADV_MEMBASE
0x0028A252	0x0000001B	[ 30] literal string: vreg_to_lvreg [sreg] != -1
0x0028A26D	0x0000001A	[ 30] literal string: 		Use lvreg R%d for R%d.

0x0028A287	0x0000000B	[ 30] literal string: sreg != -1
0x0028A292	0x00000012	[ 30] literal string: lvregs_len < 1024
0x0028A2A4	0x00000021	[ 30] literal string: load_opcode != OP_LOADI8_MEMBASE
0x0028A2C5	0x00000010	[ 30] literal string: ins->dreg != -1
0x0028A2D5	0x00000016	[ 30] literal string: method body is empty.
0x0028A2EB	0x0000001B	[ 30] literal string: Invalid IL code in %s: %s

0x0028A306	0x00000008	[ 30] literal string: lmf_ins
0x0028A30E	0x0000004C	[ 30] literal string: Transparent proxy support is disabled while trying to JIT code that uses it
0x0028A35A	0x00000037	[ 30] literal string: error: --debug=casts not supported on this platform.
.
0x0028A391	0x0000004C	[ 30] literal string: transparent proxy support is disabled while trying to JIT code that uses it
0x0028A3E7	0x0000000D	[ 30] literal string: helper->slot
0x0028A3F4	0x00000010	[ 30] literal string: InitializeArray
0x0028A404	0x0000000F	[ 30] literal string: RuntimeHelpers
0x0028A413	0x00000005	[ 30] literal string: !aot
0x0028A418	0x00000006	[ 30] literal string: !this
0x0028A41E	0x00000045	[ 30] literal string: method->is_inflated && mono_method_get_context (method)->method_inst
0x0028A463	0x0000000B	[ 30] literal string: tls_offset
0x0028A46E	0x0000001F	[ 30] literal string: CurrentInternalThread_internal
0x0028A48D	0x00000008	[ 30] literal string: tlsdata
0x0028A495	0x0000000E	[ 30] literal string: ThreadLocal`1
0x0028A4A3	0x0000002D	[ 30] literal string: Field `%s' is inaccessible from method `%s'

0x0028A4D0	0x00000011	[ 30] literal string: klass->rank == 0
0x0028A4E7	0x0000000D	[ 30] literal string: !pass_mrgctx
0x0028A4F4	0x0000000C	[ 30] literal string: !klass_inst
0x0028A500	0x0000001E	[ 30] literal string: MONO_TYPE_IS_VOID (fsig->ret)
0x0028A51E	0x0000000F	[ 30] literal string: inline failure
0x0028A52D	0x0000000A	[ 30] literal string: ctor call
0x0028A537	0x0000002A	[ 30] literal string: opcode 0x%04x not handled in type from op
0x0028A561	0x00000014	[ 30] literal string: InternalAllocateStr
0x0028A580	0x00000011	[ 30] literal string: MONO_INLINELIMIT
0x0028A591	0x0000000A	[ 30] literal string: get_Chars
0x0028A59B	0x0000000B	[ 30] literal string: get_Length
0x0028A5A6	0x00000010	[ 30] literal string: InternalSetChar
0x0028A5B6	0x00000008	[ 30] literal string: GetType
0x0028A5BE	0x00000014	[ 30] literal string: InternalGetHashCode
0x0028A5D2	0x00000006	[ 30] literal string: .ctor
0x0028A5D8	0x00000014	[ 30] literal string: GetGenericValueImpl
0x0028A5EC	0x00000014	[ 30] literal string: SetGenericValueImpl
0x0028A600	0x0000000A	[ 30] literal string: GetLength
0x0028A60A	0x0000000E	[ 30] literal string: GetLowerBound
0x0028A618	0x00000009	[ 30] literal string: get_Rank
0x0028A621	0x00000017	[ 30] literal string: get_OffsetToStringData
0x0028A638	0x0000000D	[ 30] literal string: SpinWait_nop
0x0028A645	0x0000000E	[ 30] literal string: MemoryBarrier
0x0028A653	0x0000000D	[ 30] literal string: VolatileRead
0x0028A660	0x0000002F	[ 30] literal string: mini_type_is_reference (cfg, fsig->params [0])
0x0028A68F	0x0000000E	[ 30] literal string: VolatileWrite
0x0028A69D	0x00000005	[ 30] literal string: Exit
0x0028A6A3	0x0000000C	[ 30] literal string: Interlocked
0x0028A6AF	0x0000000A	[ 30] literal string: Increment
0x0028A6B9	0x0000000A	[ 30] literal string: Decrement
0x0028A6C3	0x00000004	[ 30] literal string: Add
0x0028A6C7	0x00000009	[ 30] literal string: Exchange
0x0028A6D0	0x00000010	[ 30] literal string: CompareExchange
0x0028A6E0	0x00000009	[ 30] literal string: Volatile
0x0028A6E9	0x00000005	[ 30] literal string: Read
0x0028A6F4	0x00000013	[ 30] literal string: System.Diagnostics
0x0028A707	0x00000009	[ 30] literal string: Debugger
0x0028A710	0x00000006	[ 30] literal string: Break
0x0028A716	0x00000007	[ 30] literal string: System
0x0028A71D	0x0000000C	[ 30] literal string: Environment
0x0028A729	0x00000017	[ 30] literal string: get_IsRunningOnWindows
0x0028A740	0x0000000C	[ 30] literal string: UnsafeStore
0x0028A74C	0x0000000B	[ 30] literal string: UnsafeLoad
0x0028A757	0x0000000A	[ 30] literal string: UnsafeMov
0x0028A761	0x0000002C	[ 30] literal string: unknown type 0x%02x in check_call_signature
0x0028A799	0x00000007	[ 30] literal string: Number
0x0028A7A0	0x00000007	[ 30] literal string: Buffer
0x0028A7A7	0x0000002E	[ 30] literal string: Method `%s' is inaccessible from method `%s'

0x0028A7DC	0x00000039	[ 30] literal string: sharing failed for method %s.%s.%s/%d opcode %s line %d

0x0028A815	0x00000038	[ 30] literal string: gsharedvt failed for method %s.%s.%s/%d opcode %s %s:%d
0x0028A84D	0x00000013	[ 30] literal string: inline failed: %s

0x0028A860	0x00000027	[ 30] literal string: stack type %d to monotype not handled

0x0028A887	0x00000033	[ 30] literal string: unknown type 0x%02x in target_type_is_incompatible
0x0028A8BA	0x00000018	[ 30] literal string: mdb no longer supported
0x0028A8D2	0x00000034	[ 30] literal string: Incorrect value returned from break policy callback
0x0028A906	0x0000001D	[ 30] literal string: %d item(s) on exit from B%d

0x0028A923	0x00000017	[ 30] literal string: storing %d to temp %d

0x0028A93A	0x0000000F	[ 30] literal string: ThrowException
0x0028A950	0x00000004	[ 30] literal string: ass
0x0028A954	0x00000014	[ 30] literal string: DebuggableAttribute
0x0028A968	0x00000015	[ 30] literal string: read16 (p) == 0x0001
0x0028A97D	0x0000002B	[ 30] literal string: cfg->exception_type == MONO_EXCEPTION_NONE
0x0028A9A8	0x0000001A	[ 30] literal string: INLINE START %p %s -> %s

0x0028A9C2	0x00000015	[ 30] literal string: INLINE END %s -> %s

0x0028A9D7	0x0000001D	[ 30] literal string: INLINE ABORTED %s (cost %d)

0x0028A9F4	0x00000025	[ 30] literal string: MONO_INLINE_CALLER_METHOD_NAME_LIMIT
0x0028AA1A	0x00000025	[ 30] literal string: MONO_INLINE_CALLED_METHOD_NAME_LIMIT
0x0028AA3F	0x00000007	[ 30] literal string: memset
0x0028AA46	0x00000024	[ 30] literal string: Old corlib found. Install a new one
0x0028AA6A	0x00000009	[ 30] literal string: val == 0
0x0028AA73	0x00000019	[ 30] literal string: ExecutionEngineException
0x0028AA8C	0x00000007	[ 30] literal string: memcpy
0x0028AA93	0x0000001F	[ 30] literal string: (foffset % SIZEOF_VOID_P) == 0
0x0028AAB2	0x0000002F	[ 30] literal string: unknown type 0x%02x in ret_type_to_call_opcode
0x0028AAE1	0x00000034	[ 30] literal string: mono_method_signature (method)->generic_param_count
0x0028AB1C	0x00000028	[ 30] literal string: ../../../../../mono/mono/mini/ir-emit.h
0x0028AB44	0x00000003	[ 30] literal string:  ]
0x0028AB48	0x00000001	[ 30] literal string: 
0x0028AB50	0x00000011	[ 30] literal string: <box+brtrue opt>
0x0028AB70	0x00000042	[ 30] literal string: gsharedvt method failed to verify, falling back to instantiation.
0x0028ABB2	0x0000002D	[ 31] literal string: ../../../../../mono/mono/mini/mini-codegen.c
0x0028ABDF	0x00000018	[ 31] literal string: bank == MONO_REG_DOUBLE
0x0028ABF7	0x0000001C	[ 31] literal string: vreg >= regbank_size [bank]
0x0028AC13	0x0000001B	[ 31] literal string: hreg < regbank_size [bank]
0x0028AC2E	0x00000017	[ 31] literal string: vreg >= MONO_MAX_IREGS
0x0028AC45	0x00000016	[ 31] literal string: hreg < MONO_MAX_IREGS
0x0028AC5B	0x0000000E	[ 31] literal string: [RGCTX_FETCH 
0x0028AC69	0x00000007	[ 31] literal string:  - %s]
0x0028AC70	0x00000013	[ 31] literal string: [METHODCONST - %s]
0x0028AC83	0x00000005	[ 31] literal string: [%s]
0x0028AC88	0x00000009	[ 31] literal string: 	%-2d %s
0x0028AC91	0x00000004	[ 31] literal string:  %s
0x0028AC95	0x00000012	[ 31] literal string:  [R%d + 0x%lx] <-
0x0028ACA7	0x00000008	[ 31] literal string:  R%d <-
0x0028ACAF	0x00000005	[ 31] literal string:  R%d
0x0028ACB4	0x00000007	[ 31] literal string:  [B%d]
0x0028ACBB	0x0000000A	[ 31] literal string:  [B%dB%d]
0x0028ACC5	0x00000007	[ 31] literal string:  [%d (
0x0028ACCC	0x00000003	[ 31] literal string: )]
0x0028ACCF	0x00000009	[ 31] literal string:  + 0x%lx
0x0028ACD8	0x0000000A	[ 31] literal string:  [R%d] <-
0x0028ACE2	0x00000009	[ 31] literal string:  [%s] <-
0x0028ACEB	0x00000011	[ 31] literal string:  [%s + 0x%lx] <-
0x0028ACFC	0x00000007	[ 31] literal string:  %s <-
0x0028AD03	0x0000000F	[ 31] literal string:  [R%d + 0x%lx]
0x0028AD12	0x0000000E	[ 31] literal string:  [%s + 0x%lx]
0x0028AD20	0x00000006	[ 31] literal string:  [%d]
0x0028AD26	0x00000008	[ 31] literal string:  [%lld]
0x0028AD2E	0x00000006	[ 31] literal string:  [%f]
0x0028AD34	0x00000006	[ 31] literal string:  [%s]
0x0028AD3A	0x0000000D	[ 31] literal string:  [%s <- R%d]
0x0028AD47	0x00000008	[ 31] literal string:  il: %x
0x0028AD4F	0x0000000E	[ 31] literal string:  clobbers: %c
0x0028AD5D	0x0000002B	[ 31] literal string: Instruction metadata for %s inconsistent.

0x0028AD88	0x00000010	[ 31] literal string: sregs [j] != -1
0x0028AD98	0x0000001B	[ 31] literal string: 
LOCAL REGALLOC BLOCK %d:

0x0028ADB3	0x00000033	[ 31] literal string: Opcode '%s' missing from machine description file.
0x0028ADE6	0x0000001B	[ 31] literal string: reginfo [sreg].born_in > 0
0x0028AE01	0x0000000C	[ 31] literal string: processing:
0x0028AE0D	0x00000023	[ 31] literal string: 	shortcut assignment of R%d to %s

0x0028AE30	0x0000000E	[ 31] literal string: new_dest >= 0
0x0028AE3E	0x00000022	[ 31] literal string: 	changing dreg R%d to %s from %s

0x0028AE60	0x0000001E	[ 31] literal string: is_soft_reg (ins->dreg, bank)
0x0028AE7E	0x00000006	[ 31] literal string: !bank
0x0028AE84	0x0000001F	[ 31] literal string: 	assigned dreg %s to dest R%d

0x0028AEA3	0x0000000F	[ 31] literal string: prev_dreg > -1
0x0028AEB2	0x0000002A	[ 31] literal string: !is_global_ireg (rs->vassign [prev_dreg])
0x0028AEDC	0x00000024	[ 31] literal string: 	assigned dreg-high %s to dest R%d

0x0028AF00	0x00000014	[ 31] literal string: 	freeable %s (R%d)

0x0028AF14	0x0000000A	[ 31] literal string: dreg >= 0
0x0028AF1E	0x00000021	[ 31] literal string: 	freeable %s (R%d) (born in %d)

0x0028AF3F	0x00000024	[ 31] literal string: 	forced spill of clobbered reg R%d

0x0028AF63	0x0000001D	[ 31] literal string: 	assigned arg reg %s to R%d

0x0028AF80	0x0000001A	[ 31] literal string: is_soft_reg (sreg1, bank)
0x0028AF9A	0x00000018	[ 31] literal string: dest_sreg1 == ins->dreg
0x0028AFB2	0x00000009	[ 31] literal string: val >= 0
0x0028AFBB	0x0000001F	[ 31] literal string: 	assigned sreg1-low %s to R%d

0x0028AFDA	0x00000041	[ 31] literal string: (regmask (dreg_high)) & regpair_reg2_mask (spec_src1, ins->dreg)
0x0028B01B	0x00000020	[ 31] literal string: 	assigned sreg1-high %s to R%d

0x0028B03B	0x0000001B	[ 31] literal string: 	assigned sreg1 %s to R%d

0x0028B056	0x00000014	[ 31] literal string: prev_sregs [0] > -1
0x0028B06A	0x0000002F	[ 31] literal string: !is_global_ireg (rs->vassign [prev_sregs [0]])
0x0028B099	0x00000025	[ 31] literal string: 	assigned sreg1 hreg %s to dest R%d

0x0028B0BE	0x00000022	[ 31] literal string: 	need to copy sreg2 %s to reg %s

0x0028B0E0	0x00000017	[ 31] literal string: sregs [0] == ins->dreg
0x0028B0F7	0x00000018	[ 31] literal string: dreg_high == sreg1_high
0x0028B10F	0x00000023	[ 31] literal string: 	need to copy sreg1 %s to dreg %s

0x0028B132	0x0000001C	[ 31] literal string: 	assigned sreg%d %s to R%d

0x0028B14E	0x00000012	[ 31] literal string: sreg == dest_sreg
0x0028B160	0x00000017	[ 31] literal string: sregs [k] != dest_sreg
0x0028B177	0x00000005	[ 31] literal string: prev
0x0028B17C	0x00000007	[ 31] literal string: i < sp
0x0028B183	0x0000001C	[ 31] literal string: 	swap %%st(0) and %%st(%d)

0x0028B19F	0x0000001B	[ 31] literal string: 	swap %%st(0) and %%st(1)

0x0028B1BA	0x00000007	[ 31] literal string: sp > 0
0x0028B1C1	0x00000007	[ 31] literal string: sp < 8
0x0028B1C8	0x00000003	[ 31] literal string: 	[
0x0028B1CB	0x00000009	[ 31] literal string: %s%%fr%d
0x0028B1D4	0x00000026	[ 31] literal string: Unknown opcode '%s' in opcode_to_type
0x0028B1FA	0x00000020	[ 31] literal string: Unknown intrinsic exception %s

0x0028B21A	0x00000019	[ 31] literal string: bank < MONO_NUM_REGBANKS
0x0028B233	0x0000003D	[ 31] literal string: 	start regmask to assign R%d: 0x%08llu (R%d <- R%d R%d R%d)

0x0028B270	0x0000001A	[ 31] literal string: 		excluding sreg%d %s %d

0x0028B28A	0x00000015	[ 31] literal string: 		excluding dreg %s

0x0028B29F	0x0000001F	[ 31] literal string: 		available regmask: 0x%08llu

0x0028B2BE	0x00000008	[ 31] literal string: regmask
0x0028B2C6	0x0000002A	[ 31] literal string: 		selected register %s has assignment %d

0x0028B2F0	0x00000035	[ 31] literal string: 	SPILLED LOAD (%d at 0x%08lx(%%ebp)) R%d (freed %s)

0x0028B325	0x00000009	[ 31] literal string: i == sel
0x0028B32E	0x00000037	[ 31] literal string: 	%sSPILLED STORE (%d at 0x%08lx(%%ebp)) R%d (from %s)

0x0028B365	0x0000000F	[ 31] literal string: prev_reg != -1
0x0028B374	0x00000005	[ 31] literal string: REF 
0x0028B379	0x00000004	[ 31] literal string: MP 
0x0028B37D	0x00000024	[ 31] literal string: 	allocated preferred reg R%d to %s

0x0028B3A1	0x0000001B	[ 31] literal string: reg >= regbank_size [bank]
0x0028B3BC	0x00000016	[ 31] literal string: reg >= MONO_MAX_IREGS
0x0028B3D2	0x00000018	[ 31] literal string: ! is_global_ireg (hreg)
0x0028B3EA	0x0000001C	[ 31] literal string: 	forced copy from %s to %s

0x0028B406	0x00000034	[ 31] literal string: SPILLED LOAD (%d at 0x%08lx(%%ebp)) R%d (freed %s)

0x0028B43A	0x00000016	[ 31] literal string: 	forced spill of R%d

0x0028B450	0x00000018	[ 31] literal string: liveness: %s [%d - %d]

0x0028B468	0x00000003	[ 31] literal string: BB
0x0028B46B	0x00000004	[ 31] literal string: ABS
0x0028B46F	0x00000006	[ 31] literal string: LABEL
0x0028B475	0x0000000C	[ 31] literal string: METHOD_JUMP
0x0028B481	0x0000000B	[ 31] literal string: METHOD_REL
0x0028B48C	0x0000000C	[ 31] literal string: METHODCONST
0x0028B498	0x00000010	[ 31] literal string: INTERNAL_METHOD
0x0028B4A8	0x00000007	[ 31] literal string: SWITCH
0x0028B4AF	0x00000004	[ 31] literal string: EXC
0x0028B4B3	0x00000009	[ 31] literal string: EXC_NAME
0x0028B4BC	0x00000006	[ 31] literal string: CLASS
0x0028B4C2	0x00000006	[ 31] literal string: IMAGE
0x0028B4C8	0x0000000B	[ 31] literal string: CLASS_INIT
0x0028B4D3	0x00000006	[ 31] literal string: SFLDA
0x0028B4D9	0x00000006	[ 31] literal string: LDSTR
0x0028B4DF	0x00000008	[ 31] literal string: LDTOKEN
0x0028B4E7	0x00000011	[ 31] literal string: TYPE_FROM_HANDLE
0x0028B4F8	0x00000003	[ 31] literal string: R4
0x0028B4FB	0x00000003	[ 31] literal string: R8
0x0028B4FE	0x00000003	[ 31] literal string: IP
0x0028B501	0x00000004	[ 31] literal string: IID
0x0028B505	0x0000000D	[ 31] literal string: ADJUSTED_IID
0x0028B512	0x00000007	[ 31] literal string: BB_OVF
0x0028B519	0x00000008	[ 31] literal string: EXC_OVF
0x0028B521	0x0000000B	[ 31] literal string: GOT_OFFSET
0x0028B52C	0x00000008	[ 31] literal string: DECLSEC
0x0028B534	0x00000004	[ 31] literal string: RVA
0x0028B538	0x00000014	[ 31] literal string: DELEGATE_TRAMPOLINE
0x0028B54C	0x0000000B	[ 31] literal string: ICALL_ADDR
0x0028B557	0x0000000F	[ 31] literal string: JIT_ICALL_ADDR
0x0028B566	0x0000001A	[ 31] literal string: INTERRUPTION_REQUEST_FLAG
0x0028B580	0x0000000C	[ 31] literal string: RGCTX_FETCH
0x0028B58C	0x00000013	[ 31] literal string: GENERIC_CLASS_INIT
0x0028B59F	0x0000000E	[ 31] literal string: MONITOR_ENTER
0x0028B5AD	0x00000011	[ 31] literal string: MONITOR_ENTER_V4
0x0028B5BE	0x0000000D	[ 31] literal string: MONITOR_EXIT
0x0028B5CB	0x00000012	[ 31] literal string: MSCORLIB_GOT_ADDR
0x0028B5DD	0x0000000F	[ 31] literal string: SEQ_POINT_INFO
0x0028B5EC	0x00000014	[ 31] literal string: LLVM_IMT_TRAMPOLINE
0x0028B600	0x00000013	[ 31] literal string: GC_CARD_TABLE_ADDR
0x0028B613	0x00000010	[ 31] literal string: CASTCLASS_CACHE
0x0028B623	0x0000000A	[ 31] literal string: SIGNATURE
0x0028B62D	0x0000000F	[ 31] literal string: GSHAREDVT_CALL
0x0028B63C	0x00000011	[ 31] literal string: GSHAREDVT_METHOD
0x0028B64D	0x0000000B	[ 31] literal string: JIT_TLS_ID
0x0028B658	0x0000000B	[ 31] literal string: TLS_OFFSET
0x0028B663	0x00000012	[ 31] literal string: OBJC_SELECTOR_REF
0x0028B675	0x00000011	[ 31] literal string: METHOD_CODE_SLOT
0x0028B686	0x0000000A	[ 31] literal string: LDSTR_LIT
0x0028B690	0x00000005	[ 31] literal string: NONE
0x0028B695	0x00000002	[ 31] literal string: ]
0x0028B697	0x00000013	[ 32] literal string: DUMP_CROSS_OFFSETS
0x0028B6AA	0x0000001D	[ 32] literal string: #ifndef DISABLE_JIT_OFFSETS

0x0028B6C7	0x00000025	[ 32] literal string: #define USED_CROSS_COMPILER_OFFSETS

0x0028B6EC	0x00000018	[ 32] literal string: DECL_OFFSET2(%s,%s,%d)

0x0028B704	0x00000008	[ 32] literal string: MonoLMF
0x0028B70C	0x0000000D	[ 32] literal string: previous_lmf
0x0028B719	0x00000020	[ 32] literal string: MonoMethodRuntimeGenericContext
0x0028B739	0x0000000D	[ 32] literal string: class_vtable
0x0028B746	0x0000000F	[ 32] literal string: MonoJitTlsData
0x0028B755	0x00000004	[ 32] literal string: lmf
0x0028B759	0x00000010	[ 32] literal string: class_cast_from
0x0028B769	0x0000000E	[ 32] literal string: class_cast_to
0x0028B777	0x0000001D	[ 32] literal string: handler_block_return_address
0x0028B794	0x0000001F	[ 32] literal string: MonoGSharedVtMethodRuntimeInfo
0x0028B7B3	0x0000000C	[ 32] literal string: locals_size
0x0028B7BF	0x00000008	[ 32] literal string: entries
0x0028B7C7	0x00000011	[ 32] literal string: MonoContinuation
0x0028B7D8	0x00000010	[ 32] literal string: stack_used_size
0x0028B7E8	0x0000000C	[ 32] literal string: saved_stack
0x0028B7F4	0x0000000A	[ 32] literal string: return_sp
0x0028B7FE	0x0000000A	[ 32] literal string: return_ip
0x0028B808	0x0000000C	[ 32] literal string: MonoContext
0x0028B814	0x00000004	[ 32] literal string: eax
0x0028B818	0x00000004	[ 32] literal string: ebx
0x0028B81C	0x00000004	[ 32] literal string: ecx
0x0028B820	0x00000004	[ 32] literal string: edx
0x0028B824	0x00000004	[ 32] literal string: edi
0x0028B828	0x00000004	[ 32] literal string: esi
0x0028B82C	0x00000004	[ 32] literal string: esp
0x0028B830	0x00000004	[ 32] literal string: ebp
0x0028B834	0x00000004	[ 32] literal string: eip
0x0028B838	0x00000009	[ 32] literal string: lmf_addr
0x0028B841	0x00000016	[ 32] literal string: MonoDelegateTrampInfo
0x0028B857	0x0000000C	[ 32] literal string: invoke_impl
0x0028B863	0x0000000B	[ 32] literal string: method_ptr
0x0028B86E	0x0000001C	[ 32] literal string: #endif //disable jit check

0x0028B88A	0x00000020	[ 32] literal string: #endif //cross compiler checks

0x0028B8AA	0x00000013	[ 32] literal string: #endif //gc check

0x0028B8BD	0x00000013	[ 32] literal string: #endif //os check

0x0028B8D0	0x00000015	[ 32] literal string: #endif //arch check

0x0028B8E5	0x0000002C	[ 32] literal string: #endif //USED_CROSS_COMPILER_OFFSETS check

0x0028B911	0x00000043	[ 33] literal string: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
0x0028B954	0x0000001E	[ 33] literal string: /tmp/mono-gdb-commands.XXXXXX
0x0028B972	0x00000005	[ 33] literal string: lldb
0x0028B977	0x0000001A	[ 33] literal string: process attach --pid %ld

0x0028B991	0x0000000D	[ 33] literal string: thread list

0x0028B99E	0x00000016	[ 33] literal string: thread backtrace all

0x0028B9B4	0x00000008	[ 33] literal string: detach

0x0028B9BC	0x00000006	[ 33] literal string: quit

0x0028B9C2	0x00000009	[ 33] literal string: --source
0x0028B9CB	0x0000000C	[ 33] literal string: attach %ld

0x0028B9D7	0x0000000E	[ 33] literal string: info threads

0x0028B9E5	0x00000015	[ 33] literal string: thread apply all bt

0x0028B9FA	0x00000007	[ 33] literal string: -batch
0x0028BA01	0x00000003	[ 33] literal string: -x
0x0028BA04	0x0000002C	[ 33] literal string: ../../../../../mono/mono/mini/mini-darwin.c
0x0028BA30	0x00000010	[ 34] literal string: restore_context
0x0028BA40	0x0000000C	[ 34] literal string: call_filter
0x0028BA4C	0x00000010	[ 34] literal string: throw_exception
0x0028BA5C	0x00000012	[ 34] literal string: rethrow_exception
0x0028BA6E	0x00000030	[ 34] literal string: ../../../../../mono/mono/mini/mini-exceptions.c
0x0028BA9E	0x00000015	[ 34] literal string: throw_exception_func
0x0028BAB3	0x00000017	[ 34] literal string: rethrow_exception_func
0x0028BACA	0x00000011	[ 34] literal string: call_filter_func
0x0028BADB	0x00000015	[ 34] literal string: restore_context_func
0x0028BAF0	0x00000017	[ 34] literal string: throw_corlib_exception
0x0028BB07	0x00000012	[ 34] literal string: in (unmanaged) %s
0x0028BB19	0x00000013	[ 34] literal string: in (unmanaged) %p

0x0028BB2C	0x00000004	[ 34] literal string: %s

0x0028BB30	0x00000026	[ 34] literal string: !mono_thread_info_is_async_context ()
0x0028BB56	0x0000000D	[ 34] literal string: state->valid
0x0028BB63	0x00000007	[ 34] literal string: staddr
0x0028BB6A	0x0000004F	[ 34] literal string: (guint8*)&sa >= (guint8*)tls->stack_ovf_guard_base + tls->stack_ovf_guard_size
0x0028BBB9	0x00000023	[ 34] literal string: gaddr == tls->stack_ovf_guard_base
0x0028BBDC	0x00000012	[ 34] literal string: tls->signal_stack
0x0028BBEE	0x0000001D	[ 34] literal string: sigaltstack (&sa, NULL) == 0
0x0028BC0B	0x00000009	[ 34] literal string: err == 0
0x0028BC14	0x00000008	[ 34] literal string: mono-rt
0x0028BC1C	0x00000035	[ 34] literal string: Stack overflow in unmanaged: IP: %p, fault addr: %p

0x0028BC51	0x00000028	[ 34] literal string: Stack overflow: IP: %p, fault addr: %p

0x0028BC79	0x0000000D	[ 34] literal string: Stacktrace:

0x0028BC86	0x00000008	[ 34] literal string: SIGSEGV
0x0028BC8E	0x00000008	[ 34] literal string: SIGABRT
0x0028BC96	0x00000021	[ 34] literal string: Received SIGSEGV, suspending...

0x0028BCB7	0x0000000E	[ 34] literal string: Stacktrace:


0x0028BCC5	0x00000016	[ 34] literal string: 
Native stacktrace:


0x0028BCDB	0x00000005	[ 34] literal string: 	%s

0x0028BCE0	0x00000018	[ 34] literal string: 
Debug info from gdb:


0x0028BCF8	0x00000120	[ 34] literal string: 
=================================================================
Got a %s while executing native code. This usually indicates
a fatal error in the mono runtime or one of the native libraries 
used by your application.
=================================================================


0x0028BE18	0x00000025	[ 34] literal string: sigaction (SIGABRT, &sa, NULL) != -1
0x0028BE3D	0x00000047	[ 34] literal string: Nested exception detected.
Original Exception: %s
Nested exception:%s

0x0028BE84	0x00000036	[ 34] literal string: Nested exception trying to figure out what went wrong
0x0028BEBA	0x00000027	[ 34] literal string: [ERROR] FATAL UNHANDLED EXCEPTION: %s

0x0028BEE1	0x00000006	[ 34] literal string: 
"%s"
0x0028BEE7	0x00000017	[ 34] literal string: 
"<threadpool thread>"
0x0028BEFE	0x00000018	[ 34] literal string:  tid=0x%p this=0x%p %s

0x0028BF16	0x00000009	[ 34] literal string:   <...>

0x0028BF1F	0x0000000C	[ 34] literal string: ctx != NULL
0x0028BF2B	0x00000035	[ 34] literal string: Object reference not set to an instance of an object
0x0028BF60	0x00000021	[ 34] literal string: Exception thrown, suspending...

0x0028BF81	0x00000031	[ 34] literal string: Unable to cast object of type '%s' to type '%s'.
0x0028BFB2	0x0000001B	[ 34] literal string: ArrayTypeMismatchException
0x0028BFCD	0x00000049	[ 34] literal string: Source array of type '%s' cannot be cast to destination array type '%s'.
0x0028C016	0x00000016	[ 34] literal string: jit_tls->end_of_stack
0x0028C02C	0x00000014	[ 34] literal string: jit_tls->abort_func
0x0028C040	0x00000015	[ 34] literal string: OutOfMemoryException
0x0028C055	0x00000017	[ 34] literal string: StackOverflowException
0x0028C06C	0x00000020	[ 34] literal string: (No exception message for: %s)

0x0028C08C	0x00000032	[ 34] literal string: (System.Exception.Message property not available)
0x0028C0BE	0x00000025	[ 34] literal string: [%p:] EXCEPTION handling: %s.%s: %s

0x0028C0E3	0x00000024	[ 34] literal string: Unhandled exception, suspending...

0x0028C107	0x00000021	[ 34] literal string: frame.type == FRAME_TYPE_MANAGED
0x0028C128	0x00000065	[ 34] literal string: ji == mini_jit_info_table_find (domain, MONO_CONTEXT_GET_IP (&jit_tls->handler_block_context), NULL)
0x0028C18D	0x0000002B	[ 34] literal string: EXCEPTION: catch found at clause %d of %s

0x0028C1B8	0x00000022	[ 34] literal string: EXCEPTION: fault clause %d of %s

0x0028C1DA	0x00000024	[ 34] literal string: EXCEPTION: finally clause %d of %s

0x0028C1FE	0x00000020	[ 34] literal string: System.Runtime.CompilerServices
0x0028C21E	0x0000001E	[ 34] literal string: RuntimeCompatibilityAttribute
0x0028C23C	0x0000000A	[ 34] literal string: tmp_klass
0x0028C246	0x00000017	[ 34] literal string: WrapNonExceptionThrows
0x0028C25D	0x00000029	[ 34] literal string: !strcmp (name, "WrapNonExceptionThrows")
0x0028C286	0x0000000D	[ 34] literal string: generic_info
0x0028C293	0x00000014	[ 34] literal string: context.method_inst
0x0028C2A7	0x0000006A	[ 34] literal string: mono_class_has_parent_and_ignore_generics (class->generic_class->container_class, method_container_class)
0x0028C311	0x0000004A	[ 34] literal string: mono_class_has_parent_and_ignore_generics (class, method_container_class)
0x0028C35B	0x00000077	[ 34] literal string: A native frame was found while unwinding the stack after an exception.
The native frame called the managed method:
%s

0x0028C3D2	0x00000019	[ 34] literal string: clause < ji->num_clauses
0x0028C3EB	0x0000000E	[ 34] literal string: i < gi->nlocs
0x0028C3F9	0x0000000A	[ 34] literal string: start_ctx
0x0028C403	0x00000007	[ 34] literal string: domain
0x0028C40A	0x00000008	[ 34] literal string: jit_tls
0x0028C412	0x00000023	[ 34] literal string: unwind_options == MONO_UNWIND_NONE
0x0028C435	0x00000035	[ 36] literal string: ../../../../../mono/mono/mini/mini-generic-sharing.c
0x0028C46A	0x0000001A	[ 36] literal string: GSHAREDVT arg trampolines
0x0028C484	0x0000000C	[ 36] literal string: STATIC_DATA
0x0028C490	0x00000006	[ 36] literal string: KLASS
0x0028C496	0x00000007	[ 36] literal string: VTABLE
0x0028C49D	0x00000005	[ 36] literal string: TYPE
0x0028C4A2	0x00000010	[ 36] literal string: REFLECTION_TYPE
0x0028C4B2	0x00000007	[ 36] literal string: METHOD
0x0028C4B9	0x0000000F	[ 36] literal string: GSHAREDVT_INFO
0x0028C4C8	0x00000014	[ 36] literal string: GENERIC_METHOD_CODE
0x0028C4DC	0x0000000C	[ 36] literal string: CLASS_FIELD
0x0028C4E8	0x0000000D	[ 36] literal string: METHOD_RGCTX
0x0028C4F5	0x0000000F	[ 36] literal string: METHOD_CONTEXT
0x0028C504	0x0000001B	[ 36] literal string: REMOTING_INVOKE_WITH_CHECK
0x0028C51F	0x00000015	[ 36] literal string: METHOD_DELEGATE_CODE
0x0028C534	0x0000000B	[ 36] literal string: CAST_CACHE
0x0028C53F	0x00000013	[ 36] literal string: ARRAY_ELEMENT_SIZE
0x0028C552	0x0000000B	[ 36] literal string: VALUE_SIZE
0x0028C55D	0x0000000F	[ 36] literal string: CLASS_BOX_TYPE
0x0028C56C	0x0000000D	[ 36] literal string: FIELD_OFFSET
0x0028C579	0x00000020	[ 36] literal string: METHOD_GSHAREDVT_OUT_TRAMPOLINE
0x0028C599	0x00000025	[ 36] literal string: METHOD_GSHAREDVT_OUT_TRAMPOLINE_VIRT
0x0028C5BE	0x00000023	[ 36] literal string: SIG_GSHAREDVT_OUT_TRAMPOLINE_CALLI
0x0028C5E1	0x00000007	[ 36] literal string: MEMCPY
0x0028C5E8	0x00000006	[ 36] literal string: BZERO
0x0028C5EE	0x00000013	[ 36] literal string: NULLABLE_CLASS_BOX
0x0028C601	0x00000015	[ 36] literal string: NULLABLE_CLASS_UNBOX
0x0028C616	0x0000001A	[ 36] literal string: <UNKNOWN RGCTX INFO TYPE>
0x0028C630	0x00000023	[ 36] literal string: method->is_inflated && method_inst
0x0028C653	0x0000000E	[ 36] literal string: type_argc > 0
0x0028C661	0x00000011	[ 36] literal string: n >= 0 && n < 30
0x0028C672	0x00000012	[ 36] literal string: RGCTX num alloced
0x0028C684	0x00000028	[ 36] literal string: !class_vtable->klass->generic_container
0x0028C6AC	0x00000016	[ 36] literal string: !method_inst->is_open
0x0028C6C2	0x0000002C	[ 36] literal string: context->class_inst || context->method_inst
0x0028C6EE	0x00000014	[ 36] literal string: inflated->declaring
0x0028C702	0x00000072	[ 36] literal string: method->klass->generic_class->container_class && method->klass->generic_class->container_class->generic_container
0x0028C774	0x0000001E	[ 36] literal string: !method->klass->generic_class
0x0028C792	0x00000038	[ 36] literal string: object_context.class_inst || object_context.method_inst
0x0028C7CA	0x00000015	[ 36] literal string: MONO_GENERIC_SHARING
0x0028C7DF	0x00000007	[ 36] literal string: corlib
0x0028C7E6	0x0000000C	[ 36] literal string: collections
0x0028C7F2	0x00000004	[ 36] literal string: all
0x0028C7F6	0x00000025	[ 36] literal string: Unknown generic sharing option `%s'.
0x0028C81B	0x0000001B	[ 36] literal string: System.Collections.Generic
0x0028C836	0x00000009	[ 36] literal string: jit_info
0x0028C83F	0x00000019	[ 36] literal string: class->generic_container
0x0028C858	0x00000019	[ 36] literal string: subclass->image == image
0x0028C871	0x00000007	[ 36] literal string: !inst2
0x0028C878	0x00000006	[ 36] literal string: inst2
0x0028C87E	0x0000000A	[ 36] literal string: arg_class
0x0028C888	0x00000022	[ 36] literal string: method->method.method.is_inflated
0x0028C8AA	0x0000001C	[ 36] literal string: method->context.method_inst
0x0028C8C6	0x00000007	[ 36] literal string: caller
0x0028C8CD	0x0000000A	[ 36] literal string: caller_ji
0x0028C8D7	0x00000004	[ 36] literal string: gji
0x0028C8DB	0x0000000B	[ 36] literal string: callee_gji
0x0028C8E6	0x00000012	[ 36] literal string: memcpy_aligned_%d
0x0028C8F8	0x00000002	[ 36] literal string: m
0x0028C8FA	0x00000006	[ 36] literal string: bzero
0x0028C900	0x00000011	[ 36] literal string: bzero_aligned_%d
0x0028C911	0x00000004	[ 36] literal string: Box
0x0028C915	0x00000006	[ 36] literal string: Unbox
0x0028C91B	0x00000005	[ 36] literal string: data
0x0028C920	0x00000016	[ 36] literal string: !method->wrapper_type
0x0028C936	0x00000029	[ 36] literal string: inflated_method->klass == inflated_class
0x0028C95F	0x00000017	[ 36] literal string: inflated_class->fields
0x0028C976	0x00000033	[ 36] literal string: (temporary && do_free) || (!temporary && !do_free)
0x0028C9A9	0x00000004	[ 36] literal string: oti
0x0028C9AD	0x0000000A	[ 36] literal string: slot >= 0
0x0028C9B7	0x0000000F	[ 36] literal string: type_argc >= 0
0x0028C9C6	0x0000000F	[ 36] literal string: rgctx_template
0x0028C9D5	0x00000016	[ 36] literal string: RGCTX oti num markers
0x0028C9EB	0x00000013	[ 36] literal string: RGCTX oti num data
0x0028C9FE	0x0000000E	[ 36] literal string: !(*oti)->data
0x0028CA0C	0x00000005	[ 36] literal string: list
0x0028CA11	0x00000017	[ 36] literal string: RGCTX oti num allocted
0x0028CA28	0x00000019	[ 36] literal string: RGCTX oti bytes allocted
0x0028CA41	0x0000001C	[ 36] literal string: RGCTX template num allocted
0x0028CA5D	0x0000001E	[ 36] literal string: RGCTX template bytes allocted
0x0028CA7B	0x00000019	[ 36] literal string: RGCTX num arrays alloced
0x0028CA94	0x00000014	[ 36] literal string: RGCTX bytes alloced
0x0028CAA8	0x0000001A	[ 36] literal string: MRGCTX num arrays alloced
0x0028CAC2	0x00000015	[ 36] literal string: MRGCTX bytes alloced
0x0028CAD7	0x00000016	[ 36] literal string: RGCTX max slot number
0x0028CAED	0x00000012	[ 36] literal string: subclass_template
0x0028CAFF	0x00000012	[ 36] literal string: subclass_oti.data
0x0028CB11	0x0000002B	[ 36] literal string: gclass->container_class->generic_container
0x0028CB3C	0x00000005	[ 37] literal string: nint
0x0028CB41	0x00000007	[ 37] literal string: nfloat
0x0028CB48	0x0000000C	[ 37] literal string: Xamarin.iOS
0x0028CB54	0x0000000C	[ 37] literal string: Xamarin.Mac
0x0028CB60	0x00000006	[ 37] literal string: nuint
0x0028CB66	0x0000000C	[ 37] literal string: op_Implicit
0x0028CB72	0x0000000C	[ 37] literal string: op_Explicit
0x0028CB7E	0x00000055	[ 37] literal string: ../../../../../mono/mono/mini/../../../mono-extensions/mono/mini/mini-native-types.c
0x0028CBD3	0x0000000D	[ 37] literal string: op_Increment
0x0028CBE0	0x0000000D	[ 37] literal string: op_Decrement
0x0028CBED	0x00000028	[ 37] literal string: int_unnop [i].op_table [info->op_index]
0x0028CC15	0x00000028	[ 37] literal string: int_cmpop [i].op_table [info->op_index]
0x0028CC3D	0x0000000E	[ 37] literal string: op_Inequality
0x0028CC4B	0x0000000C	[ 37] literal string: op_Equality
0x0028CC57	0x0000000F	[ 37] literal string: op_GreaterThan
0x0028CC66	0x00000016	[ 37] literal string: op_GreaterThanOrEqual
0x0028CC7C	0x0000000C	[ 37] literal string: op_LessThan
0x0028CC88	0x00000013	[ 37] literal string: op_LessThanOrEqual
0x0028CC9B	0x0000000D	[ 37] literal string: op_UnaryPlus
0x0028CCA8	0x00000011	[ 37] literal string: op_UnaryNegation
0x0028CCB9	0x00000012	[ 37] literal string: op_OnesComplement
0x0028CCCB	0x00000017	[ 37] literal string: Unknown stack type %x

0x0028CCE2	0x0000000C	[ 37] literal string: op_Addition
0x0028CCEE	0x0000000F	[ 37] literal string: op_Subtraction
0x0028CCFD	0x0000000C	[ 37] literal string: op_Multiply
0x0028CD09	0x0000000C	[ 37] literal string: op_Division
0x0028CD15	0x0000000B	[ 37] literal string: op_Modulus
0x0028CD20	0x0000000E	[ 37] literal string: op_BitwiseAnd
0x0028CD2E	0x0000000D	[ 37] literal string: op_BitwiseOr
0x0028CD3B	0x0000000F	[ 37] literal string: op_ExclusiveOr
0x0028CD4A	0x0000000D	[ 37] literal string: op_LeftShift
0x0028CD57	0x0000000E	[ 37] literal string: op_RightShift
0x0028CD6D	0x0000002B	[ 38] literal string: ../../../../../mono/mono/mini/mini-posix.c
0x0028CDA6	0x0000002C	[ 38] literal string: sigaction (signo, saved_action, NULL) != -1
0x0028CDD2	0x0000002B	[ 38] literal string: sigaction (signo, &sa, &previous_sa) != -1
0x0028CDFD	0x00000029	[ 38] literal string: Saving old signal handler for signal %d.
0x0028CE30	0x00000012	[ 38] literal string: Full thread dump:
0x0028CE42	0x00000031	[ 39] literal string: ../../../../../mono/mono/mini/mini-trampolines.c
0x0028CE73	0x0000000F	[ 39] literal string: m->is_inflated
0x0028CE82	0x0000000A	[ 39] literal string: plt_entry
0x0028CE8C	0x00000004	[ 39] literal string: res
0x0028CE90	0x0000000F	[ 39] literal string: !mono_aot_only
0x0028CE9F	0x00000015	[ 39] literal string: Calls to trampolines
0x0028CEB4	0x00000010	[ 39] literal string: JIT trampolines
0x0028CEC4	0x00000012	[ 39] literal string: Unbox trampolines
0x0028CED6	0x00000019	[ 39] literal string: Static rgctx trampolines
0x0028CEEF	0x00000022	[ 39] literal string: mono_trampoline_code [tramp_type]
0x0028CF11	0x00000022	[ 39] literal string: !vtable->klass->generic_container
0x0028CF33	0x0000001E	[ 39] literal string: generic_class_init_trampoline
0x0028CF51	0x0000000A	[ 39] literal string: code_size
0x0028CF5B	0x00000007	[ 39] literal string: invoke
0x0028CF62	0x00000021	[ 39] literal string: RGCTX num lazy fetch trampolines
0x0028CF83	0x00000019	[ 39] literal string: monitor_enter_trampoline
0x0028CF9C	0x0000001C	[ 39] literal string: monitor_enter_v4_trampoline
0x0028CFB8	0x00000018	[ 39] literal string: monitor_exit_trampoline
0x0028CFD0	0x00000016	[ 39] literal string: generic_trampoline_%s
0x0028CFE6	0x0000001D	[ 39] literal string: rgctx_fetch_trampoline_%s_%d
0x0028D003	0x00000007	[ 39] literal string: mrgctx
0x0028D00A	0x00000006	[ 39] literal string: rgctx
0x0028D010	0x00000020	[ 39] literal string: nullified_class_init_trampoline
0x0028D030	0x00000004	[ 39] literal string: jit
0x0028D034	0x00000005	[ 39] literal string: jump
0x0028D039	0x0000000B	[ 39] literal string: class_init
0x0028D044	0x00000013	[ 39] literal string: generic_class_init
0x0028D057	0x00000011	[ 39] literal string: rgctx_lazy_fetch
0x0028D068	0x00000004	[ 39] literal string: aot
0x0028D06C	0x00000008	[ 39] literal string: aot_plt
0x0028D074	0x00000009	[ 39] literal string: delegate
0x0028D07D	0x00000013	[ 39] literal string: restore_stack_prot
0x0028D090	0x00000019	[ 39] literal string: generic_virtual_remoting
0x0028D0A9	0x0000000E	[ 39] literal string: monitor_enter
0x0028D0B7	0x00000011	[ 39] literal string: monitor_enter_v4
0x0028D0C8	0x0000000D	[ 39] literal string: monitor_exit
0x0028D0D5	0x00000006	[ 39] literal string: vcall
0x0028D0DB	0x00000014	[ 39] literal string: handler_block_guard
0x0028D0EF	0x00000052	[ 39] literal string: Invalid internal state, resuming abort after handler block but no resume ip found
0x0028D141	0x00000005	[ 39] literal string: this
0x0028D146	0x00000018	[ 39] literal string: RGCTX unmanaged lookups
0x0028D15E	0x0000000C	[ 39] literal string: vtable_slot
0x0028D16A	0x0000001D	[ 39] literal string: !m->klass->generic_container
0x0028D187	0x0000001D	[ 39] literal string: generic_virtual->is_inflated
0x0028D1A4	0x00000025	[ 39] literal string: this_argument->vtable->klass->inited
0x0028D1C9	0x00000015	[ 39] literal string: vtable_slot || klass
0x0028D1DE	0x0000000E	[ 39] literal string: actual_method
0x0028D1EC	0x0000001E	[ 39] literal string: actual_method->klass == klass
0x0028D20A	0x00000016	[ 39] literal string: *vtable_slot_to_patch
0x0028D220	0x00000023	[ 39] literal string: %s doesn't implement interface %s

0x0028D243	0x00000019	[ 39] literal string: imt_slot < MONO_IMT_SIZE
0x0028D25C	0x0000000B	[ 39] literal string: slot != -1
0x0028D267	0x00000005	[ 40] literal string: %eax
0x0028D26C	0x00000005	[ 40] literal string: %ebx
0x0028D271	0x00000005	[ 40] literal string: %ecx
0x0028D276	0x00000005	[ 40] literal string: %edx
0x0028D27B	0x00000005	[ 40] literal string: %esp
0x0028D280	0x00000005	[ 40] literal string: %ebp
0x0028D285	0x00000005	[ 40] literal string: %edi
0x0028D28A	0x00000005	[ 40] literal string: %esi
0x0028D28F	0x00000008	[ 40] literal string: unknown
0x0028D297	0x00000005	[ 40] literal string: %fr0
0x0028D29C	0x00000005	[ 40] literal string: %fr1
0x0028D2A1	0x00000005	[ 40] literal string: %fr2
0x0028D2A6	0x00000005	[ 40] literal string: %fr3
0x0028D2AB	0x00000005	[ 40] literal string: %fr4
0x0028D2B0	0x00000005	[ 40] literal string: %fr5
0x0028D2B5	0x00000005	[ 40] literal string: %fr6
0x0028D2BA	0x00000005	[ 40] literal string: %fr7
0x0028D2BF	0x00000006	[ 40] literal string: %xmm0
0x0028D2C5	0x00000006	[ 40] literal string: %xmm1
0x0028D2CB	0x00000006	[ 40] literal string: %xmm2
0x0028D2D1	0x00000006	[ 40] literal string: %xmm3
0x0028D2D7	0x00000006	[ 40] literal string: %xmm4
0x0028D2DD	0x00000006	[ 40] literal string: %xmm5
0x0028D2E3	0x00000006	[ 40] literal string: %xmm6
0x0028D2E9	0x00000006	[ 40] literal string: %xmm7
0x0028D2EF	0x0000000F	[ 40] literal string: mono_x86_patch
0x0028D2FE	0x00000029	[ 40] literal string: ../../../../../mono/mono/mini/mini-x86.c
0x0028D327	0x00000019	[ 40] literal string: mono_x86_throw_exception
0x0028D340	0x00000020	[ 40] literal string: mono_x86_throw_corlib_exception
0x0028D360	0x00000021	[ 40] literal string: MONO_VARINFO (cfg, i)->reg == -1
0x0028D381	0x0000000E	[ 40] literal string: i == vmv->idx
0x0028D38F	0x0000001C	[ 40] literal string: Method %s stack is too big.
0x0028D3AB	0x0000000C	[ 40] literal string: vret_addr =
0x0028D3B7	0x00000028	[ 40] literal string: cinfo->sig_cookie.storage == ArgOnStack
0x0028D3DF	0x0000000F	[ 40] literal string: in->dreg != -1
0x0028D3EE	0x0000000A	[ 40] literal string: in->klass
0x0028D3F8	0x0000001D	[ 40] literal string: mono_arch_output_basic_block
0x0028D415	0x00000028	[ 40] literal string: Basic block %d starting at offset 0x%x

0x0028D43D	0x00000012	[ 40] literal string: !cfg->compile_aot
0x0028D44F	0x00000022	[ 40] literal string: 0 || X86_IS_BYTE_REG (ins->sreg1)
0x0028D471	0x00000016	[ 40] literal string: ins->sreg1 == X86_EAX
0x0028D487	0x00000015	[ 40] literal string: ins->dreg == X86_EAX
0x0028D49C	0x0000000B	[ 40] literal string: power >= 0
0x0028D4A7	0x00000016	[ 40] literal string: ins->sreg2 == X86_ECX
0x0028D4BD	0x00000012	[ 40] literal string: OverflowException
0x0028D4CF	0x0000001F	[ 40] literal string: ins->dreg == MONO_ARCH_GOT_REG
0x0028D4EE	0x00000017	[ 40] literal string: !cfg->method->save_lmf
0x0028D505	0x0000001C	[ 40] literal string: X86_IS_BYTE_REG (ins->dreg)
0x0028D521	0x00000021	[ 40] literal string: 0 || X86_IS_BYTE_REG (ins->dreg)
0x0028D542	0x00000018	[ 40] literal string: ins->dreg == ins->sreg1
0x0028D55A	0x00000019	[ 40] literal string: cfg->opt & MONO_OPT_CMOV
0x0028D573	0x00000014	[ 40] literal string: ArithmeticException
0x0028D587	0x00000017	[ 40] literal string: cfg->has_atomic_add_i4
0x0028D59E	0x0000001C	[ 40] literal string: cfg->has_atomic_exchange_i4
0x0028D5BA	0x00000016	[ 40] literal string: ins->sreg3 == X86_EAX
0x0028D5D0	0x00000016	[ 40] literal string: ins->sreg1 != X86_EAX
0x0028D5E6	0x00000019	[ 40] literal string: ins->sreg1 != ins->sreg2
0x0028D5FF	0x00000027	[ 40] literal string: ins->inst_c0 >= 0 && ins->inst_c0 <= 7
0x0028D626	0x0000002A	[ 40] literal string: ins->inst_c0 >= 0 && ins->inst_c0 <= 0xFF
0x0028D650	0x00000029	[ 40] literal string: ins->inst_c0 >= 0 && ins->inst_c0 <= 0x3
0x0028D679	0x0000002E	[ 40] literal string: CONVERTING a OP_INSERTX_R8_SLOW %d offset %x

0x0028D6A7	0x00000010	[ 40] literal string: R%d START=0x%x

0x0028D6B7	0x0000000E	[ 40] literal string: R%d END=0x%x

0x0028D6C5	0x00000013	[ 40] literal string: unknown opcode %s

0x0028D6D8	0x00000049	[ 40] literal string: wrong maximal instruction length of instruction %s (expected %d, got %d)
0x0028D721	0x00000015	[ 40] literal string: mono_arch_patch_code
0x0028D736	0x00000052	[ 40] literal string: cfg->rgctx_var->opcode == OP_REGOFFSET && cfg->rgctx_var->inst_basereg == X86_EBP
0x0028D788	0x00000025	[ 40] literal string: Argument %d assigned to register %s

0x0028D7AD	0x0000001F	[ 40] literal string: cfg->code_len < cfg->code_size
0x0028D7CC	0x00000016	[ 40] literal string: mono_arch_emit_epilog
0x0028D7E2	0x0000001A	[ 40] literal string: mono_arch_emit_exceptions
0x0028D7FC	0x0000000A	[ 40] literal string: exc_class
0x0028D806	0x0000000C	[ 40] literal string: MONO_NO_TLS
0x0028D812	0x0000001A	[ 40] literal string: mono_arch_build_imt_thunk
0x0028D82C	0x00000015	[ 40] literal string: code - start <= size
0x0028D841	0x00000004	[ 40] literal string: Sin
0x0028D845	0x00000004	[ 40] literal string: Cos
0x0028D849	0x00000004	[ 40] literal string: Tan
0x0028D84D	0x00000005	[ 40] literal string: Atan
0x0028D852	0x00000005	[ 40] literal string: Sqrt
0x0028D857	0x00000004	[ 40] literal string: Abs
0x0028D85B	0x00000006	[ 40] literal string: Round
0x0028D861	0x00000004	[ 40] literal string: Min
0x0028D865	0x00000004	[ 40] literal string: Max
0x0028D869	0x00000020	[ 40] literal string: delegate_invoke_impl_has_target
0x0028D889	0x0000001F	[ 40] literal string: delegate_invoke_impl_target_%d
0x0028D8A8	0x00000011	[ 40] literal string: code [0] == 0x90
0x0028D8B9	0x0000001E	[ 40] literal string: (code - start) < code_reserve
0x0028D8D7	0x0000001C	[ 40] literal string: 0 || X86_IS_BYTE_REG (dreg)
0x0028D8F3	0x00000016	[ 40] literal string: mono_emit_stack_alloc
0x0028D909	0x0000000A	[ 40] literal string: emit_call
0x0028D913	0x0000002F	[ 40] literal string: mini_is_gsharedvt_type_gsctx (gsctx, ret_type)
0x0028D942	0x00000022	[ 40] literal string: Can't handle as return value 0x%x
0x0028D964	0x0000001D	[ 40] literal string: ainfo->storage == ArgOnStack
0x0028D981	0x0000002C	[ 40] literal string: mini_is_gsharedvt_type_gsctx (gsctx, ptype)
0x0028D9AD	0x00000015	[ 40] literal string: unexpected type 0x%x
0x0028D9C2	0x0000002B	[ 40] literal string: !param_regs || param_regs[*gr] == X86_NREG
0x0028D9ED	0x0000000A	[ 40] literal string: size <= 4
0x0028D9F7	0x00000022	[ 41] literal string: IP %p is a JIT trampoline for %s

0x0028DA19	0x0000002D	[ 41] literal string: IP %p is at offset 0x%x of trampoline '%s'.

0x0028DA46	0x00000011	[ 41] literal string: No method at %p

0x0028DA57	0x0000000B	[ 41] literal string: gsharedvt 
0x0028DA62	0x00000009	[ 41] literal string: gshared 
0x0028DA6B	0x0000003D	[ 41] literal string: IP %p at offset 0x%x of %smethod %s (%p %p)[domain %p - %s]

0x0028DAA8	0x00000007	[ 41] literal string: %s:%d

0x0028DAAF	0x0000000F	[ 41] literal string: InvokeInDomain
0x0028DABE	0x00000054	[ 41] literal string: Attempting to allocate from the global code manager while running with --aot-only.

0x0028DB12	0x0000001C	[ 41] literal string: CFA: [%x] def_cfa: %s+0x%x

0x0028DB2E	0x0000001B	[ 41] literal string: CFA: [%x] def_cfa_reg: %s

0x0028DB49	0x00000020	[ 41] literal string: CFA: [%x] def_cfa_offset: 0x%x

0x0028DB69	0x00000022	[ 41] literal string: CFA: [%x] offset: %s at cfa-0x%x

0x0028DB8B	0x00000006	[ 41] literal string: COUNT
0x0028DB91	0x00000025	[ 41] literal string: ../../../../../mono/mono/mini/mini.c
0x0028DBB6	0x0000001B	[ 41] literal string: pos == from->out_count - 1
0x0028DBD1	0x00000018	[ 41] literal string: pos == to->in_count - 1
0x0028DBE9	0x00000038	[ 41] literal string: clause_index >= 0 && clause_index < header->num_clauses
0x0028DC21	0x0000002D	[ 41] literal string: unknown type 0x%02x in type_to_store_membase
0x0028DC4E	0x0000001D	[ 41] literal string: cfg->generic_sharing_context
0x0028DC6B	0x0000002C	[ 41] literal string: unknown type 0x%02x in type_to_load_membase
0x0028DC97	0x0000001E	[ 41] literal string:   Create LVAR R%d (R%d, R%d)

0x0028DCB5	0x00000022	[ 41] literal string: created temp %d (R%d) of type %s

0x0028DCD7	0x00000014	[ 41] literal string: ves_array_new_va_%d
0x0028DCEB	0x0000000E	[ 41] literal string: nvtypes < 256
0x0028DCF9	0x00000021	[ 41] literal string: opcode >= 0 && opcode <= OP_LAST
0x0028DD1A	0x00000012	[ 41] literal string: ins->prev == prev
0x0028DD2C	0x00000014	[ 41] literal string: !bb->last_ins->next
0x0028DD40	0x0000000D	[ 41] literal string: offset != -1
0x0028DD4D	0x0000000F	[ 41] literal string: info type: %d

0x0028DD5C	0x00000002	[ 41] literal string: 

0x0028DD5E	0x0000002B	[ 41] literal string: unknown MONO_PATCH_INFO_INTERNAL_METHOD %s
0x0028DD89	0x0000002A	[ 41] literal string: unknown MONO_PATCH_INFO_JIT_ICALL_ADDR %s
0x0028DDB3	0x00000007	[ 41] literal string: target
0x0028DDBA	0x00000005	[ 41] literal string: addr
0x0028DDBF	0x00000022	[ 41] literal string: Could not patch ldtoken due to %s
0x0028DDE1	0x0000005E	[ 41] literal string: Unable to resolve pinvoke method '%s' Re-run with MONO_LOG_LEVEL=debug for more information.

0x0028DE3F	0x00000019	[ 41] literal string: Unregistered icall '%s'

0x0028DE58	0x0000000E	[ 41] literal string: mono_use_llvm
0x0028DE66	0x0000000C	[ 41] literal string: offset == 0
0x0028DE72	0x00000005	[ 41] literal string: code
0x0028DE77	0x00000035	[ 41] literal string: Method %s emitted at %p to %p (code length %d) [%s]

0x0028DEAC	0x0000000B	[ 41] literal string: is_generic
0x0028DEB7	0x00000017	[ 41] literal string: mono_error_ok (&error)
0x0028DECE	0x00000019	[ 41] literal string: !res->klass->is_inflated
0x0028DEE7	0x0000000C	[ 41] literal string: compile_aot
0x0028DEF3	0x00000012	[ 41] literal string: method_to_compile
0x0028DF05	0x0000001F	[ 41] literal string: method_to_compile->is_inflated
0x0028DF24	0x0000001C	[ 41] literal string: method == method_to_compile
0x0028DF40	0x00000014	[ 41] literal string: MONO_VERBOSE_METHOD
0x0028DF54	0x0000001C	[ 41] literal string: converting %s%s%smethod %s

0x0028DF70	0x0000003D	[ 41] literal string: cfg->exception_type != MONO_EXCEPTION_GENERIC_SHARING_FAILED
0x0028DFAD	0x00000020	[ 41] literal string: found unreachable code in BB%d

0x0028DFCD	0x00000017	[ 41] literal string: cfg->got_var_allocated
0x0028DFE4	0x00000010	[ 41] literal string: DUMP BLOCK %d:

0x0028DFF4	0x00000008	[ 41] literal string: %s::%s)
0x0028DFFC	0x00000003	[ 41] literal string: ex
0x0028DFFF	0x00000007	[ 41] literal string: method
0x0028E006	0x00000007	[ 41] literal string: SIGILL
0x0028E00D	0x00000016	[ 41] literal string: Interrupted (SIGINT).
0x0028E023	0x0000001E	[ 41] literal string: slot_index >= - MONO_IMT_SIZE
0x0028E041	0x00000009	[ 41] literal string: idx >= 0
0x0028E04A	0x0000000B	[ 41] literal string: MONO_DEBUG
0x0028E055	0x0000000C	[ 41] literal string: MONO_XDEBUG
0x0028E061	0x00000004	[ 41] literal string: gdb
0x0028E065	0x0000000B	[ 41] literal string: %s (%s %s)
0x0028E070	0x00000006	[ 41] literal string: 4.0.2
0x0028E076	0x00000023	[ 41] literal string: mono-4.0.0-branch-c5sr2-xi/7aa9041
0x0028E099	0x00000008	[ 41] literal string: %s (%s)
0x0028E0A1	0x00000011	[ 41] literal string: PRECOMPILE: %s.

0x0028E0B2	0x00000011	[ 41] literal string: Compiling %d %s

0x0028E0C3	0x00000009	[ 41] literal string: Finalize
0x0028E0CC	0x00000015	[ 41] literal string: Mono Jit statistics

0x0028E0E1	0x00000023	[ 41] literal string: Max code size ratio:    %.2f (%s)

0x0028E104	0x00000022	[ 41] literal string: Biggest method:         %ld (%s)

0x0028E126	0x0000001D	[ 41] literal string: Delegates created:      %ld

0x0028E143	0x0000001D	[ 41] literal string: Initialized classes:    %ld

0x0028E160	0x0000001D	[ 41] literal string: Used classes:           %ld

0x0028E17D	0x0000001D	[ 41] literal string: Generic vtables:        %ld

0x0028E19A	0x0000001D	[ 41] literal string: Methods:                %ld

0x0028E1B7	0x0000001D	[ 41] literal string: Static data size:       %ld

0x0028E1D4	0x0000001D	[ 41] literal string: VTable data size:       %ld

0x0028E1F1	0x0000001C	[ 41] literal string: Mscorlib mempool size:  %d

0x0028E20D	0x0000001E	[ 41] literal string: 
Initialized classes:    %ld

0x0028E22B	0x0000001D	[ 41] literal string: Inflated types:         %ld

0x0028E248	0x0000001F	[ 41] literal string: Generics virtual invokes: %ld

0x0028E267	0x0000001F	[ 41] literal string: Sharable generic methods: %ld

0x0028E286	0x00000021	[ 41] literal string: Unsharable generic methods: %ld

0x0028E2A7	0x0000001D	[ 41] literal string: Shared generic methods: %ld

0x0028E2C4	0x00000023	[ 41] literal string: Shared vtype generic methods: %ld

0x0028E2E7	0x0000001D	[ 41] literal string: IMT tables size:        %ld

0x0028E304	0x0000001D	[ 41] literal string: IMT number of tables:   %ld

0x0028E321	0x0000001D	[ 41] literal string: IMT number of methods:  %ld

0x0028E33E	0x0000001D	[ 41] literal string: IMT used slots:         %ld

0x0028E35B	0x0000001D	[ 41] literal string: IMT colliding slots:    %ld

0x0028E378	0x0000001D	[ 41] literal string: IMT max collisions:     %ld

0x0028E395	0x0000001D	[ 41] literal string: IMT methods at max col: %ld

0x0028E3B2	0x0000001D	[ 41] literal string: IMT thunks size:        %ld

0x0028E3CF	0x0000001D	[ 41] literal string: JIT info table inserts: %ld

0x0028E3EC	0x0000001D	[ 41] literal string: JIT info table removes: %ld

0x0028E409	0x0000001D	[ 41] literal string: JIT info table lookups: %ld

0x0028E426	0x0000001E	[ 41] literal string: 
Decl security check   : %ld

0x0028E444	0x0000001D	[ 41] literal string: LinkDemand (user)     : %ld

0x0028E461	0x0000001D	[ 41] literal string: LinkDemand (icall)    : %ld

0x0028E47E	0x0000001D	[ 41] literal string: LinkDemand (pinvoke)  : %ld

0x0028E49B	0x0000001D	[ 41] literal string: LinkDemand (aptc)     : %ld

0x0028E4B8	0x0000001D	[ 41] literal string: Demand (code gen)     : %ld

0x0028E4D5	0x0000002E	[ 41] literal string: System.Diagnostics.StackFrame::get_frame_info
0x0028E503	0x00000029	[ 41] literal string: System.Diagnostics.StackTrace::get_trace
0x0028E52C	0x0000001C	[ 41] literal string: System.Exception::get_trace
0x0028E548	0x00000031	[ 41] literal string: System.Security.SecurityFrame::_GetSecurityFrame
0x0028E579	0x00000031	[ 41] literal string: System.Security.SecurityFrame::_GetSecurityStack
0x0028E5AA	0x0000002C	[ 41] literal string: Mono.Runtime::mono_runtime_install_handlers
0x0028E5D6	0x0000001B	[ 41] literal string: mono_profiler_method_enter
0x0028E5F1	0x00000009	[ 41] literal string: void ptr
0x0028E5FA	0x0000001B	[ 41] literal string: mono_profiler_method_leave
0x0028E615	0x00000018	[ 41] literal string: mono_trace_enter_method
0x0028E62D	0x00000018	[ 41] literal string: mono_trace_leave_method
0x0028E645	0x00000012	[ 41] literal string: mono_get_lmf_addr
0x0028E657	0x00000017	[ 41] literal string: mono_jit_thread_attach
0x0028E66E	0x00000014	[ 41] literal string: mono_jit_set_domain
0x0028E682	0x00000010	[ 41] literal string: mono_domain_get
0x0028E692	0x0000001A	[ 41] literal string: mono_arch_throw_exception
0x0028E6AC	0x0000001C	[ 41] literal string: mono_arch_rethrow_exception
0x0028E6C8	0x00000021	[ 41] literal string: mono_arch_throw_corlib_exception
0x0028E6E9	0x00000025	[ 41] literal string: mono_thread_get_undeniable_exception
0x0028E70E	0x00000007	[ 41] literal string: object
0x0028E715	0x00000024	[ 41] literal string: mono_thread_interruption_checkpoint
0x0028E739	0x00000032	[ 41] literal string: mono_thread_force_interruption_checkpoint_noraise
0x0028E76B	0x0000002A	[ 41] literal string: mono_thread_force_interruption_checkpoint
0x0028E795	0x0000000C	[ 41] literal string: __emul_lmul
0x0028E7A1	0x0000000F	[ 41] literal string: long long long
0x0028E7B0	0x0000000C	[ 41] literal string: mono_llmult
0x0028E7BC	0x0000000C	[ 41] literal string: __emul_ldiv
0x0028E7C8	0x0000000B	[ 41] literal string: mono_lldiv
0x0028E7D3	0x0000000F	[ 41] literal string: __emul_ldiv_un
0x0028E7E2	0x0000000E	[ 41] literal string: mono_lldiv_un
0x0028E7F0	0x0000000C	[ 41] literal string: __emul_lrem
0x0028E7FC	0x0000000B	[ 41] literal string: mono_llrem
0x0028E807	0x0000000F	[ 41] literal string: __emul_lrem_un
0x0028E816	0x0000000E	[ 41] literal string: mono_llrem_un
0x0028E824	0x00000013	[ 41] literal string: __emul_lmul_ovf_un
0x0028E837	0x00000013	[ 41] literal string: mono_llmult_ovf_un
0x0028E84A	0x00000010	[ 41] literal string: __emul_lmul_ovf
0x0028E85A	0x00000010	[ 41] literal string: mono_llmult_ovf
0x0028E86A	0x00000013	[ 41] literal string: __emul_fconv_to_u8
0x0028E87D	0x0000000D	[ 41] literal string: ulong double
0x0028E88A	0x0000000E	[ 41] literal string: mono_fconv_u8
0x0028E898	0x00000013	[ 41] literal string: __emul_fconv_to_u4
0x0028E8AB	0x0000000E	[ 41] literal string: uint32 double
0x0028E8B9	0x0000000E	[ 41] literal string: mono_fconv_u4
0x0028E8C7	0x00000017	[ 41] literal string: __emul_fconv_to_ovf_i8
0x0028E8DE	0x0000000C	[ 41] literal string: long double
0x0028E8EA	0x00000012	[ 41] literal string: mono_fconv_ovf_i8
0x0028E8FC	0x00000017	[ 41] literal string: __emul_fconv_to_ovf_u8
0x0028E913	0x00000012	[ 41] literal string: mono_fconv_ovf_u8
0x0028E925	0x00000017	[ 41] literal string: __emul_rconv_to_ovf_i8
0x0028E93C	0x0000000B	[ 41] literal string: long float
0x0028E947	0x00000012	[ 41] literal string: mono_rconv_ovf_i8
0x0028E959	0x00000017	[ 41] literal string: __emul_rconv_to_ovf_u8
0x0028E970	0x0000000C	[ 41] literal string: ulong float
0x0028E97C	0x00000012	[ 41] literal string: mono_rconv_ovf_u8
0x0028E98E	0x00000012	[ 41] literal string: __emul_fconv_to_u
0x0028E9A0	0x00000013	[ 41] literal string: mono_delegate_ctor
0x0028E9B3	0x00000017	[ 41] literal string: void object object ptr
0x0028E9CA	0x00000020	[ 41] literal string: mono_class_static_field_address
0x0028E9EA	0x0000000C	[ 41] literal string: ptr ptr ptr
0x0028E9F6	0x00000015	[ 41] literal string: mono_ldtoken_wrapper
0x0028EA0B	0x00000010	[ 41] literal string: ptr ptr ptr ptr
0x0028EA1B	0x00000024	[ 41] literal string: mono_ldtoken_wrapper_generic_shared
0x0028EA3F	0x0000001D	[ 41] literal string: mono_get_special_static_data
0x0028EA5C	0x00000008	[ 41] literal string: ptr int
0x0028EA64	0x0000000B	[ 41] literal string: mono_ldstr
0x0028EA6F	0x00000015	[ 41] literal string: object ptr ptr int32
0x0028EA84	0x0000001D	[ 41] literal string: mono_helper_stelem_ref_check
0x0028EAA1	0x00000013	[ 41] literal string: void object object
0x0028EAB4	0x00000010	[ 41] literal string: mono_object_new
0x0028EAC4	0x0000000F	[ 41] literal string: object ptr ptr
0x0028EAD3	0x00000019	[ 41] literal string: mono_object_new_specific
0x0028EAEC	0x0000000B	[ 41] literal string: object ptr
0x0028EAF7	0x0000000F	[ 41] literal string: mono_array_new
0x0028EB06	0x00000018	[ 41] literal string: mono_array_new_specific
0x0028EB1E	0x00000011	[ 41] literal string: object ptr int32
0x0028EB2F	0x00000018	[ 41] literal string: mono_runtime_class_init
0x0028EB47	0x0000000B	[ 41] literal string: mono_ldftn
0x0028EB52	0x0000000E	[ 41] literal string: mono_ldvirtfn
0x0028EB60	0x0000000F	[ 41] literal string: ptr object ptr
0x0028EB6F	0x00000016	[ 41] literal string: mono_ldvirtfn_gshared
0x0028EB85	0x00000023	[ 41] literal string: mono_helper_compile_generic_method
0x0028EBA8	0x00000013	[ 41] literal string: ptr object ptr ptr
0x0028EBBB	0x00000012	[ 41] literal string: mono_helper_ldstr
0x0028EBCD	0x0000000F	[ 41] literal string: object ptr int
0x0028EBDC	0x0000001B	[ 41] literal string: mono_helper_ldstr_mscorlib
0x0028EBF7	0x0000000B	[ 41] literal string: object int
0x0028EC02	0x0000001C	[ 41] literal string: mono_helper_newobj_mscorlib
0x0028EC1E	0x00000010	[ 41] literal string: mono_value_copy
0x0028EC2E	0x00000011	[ 41] literal string: void ptr ptr ptr
0x0028EC3F	0x0000001C	[ 41] literal string: mono_object_castclass_unbox
0x0028EC5B	0x00000012	[ 41] literal string: object object ptr
0x0028EC6D	0x0000000B	[ 41] literal string: mono_break
0x0028EC78	0x0000001F	[ 41] literal string: mono_create_corlib_exception_0
0x0028EC97	0x0000001F	[ 41] literal string: mono_create_corlib_exception_1
0x0028ECB6	0x00000012	[ 41] literal string: object int object
0x0028ECC8	0x0000001F	[ 41] literal string: mono_create_corlib_exception_2
0x0028ECE7	0x00000019	[ 41] literal string: object int object object
0x0028ED00	0x00000011	[ 41] literal string: mono_array_new_1
0x0028ED11	0x00000011	[ 41] literal string: mono_array_new_2
0x0028ED22	0x00000013	[ 41] literal string: object ptr int int
0x0028ED35	0x00000011	[ 41] literal string: mono_array_new_3
0x0028ED46	0x00000017	[ 41] literal string: object ptr int int int
0x0028ED5D	0x00000011	[ 41] literal string: mono_array_new_4
0x0028ED6E	0x0000001B	[ 41] literal string: object ptr int int int int
0x0028ED89	0x0000001E	[ 41] literal string: mono_get_native_calli_wrapper
0x0028EDA7	0x00000013	[ 41] literal string: mono_resume_unwind
0x0028EDBA	0x00000020	[ 41] literal string: mono_gsharedvt_constrained_call
0x0028EDDA	0x0000001B	[ 41] literal string: object ptr ptr ptr ptr ptr
0x0028EDF5	0x0000001A	[ 41] literal string: mono_gsharedvt_value_copy
0x0028EE0F	0x00000023	[ 41] literal string: mono_gc_wbarrier_value_copy_bitmap
0x0028EE32	0x00000015	[ 41] literal string: void ptr ptr int int
0x0028EE47	0x00000021	[ 41] literal string: mono_object_castclass_with_cache
0x0028EE68	0x00000016	[ 41] literal string: object object ptr ptr
0x0028EE7E	0x0000001E	[ 41] literal string: mono_object_isinst_with_cache
0x0028EE9C	0x0000001F	[ 41] literal string: mono_debugger_agent_user_break
0x0028EEBB	0x00000014	[ 41] literal string: pthread_getspecific
0x0028EECF	0x0000000E	[ 41] literal string: !sig->hasthis
0x0028EEDD	0x00000015	[ 41] literal string: sig->param_count < 3
0x0028EEF2	0x00000011	[ 41] literal string: Compiled methods
0x0028EF03	0x00000011	[ 41] literal string: Methods from AOT
0x0028EF14	0x0000001E	[ 41] literal string: Methods JITted using mono JIT
0x0028EF32	0x0000001A	[ 41] literal string: Methods JITted using LLVM
0x0028EF4C	0x0000001F	[ 41] literal string: Total time spent JITting (sec)
0x0028EF6B	0x0000000D	[ 41] literal string: Basic blocks
0x0028EF78	0x00000011	[ 41] literal string: Max basic blocks
0x0028EF89	0x0000000F	[ 41] literal string: Allocated vars
0x0028EF98	0x0000000E	[ 41] literal string: Code reallocs
0x0028EFA6	0x00000014	[ 41] literal string: Allocated code size
0x0028EFBA	0x0000001A	[ 41] literal string: Allocated seq points size
0x0028EFD4	0x00000013	[ 41] literal string: Inlineable methods
0x0028EFE7	0x00000010	[ 41] literal string: Inlined methods
0x0028EFF7	0x00000008	[ 41] literal string: Regvars
0x0028EFFF	0x00000012	[ 41] literal string: Locals stack size
0x0028F011	0x00000015	[ 41] literal string: Method cache lookups
0x0028F026	0x00000017	[ 41] literal string: Compiled CIL code size
0x0028F03D	0x00000011	[ 41] literal string: Native code size
0x0028F04E	0x0000000E	[ 41] literal string: Aliases found
0x0028F05C	0x00000013	[ 41] literal string: Aliases eliminated
0x0028F06F	0x00000019	[ 41] literal string: Aliased loads eliminated
0x0028F088	0x0000001A	[ 41] literal string: Aliased stores eliminated
0x0028F0A2	0x0000003F	[ 41] literal string: Ignoring invocation of an instance method on a NULL instance.

0x0028F0E1	0x0000000D	[ 41] literal string: info->vtable
0x0028F0EE	0x00000007	[ 41] literal string: jit_ex
0x0028F0F5	0x00000010	[ 41] literal string: method->dynamic
0x0028F105	0x000000AC	[ 41] literal string: Unmanaged code called delegate of type %s which was already garbage collected.
See http://www.mono-project.com/Diagnostic:Delegate for an explanation and ways to fix this.
0x0028F1B1	0x0000000E	[ 41] literal string: handle-sigint
0x0028F1BF	0x0000000F	[ 41] literal string: keep-delegates
0x0028F1CE	0x0000001B	[ 41] literal string: reverse-pinvoke-exceptions
0x0028F1E9	0x00000018	[ 41] literal string: collect-pagefault-stats
0x0028F201	0x00000014	[ 41] literal string: break-on-unverified
0x0028F215	0x00000011	[ 41] literal string: no-gdb-backtrace
0x0028F226	0x00000013	[ 41] literal string: suspend-on-sigsegv
0x0028F239	0x00000015	[ 41] literal string: suspend-on-exception
0x0028F24E	0x00000015	[ 41] literal string: suspend-on-unhandled
0x0028F263	0x00000012	[ 41] literal string: dont-free-domains
0x0028F275	0x00000013	[ 41] literal string: dyn-runtime-invoke
0x0028F288	0x00000015	[ 41] literal string: explicit-null-checks
0x0028F29D	0x0000000F	[ 41] literal string: gen-seq-points
0x0028F2AC	0x00000017	[ 41] literal string: gen-compact-seq-points
0x0028F2C3	0x0000000C	[ 41] literal string: init-stacks
0x0028F2CF	0x00000006	[ 41] literal string: casts
0x0028F2D5	0x00000011	[ 41] literal string: soft-breakpoints
0x0028F2E6	0x00000017	[ 41] literal string: check-pinvoke-callconv
0x0028F2FD	0x00000014	[ 41] literal string: debug-domain-unload
0x0028F311	0x00000034	[ 41] literal string: Invalid option for the MONO_DEBUG env variable: %s

0x0028F345	0x0000016A	[ 41] literal string: Available options: 'handle-sigint', 'keep-delegates', 'reverse-pinvoke-exceptions', 'collect-pagefault-stats', 'break-on-unverified', 'no-gdb-backtrace', 'dont-free-domains', 'suspend-on-sigsegv', 'suspend-on-exception', 'suspend-on-unhandled', 'dyn-runtime-invoke', 'gdb', 'explicit-null-checks', 'init-stacks', 'check-pinvoke-callconv', 'debug-domain-unload'

0x0028F4AF	0x00000003	[ 41] literal string: ji
0x0028F4B2	0x00000096	[ 41] literal string: Method '%s' in assembly '%s' contains native code that cannot be executed by Mono on this platform. The assembly was probably created using C++/CLI.

0x0028F548	0x00000003	[ 41] literal string: mi
0x0028F54B	0x00000007	[ 41] literal string: Invoke
0x0028F552	0x0000002F	[ 41] literal string: Unrecognizable runtime implemented method '%s'
0x0028F581	0x00000018	[ 41] literal string: InvalidProgramException
0x0028F599	0x00000015	[ 41] literal string: gsharedvt_trampoline
0x0028F5AE	0x0000008E	[ 41] literal string: Attempting to JIT compile method '%s' while running with --aot-only. See http://docs.xamarin.com/ios/about/limitations for more information.

0x0028F63C	0x00000016	[ 41] literal string: MissingFieldException
0x0028F652	0x00000017	[ 41] literal string: MissingMethodException
0x0028F669	0x00000012	[ 41] literal string: TypeLoadException
0x0028F67B	0x00000016	[ 41] literal string: FileNotFoundException
0x0028F691	0x00000010	[ 41] literal string: System.Security
0x0028F6A1	0x00000016	[ 41] literal string: VerificationException
0x0028F6B7	0x00000016	[ 41] literal string: MethodAccessException
0x0028F6CD	0x00000015	[ 41] literal string: FieldAccessException
0x0028F6E2	0x00000017	[ 41] literal string: Shared generic lookups
0x0028F6F9	0x0000001E	[ 41] literal string: Failed shared generic lookups
0x0028F717	0x00000021	[ 41] literal string: method_to_compile == cfg->method
0x0028F738	0x0000000F	[ 41] literal string: clause_last_bb
0x0028F747	0x0000001E	[ 41] literal string: Number of try block holes %d

0x0028F765	0x00000003	[ 41] literal string: gi
0x0028F768	0x0000000F	[ 41] literal string: cfg->rgctx_var
0x0028F777	0x0000001D	[ 41] literal string: inst->opcode == OP_REGOFFSET
0x0028F794	0x0000001E	[ 41] literal string: inst->inst_basereg == X86_EBP
0x0028F7B2	0x00000035	[ 41] literal string: 	Try block hole at eh clause %d offset %x length %x

0x0028F7E7	0x0000000F	[ 41] literal string: i == num_holes
0x0028F7F6	0x00000006	[ 41] literal string: spvar
0x0028F7FC	0x00000016	[ 41] literal string: tblock->native_offset
0x0028F812	0x00000028	[ 41] literal string: 	Shortening try block %d from %x to %x

0x0028F83A	0x00000037	[ 41] literal string: JitInfo EH clause %d flags %x try %x-%x handler %x-%x

0x0028F871	0x00000017	[ 41] literal string: IR code for method %s

0x0028F888	0x00000019	[ 41] literal string: 
BB%d (%d) (len: %d): %s
0x0028F8A1	0x00000007	[ 41] literal string: 	prev:
0x0028F8A8	0x00000006	[ 41] literal string:  BB%d
0x0028F8AE	0x00000008	[ 41] literal string: 		succ:
0x0028F8B6	0x0000000E	[ 41] literal string: 
	idom: BB%d

0x0028F8C4	0x00000036	[ 41] literal string: mono_bitset_test_fast (bb->dominators, bb->idom->dfn)
0x0028F8FA	0x0000000C	[ 41] literal string: 	dominators
0x0028F906	0x0000000B	[ 41] literal string: 	dfrontier
0x0028F911	0x0000000F	[ 41] literal string: creating vars

0x0028F920	0x0000000B	[ 41] literal string: 	return : 
0x0028F92B	0x00000008	[ 41] literal string: 	this: 
0x0028F933	0x0000000C	[ 41] literal string: 	arg [%d]: 
0x0028F93F	0x00000011	[ 41] literal string: creating locals

0x0028F950	0x0000000D	[ 41] literal string: locals done

0x0028F95D	0x0000001E	[ 41] literal string: mono_generic_param_info (par)
0x0028F97B	0x00000012	[ 41] literal string: ves_array_new_va_
0x0028F98D	0x0000001B	[ 41] literal string: ves_array_element_address_
0x0028F9A8	0x00000031	[ 41] literal string: patch_info->data.table->table [i]->native_offset
0x0028F9D9	0x00000017	[ 41] literal string: Error verifying %s: %s
0x0028F9F0	0x00000026	[ 41] literal string: stack type %d to montype not handled

0x0028FA16	0x0000001D	[ 41] literal string: <%p - JIT trampoline for %s>
0x0028FA33	0x0000001D	[ 41] literal string:  %s + 0x%x (%p %p) [%p - %s]
0x0028FA50	0x0000002A	[ 43] literal string: ../../../../../mono/mono/mini/regalloc2.c
0x0028FA80	0x00000012	[ 44] literal string: 	IL0x%x[0x%0x] ->
0x0028FA92	0x00000008	[ 44] literal string:  IL0x%x
0x0028FAA8	0x0000002B	[ 44] literal string: ../../../../../mono/mono/mini/seq-points.c
0x0028FAD3	0x0000001D	[ 44] literal string: info_inflated.has_debug_data
0x0028FAF0	0x0000001D	[ 44] literal string: next_index < seq_points->len
0x0028FB0D	0x0000002A	[ 44] literal string: size < 4 && "value has more than 28 bits"
0x0028FB37	0x00000027	[ 44] literal string: FALSE && "value has more than 28 bits"
0x0028FB60	0x00000011	[ 44] literal string: 
SEQ POINT MAP: 
0x0028FB71	0x00000020	[ 45] literal string: [simd-simplify] max vreg is %d

0x0028FB91	0x00000030	[ 45] literal string: [simd-simplify] processing var %d with vreg %d

0x0028FBC1	0x00000020	[ 45] literal string: [simd-simplify] R%d has vzero: 
0x0028FBE1	0x00000024	[ 45] literal string: [simd-simplify] R%d has xzero only

0x0028FC05	0x0000002A	[ 45] literal string: [simd-simplify] R%d has other ops on bb0

0x0028FC2F	0x00000027	[ 45] literal string: [simd-simplify] R%d has single bb use

0x0028FC56	0x00000028	[ 45] literal string: [simd-simplify] R%d has many bb in use

0x0028FC7E	0x00000040	[ 45] literal string: [simd-simplify] INGORING R%d on BB %d because first op is a def
0x0028FCBE	0x00000030	[ 45] literal string: [simd-simplify] Adding XZERO for R%d on BB %d: 
0x0028FCEE	0x00000029	[ 45] literal string: [simd-simplify] Nullify %d on first BB: 
0x0028FD17	0x0000000C	[ 45] literal string: SimdRuntime
0x0028FD23	0x00000010	[ 45] literal string: ArrayExtensions
0x0028FD33	0x00000011	[ 45] literal string: VectorOperations
0x0028FD44	0x00000009	[ 45] literal string: Vector2d
0x0028FD4D	0x00000009	[ 45] literal string: Vector4f
0x0028FD56	0x0000000A	[ 45] literal string: Vector2ul
0x0028FD60	0x00000009	[ 45] literal string: Vector2l
0x0028FD69	0x0000000A	[ 45] literal string: Vector4ui
0x0028FD73	0x00000009	[ 45] literal string: Vector4i
0x0028FD7C	0x0000000A	[ 45] literal string: Vector8us
0x0028FD86	0x00000009	[ 45] literal string: Vector8s
0x0028FD8F	0x0000000A	[ 45] literal string: Vector16b
0x0028FD99	0x0000000B	[ 45] literal string: Vector16sb
0x0028FDA4	0x00000032	[ 45] literal string: function doesn't have a simd intrinsic %s::%s/%d

0x0028FDD6	0x00000029	[ 45] literal string: found call to intrinsic %s::%s/%d -> %s

0x0028FDFF	0x0000000C	[ 45] literal string: param %d:  
0x0028FE0B	0x00000048	[ 45] literal string: function %s::%s/%d requires one of unsuported SIMD instruction set(s): 
0x0028FE53	0x00000004	[ 45] literal string: %s 
0x0028FE57	0x00000030	[ 45] literal string: ../../../../../mono/mono/mini/simd-intrinsics.c
0x0028FE87	0x00000038	[ 45] literal string: get_simd_vreg:: could not infer source simd vreg for op
0x0028FEBF	0x0000003A	[ 45] literal string: args [0]->type == STACK_MP || args [0]->type == STACK_PTR
0x0028FEF9	0x0000003E	[ 45] literal string: load_simd_vreg:: could not infer source simd (%d) vreg for op
0x0028FF37	0x00000016	[ 45] literal string: sig->param_count == 2
0x0028FF4D	0x0000001F	[ 45] literal string: position == 0 || position == 1
0x0028FF6C	0x00000005	[ 45] literal string: sse2
0x0028FF71	0x00000005	[ 45] literal string: sse3
0x0028FF76	0x00000006	[ 45] literal string: ssse3
0x0028FF7C	0x00000006	[ 45] literal string: sse41
0x0028FF82	0x00000006	[ 45] literal string: sse42
0x0028FF88	0x00000006	[ 45] literal string: sse4a
0x0028FF8E	0x0000000A	[ 45] literal string: GetVector
0x0028FF98	0x00000011	[ 45] literal string: GetVectorAligned
0x0028FFA9	0x0000000A	[ 45] literal string: SetVector
0x0028FFB3	0x00000011	[ 45] literal string: SetVectorAligned
0x0028FFC4	0x0000000A	[ 45] literal string: IsAligned
0x0028FFCE	0x0000000E	[ 45] literal string: get_AccelMode
0x0028FFDC	0x00000026	[ 45] literal string: [simd-simplify] R%d used by many bb: 
0x00290002	0x00000024	[ 45] literal string: [simd-simplify] R%d first used by: 
0x00290026	0x0000001B	[ 45] literal string: [simd-simplify] R%d used: 
0x0029004E	0x00000024	[ 46] literal string: ../../../../../mono/mono/mini/ssa.c
0x00290072	0x00000022	[ 46] literal string: !(cfg->comp_done & MONO_COMP_SSA)
0x00290094	0x00000012	[ 46] literal string: !cfg->disable_ssa
0x002900A6	0x00000019	[ 46] literal string: 
COMPUTE SSA %d (R%d-)


0x002900BF	0x0000001D	[ 46] literal string: 	R%d needs PHI functions in 
0x002900DD	0x0000001F	[ 46] literal string: cfg->comp_done & MONO_COMP_SSA
0x002900FC	0x00000011	[ 46] literal string: 
REMOVE SSA %d:

0x0029010D	0x00000027	[ 46] literal string: ins->inst_phi_args [0] == bb->in_count
0x00290134	0x0000000B	[ 46] literal string: ins->klass
0x0029013F	0x00000019	[ 46] literal string: 	ADD R%d <- R%d in BB%d

0x00290158	0x00000012	[ 46] literal string: AFTER REMOVE SSA:
0x0029016A	0x00000016	[ 46] literal string: COALESCE: R%d -> R%d

0x00290180	0x00000019	[ 46] literal string: bb->flags & BB_REACHABLE
0x00290199	0x00000015	[ 46] literal string: 
SSA CONSPROP BB%d:

0x002901AE	0x00000011	[ 46] literal string: licm in BB%d on 
0x002901BF	0x00000029	[ 46] literal string: (cfg->comp_done & MONO_COMP_SSA_DEF_USE)
0x002901E8	0x00000006	[ 46] literal string: i > 0
0x002901FB	0x00000013	[ 46] literal string: AFTER SSA COPYPROP
0x0029020E	0x00000028	[ 46] literal string: carray [ins->dreg]->opcode == OP_ICONST
0x00290236	0x0000001E	[ 46] literal string: ins->next->sreg1 == ins->dreg
0x00290254	0x0000002B	[ 46] literal string: ins->next->next->opcode == OP_LOAD_MEMBASE
0x0029027F	0x0000000E	[ 46] literal string: 	No cfold on 
0x0029028D	0x0000000B	[ 46] literal string: 	cfold on 
0x00290298	0x00000015	[ 46] literal string: i < target->in_count
0x002902AD	0x00000013	[ 46] literal string: carray [var->dreg]
0x002902C0	0x00000018	[ 46] literal string: c0->opcode == OP_ICONST
0x002902D8	0x0000000F	[ 46] literal string: num_sregs <= 2
0x002902E7	0x0000000C	[ 46] literal string: 	 cfold -> 
0x002902F3	0x00000019	[ 46] literal string: 	State of R%d set to %d

0x0029030C	0x00000003	[ 46] literal string: c0
0x0029030F	0x00000017	[ 46] literal string: 	Add BB%d to worklist

0x00290326	0x0000002A	[ 46] literal string: !(cfg->comp_done & MONO_COMP_SSA_DEF_USE)
0x00290350	0x0000001D	[ 46] literal string: ins->inst_phi_args [i] != -1
0x0029036D	0x00000010	[ 46] literal string: 	Unlinked BB%d

0x0029037D	0x00000018	[ 46] literal string: 
RENAME VARS BLOCK %d:

0x00290395	0x0000000F	[ 46] literal string: idx < max_vars
0x002903A4	0x00000027	[ 46] literal string: stack_history_len < stack_history_size
0x002903CB	0x0000000E	[ 46] literal string:   R%d -> R%d

0x002903D9	0x0000001D	[ 46] literal string: 	Add PHI R%d <- R%d to BB%d

0x00290400	0x00000013	[ 46] literal string: 
END COMPUTE SSA.

0x00290420	0x00000018	[ 46] literal string: 
UNLINK UNUSED BBLOCKS:
0x00290438	0x00000022	[ 48] literal string: Mono.Tasklets.Continuation::alloc
0x0029045A	0x00000021	[ 48] literal string: Mono.Tasklets.Continuation::free
0x0029047B	0x00000021	[ 48] literal string: Mono.Tasklets.Continuation::mark
0x0029049C	0x00000022	[ 48] literal string: Mono.Tasklets.Continuation::store
0x002904BE	0x00000024	[ 48] literal string: Mono.Tasklets.Continuation::restore
0x002904E2	0x00000005	[ 48] literal string: cont
0x002904E7	0x0000001D	[ 48] literal string: Continuation not initialized
0x00290504	0x0000002B	[ 48] literal string: Continuation from another thread or domain
0x0029052F	0x00000029	[ 48] literal string: ../../../../../mono/mono/mini/tasklets.c
0x00290558	0x0000000F	[ 48] literal string: Already marked
0x00290567	0x00000014	[ 48] literal string: Invalid stack frame
0x0029057B	0x00000005	[ 48] literal string: Mark
0x00290580	0x0000000B	[ 49] literal string: ENTER: %s(
0x0029058B	0x0000000A	[ 49] literal string: ) ip: %p

0x00290595	0x0000000F	[ 49] literal string: ) <gsharedvt>

0x002905A4	0x00000026	[ 49] literal string: ../../../../../mono/mono/mini/trace.c
0x002905CA	0x0000002C	[ 49] literal string: !mono_method_signature (method)->ret->byref
0x002905F6	0x0000000E	[ 49] literal string: VALUERET:%p, 
0x00290604	0x0000000B	[ 49] literal string: value:%p, 
0x0029060F	0x00000016	[ 49] literal string: this:[STRING:%p:%s], 
0x00290625	0x00000014	[ 49] literal string: this:%p[%s.%s %s], 
0x00290639	0x0000000C	[ 49] literal string: this:NULL, 
0x00290645	0x0000000D	[ 49] literal string: [BYREF:%p], 
0x00290652	0x00000005	[ 49] literal string: %p, 
0x00290657	0x00000005	[ 49] literal string: %d, 
0x0029065C	0x0000003F	[ 49] literal string: ((MonoObject *)s)->vtable->klass == mono_defaults.string_class
0x0029069B	0x00000011	[ 49] literal string: [STRING:%p:%s], 
0x002906AC	0x00000010	[ 49] literal string: [STRING:null], 
0x002906BC	0x00000010	[ 49] literal string: [INT32:%p:%d], 
0x002906CC	0x0000000C	[ 49] literal string: [TYPE:%s], 
0x002906D8	0x0000000D	[ 49] literal string: [%s.%s:%p], 
0x002906E5	0x0000000C	[ 49] literal string: 0x%016llx, 
0x002906F1	0x00000006	[ 49] literal string: %02x,
0x002906F7	0x00000004	[ 49] literal string: ], 
0x002906FB	0x00000005	[ 49] literal string: XX, 
0x00290700	0x00000003	[ 49] literal string: )

0x00290703	0x0000000A	[ 49] literal string: LEAVE: %s
0x0029070D	0x00000008	[ 49] literal string: TRUE:%d
0x00290715	0x00000006	[ 49] literal string: FALSE
0x0029071B	0x0000000A	[ 49] literal string: result=%d
0x00290725	0x0000000F	[ 49] literal string: [STRING:%p:%s]
0x00290734	0x00000010	[ 49] literal string: [BOOLEAN:%p:%d]
0x00290744	0x0000000E	[ 49] literal string: [INT32:%p:%d]
0x00290752	0x00000010	[ 49] literal string: [INT64:%p:%lld]
0x00290762	0x0000000B	[ 49] literal string: [%s.%s:%p]
0x0029076D	0x0000000C	[ 49] literal string: [OBJECT:%p]
0x00290779	0x0000000A	[ 49] literal string: result=%p
0x00290783	0x00000011	[ 49] literal string: lresult=0x%16llx
0x00290794	0x00000006	[ 49] literal string: FP=%f
0x0029079A	0x00000019	[ 49] literal string: (unknown return type %x)
0x002907B3	0x0000000F	[ 49] literal string: <INVALID UTF8>
0x002907C2	0x0000000F	[ 49] literal string: [%p: %.5f %d] 
0x002907D1	0x00000018	[ 49] literal string: Expecting an expression
0x002907E9	0x00000019	[ 49] literal string: Invalid method name: %s

0x00290802	0x00000008	[ 49] literal string: program
0x0029080A	0x00000008	[ 49] literal string: wrapper
0x00290812	0x00000009	[ 49] literal string: disabled
0x0029081B	0x00000020	[ 49] literal string: Syntax error at or around '%s'

0x0029083B	0x0000002A	[ 50] literal string: ../../../../../mono/mono/mini/tramp-x86.c
0x00290865	0x00000016	[ 50] literal string: (code - start) < size
0x0029087B	0x0000001A	[ 50] literal string: (code - start) <= buf_len
0x00290895	0x00000019	[ 50] literal string: (code - start) < buf_len
0x002908AE	0x00000033	[ 50] literal string: Invalid trampoline sequence: %x %x %x %x %x %x %x

0x002908E1	0x00000011	[ 50] literal string: code [0] == 0xff
0x002908F2	0x00000011	[ 50] literal string: code [1] == 0xa3
0x00290903	0x00000013	[ 50] literal string: trampoline_func_%d
0x00290916	0x00000014	[ 50] literal string: (code - buf) <= 256
0x0029092A	0x00000020	[ 50] literal string: (buf - code) <= TRAMPOLINE_SIZE
0x0029094A	0x0000002D	[ 50] literal string: mono_arch_create_rgctx_lazy_fetch_trampoline
0x00290977	0x00000019	[ 50] literal string: code - buf <= tramp_size
0x00290990	0x0000002F	[ 50] literal string: mono_arch_create_generic_class_init_trampoline
0x002909BF	0x00000026	[ 50] literal string: generic_trampoline_generic_class_init
0x002909E5	0x00000042	[ 50] literal string: MONO_THREADS_SYNC_MEMBER_SIZE (status_offset) == sizeof (guint32)
0x00290A27	0x00000040	[ 50] literal string: MONO_THREADS_SYNC_MEMBER_SIZE (nest_offset) == sizeof (guint32)
0x00290A67	0x0000002A	[ 50] literal string: mono_arch_create_monitor_enter_trampoline
0x00290A91	0x00000024	[ 50] literal string: generic_trampoline_monitor_enter_v4
0x00290AB5	0x00000021	[ 50] literal string: generic_trampoline_monitor_enter
0x00290AD6	0x00000029	[ 50] literal string: mono_arch_create_monitor_exit_trampoline
0x00290AFF	0x00000020	[ 50] literal string: generic_trampoline_monitor_exit
0x00290B1F	0x00000019	[ 50] literal string: handler_block_trampoline
0x00290B38	0x00000003	[ 51] literal string: pc
0x00290B3B	0x0000002E	[ 51] literal string: CFA: [%x] offset_extended_sf: %s at cfa-0x%x

0x00290B69	0x0000001A	[ 51] literal string: CFA: [%x] same_value: %s

0x00290B83	0x0000001A	[ 51] literal string: CFA: [%x] remember_state

0x00290B9D	0x00000019	[ 51] literal string: CFA: [%x] restore_state

0x00290BB6	0x0000001C	[ 51] literal string: CFA: [%x] mono_advance_loc

0x00290BD2	0x00000027	[ 51] literal string: ../../../../../mono/mono/mini/unwind.c
0x00290BF9	0x00000028	[ 51] literal string: read32 (p) == (guint32)(op->when - loc)
0x00290C21	0x00000028	[ 51] literal string: read16 (p) == (guint32)(op->when - loc)
0x00290C49	0x0000000D	[ 51] literal string: op->val == 0
0x00290C56	0x0000000F	[ 51] literal string: p - buf < 4096
0x00290C65	0x0000000F	[ 51] literal string: reg < NUM_REGS
0x00290C74	0x00000015	[ 51] literal string: state_stack_pos == 0
0x00290C89	0x00000015	[ 51] literal string: state_stack_pos == 1
0x00290C9E	0x00000013	[ 51] literal string: mark_locations [0]
0x00290CB1	0x0000000E	[ 51] literal string: cfa_reg != -1
0x00290CBF	0x0000000D	[ 51] literal string: hreg < nregs
0x00290CCC	0x00000011	[ 51] literal string: Unwind info size
0x00290CDD	0x00000026	[ 51] literal string: fde_len != 0xffffffff && fde_len != 0
0x00290D03	0x0000000C	[ 51] literal string: cie_id == 0
0x00290D0F	0x00000011	[ 51] literal string: cie_version == 1
0x00290D20	0x00000055	[ 51] literal string: (*p == (DW_EH_PE_sdata4|DW_EH_PE_pcrel)) || (*p == (DW_EH_PE_sdata8|DW_EH_PE_pcrel))
0x00290D75	0x00000027	[ 51] literal string: *p == (DW_EH_PE_sdata4|DW_EH_PE_pcrel)
0x00290D9C	0x00000010	[ 51] literal string: code_align == 1
0x00290DAC	0x0000001F	[ 51] literal string: data_align == DWARF_DATA_ALIGN
0x00290DCB	0x0000001B	[ 51] literal string: return_reg == DWARF_PC_REG
0x00290DE6	0x0000000D	[ 51] literal string: i <= buf_len
0x00290DF3	0x00000019	[ 51] literal string: mono_magic == 0x4d4fef4f
0x00290E0C	0x0000000D	[ 51] literal string: version == 1
0x00290E19	0x00000012	[ 51] literal string: op == DW_OP_bregx
0x00290E2B	0x0000001F	[ 51] literal string: this_encoding == DW_EH_PE_omit
0x00290E4A	0x0000000C	[ 51] literal string: landing_pad
0x00290E56	0x00000019	[ 51] literal string: ((size_t)tinfo % 4) == 0
0x00290E6F	0x00000007	[ 53] literal string: xdb.il
0x00290E76	0x00000045	[ 53] literal string: ** Unable to create xdb.il. Managed symbol names won't be available.
0x00290EBB	0x00000006	[ 53] literal string: xdb.s
0x00290EC1	0x0000000C	[ 53] literal string: JITted code
0x00290ECD	0x0000002E	[ 54] literal string: ../../../../../mono/mono/metadata/appdomain.c
0x00290EFB	0x0000000E	[ 54] literal string: load_function
0x00290F09	0x0000000F	[ 54] literal string: AppDomainSetup
0x00290F18	0x00000026	[ 54] literal string: expected corlib version %d, found %d.
0x00290F3E	0x00000021	[ 54] literal string: System.Runtime.Remoting.Contexts
0x00290F5F	0x00000008	[ 54] literal string: Context
0x00290F67	0x0000000C	[ 54] literal string: TypeResolve
0x00290F73	0x00000033	[ 54] literal string: domain != NULL && ((name != NULL) || (tb != NULL))
0x00290FA6	0x0000000E	[ 54] literal string: DoTypeResolve
0x00290FB4	0x0000002B	[ 54] literal string: Method AppDomain.DoTypeResolve not found.

0x00290FDF	0x0000000B	[ 54] literal string: ad != NULL
0x00290FEA	0x0000000C	[ 54] literal string: add != NULL
0x00290FF6	0x00000008	[ 54] literal string: APPBASE
0x00290FFE	0x00000010	[ 54] literal string: APP_CONFIG_FILE
0x0029100E	0x0000000D	[ 54] literal string: DYNAMIC_BASE
0x0029101B	0x00000009	[ 54] literal string: APP_NAME
0x00291024	0x0000000B	[ 54] literal string: CACHE_BASE
0x0029102F	0x00000010	[ 54] literal string: PRIVATE_BINPATH
0x0029103F	0x00000013	[ 54] literal string: BINPATH_PROBE_ONLY
0x00291052	0x00000011	[ 54] literal string: SHADOW_COPY_DIRS
0x00291063	0x00000014	[ 54] literal string: FORCE_CACHE_INSTALL
0x00291077	0x00000011	[ 54] literal string: ad->data != NULL
0x00291088	0x00000020	[ 54] literal string: domain != NULL && fname != NULL
0x002910A8	0x00000012	[ 54] literal string: DoAssemblyResolve
0x002910BA	0x0000002F	[ 54] literal string: Method AppDomain.DoAssemblyResolve not found.

0x002910E9	0x00000005	[ 54] literal string: true
0x002910EE	0x0000004C	[ 54] literal string: Failed to create shadow copy (invalid characters in shadow directory name).
0x0029113A	0x00000040	[ 54] literal string: Failed to create shadow copy (invalid characters in file name).
0x0029117A	0x00000038	[ 54] literal string: Failed to create shadow copy (ensure directory exists).
0x002911B2	0x00000029	[ 54] literal string: Failed to create shadow copy (CopyFile).
0x002911DB	0x00000005	[ 54] literal string: .mdb
0x002911E0	0x00000039	[ 54] literal string: Failed to create shadow copy of sibling data (CopyFile).
0x00291219	0x00000028	[ 54] literal string: Failed to create shadow copy .ini file.
0x00291241	0x0000000F	[ 54] literal string: assRef != NULL
0x00291250	0x0000002D	[ 54] literal string: Failed to unload domain, domain id not found
0x0029127D	0x0000002B	[ 54] literal string: The default appdomain can not be unloaded.
0x002912A8	0x0000000F	[ 54] literal string: MONO_NO_UNLOAD
0x002912B7	0x00000007	[ 54] literal string: refass
0x002912BE	0x0000002C	[ 54] literal string: No entry point method found in %s due to %s
0x002912EA	0x00000025	[ 54] literal string: Appdomain is already being unloaded.
0x0029130F	0x0000001F	[ 54] literal string: Appdomain is already unloaded.
0x0029132E	0x0000001B	[ 54] literal string: Invalid appdomain state %d
0x00291349	0x0000000F	[ 54] literal string: DoDomainUnload
0x00291358	0x0000001C	[ 54] literal string: Unload thread for domain %x
0x00291374	0x00000019	[ 54] literal string: count >= 1 && count <= 2
0x0029138D	0x0000002C	[ 54] literal string: Aborting of threads in domain %s timed out.
0x002913B9	0x00000033	[ 54] literal string: Cleanup of threadpool jobs of domain %s timed out.
0x002913EC	0x00000025	[ 54] literal string: Finalization of domain %s timed out.
0x00291411	0x00000005	[ 54] literal string: %08x
0x00291416	0x0000000F	[ 54] literal string: %08x_%08x_%08x
0x00291425	0x0000004C	[ 54] literal string: Could not decode AppDomain search path since it contains invalid characters
0x00291471	0x00000002	[ 54] literal string: ;
0x00291473	0x00000009	[ 54] literal string: assembly
0x0029147C	0x00000007	[ 54] literal string: shadow
0x00291483	0x00000012	[ 54] literal string: %s-mono-cachepath
0x00291495	0x0000000D	[ 54] literal string: AssemblyLoad
0x002914A2	0x00000014	[ 54] literal string: assembly_load_field
0x002914B6	0x0000000D	[ 54] literal string: ref_assembly
0x002914C3	0x0000000F	[ 54] literal string: DoAssemblyLoad
0x002914D2	0x00000015	[ 54] literal string: assembly_load_method
0x002914E7	0x00000031	[ 54] literal string: Assembly %s[%p] added to domain %s, ref_count=%d
0x00291518	0x0000000A	[ 54] literal string: <unknown>
0x00291522	0x00000015	[ 54] literal string: Error parsing %s: %s
0x00291537	0x00000008	[ 54] literal string: runtime
0x0029153F	0x00000010	[ 54] literal string: assemblyBinding
0x0029154F	0x00000008	[ 54] literal string: probing
0x00291557	0x0000000C	[ 54] literal string: privatePath
0x00291563	0x00000014	[ 54] literal string: mono_corlib_version
0x00291577	0x0000000E	[ 54] literal string: Out of memory
0x00291585	0x0000003D	[ 54] literal string: A null value was found where an object instance was required
0x002915C2	0x00000031	[ 54] literal string: The requested operation caused a stack overflow.
0x002915F3	0x00000002	[ 55] literal string: :
0x002915F5	0x0000003A	[ 55] literal string: '%s' in MONO_PATH doesn't exist or has wrong permissions.
0x0029162F	0x00000056	[ 55] literal string: /Users/builder/data/lanes/1962/8b265d64/source/maccore/builds/install/simulator86/lib
0x00291685	0x00000056	[ 55] literal string: /Users/builder/data/lanes/1962/8b265d64/source/maccore/builds/install/simulator86/etc
0x002916DB	0x00000004	[ 55] literal string: lib
0x002916DF	0x00000003	[ 55] literal string: ..
0x002916E2	0x00000004	[ 55] literal string: etc
0x002916E6	0x00000002	[ 55] literal string: "
0x002916E8	0x0000003D	[ 55] literal string: %s%s%s, Version=%d.%d.%d.%d, Culture=%s, PublicKeyToken=%s%s
0x00291725	0x00000008	[ 55] literal string: neutral
0x0029172D	0x00000005	[ 55] literal string: null
0x00291732	0x00000013	[ 55] literal string: , Retargetable=Yes
0x00291745	0x00000009	[ 55] literal string: mscorlib
0x0029174E	0x000000A2	[ 55] literal string: The assembly was not found in the Global Assembly Cache, a path listed in the MONO_PATH environment variable, or in the location of the executing assembly (%s).

0x002917F0	0x00000012	[ 55] literal string: System error: %s

0x00291802	0x00000033	[ 55] literal string: Cannot find an assembly referenced from this one.

0x00291835	0x0000002E	[ 55] literal string: The file exists but is not a valid assembly.

0x00291863	0x000000A1	[ 55] literal string: The following assembly referenced from %s could not be loaded:
     Assembly:   %s    (assemblyref_index=%d)
     Version:    %d.%d.%d.%d
     Public Key: %s
%s
0x00291904	0x00000007	[ 55] literal string: (none)
0x0029190B	0x00000029	[ 55] literal string: Assembly Ref addref %s[%p] -> %s[%p]: %d
0x00291934	0x00000020	[ 55] literal string: Failed to load assembly %s[%p]

0x00291954	0x0000002D	[ 55] literal string: ../../../../../mono/mono/metadata/assembly.c
0x00291981	0x0000000D	[ 55] literal string: func != NULL
0x0029198E	0x00000033	[ 55] literal string: Assembly Loader loaded assembly from bundle: '%s'.
0x002919C1	0x00000011	[ 55] literal string: filename != NULL
0x002919D2	0x0000000B	[ 55] literal string: file:///%s
0x002919DD	0x00000028	[ 55] literal string: Assembly Loader probing location: '%s'.
0x00291A05	0x00000031	[ 55] literal string: Assembly Loader shadow-copied assembly to: '%s'.
0x00291A36	0x00000035	[ 55] literal string: Assembly Loader loaded assembly from location: '%s'.
0x00291A6B	0x00000022	[ 55] literal string: Image addref %s[%p] -> %s[%p]: %d
0x00291A8D	0x00000008	[ 55] literal string: Culture
0x00291A95	0x0000000F	[ 55] literal string: PublicKeyToken
0x00291AA4	0x0000000A	[ 55] literal string: PublicKey
0x00291AAE	0x0000000D	[ 55] literal string: Retargetable
0x00291ABB	0x00000016	[ 55] literal string: ProcessorArchitecture
0x00291AD1	0x00000005	[ 55] literal string: MSIL
0x00291AD6	0x00000004	[ 55] literal string: X86
0x00291ADA	0x00000005	[ 55] literal string: IA64
0x00291ADF	0x00000006	[ 55] literal string: AMD64
0x00291AE5	0x00000007	[ 55] literal string: %s.dll
0x00291AEC	0x00000004	[ 55] literal string: gac
0x00291AF0	0x0000000D	[ 55] literal string: mscorlib.dll
0x00291AFD	0x00000004	[ 55] literal string: 4.5
0x00291B01	0x00000014	[ 55] literal string: %s/mono/4.5/Facades
0x00291B15	0x00000011	[ 55] literal string: assembly != NULL
0x00291B26	0x0000001C	[ 55] literal string: Unloading assembly %s [%p].
0x00291B42	0x0000002A	[ 55] literal string: assembly && assembly != REFERENCE_MISSING
0x00291B6C	0x00000006	[ 55] literal string: UTF-8
0x00291B72	0x00000009	[ 55] literal string: UTF-16LE
0x00291B7B	0x00000013	[ 55] literal string: "SkipVerification"
0x00291B8E	0x00000038	[ 55] literal string: System.Security.Permissions.SecurityPermissionAttribute
0x00291BC6	0x00000011	[ 55] literal string: SkipVerification
0x00291BD7	0x00000012	[ 55] literal string: %d.%d.%d.%d_%s_%s
0x00291BE9	0x00000010	[ 55] literal string: policy.%d.%d.%s
0x00291BF9	0x0000000E	[ 55] literal string: 0.0.0.0_%s_%s
0x00291C07	0x0000000B	[ 55] literal string: System.Net
0x00291C12	0x0000005E	[ 55] literal string: The request to load the retargetable assembly %s v%d.%d.%d.%d was remapped to %s v%d.%d.%d.%d
0x00291C70	0x00000035	[ 55] literal string: index < G_N_ELEMENTS (current_runtime->version_sets)
0x00291CA5	0x0000004E	[ 55] literal string: The request to load the assembly %s v%d.%d.%d.%d was remapped to v%d.%d.%d.%d
0x00291CF3	0x0000000E	[ 55] literal string: Accessibility
0x00291D01	0x00000014	[ 55] literal string: Commons.Xml.Relaxng
0x00291D15	0x00000005	[ 55] literal string: I18N
0x00291D1A	0x00000009	[ 55] literal string: I18N.CJK
0x00291D23	0x0000000D	[ 55] literal string: I18N.MidEast
0x00291D30	0x0000000B	[ 55] literal string: I18N.Other
0x00291D3B	0x0000000A	[ 55] literal string: I18N.Rare
0x00291D45	0x0000000A	[ 55] literal string: I18N.West
0x00291D4F	0x00000016	[ 55] literal string: Microsoft.VisualBasic
0x00291D65	0x00000012	[ 55] literal string: Microsoft.VisualC
0x00291D77	0x0000000B	[ 55] literal string: Mono.Cairo
0x00291D82	0x00000023	[ 55] literal string: Mono.CompilerServices.SymbolWriter
0x00291DA5	0x0000000A	[ 55] literal string: Mono.Data
0x00291DAF	0x00000017	[ 55] literal string: Mono.Data.SybaseClient
0x00291DC6	0x0000000E	[ 55] literal string: Mono.Data.Tds
0x00291DD4	0x00000014	[ 55] literal string: Mono.Data.TdsClient
0x00291DE8	0x00000010	[ 55] literal string: Mono.GetOptions
0x00291DF8	0x0000000A	[ 55] literal string: Mono.Http
0x00291E02	0x0000000B	[ 55] literal string: Mono.Posix
0x00291E0D	0x0000000E	[ 55] literal string: Mono.Security
0x00291E1B	0x00000014	[ 55] literal string: Mono.Security.Win32
0x00291E2F	0x0000000D	[ 55] literal string: Mono.Xml.Ext
0x00291E3C	0x00000016	[ 55] literal string: Novell.Directory.Ldap
0x00291E52	0x00000007	[ 55] literal string: Npgsql
0x00291E59	0x00000006	[ 55] literal string: PEAPI
0x00291E5F	0x00000022	[ 55] literal string: System.ComponentModel.Composition
0x00291E81	0x00000026	[ 55] literal string: System.ComponentModel.DataAnnotations
0x00291EA7	0x00000015	[ 55] literal string: System.Configuration
0x00291EBC	0x0000001D	[ 55] literal string: System.Configuration.Install
0x00291ED9	0x0000000C	[ 55] literal string: System.Core
0x00291EE5	0x0000000C	[ 55] literal string: System.Data
0x00291EF1	0x00000011	[ 55] literal string: System.Data.Linq
0x00291F02	0x00000019	[ 55] literal string: System.Data.OracleClient
0x00291F1B	0x00000015	[ 55] literal string: System.Data.Services
0x00291F30	0x0000001C	[ 55] literal string: System.Data.Services.Client
0x00291F4C	0x00000013	[ 55] literal string: System.Data.SqlXml
0x00291F5F	0x0000000E	[ 55] literal string: System.Design
0x00291F6D	0x00000019	[ 55] literal string: System.DirectoryServices
0x00291F86	0x0000000F	[ 55] literal string: System.Drawing
0x00291F95	0x00000016	[ 55] literal string: System.Drawing.Design
0x00291FAB	0x0000001A	[ 55] literal string: System.EnterpriseServices
0x00291FC5	0x00000015	[ 55] literal string: System.IdentityModel
0x00291FDA	0x0000001F	[ 55] literal string: System.IdentityModel.Selectors
0x00291FF9	0x00000012	[ 55] literal string: System.Management
0x0029200B	0x00000011	[ 55] literal string: System.Messaging
0x0029201C	0x0000002D	[ 55] literal string: System.Runtime.Serialization.Formatters.Soap
0x00292049	0x00000014	[ 55] literal string: System.ServiceModel
0x0029205D	0x00000018	[ 55] literal string: System.ServiceModel.Web
0x00292075	0x00000016	[ 55] literal string: System.ServiceProcess
0x0029208B	0x00000014	[ 55] literal string: System.Transactions
0x0029209F	0x0000000B	[ 55] literal string: System.Web
0x002920AA	0x00000018	[ 55] literal string: System.Web.Abstractions
0x002920C2	0x00000017	[ 55] literal string: System.Web.DynamicData
0x002920D9	0x00000016	[ 55] literal string: System.Web.Extensions
0x002920EF	0x00000012	[ 55] literal string: System.Web.Mobile
0x00292101	0x00000013	[ 55] literal string: System.Web.Routing
0x00292114	0x00000014	[ 55] literal string: System.Web.Services
0x00292128	0x00000015	[ 55] literal string: System.Windows.Forms
0x0029213D	0x0000000B	[ 55] literal string: System.Xml
0x00292148	0x00000010	[ 55] literal string: System.Xml.Linq
0x00292158	0x0000000C	[ 55] literal string: WindowsBase
0x00292164	0x00000044	[ 55] literal string: Remapped public key token of retargetable assembly %s from %s to %s
0x002921A8	0x00000011	[ 55] literal string: Microsoft.CSharp
0x002921B9	0x00000011	[ 55] literal string: 31bf3856ad364e35
0x002921CA	0x00000011	[ 55] literal string: b03f5f7f11d50a3a
0x002921DB	0x00000011	[ 55] literal string: 7cec85d7bea7798e
0x002921EC	0x00000011	[ 55] literal string: b77a5c561934e089
0x002921FD	0x00000011	[ 55] literal string: ddd0da4d3e678217
0x0029220E	0x00000010	[ 55] literal string: System.Numerics
0x0029221E	0x0000000F	[ 55] literal string: System.Windows
0x0029222D	0x00000019	[ 55] literal string: System.Xml.Serialization
0x00292246	0x0000000C	[ 55] literal string: %u.%u.%u.%u
0x00292252	0x00000021	[ 55] literal string: 00000000000000000400000000000000
0x00292273	0x00000002	[ 55] literal string: .
0x00292275	0x00000005	[ 55] literal string: %s%c
0x0029227A	0x00000010	[ 55] literal string: MONO_GAC_PREFIX
0x0029228A	0x00000040	[ 55] literal string: '%s' in MONO_GAC_PREFIX doesn't exist or has wrong permissions.
0x002922D0	0x00000008	[ 56] literal string: disable
0x002922D8	0x00000019	[ 56] literal string: /tmp/.mono_attach_pid%jd
0x002922FF	0x0000002B	[ 56] literal string: ../../../../../mono/mono/metadata/attach.c
0x0029232A	0x00000017	[ 56] literal string: receiver_thread_handle
0x00292341	0x0000001E	[ 56] literal string: attach: Listening on '%s'...

0x0029235F	0x00000005	[ 56] literal string: MONO
0x00292364	0x00000031	[ 56] literal string: attach: message from server has unknown header.

0x00292395	0x00000007	[ 56] literal string: attach
0x0029239C	0x00000018	[ 56] literal string: !strcmp (cmd, "attach")
0x002923B4	0x0000001D	[ 56] literal string: attach: Loading agent '%s'.

0x002923E0	0x00000019	[ 56] literal string: type == PRIM_TYPE_STRING
0x002923F9	0x00000013	[ 56] literal string: length < (1 << 16)
0x0029240C	0x00000014	[ 56] literal string: p + length <= limit
0x00292420	0x00000011	[ 56] literal string: *endbuf <= limit
0x00292431	0x0000004A	[ 56] literal string: attach: disabled listening on an IPC socket when running in setuid mode.

0x0029247B	0x00000024	[ 56] literal string: attach: failed to create IPC socket
0x0029249F	0x0000001F	[ 56] literal string: attach: getpwuid_r () failed.

0x002924BE	0x00000003	[ 56] literal string: pw
0x002924C1	0x0000000D	[ 56] literal string: /tmp/mono-%s
0x002924CE	0x00000018	[ 56] literal string: attach: lstat () failed
0x002924E6	0x00000027	[ 56] literal string: attach: path '%s' is not a directory.

0x0029250D	0x0000003A	[ 56] literal string: attach: directory '%s' is not owned by the current user.

0x00292547	0x00000035	[ 56] literal string: attach: directory '%s' should have protection 0700.

0x0029257C	0x00000018	[ 56] literal string: attach: mkdir () failed
0x00292594	0x0000000D	[ 56] literal string: %s/.mono-%jd
0x002925A1	0x0000002C	[ 56] literal string: attach: failed to bind IPC socket '%s': %s

0x002925CD	0x00000030	[ 56] literal string: attach: failed to set permissions on IPC socket
0x002925FD	0x0000001E	[ 56] literal string: attach: listen () failed: %s

0x0029261B	0x00000018	[ 56] literal string: unix://%s/.mono-%jd?/vm
0x00292640	0x00000013	[ 56] literal string: attach: Connected.
0x00292660	0x00000016	[ 56] literal string: attach: Disconnected.
0x00292676	0x0000002A	[ 58] literal string: ../../../../../mono/mono/metadata/class.c
0x002926A0	0x00000030	[ 58] literal string: Image with self-referencing typeref token %08x.
0x002926D0	0x00000043	[ 58] literal string: TypeRef ResolutionScope not yet handled (%d) for %s.%s in image %s
0x00292713	0x0000002B	[ 58] literal string: Image with invalid assemblyref token %08x.
0x0029273E	0x0000001C	[ 58] literal string: image->references [idx - 1]
0x0029275A	0x00000027	[ 58] literal string: Could not resolve type with token %08x
0x00292781	0x00000012	[ 58] literal string: klass->is_generic
0x00292793	0x00000013	[ 58] literal string: klass->is_inflated
0x002927A6	0x0000002B	[ 58] literal string: Could not inflate generic method due to %s
0x002927D1	0x0000002A	[ 58] literal string: !iresult->declaring->klass->generic_class
0x002927FB	0x0000002C	[ 58] literal string: Could not resolve signature of method %s:%s
0x00292827	0x00000013	[ 58] literal string: method->is_generic
0x0029283A	0x0000000A	[ 58] literal string: $PRIVATE$
0x00292844	0x00000035	[ 58] literal string: image_is_dynamic (class->image) || field->offset > 0
0x00292879	0x00000027	[ 58] literal string: Generic type definition failed to load
0x002928A0	0x00000026	[ 58] literal string: Could not inflate method %s due to %s
0x002928C6	0x00000023	[ 58] literal string: Could not load method %d due to %s
0x002928E9	0x0000002A	[ 58] literal string: index >= 0 && index < class->method.count
0x00292913	0x00000018	[ 58] literal string: method->klass == gklass
0x0029292B	0x00000018	[ 58] literal string: !gklass->exception_type
0x00292943	0x00000029	[ 58] literal string: Failed to load generic definition vtable
0x0029296C	0x00000024	[ 58] literal string: Failed to load generic parameter %d
0x00292990	0x0000002A	[ 58] literal string: Could not resolve %s interfaces due to %s
0x002929BA	0x00000019	[ 58] literal string: Parent %s failed to load
0x002929D3	0x00000023	[ 58] literal string: Could not inflate method due to %s
0x002929F6	0x0000001F	[ 58] literal string: method->slot == stelemref_slot
0x00292A15	0x00000020	[ 58] literal string: vtable [im_slot] == override_im
0x00292A35	0x00000038	[ 58] literal string: Method %s overrides method '%s' which is not accessible
0x00292A6D	0x00000016	[ 58] literal string: cm->slot < max_vtsize
0x00292A83	0x00000011	[ 58] literal string: decl->slot != -1
0x00292A94	0x00000039	[ 58] literal string: Type %s has invalid vtable method slot %d with method %s
0x00292ACD	0x0000001F	[ 58] literal string: cur_slot == class->vtable_size
0x00292AEC	0x00000032	[ 58] literal string: VTable %s (vtable entries = %d, interfaces = %d)

0x00292B1E	0x0000002C	[ 58] literal string:   slot assigned: %03d, slot index: %03d %s

0x00292B4A	0x00000021	[ 58] literal string: Interfaces %s.%s (max_iid = %d)

0x00292B6B	0x00000037	[ 58] literal string:   slot offset: %03d, method count: %03d, iid: %03d %s

0x00292BA2	0x0000003E	[ 58] literal string:   parent slot offset: %03d, method count: %03d, iid: %03d %s

0x00292BE0	0x0000001F	[ 58] literal string: VTable setup of type %s failed
0x00292BFF	0x0000001D	[ 58] literal string: method->klass->generic_class
0x00292C1C	0x00000017	[ 58] literal string: method->klass->methods
0x00292C33	0x00000020	[ 58] literal string: i < method->klass->method.count
0x00292C53	0x00000010	[ 58] literal string: gklass->methods
0x00292C63	0x00000013	[ 58] literal string: method->slot != -1
0x00292C76	0x00000023	[ 58] literal string: Recursive type definition detected
0x00292C99	0x00000026	[ 58] literal string: Generic Type Defintion failed to init
0x00292CBF	0x0000001E	[ 58] literal string: Invalid generic instantiation
0x00292CDD	0x00000023	[ 58] literal string: class->vtable_size > finalize_slot
0x00292D00	0x0000000F	[ 58] literal string: TypedReference
0x00292D0F	0x00000008	[ 58] literal string: Boolean
0x00292D17	0x00000005	[ 58] literal string: Byte
0x00292D1C	0x00000005	[ 58] literal string: Char
0x00292D21	0x00000007	[ 58] literal string: Double
0x00292D28	0x00000006	[ 58] literal string: Int32
0x00292D2E	0x00000006	[ 58] literal string: Int16
0x00292D34	0x00000006	[ 58] literal string: Int64
0x00292D3A	0x00000007	[ 58] literal string: IntPtr
0x00292D41	0x00000007	[ 58] literal string: Single
0x00292D48	0x00000006	[ 58] literal string: SByte
0x00292D4E	0x00000007	[ 58] literal string: UInt32
0x00292D55	0x00000007	[ 58] literal string: UInt16
0x00292D5C	0x00000007	[ 58] literal string: UInt64
0x00292D63	0x00000008	[ 58] literal string: UIntPtr
0x00292D6B	0x00000005	[ 58] literal string: Void
0x00292D70	0x00000009	[ 58] literal string: Delegate
0x00292D79	0x0000001F	[ 58] literal string: mono_class_is_nullable (klass)
0x00292D98	0x00000004	[ 58] literal string: %s*
0x00292D9C	0x00000030	[ 58] literal string: mono_class_from_mono_type: implement me 0x%02x

0x00292DCC	0x0000000C	[ 58] literal string: rank <= 255
0x00292DD8	0x00000006	[ 58] literal string: Array
0x00292DDE	0x00000050	[ 58] literal string: Only incomplete TypeBuilder objects are allowed to be an enum without base_type
0x00292E2E	0x00000033	[ 58] literal string: eclass->ref_info_handle && !eclass->wastypebuilder
0x00292E61	0x0000003F	[ 58] literal string: mono_metadata_token_code (field_token) == MONO_TOKEN_FIELD_DEF
0x00292EA0	0x00000031	[ 58] literal string: field->type->attrs & FIELD_ATTRIBUTE_HAS_DEFAULT
0x00292ED1	0x00000036	[ 58] literal string: !(field->type->attrs & FIELD_ATTRIBUTE_HAS_FIELD_RVA)
0x00292F07	0x00000031	[ 58] literal string: property->attrs & PROPERTY_ATTRIBUTE_HAS_DEFAULT
0x00292F38	0x00000013	[ 58] literal string: DynamicType 0x%08x
0x00292F4B	0x0000001A	[ 58] literal string: Invalid type token 0x%08x
0x00292F65	0x00000026	[ 58] literal string: Invalid type token 0x%08x due to '%s'
0x00292F8B	0x00000010	[ 58] literal string: Typespec 0x%08x
0x00292F9B	0x00000026	[ 58] literal string: Bad token table for dynamic image: %x
0x00292FC1	0x00000016	[ 58] literal string: Unknown type token %x
0x00292FD7	0x00000037	[ 58] literal string: overrwritting old token %x on image %s for type %s::%s
0x0029300E	0x00000018	[ 58] literal string: !mono_error_ok (&error)
0x00293026	0x00000025	[ 58] literal string: image->references [assembly_idx - 1]
0x0029304B	0x00000014	[ 58] literal string: not yet implemented
0x0029305F	0x0000003C	[ 58] literal string: Could not lookup class cctor from cached metadata due to %s
0x0029309B	0x0000003A	[ 58] literal string: Could not lookup finalizer from cached metadata due to %s
0x002930D5	0x00000035	[ 58] literal string: unknown type 0x%02x in mono_class_array_element_size
0x0029310A	0x00000009	[ 58] literal string: ac->rank
0x00293113	0x00000011	[ 58] literal string: tmp_handle_class
0x00293124	0x0000000F	[ 58] literal string: Bad ldtoken %x
0x00293133	0x00000026	[ 58] literal string: Could not load field's type due to %s
0x00293159	0x00000016	[ 58] literal string: Inflated methods size
0x0029316F	0x00000011	[ 58] literal string: Inflated classes
0x00293180	0x00000016	[ 58] literal string: Inflated classes size
0x00293196	0x0000000F	[ 58] literal string: MonoClass size
0x002931A5	0x00000012	[ 58] literal string: MonoClassExt size
0x002931B7	0x00000010	[ 58] literal string: klass->enumtype
0x002931C7	0x0000001F	[ 58] literal string: Could not setup the interfaces
0x002931E6	0x0000001A	[ 58] literal string: !image_is_dynamic (image)
0x00293200	0x00000028	[ 58] literal string: Could not load field %d type due to: %s
0x00293228	0x00000024	[ 58] literal string: Could not verify field %s signature
0x0029324C	0x0000000D	[ 58] literal string: *sig == 0x06
0x00293259	0x0000001D	[ 58] literal string: Could not load field %s type
0x00293276	0x00000030	[ 58] literal string: field %s in %s should have RVA data, but hasn't
0x002932A6	0x00000013	[ 58] literal string: DynamicAssembly %s
0x002932B9	0x00000021	[ 58] literal string: [Could not resolve assembly name
0x002932DA	0x00000038	[ 58] literal string: index >= 0 && index < prop->parent->ext->property.count
0x00293312	0x00000031	[ 58] literal string: index >= 0 && index < field->parent->field.count
0x00293343	0x00000013	[ 58] literal string: MonoFNPtrFakeClass
0x00293356	0x00000022	[ 58] literal string: Failed to setup parent interfaces
0x00293378	0x00000019	[ 58] literal string: Invalid typedef token %x
0x00293391	0x00000023	[ 58] literal string: Cycle found while resolving parent
0x002933B4	0x0000002D	[ 58] literal string: Parent extends generic instance of this type
0x002933E1	0x00000018	[ 58] literal string: class->field.count == 0
0x002933F9	0x00000036	[ 58] literal string: Could not load generic parameter constrains due to %s
0x0029342F	0x0000000A	[ 58] literal string: Mono.Simd
0x00293439	0x00000007	[ 58] literal string: Vector
0x00293440	0x00000003	[ 58] literal string: 2d
0x00293443	0x00000004	[ 58] literal string: 2ul
0x00293447	0x00000003	[ 58] literal string: 2l
0x0029344A	0x00000003	[ 58] literal string: 4f
0x0029344D	0x00000004	[ 58] literal string: 4ui
0x00293451	0x00000003	[ 58] literal string: 4i
0x00293454	0x00000003	[ 58] literal string: 8s
0x00293457	0x00000004	[ 58] literal string: 8us
0x0029345B	0x00000004	[ 58] literal string: 16b
0x0029345F	0x00000005	[ 58] literal string: 16sb
0x00293464	0x0000001B	[ 58] literal string: Invalid field signature %x
0x0029347F	0x00000034	[ 58] literal string: Invalid field signature %x, expected 0x6 but got %x
0x002934B3	0x0000002C	[ 58] literal string: Could not parse type for field signature %x
0x002934DF	0x00000019	[ 58] literal string: Could not find base type
0x002934F8	0x00000020	[ 58] literal string: record_gclass_instantiation > 0
0x00293518	0x000000DF	[ 58] literal string: Cannot resolve dependency to assembly '%s' because it has not been preloaded. When using the ReflectionOnly APIs, dependent assemblies must be pre-loaded or loaded on demand through the ReflectionOnlyAssemblyResolve event.
0x002935F7	0x00000041	[ 58] literal string: Could not load file or assembly '%s' or one of its dependencies.
0x00293638	0x0000000C	[ 58] literal string: GetHashCode
0x00293644	0x0000000D	[ 58] literal string: ghc_slot > 0
0x00293651	0x00000012	[ 58] literal string: finalize_slot > 0
0x00293663	0x00000020	[ 58] literal string: MONO_CLASS_IS_INTERFACE (class)
0x00293683	0x00000010	[ 58] literal string: generic_id != 0
0x00293693	0x00000027	[ 58] literal string: Interface: assigned id %d to %s|%s|%d

0x002936BA	0x0000000D	[ 58] literal string: iid <= 65535
0x002936C7	0x00000007	[ 58] literal string: (null)
0x002936CE	0x00000012	[ 58] literal string: result == len - 1
0x002936E0	0x0000001F	[ 58] literal string: !class->parent->exception_type
0x002936FF	0x00000010	[ 58] literal string: InternalArray__
0x0029370F	0x0000001E	[ 58] literal string: InternalArray__IReadOnlyList_
0x0029372D	0x00000024	[ 58] literal string: InternalArray__IReadOnlyCollection_
0x00293751	0x0000001C	[ 58] literal string: InternalArray__ICollection_
0x0029376D	0x0000002A	[ 58] literal string: System.Collections.Generic.ICollection`1.
0x00293797	0x0000001C	[ 58] literal string: InternalArray__IEnumerable_
0x002937B3	0x0000002A	[ 58] literal string: System.Collections.Generic.IEnumerable`1.
0x002937DD	0x0000002C	[ 58] literal string: System.Collections.Generic.IReadOnlyList`1.
0x00293809	0x00000032	[ 58] literal string: System.Collections.Generic.IReadOnlyCollection`1.
0x0029383B	0x00000024	[ 58] literal string: System.Collections.Generic.IList`1.
0x0029385F	0x00000031	[ 58] literal string: Packed interface table for class %s has size %d

0x00293890	0x0000003C	[ 58] literal string:   [%03d][UUID %03d][SLOT %03d][SIZE  %03d] interface %s.%s

0x002938CC	0x00000012	[ 58] literal string: Interface flags: 
0x002938DE	0x00000007	[ 58] literal string: (%d,T)
0x002938E5	0x00000007	[ 58] literal string: (%d,F)
0x002938EC	0x00000016	[ 58] literal string: Dump interface flags:
0x00293902	0x00000006	[ 58] literal string:  %02X
0x00293908	0x00000030	[ 58] literal string: [LEVEL %d] Implemented interfaces by class %s:

0x00293938	0x00000019	[ 58] literal string:   Type failed due to %s

0x00293951	0x0000001A	[ 58] literal string:   [UIID %d] interface %s

0x0029396B	0x00000016	[ 58] literal string: MONO_DISABLE_WCF_HACK
0x00293981	0x00000028	[ 58] literal string:  at slot %d: %s (%d) overrides %s (%d)

0x002939A9	0x0000003F	[ 58] literal string: no implementation for interface method %s::%s(%s) in class %s

0x002939E8	0x00000024	[ 58] literal string: CLASS %s failed to resolve methods

0x00293A0C	0x0000000F	[ 58] literal string: METHOD %s(%s)

0x00293A1B	0x00000034	[ 58] literal string: Could not resolve the signature of a virtual method
0x00293A4F	0x00000016	[ 58] literal string: IReadOnlyCollection`1
0x00293A65	0x0000003A	[ 58] literal string: Method belongs to a different class than the declared one
0x00293A9F	0x00000032	[ 58] literal string: Method must not be static to override a base type
0x00293AD1	0x0000002F	[ 58] literal string: Method must be virtual to override a base type
0x00293B00	0x0000002F	[ 58] literal string: Cannot override a static method in a base type
0x00293B2F	0x00000034	[ 58] literal string: Cannot override a non virtual method in a base type
0x00293B63	0x00000050	[ 58] literal string: Method overrides a class or interface that extended or implemented by this type
0x00293BB3	0x00000028	[ 58] literal string: Could not load list of method overrides
0x00293BDB	0x0000002D	[ 58] literal string: Error getting the interfaces of %s due to %s
0x00293C08	0x00000008	[ 58] literal string: io >= 0
0x00293C10	0x0000002F	[ 58] literal string: class == class->supertypes [class->idepth - 1]
0x00293C3F	0x00000029	[ 58] literal string: Error calculating interface offset of %s
0x00293C68	0x00000018	[ 58] literal string: ienumerator_offset >= 0
0x00293C80	0x00000048	[ 58] literal string: ilist_offset >= 0 && icollection_offset >= 0 && ienumerable_offset >= 0
0x00293CC8	0x0000003A	[ 58] literal string: class->interface_offsets_count == interface_offsets_count
0x00293D02	0x00000014	[ 58] literal string: Error Loading class
0x00293D16	0x00000019	[ 58] literal string: could not resolve %s:%s

0x00293D2F	0x00000021	[ 58] literal string: Missing field layout info for %s
0x00293D50	0x00000028	[ 58] literal string: Invalid negative field offset %d for %s
0x00293D78	0x0000002B	[ 58] literal string: Generic class cannot have explicit layout.
0x00293DA3	0x00000029	[ 58] literal string: Invalid type %s for instance field %s:%s
0x00293DCC	0x00000047	[ 58] literal string: MVAR %d (%s) cannot be expanded in this context with %d instantiations
0x00293E13	0x0000002F	[ 58] literal string: MVAR %d (%s) cannot be expanded with type 0x%x
0x00293E42	0x00000046	[ 58] literal string: VAR %d (%s) cannot be expanded in this context with %d instantiations
0x00293E88	0x0000002E	[ 58] literal string: VAR %d (%s) cannot be expanded with type 0x%x
0x00293EB6	0x00000003	[ 58] literal string: []
0x00293EB9	0x00000005	[ 58] literal string: %s%d
0x00293EBE	0x00000002	[ 58] literal string: !
0x00293EC0	0x00000003	[ 58] literal string: !!
0x00293EC3	0x00000005	[ 58] literal string: , %s
0x00293EC8	0x00000014	[ 59] literal string: mono_string_to_bstr
0x00293EDC	0x00000016	[ 59] literal string: mono_string_from_bstr
0x00293EF2	0x0000000F	[ 59] literal string: mono_free_bstr
0x00293F01	0x0000002F	[ 59] literal string: ../../../../../mono/mono/metadata/cominterop.c
0x00293F30	0x0000000A	[ 60] literal string: /dev/null
0x00293F3A	0x00000008	[ 60] literal string: COLUMNS
0x00293F42	0x00000006	[ 60] literal string: LINES
0x00293F48	0x00000008	[ 60] literal string: Console
0x00293F50	0x0000000F	[ 60] literal string: cancel_handler
0x00293F5F	0x00000031	[ 60] literal string: ../../../../../mono/mono/metadata/console-unix.c
0x00293F90	0x00000015	[ 60] literal string: cancel_handler_field
0x00293FA5	0x00000005	[ 61] literal string: char
0x00293FAA	0x00000005	[ 61] literal string: byte
0x00293FAF	0x00000006	[ 61] literal string: sbyte
0x00293FB5	0x00000005	[ 61] literal string: uint
0x00293FBA	0x00000004	[ 61] literal string: *()
0x00293FBE	0x00000008	[ 61] literal string: uintptr
0x00293FC6	0x00000007	[ 61] literal string: intptr
0x00293FCD	0x00000007	[ 61] literal string: single
0x00293FD4	0x00000005	[ 61] literal string: [%d]
0x00293FD9	0x00000002	[ 61] literal string: <
0x00293FDB	0x00000003	[ 61] literal string: ; 
0x00293FDE	0x00000002	[ 61] literal string: >
0x00293FE0	0x0000000B	[ 61] literal string: typedbyref
0x00293FEB	0x00000014	[ 61] literal string: <invalid signature>
0x00293FFF	0x00000002	[ 61] literal string: *
0x00294001	0x0000000A	[ 61] literal string: %s%s%s:%s
0x0029400B	0x0000000E	[ 61] literal string: (wrapper %s) 
0x00294019	0x0000000F	[ 61] literal string: %s%s:%s%s (%s)
0x00294028	0x0000000A	[ 61] literal string: %s%s:%s%s
0x00294032	0x00000008	[ 61] literal string: (null)

0x0029403A	0x00000020	[ 61] literal string: String at %p, length: %d, '%s'

0x0029405A	0x0000001E	[ 61] literal string:  at %p, rank: %d, length: %d

0x00294078	0x0000001B	[ 61] literal string:  object at %p (klass: %p)

0x00294093	0x00000016	[ 61] literal string: At %p (ofs: %2d) %s: 
0x002940A9	0x00000004	[ 61] literal string: %p

0x002940AD	0x0000001F	[ 61] literal string: %s ValueType (type: %p) at %p

0x002940CC	0x00000004	[ 61] literal string: %u

0x002940D0	0x00000006	[ 61] literal string: %lld

0x002940D6	0x00000006	[ 61] literal string: %llu

0x002940DC	0x00000004	[ 61] literal string: %f

0x002940E0	0x00000009	[ 61] literal string: %s (%d)

0x002940E9	0x00000005	[ 61] literal string: True
0x002940EE	0x00000006	[ 61] literal string: False
0x002940F4	0x00000012	[ 61] literal string: '%c' (%d 0x%04x)

0x00294106	0x00000032	[ 61] literal string: ../../../../../mono/mono/metadata/debug-helpers.c
0x00294138	0x0000000A	[ 61] literal string: In class 
0x00294142	0x00000007	[ 61] literal string: %s%s:

0x00294149	0x00000020	[ 61] literal string: wrapper_type < MONO_WRAPPER_NUM
0x00294169	0x00000006	[ 61] literal string: %-10s
0x0029416F	0x00000007	[ 61] literal string: 0x%08x
0x00294176	0x00000005	[ 61] literal string: "%s"
0x0029417B	0x00000003	[ 61] literal string: %g
0x0029417E	0x0000000A	[ 61] literal string: IL_%04x: 
0x00294188	0x00000008	[ 61] literal string: IL_%04x
0x00294190	0x00000008	[ 61] literal string: Unknown
0x00294198	0x00000004	[ 61] literal string: %s.
0x0029419C	0x00000011	[ 62] literal string: LoadedFromMemory
0x002941AD	0x00000007	[ 62] literal string: %s.mdb
0x002941B4	0x00000016	[ 62] literal string: stat of %s failed: %s
0x002941CA	0x00000022	[ 62] literal string: Unknown extended opcode %x in LNT
0x002941EC	0x00000022	[ 62] literal string: Unknown standard opcode %x in LNT
0x0029420E	0x00000037	[ 62] literal string: ../../../../../mono/mono/metadata/debug-mono-symfile.c
0x00294245	0x00000013	[ 62] literal string: end_column_numbers
0x00294258	0x00000029	[ 62] literal string: Symbol file %s is not a mono symbol file
0x00294281	0x0000003E	[ 62] literal string: Symbol file %s has incorrect version (expected %d.%d, got %d)
0x002942BF	0x00000026	[ 62] literal string: Symbol file %s doesn't match image %s
0x002942E5	0x00000002	[ 63] literal string: d
0x002942E7	0x0000002F	[ 63] literal string: ../../../../../mono/mono/metadata/decimal-ms.c
0x00294316	0x00000021	[ 63] literal string: sign == 0 || sign == DECIMAL_NEG
0x00294337	0x0000000F	[ 63] literal string: number != NULL
0x00294346	0x0000000F	[ 63] literal string: target != NULL
0x00294355	0x00000008	[ 63] literal string: ix >= 0
0x0029435D	0x0000000B	[ 63] literal string: dbl < 1E15
0x00294368	0x0000000C	[ 63] literal string: dbl >= 1E14
0x00294374	0x0000000C	[ 63] literal string: power <= 14
0x00294380	0x0000000A	[ 63] literal string: dbl < 1E7
0x0029438A	0x0000000B	[ 63] literal string: dbl >= 1E6
0x00294395	0x0000000B	[ 64] literal string: v4.0.30319
0x002943A0	0x0000002B	[ 64] literal string: ../../../../../mono/mono/metadata/domain.c
0x002943CB	0x00000033	[ 64] literal string: thread->abort_exc->object.vtable->domain != domain
0x002943FE	0x00000033	[ 64] literal string: thread->abort_exc->object.vtable->domain == domain
0x00294431	0x00000018	[ 64] literal string: cant unload root domain
0x00294449	0x00000037	[ 64] literal string: Unloading domain %s[%p], assembly %s[%p], ref_count=%d
0x00294480	0x00000021	[ 64] literal string: domain->num_jit_info_tables == 1
0x002944A1	0x0000001D	[ 64] literal string: !domain->jit_info_free_queue
0x002944BE	0x0000002E	[ 64] literal string: Cannot get runtime version from assembly `%s'
0x002944EC	0x00000063	[ 64] literal string: The Mono Debugger is currently using the `%s' runtime, but the assembly `%s' requires version `%s'
0x0029454F	0x0000000E	[ 64] literal string: configuration
0x0029455D	0x00000008	[ 64] literal string: startup
0x00294565	0x00000010	[ 64] literal string: requiredRuntime
0x00294575	0x00000008	[ 64] literal string: version
0x0029457D	0x00000011	[ 64] literal string: supportedRuntime
0x0029458E	0x00000021	[ 64] literal string: chunk->pos + size <= chunk->size
0x002945AF	0x00000006	[ 64] literal string: chunk
0x002945B5	0x0000001C	[ 64] literal string: Max native code in a domain
0x002945D1	0x00000025	[ 64] literal string: Max code space allocated in a domain
0x002945F6	0x0000001B	[ 64] literal string: Total code space allocated
0x00294611	0x0000004C	[ 64] literal string: WARNING: The runtime version supported by this application is unavailable.

0x0029465D	0x0000001B	[ 64] literal string: Using default runtime: %s

0x00294678	0x00000041	[ 64] literal string: The assembly mscorlib.dll was not found or could not be loaded.

0x002946B9	0x00000036	[ 64] literal string: It should have been installed in the `%s' directory.

0x002946EF	0x00000032	[ 64] literal string: The file %s/mscorlib.dll is an invalid CIL image

0x00294721	0x0000002F	[ 64] literal string: Missing assembly reference in %s/mscorlib.dll

0x00294750	0x00000020	[ 64] literal string: mono_defaults.object_class != 0
0x00294770	0x0000001E	[ 64] literal string: mono_defaults.void_class != 0
0x0029478E	0x00000021	[ 64] literal string: mono_defaults.boolean_class != 0
0x002947AF	0x0000001E	[ 64] literal string: mono_defaults.byte_class != 0
0x002947CD	0x0000001F	[ 64] literal string: mono_defaults.sbyte_class != 0
0x002947EC	0x0000001F	[ 64] literal string: mono_defaults.int16_class != 0
0x0029480B	0x00000020	[ 64] literal string: mono_defaults.uint16_class != 0
0x0029482B	0x0000001F	[ 64] literal string: mono_defaults.int32_class != 0
0x0029484A	0x00000020	[ 64] literal string: mono_defaults.uint32_class != 0
0x0029486A	0x0000001E	[ 64] literal string: mono_defaults.uint_class != 0
0x00294888	0x0000001D	[ 64] literal string: mono_defaults.int_class != 0
0x002948A5	0x0000001F	[ 64] literal string: mono_defaults.int64_class != 0
0x002948C4	0x00000020	[ 64] literal string: mono_defaults.uint64_class != 0
0x002948E4	0x00000020	[ 64] literal string: mono_defaults.single_class != 0
0x00294904	0x00000020	[ 64] literal string: mono_defaults.double_class != 0
0x00294924	0x0000001E	[ 64] literal string: mono_defaults.char_class != 0
0x00294942	0x00000020	[ 64] literal string: mono_defaults.string_class != 0
0x00294962	0x0000001E	[ 64] literal string: mono_defaults.enum_class != 0
0x00294980	0x0000001F	[ 64] literal string: mono_defaults.array_class != 0
0x0029499F	0x00000022	[ 64] literal string: mono_defaults.delegate_class != 0
0x002949C1	0x00000012	[ 64] literal string: MulticastDelegate
0x002949D3	0x0000002B	[ 64] literal string: mono_defaults.multicastdelegate_class != 0
0x002949FE	0x00000022	[ 64] literal string: System.Runtime.Remoting.Messaging
0x00294A20	0x0000000C	[ 64] literal string: AsyncResult
0x00294A2C	0x00000025	[ 64] literal string: mono_defaults.asyncresult_class != 0
0x00294A51	0x00000011	[ 64] literal string: ManualResetEvent
0x00294A62	0x0000002A	[ 64] literal string: mono_defaults.manualresetevent_class != 0
0x00294A8C	0x00000012	[ 64] literal string: RuntimeTypeHandle
0x00294A9E	0x00000024	[ 64] literal string: mono_defaults.typehandle_class != 0
0x00294AC2	0x00000014	[ 64] literal string: RuntimeMethodHandle
0x00294AD6	0x00000026	[ 64] literal string: mono_defaults.methodhandle_class != 0
0x00294AFC	0x00000013	[ 64] literal string: RuntimeFieldHandle
0x00294B0F	0x00000025	[ 64] literal string: mono_defaults.fieldhandle_class != 0
0x00294B34	0x00000024	[ 64] literal string: mono_defaults.systemtype_class != 0
0x00294B58	0x00000022	[ 64] literal string: mono_defaults.monotype_class != 0
0x00294B7A	0x00000023	[ 64] literal string: mono_defaults.exception_class != 0
0x00294B9D	0x00000015	[ 64] literal string: ThreadAbortException
0x00294BB2	0x0000002E	[ 64] literal string: mono_defaults.threadabortexception_class != 0
0x00294BE0	0x00000007	[ 64] literal string: Thread
0x00294BE7	0x00000020	[ 64] literal string: mono_defaults.thread_class != 0
0x00294C07	0x0000000F	[ 64] literal string: InternalThread
0x00294C16	0x00000022	[ 64] literal string: Corlib too old for this runtime.

0x00294C38	0x00000011	[ 64] literal string: Loaded from: %s

0x00294C49	0x0000000A	[ 64] literal string: AppDomain
0x00294C53	0x00000023	[ 64] literal string: mono_defaults.appdomain_class != 0
0x00294C76	0x00000012	[ 64] literal string: MonoMethodMessage
0x00294C88	0x0000002D	[ 64] literal string: mono_defaults.mono_method_message_class != 0
0x00294CB5	0x0000000A	[ 64] literal string: FieldInfo
0x00294CBF	0x00000024	[ 64] literal string: mono_defaults.field_info_class != 0
0x00294CE3	0x0000000B	[ 64] literal string: MethodInfo
0x00294CEE	0x00000025	[ 64] literal string: mono_defaults.method_info_class != 0
0x00294D13	0x00000027	[ 64] literal string: mono_defaults.stringbuilder_class != 0
0x00294D3A	0x00000005	[ 64] literal string: Math
0x00294D3F	0x0000001E	[ 64] literal string: mono_defaults.math_class != 0
0x00294D5D	0x0000000B	[ 64] literal string: StackFrame
0x00294D68	0x00000025	[ 64] literal string: mono_defaults.stack_frame_class != 0
0x00294D8D	0x0000000B	[ 64] literal string: StackTrace
0x00294D98	0x00000025	[ 64] literal string: mono_defaults.stack_trace_class != 0
0x00294DBD	0x00000008	[ 64] literal string: Marshal
0x00294DC5	0x00000021	[ 64] literal string: mono_defaults.marshal_class != 0
0x00294DE6	0x00000029	[ 64] literal string: mono_defaults.typed_reference_class != 0
0x00294E0F	0x00000016	[ 64] literal string: RuntimeArgumentHandle
0x00294E25	0x00000028	[ 64] literal string: mono_defaults.argumenthandle_class != 0
0x00294E4D	0x00000008	[ 64] literal string: Monitor
0x00294E55	0x00000021	[ 64] literal string: mono_defaults.monitor_class != 0
0x00294E76	0x00000015	[ 64] literal string: RuntimeSecurityFrame
0x00294E8B	0x00000011	[ 64] literal string: ExecutionContext
0x00294E9C	0x0000001C	[ 64] literal string: InternalsVisibleToAttribute
0x00294EB8	0x00000024	[ 64] literal string: System.Runtime.ConstrainedExecution
0x00294EDC	0x00000018	[ 64] literal string: CriticalFinalizerObject
0x00294EF4	0x0000000B	[ 64] literal string: SafeHandle
0x00294EFF	0x0000000A	[ 64] literal string: HandleRef
0x00294F09	0x0000000A	[ 64] literal string: Attribute
0x00294F13	0x00000014	[ 64] literal string: CustomAttributeData
0x00294F27	0x0000000B	[ 64] literal string: Nullable`1
0x00294F32	0x00000008	[ 65] literal string: 0.0.0.0
0x00294F3A	0x0000002E	[ 66] literal string: ../../../../../mono/mono/metadata/exception.c
0x00294F68	0x0000000A	[ 66] literal string: o != NULL
0x00294F72	0x00000016	[ 66] literal string: DivideByZeroException
0x00294F88	0x0000001B	[ 66] literal string: ThreadInterruptedException
0x00294FA3	0x0000001A	[ 66] literal string: InvalidOperationException
0x00294FBD	0x0000001C	[ 66] literal string: ArgumentOutOfRangeException
0x00294FD9	0x00000015	[ 66] literal string: ThreadStateException
0x00294FEE	0x0000000C	[ 66] literal string: IOException
0x00294FFA	0x0000001D	[ 66] literal string: SynchronizationLockException
0x00295017	0x0000001F	[ 66] literal string: CannotUnloadAppDomainException
0x00295036	0x0000001B	[ 66] literal string: AppDomainUnloadedException
0x00295051	0x0000001C	[ 66] literal string: ReflectionTypeLoadException
0x0029506D	0x00000018	[ 66] literal string: RuntimeWrappedException
0x00295085	0x00000021	[ 66] literal string: managed backtrace not available

0x002950A6	0x0000000A	[ 66] literal string: exception
0x002950B0	0x0000001D	[ 66] literal string: <unknown native frame 0x%x>

0x002950CD	0x00000028	[ 67] literal string: array too small. numBytes/offset wrong.
0x002950F5	0x0000002C	[ 67] literal string: System.IO.SeekOrigin has unknown value 0x%x
0x00295121	0x0000002A	[ 67] literal string: System.IO.FileMode has unknown value 0x%x
0x0029514B	0x0000002B	[ 67] literal string: System.IO.FileShare has unknown value 0x%x
0x00295176	0x0000002C	[ 67] literal string: System.IO.FileAccess has unknown value 0x%x
0x002951A2	0x00000034	[ 68] literal string: ../../../../../mono/mono/metadata/file-mmap-posix.c
0x002951D6	0x00000010	[ 68] literal string: path || mapName
0x002951E6	0x00000022	[ 68] literal string: unknown MemoryMappedFileAccess %d
0x00295208	0x00000018	[ 68] literal string: /mono.anonmap.XXXXXXXXX
0x00295220	0x00000016	[ 68] literal string: Invalid init state %d
0x00295236	0x00000014	[ 68] literal string: unknown FileMode %d
0x0029524A	0x00000030	[ 70] literal string: ../../../../../mono/mono/metadata/gc-memfuncs.c
0x0029527A	0x0000001C	[ 70] literal string: unaligned_bytes (dest) == 0
0x00295296	0x0000001B	[ 70] literal string: unaligned_bytes (src) == 0
0x002952B1	0x00000027	[ 71] literal string: ../../../../../mono/mono/metadata/gc.c
0x002952D8	0x00000015	[ 71] literal string: Minor GC collections
0x002952ED	0x00000015	[ 71] literal string: Major GC collections
0x00295302	0x0000000E	[ 71] literal string: Minor GC time
0x00295310	0x0000000E	[ 71] literal string: Major GC time
0x0029531E	0x00000019	[ 71] literal string: Major GC time concurrent
0x00295337	0x0000002A	[ 71] literal string: Shutting down finalizer thread timed out.
0x00295361	0x00000015	[ 71] literal string: ret == WAIT_OBJECT_0
0x00295376	0x0000000A	[ 71] literal string: Finalizer
0x00295380	0x0000002E	[ 71] literal string: mono_domain_get () == mono_get_root_domain ()
0x002953AE	0x00000016	[ 71] literal string: !handles->entries [i]
0x002953C4	0x0000002A	[ 72] literal string: ../../../../../mono/mono/metadata/icall.c
0x002953EE	0x00000016	[ 72] literal string: method->slot < nslots
0x00295404	0x00000007	[ 72] literal string: .cctor
0x0029540B	0x00000026	[ 72] literal string: class %s should come before class %s

0x00295431	0x00000028	[ 72] literal string: method %s should come before method %s

0x00295459	0x0000000F	[ 72] literal string: method != NULL
0x00295468	0x00000043	[ 72] literal string: cant resolve internal call to "%s" (tested without signature also)
0x002954AB	0x00000039	[ 72] literal string: 
Your mono runtime and class libraries are out of sync.

0x002954E4	0x00000020	[ 72] literal string: The out of sync library is: %s

0x00295504	0x00000056	[ 72] literal string: 
When you update one from git you need to update, compile and install
the other too.

0x0029555A	0x00000075	[ 72] literal string: Do not report this as a bug unless you're sure you have updated correctly:
you probably have a broken mono install.

0x002955CF	0x00000050	[ 72] literal string: If you see other errors or faults after this message they are probably related

0x0029561F	0x0000002E	[ 72] literal string: and you need to fix your mono install first.

0x0029564D	0x0000004D	[ 72] literal string: icall symbol maps not enabled, pass --enable-icall-symbol-map to configure.

0x0029569A	0x00000002	[ 72] literal string:  
0x0029569C	0x00000014	[ 72] literal string: jit_icall_hash_name
0x002956B0	0x00000014	[ 72] literal string: jit_icall_hash_addr
0x002956C4	0x00000005	[ 72] literal string: func
0x002956C9	0x00000005	[ 72] literal string: name
0x002956CE	0x00000020	[ 72] literal string: jit icall already defined "%s"

0x002956EE	0x00000004	[ 72] literal string: int
0x002956F2	0x00000006	[ 72] literal string: int32
0x002956F8	0x00000007	[ 72] literal string: uint32
0x002956FF	0x00000005	[ 72] literal string: int8
0x00295704	0x00000006	[ 72] literal string: uint8
0x0029570A	0x00000006	[ 72] literal string: int16
0x00295710	0x00000007	[ 72] literal string: uint16
0x00295717	0x00000005	[ 72] literal string: long
0x0029571C	0x00000006	[ 72] literal string: ulong
0x00295722	0x00000006	[ 72] literal string: float
0x00295728	0x00000007	[ 72] literal string: double
0x0029572F	0x00000004	[ 72] literal string: obj
0x00295733	0x00000007	[ 72] literal string: string
0x0029573A	0x00000005	[ 72] literal string: bool
0x0029573F	0x00000008	[ 72] literal string: boolean
0x00295747	0x00000009	[ 72] literal string: _Deleted
0x00295750	0x00000005	[ 72] literal string: that
0x00295755	0x0000000D	[ 72] literal string: type != NULL
0x00295762	0x00000030	[ 72] literal string: ../../../../../mono/mono/metadata/icall.c:1290:
0x00295792	0x00000013	[ 72] literal string: IS_MONOTYPE (type)
0x002957A5	0x0000000E	[ 72] literal string: typeArguments
0x002957B3	0x0000001A	[ 72] literal string: Invalid generic arguments
0x002957CD	0x00000008	[ 72] literal string: Decimal
0x002957D5	0x00000009	[ 72] literal string: DateTime
0x002957DE	0x00000007	[ 72] literal string: DBNull
0x002957E5	0x00000029	[ 72] literal string: type 0x%02x not handled in GetTypeCode()
0x0029580E	0x00000022	[ 72] literal string: is_generic_parameter (type->type)
0x00295830	0x00000006	[ 72] literal string: utf_8
0x00295836	0x00000006	[ 72] literal string: ascii
0x0029583C	0x00000009	[ 72] literal string: us_ascii
0x00295845	0x00000003	[ 72] literal string: us
0x00295848	0x0000000F	[ 72] literal string: ansi_x3.4_1968
0x00295857	0x0000000F	[ 72] literal string: ansi_x3.4_1986
0x00295866	0x00000006	[ 72] literal string: cp367
0x0029586C	0x00000008	[ 72] literal string: csascii
0x00295874	0x00000007	[ 72] literal string: ibm367
0x0029587B	0x00000009	[ 72] literal string: iso_ir_6
0x00295884	0x0000000A	[ 72] literal string: iso646_us
0x0029588E	0x00000011	[ 72] literal string: iso_646.irv:1991
0x0029589F	0x00000006	[ 72] literal string: utf_7
0x002958A5	0x00000010	[ 72] literal string: csunicode11utf7
0x002958B5	0x00000012	[ 72] literal string: unicode_1_1_utf_7
0x002958C7	0x00000012	[ 72] literal string: unicode_2_0_utf_7
0x002958D9	0x00000014	[ 72] literal string: x_unicode_1_1_utf_7
0x002958ED	0x00000014	[ 72] literal string: x_unicode_2_0_utf_7
0x00295901	0x00000012	[ 72] literal string: unicode_1_1_utf_8
0x00295913	0x00000012	[ 72] literal string: unicode_2_0_utf_8
0x00295925	0x00000014	[ 72] literal string: x_unicode_1_1_utf_8
0x00295939	0x00000014	[ 72] literal string: x_unicode_2_0_utf_8
0x0029594D	0x00000007	[ 72] literal string: utf_16
0x00295954	0x00000009	[ 72] literal string: UTF_16LE
0x0029595D	0x00000006	[ 72] literal string: ucs_2
0x00295963	0x00000008	[ 72] literal string: unicode
0x0029596B	0x0000000F	[ 72] literal string: iso_10646_ucs2
0x0029597A	0x0000000C	[ 72] literal string: unicodefffe
0x00295986	0x00000009	[ 72] literal string: utf_16be
0x0029598F	0x0000000B	[ 72] literal string: iso_8859_1
0x0029599A	0x00000005	[ 72] literal string: type
0x0029599F	0x0000001C	[ 72] literal string: Type cannot be instantiated
0x002959BB	0x00000011	[ 72] literal string: klass->rank == 1
0x002959CC	0x00000007	[ 72] literal string: handle
0x002959D3	0x00000016	[ 72] literal string: assertion `%s' failed
0x002959E9	0x00000006	[ 72] literal string: klass
0x002959EF	0x00000006	[ 72] literal string: array
0x002959F5	0x0000002F	[ 72] literal string: Cannot initialize array of non-primitive type.
0x00295A24	0x0000000D	[ 72] literal string: field_handle
0x00295A31	0x0000001A	[ 72] literal string: Field doesn't have an RVA
0x00295A4B	0x00000025	[ 72] literal string: Field not large enough to fill array
0x00295A70	0x0000000D	[ 72] literal string: MonoProperty
0x00295A7D	0x00000041	[ 72] literal string: Custom modifiers on a ParamInfo with member %s are not supported
0x00295ABE	0x0000001F	[ 72] literal string: System.Runtime.InteropServices
0x00295ADD	0x00000013	[ 72] literal string: DllImportAttribute
0x00295AF0	0x00000018	[ 72] literal string: DllImportAttributeClass
0x00295B08	0x0000003F	[ 72] literal string: System.Reflection.Emit method with invalid pinvoke information
0x00295B47	0x0000005D	[ 72] literal string: It is illegal to set the value on a field on a type loaded using the ReflectionOnly methods.
0x00295BA4	0x00000025	[ 72] literal string: !gclass->context.class_inst->is_open
0x00295BC9	0x0000003E	[ 72] literal string: type 0x%x not handled in ves_icall_FieldInfo_SetValueInternal
0x00295C07	0x0000005D	[ 72] literal string: It is illegal to get the value on a field on a type loaded using the ReflectionOnly methods.
0x00295C64	0x00000027	[ 72] literal string: fidx >= 0 && fidx < klass->field.count
0x00295C8B	0x0000000B	[ 72] literal string: klass->ext
0x00295C96	0x0000001D	[ 72] literal string: klass->ext->field_def_values
0x00295CB3	0x00000033	[ 72] literal string: Object of type '%s' doesn't match target type '%s'
0x00295CE6	0x00000010	[ 72] literal string: TargetException
0x00295CF6	0x00000025	[ 72] literal string: Non-static method requires a target.
0x00295D1B	0x00000016	[ 72] literal string: NotSupportedException
0x00295D31	0x00000039	[ 72] literal string: Cannot invoke method returning ByRef type via reflection
0x00295D6A	0x0000001E	[ 72] literal string: TargetParameterCountException
0x00295D88	0x00000030	[ 72] literal string: Cannot invoke constructor of an abstract class.
0x00295DB8	0x00000050	[ 72] literal string: It is illegal to invoke a method on a type loaded using the ReflectionOnly api.
0x00295E08	0x00000041	[ 72] literal string: Cannot invoke a method in a dynamic assembly without run access.
0x00295E49	0x0000001F	[ 72] literal string: pcount == (m->klass->rank * 2)
0x00295E68	0x0000001F	[ 72] literal string: !mono_loader_get_last_error ()
0x00295E87	0x0000000E	[ 72] literal string: module->image
0x00295E95	0x0000002C	[ 72] literal string: offset >= 0 && offset < klass->method.count
0x00295EC1	0x00000008	[ 72] literal string: file://
0x00295EC9	0x0000003C	[ 72] literal string: System.Globalization.CultureInfo:CreateCulture(string,bool)
0x00295F05	0x0000000F	[ 72] literal string: create_culture
0x00295F14	0x00000008	[ 72] literal string: Version
0x00295F1C	0x0000000F	[ 72] literal string: System_Version
0x00295F2B	0x00000018	[ 72] literal string: :.ctor(int,int,int,int)
0x00295F43	0x0000000F	[ 72] literal string: create_version
0x00295F52	0x00000015	[ 72] literal string: __AssemblyInfo__.ini
0x00295F67	0x00000046	[ 72] literal string: Type names passed to Assembly.GetType() must not specify an assembly.
0x00295FAD	0x0000000D	[ 72] literal string: assemblyFile
0x00295FBA	0x00000025	[ 72] literal string: The file does not contain a manifest
0x00295FDF	0x0000002A	[ 72] literal string: !assembly_is_dynamic (assembly->assembly)
0x00296009	0x0000000B	[ 72] literal string: i < length
0x00296014	0x0000000D	[ 72] literal string: AssemblyName
0x00296021	0x0000000E	[ 72] literal string: image != NULL
0x0029602F	0x00000007	[ 72] literal string: Module
0x00296036	0x0000003E	[ 72] literal string: (impl & MONO_IMPLEMENTATION_MASK) == MONO_IMPLEMENTATION_FILE
0x00296074	0x00000033	[ 72] literal string: Assembly %d referenced from assembly %s not found 
0x002960A7	0x0000001D	[ 72] literal string: %s:%d: assertion '%s' failed
0x002960C4	0x0000000C	[ 72] literal string: dir != NULL
0x002960D0	0x0000000D	[ 72] literal string: file != NULL
0x002960DD	0x00000005	[ 72] literal string: dest
0x002960E2	0x00000012	[ 72] literal string: mtype->type->type
0x002960F4	0x00000004	[ 72] literal string: %s&
0x002960F8	0x00000036	[ 72] literal string: DeclaringMethod can only be used on generic arguments
0x0029612E	0x0000000D	[ 72] literal string: PropertyInfo
0x0029613B	0x0000000A	[ 72] literal string: EventInfo
0x00296145	0x00000010	[ 72] literal string: ConstructorInfo
0x00296155	0x0000001B	[ 72] literal string: Type must be an array type
0x00296170	0x00000008	[ 72] literal string: value__
0x00296178	0x00000027	[ 72] literal string: Implement type 0x%02x in get_enum_info
0x0029619F	0x00000054	[ 72] literal string: ves_icall_System_Environment_GetWindowsFolderPath should only be called on Windows!
0x002961F3	0x00000002	[ 72] literal string: =
0x002961F5	0x0000001E	[ 72] literal string: this->vtable->klass->enumtype
0x00296213	0x0000002D	[ 72] literal string: Type must be a type provided by the runtime.
0x00296240	0x00000009	[ 72] literal string: enumType
0x00296249	0x00000009	[ 72] literal string: basetype
0x00296252	0x00000026	[ 72] literal string: Implement type 0x%02x in get_hashcode
0x00296278	0x00000006	[ 72] literal string: value
0x0029627E	0x0000001F	[ 72] literal string: Type provided must be an Enum.
0x0029629D	0x0000005E	[ 72] literal string: The value passed in must be an enum base or an underlying type for an enum, such as an Int32.
0x002962FB	0x0000003C	[ 72] literal string: WriteWindowsDebugString called and HOST_WIN32 not defined!

0x00296337	0x0000002E	[ 72] literal string: file %s: line %d (%s): assertion failed: (%s)
0x00296365	0x00000087	[ 72] literal string: MonoObject *ves_icall_System_Delegate_CreateDelegate_internal(MonoReflectionType *, MonoObject *, MonoReflectionMethod *, MonoBoolean)
0x002963EC	0x00000040	[ 72] literal string: delegate_class->parent == mono_defaults.multicastdelegate_class
0x0029642C	0x00000006	[ 72] literal string: names
0x00296432	0x00000003	[ 72] literal string: %Z
0x00296435	0x00000005	[ 72] literal string: mono
0x0029643A	0x0000000F	[ 72] literal string: machine.config
0x00296449	0x0000001E	[ 72] literal string: Error looking up error string
0x00296467	0x00000004	[ 72] literal string: src
0x0029646B	0x0000001A	[ 72] literal string: not a widening conversion
0x00296485	0x00000005	[ 72] literal string: idxs
0x0029648A	0x0000000E	[ 72] literal string: ic->rank == 1
0x00296498	0x0000001B	[ 72] literal string: esize == sizeof (gpointer)
0x002964B3	0x0000000B	[ 72] literal string: ec->inited
0x002964BE	0x0000002A	[ 72] literal string: esize == mono_class_value_size (ec, NULL)
0x002964E8	0x00000008	[ 72] literal string: lengths
0x002964F0	0x00000020	[ 72] literal string: mono_array_length (lengths) > 0
0x00296510	0x0000003A	[ 72] literal string: mono_array_length (lengths) == mono_array_length (bounds)
0x0029654A	0x00000007	[ 72] literal string: bounds
0x00296551	0x00000031	[ 72] literal string: iter->sig->sentinelpos <= iter->sig->param_count
0x00296582	0x0000002F	[ 72] literal string: iter->sig->call_convention == MONO_CALL_VARARG
0x002965B1	0x0000001B	[ 72] literal string: i < iter->sig->param_count
0x002965CC	0x0000002A	[ 73] literal string: ../../../../../mono/mono/metadata/image.c
0x002965F6	0x0000001B	[ 73] literal string: MONO_DEBUG_ASSEMBLY_UNLOAD
0x00296611	0x0000002E	[ 73] literal string: Assembly image '%s' still loaded at shutdown.
0x0029663F	0x00000023	[ 73] literal string: section < iinfo->cli_section_count
0x00296662	0x00000008	[ 73] literal string: data-%p
0x0029666A	0x0000000E	[ 73] literal string: fname != NULL
0x00296678	0x00000019	[ 73] literal string: Unloading image %s [%p].
0x00296691	0x0000000E	[ 73] literal string: %s - UNLOADED
0x0029669F	0x0000004F	[ 73] literal string: !image->reflection_info_unregister_classes || mono_runtime_is_shutting_down ()
0x002966EE	0x00000008	[ 73] literal string: success
0x002966F6	0x00000028	[ 73] literal string: File does not contain a valid CIL image
0x0029671E	0x00000033	[ 73] literal string: An assembly was referenced, but could not be found
0x00296751	0x0000000F	[ 73] literal string: Internal error
0x00296760	0x00000022	[ 73] literal string: Could not load image %s due to %s
0x00296782	0x00000034	[ 73] literal string: bits in valid must be zero above 0x2d (II - 23.1.6)
0x002967B6	0x00000039	[ 73] literal string: (const void *) image->tables_base == (const void *) rows
0x002967EF	0x00000005	[ 73] literal string: BSJB
0x002967F4	0x00000003	[ 73] literal string: #-
0x002967F7	0x00000083	[ 73] literal string: Assembly '%s' has the non-standard metadata heap #-.
Recompile it correctly (without the /incremental switch or in Release mode).

0x0029687A	0x00000017	[ 73] literal string: Unknown heap type: %s

0x00296891	0x00000016	[ 73] literal string: image->heap_guid.data
0x002968A7	0x0000001C	[ 73] literal string: image->heap_guid.size >= 16
0x002968C3	0x00000008	[ 73] literal string: top < 8
0x002968CB	0x0000002D	[ 74] literal string: ../../../../../mono/mono/metadata/jit-info.c
0x002968F8	0x00000015	[ 74] literal string: ji->d.method != NULL
0x0029690D	0x0000000B	[ 74] literal string: !ji->async
0x00296918	0x0000001E	[ 74] literal string: chunk_pos < table->num_chunks
0x00296936	0x0000002A	[ 74] literal string: IS_JIT_INFO_TOMBSTONE (chunk->data [pos])
0x00296960	0x00000071	[ 74] literal string: (guint8*)chunk->data [pos]->code_start + chunk->data [pos]->code_size <= (guint8*)ji->code_start + ji->code_size
0x002969D1	0x00000018	[ 74] literal string: chunk->data [pos] == ji
0x002969E9	0x0000000E	[ 74] literal string: left == right
0x002969F7	0x0000000D	[ 74] literal string: left < right
0x00296A04	0x0000001B	[ 74] literal string: j == new_table->num_chunks
0x00296A1F	0x00000036	[ 74] literal string: chunk->num_elements == MONO_JIT_INFO_TABLE_CHUNK_SIZE
0x00296A55	0x00000012	[ 74] literal string: num_elements == 0
0x00296A67	0x0000000F	[ 74] literal string: num_chunks > 0
0x00296A76	0x00000017	[ 74] literal string: new_chunk < num_chunks
0x00296A8D	0x0000001C	[ 74] literal string: new_chunk == num_chunks - 1
0x00296AA9	0x0000002A	[ 74] literal string: new->chunks [new_chunk]->num_elements > 0
0x00296AD3	0x00000019	[ 75] literal string: Inflated signatures size
0x00296AEC	0x0000001F	[ 75] literal string: Memberref signature cache size
0x00296B0B	0x00000010	[ 75] literal string: MonoMethod size
0x00296B1B	0x00000019	[ 75] literal string: MonoMethodSignature size
0x00296B34	0x0000002D	[ 75] literal string: The class %s could not be loaded, used in %s
0x00296B61	0x0000002B	[ 75] literal string: ../../../../../mono/mono/metadata/loader.c
0x00296B8C	0x00000017	[ 75] literal string: Bad field token 0x%08x
0x00296BA3	0x0000001B	[ 75] literal string: Invalid field token 0x%08x
0x00296BBE	0x00000025	[ 75] literal string: Could not resolve field token 0x%08x
0x00296BE3	0x00000043	[ 75] literal string: Bad method signature class token 0x%08x field name %s token 0x%08x
0x00296C26	0x0000004C	[ 75] literal string: Incompatible method signature class token 0x%08x field name %s token 0x%08x
0x00296C72	0x00000016	[ 75] literal string: mono_error_ok (error)
0x00296C88	0x00000017	[ 75] literal string: !klass->exception_type
0x00296C9F	0x0000002E	[ 75] literal string: method->flags & METHOD_ATTRIBUTE_PINVOKE_IMPL
0x00296CCD	0x00000024	[ 75] literal string: DllImport attempting to load: '%s'.
0x00296CF1	0x0000000B	[ 75] literal string: __Internal
0x00296CFC	0x00000006	[ 75] literal string: lib%s
0x00296D02	0x00000007	[ 75] literal string: %s%s%s
0x00296D09	0x0000000B	[ 75] literal string: user32.dll
0x00296D14	0x0000000D	[ 75] literal string: kernel32.dll
0x00296D21	0x00000007	[ 75] literal string: user32
0x00296D28	0x00000007	[ 75] literal string: kernel
0x00296D2F	0x00000013	[ 75] literal string: libMonoSupportW.so
0x00296D42	0x0000002C	[ 75] literal string: DllImport error loading library '%s': '%s'.
0x00296D6E	0x00000027	[ 75] literal string: DllImport unable to load library '%s'.
0x00296D95	0x00000015	[ 75] literal string: DllNotFoundException
0x00296DAA	0x0000001F	[ 75] literal string: DllImport loaded library '%s'.
0x00296DC9	0x00000025	[ 75] literal string: DllImport searching in: '%s' ('%s').
0x00296DEE	0x00000014	[ 75] literal string: Searching for '%s'.
0x00296E02	0x00000002	[ 75] literal string: W
0x00296E04	0x00000002	[ 75] literal string: A
0x00296E06	0x0000000E	[ 75] literal string: Probing '%s'.
0x00296E14	0x0000000F	[ 75] literal string: Found as '%s'.
0x00296E23	0x00000021	[ 75] literal string: Could not find '%s' due to '%s'.
0x00296E44	0x0000001C	[ 75] literal string: EntryPointNotFoundException
0x00296E60	0x0000000A	[ 75] literal string: signature
0x00296E6A	0x00000003	[ 75] literal string: tp
0x00296E6D	0x0000000D	[ 75] literal string: data != NULL
0x00296E7A	0x0000001F	[ 75] literal string: id <= GPOINTER_TO_UINT (*data)
0x00296E99	0x0000001C	[ 75] literal string: loader_lock_track_ownership
0x00296EB5	0x0000003A	[ 75] literal string: mono_metadata_token_table (m->token) == MONO_TABLE_METHOD
0x00296EEF	0x00000019	[ 75] literal string: !m->klass->generic_class
0x00296F08	0x00000079	[ 75] literal string: Signature claims method has generic parameters, but generic_params table says it doesn't for method 0x%08x from image %s
0x00296F81	0x00000077	[ 75] literal string: Inconsistent generic parameter count.  Signature says %d, generic_params table says %d for method 0x%08x from image %s
0x00296FF8	0x00000079	[ 75] literal string: generic_params table claims method has generic parameters, but signature says it doesn't for method 0x%08x from image %s
0x00297071	0x00000048	[ 75] literal string: unsupported calling convention : 0x%04x for method 0x%08x from image %s
0x002970B9	0x0000002D	[ 75] literal string: Could not load signature of %s:%s due to: %s
0x002970E6	0x0000000B	[ 75] literal string: mw->header
0x002970F1	0x0000003F	[ 75] literal string: mono_metadata_token_table (method->token) == MONO_TABLE_METHOD
0x00297130	0x0000000A	[ 75] literal string: frame->ji
0x0029713A	0x0000000B	[ 75] literal string: from_class
0x00297145	0x00000019	[ 75] literal string: !in_class == !from_class
0x0029715E	0x00000028	[ 75] literal string: Could not find method with signature %s
0x00297186	0x0000002F	[ 75] literal string: Could not find method due to a type load error
0x002971B5	0x00000029	[ 75] literal string: Bad method token 0x%08x on dynamic image
0x002971DE	0x00000019	[ 75] literal string: Bad method token 0x%08x.
0x002971F7	0x00000029	[ 75] literal string: Bad method token 0x%08x (out of bounds).
0x00297220	0x00000040	[ 75] literal string: Bad method token 0x%08x (could not find corresponding typedef).
0x00297260	0x0000002E	[ 75] literal string: Memberref parent unknown: class: %d, index %d
0x0029728E	0x00000023	[ 75] literal string: Verifier rejected method signature
0x002972B1	0x00000007	[ 75] literal string: <[%d]>
0x002972B8	0x00000005	[ 75] literal string: (%s)
0x002972BD	0x00000019	[ 75] literal string: Could not find method %s
0x002972D6	0x00000017	[ 75] literal string: !mono_error_ok (error)
0x002972ED	0x00000024	[ 75] literal string: Bad method signals signature 0x%08x
0x00297311	0x00000034	[ 75] literal string: Cannot parse generic instance for methodspec 0x%08x
0x00297345	0x00000012	[ 75] literal string: @executable_path/
0x00297357	0x0000000E	[ 75] literal string: @loader_path/
0x00297365	0x00000008	[ 75] literal string: @rpath/
0x0029736D	0x00000020	[ 75] literal string: Bad field '%s' signature 0x%08x
0x0029738D	0x00000026	[ 75] literal string: Bad field field '%s' signature 0x%08x
0x002973B3	0x0000003E	[ 75] literal string: Bad field signature class token %08x field name %s token %08x
0x002973F1	0x0000002A	[ 75] literal string: Could not parse field '%s' signature %08x
0x0029741B	0x0000001A	[ 75] literal string: Could not find field '%s'
0x00297435	0x0000002C	[ 76] literal string: ../../../../../mono/mono/metadata/locales.c
0x00297461	0x00000014	[ 76] literal string: datetime_index >= 0
0x00297475	0x00000019	[ 76] literal string: this->number_format != 0
0x0029748E	0x0000000C	[ 76] literal string: CultureInfo
0x0029749A	0x00000007	[ 76] literal string: LC_ALL
0x002974A1	0x00000005	[ 76] literal string: LANG
0x002974A6	0x00000002	[ 76] literal string: C
0x002974A8	0x0000002D	[ 77] literal string: ves_icall_System_Threading_Thread_ResetAbort
0x002974D5	0x0000001D	[ 77] literal string: mono_marshal_string_to_utf16
0x002974F2	0x00000008	[ 77] literal string: ptr obj
0x002974FA	0x00000022	[ 77] literal string: mono_marshal_string_to_utf16_copy
0x0029751C	0x00000015	[ 77] literal string: mono_string_to_utf16
0x00297531	0x00000017	[ 77] literal string: mono_string_from_utf16
0x00297548	0x00000008	[ 77] literal string: obj ptr
0x00297550	0x0000001A	[ 77] literal string: mono_string_from_byvalstr
0x0029756A	0x0000000C	[ 77] literal string: obj ptr int
0x00297576	0x0000001B	[ 77] literal string: mono_string_from_byvalwstr
0x00297591	0x00000018	[ 77] literal string: mono_string_new_wrapper
0x002975A9	0x0000001C	[ 77] literal string: mono_string_new_len_wrapper
0x002975C5	0x00000014	[ 77] literal string: mono_string_to_utf8
0x002975D9	0x00000015	[ 77] literal string: mono_string_to_lpstr
0x002975EE	0x00000018	[ 77] literal string: mono_string_to_ansibstr
0x00297606	0x0000000B	[ 77] literal string: ptr object
0x00297611	0x0000001C	[ 77] literal string: mono_string_builder_to_utf8
0x0029762D	0x0000001D	[ 77] literal string: mono_string_builder_to_utf16
0x0029764A	0x00000018	[ 77] literal string: mono_array_to_savearray
0x00297662	0x00000016	[ 77] literal string: mono_array_to_lparray
0x00297678	0x00000012	[ 77] literal string: mono_free_lparray
0x0029768A	0x00000019	[ 77] literal string: mono_byvalarray_to_array
0x002976A3	0x0000001A	[ 77] literal string: void object ptr ptr int32
0x002976BD	0x0000001E	[ 77] literal string: mono_byvalarray_to_byte_array
0x002976DB	0x00000016	[ 77] literal string: void object ptr int32
0x002976F1	0x00000019	[ 77] literal string: mono_array_to_byvalarray
0x0029770A	0x0000001A	[ 77] literal string: void ptr object ptr int32
0x00297724	0x0000001E	[ 77] literal string: mono_array_to_byte_byvalarray
0x00297742	0x00000016	[ 77] literal string: void ptr object int32
0x00297758	0x00000018	[ 77] literal string: mono_delegate_to_ftnptr
0x00297770	0x00000018	[ 77] literal string: mono_ftnptr_to_delegate
0x00297788	0x00000013	[ 77] literal string: mono_marshal_asany
0x0029779B	0x00000017	[ 77] literal string: ptr object int32 int32
0x002977B2	0x00000018	[ 77] literal string: mono_marshal_free_asany
0x002977CA	0x0000001C	[ 77] literal string: void object ptr int32 int32
0x002977E6	0x00000013	[ 77] literal string: mono_marshal_alloc
0x002977F9	0x0000000A	[ 77] literal string: ptr int32
0x00297803	0x00000012	[ 77] literal string: mono_marshal_free
0x00297815	0x0000001C	[ 77] literal string: mono_marshal_set_last_error
0x00297831	0x00000024	[ 77] literal string: mono_marshal_set_last_error_windows
0x00297855	0x0000000B	[ 77] literal string: void int32
0x00297860	0x0000001C	[ 77] literal string: mono_string_utf8_to_builder
0x0029787C	0x0000000D	[ 77] literal string: void ptr ptr
0x00297889	0x0000001D	[ 77] literal string: mono_string_utf8_to_builder2
0x002978A6	0x0000001D	[ 77] literal string: mono_string_utf16_to_builder
0x002978C3	0x0000001E	[ 77] literal string: mono_string_utf16_to_builder2
0x002978E1	0x00000018	[ 77] literal string: mono_marshal_free_array
0x002978F9	0x0000000F	[ 77] literal string: void ptr int32
0x00297908	0x00000018	[ 77] literal string: mono_string_to_byvalstr
0x00297920	0x00000013	[ 77] literal string: void ptr ptr int32
0x00297933	0x00000019	[ 77] literal string: mono_string_to_byvalwstr
0x0029794C	0x00000007	[ 77] literal string: g_free
0x00297953	0x00000013	[ 77] literal string: mono_object_isinst
0x00297966	0x00000017	[ 77] literal string: mono_struct_delete_old
0x0029797D	0x0000001B	[ 77] literal string: mono_delegate_begin_invoke
0x00297998	0x00000019	[ 77] literal string: mono_delegate_end_invoke
0x002979B1	0x00000014	[ 77] literal string: mono_compile_method
0x002979C5	0x00000011	[ 77] literal string: mono_context_get
0x002979D6	0x00000011	[ 77] literal string: mono_context_set
0x002979E7	0x0000000B	[ 77] literal string: wb_generic
0x002979F2	0x00000019	[ 77] literal string: mono_gchandle_get_target
0x00297A0B	0x0000000D	[ 77] literal string: object int32
0x00297A18	0x0000002C	[ 77] literal string: ../../../../../mono/mono/metadata/marshal.c
0x00297A44	0x00000010	[ 77] literal string: klass->delegate
0x00297A54	0x0000005B	[ 77] literal string: Delegates cannot be marshalled from native code into a domain other than their home domain
0x00297AAF	0x00000024	[ 77] literal string: mono_string_chars (sb->str) == text
0x00297AD3	0x00000033	[ 77] literal string: Failed to convert StringBuilder from utf16 to utf8
0x00297B06	0x00000008	[ 77] literal string: sb->str
0x00297B0E	0x0000002A	[ 77] literal string: UnmanagedMarshal.BStr is not implemented.
0x00297B38	0x0000000C	[ 77] literal string: dst != NULL
0x00297B44	0x00000009	[ 77] literal string: size > 1
0x00297B4D	0x00000025	[ 77] literal string: unknown type 0x%02x in type_to_ldind
0x00297B72	0x00000025	[ 77] literal string: unknown type 0x%02x in type_to_stind
0x00297B97	0x00000016	[ 77] literal string: wrapper->wrapper_type
0x00297BAD	0x00000072	[ 77] literal string: method && method->klass->parent == mono_defaults.multicastdelegate_class && !strcmp (method->name, "BeginInvoke")
0x00297C1F	0x0000000D	[ 77] literal string: sig->hasthis
0x00297C2C	0x0000000D	[ 77] literal string: begin_invoke
0x00297C39	0x00000016	[ 77] literal string: type 0x%x not handled
0x00297C4F	0x00000070	[ 77] literal string: method && method->klass->parent == mono_defaults.multicastdelegate_class && !strcmp (method->name, "EndInvoke")
0x00297CBF	0x0000000B	[ 77] literal string: end_invoke
0x00297CCA	0x0000006D	[ 77] literal string: method && method->klass->parent == mono_defaults.multicastdelegate_class && !strcmp (method->name, "Invoke")
0x00297D37	0x0000001B	[ 77] literal string: method->signature->hasthis
0x00297D52	0x0000000A	[ 77] literal string: !callvirt
0x00297D5C	0x0000000D	[ 77] literal string: invoke_bound
0x00297D69	0x00000018	[ 77] literal string: invoke_closed_over_null
0x00297D81	0x00000010	[ 77] literal string: invoke_callvirt
0x00297D91	0x00000018	[ 77] literal string: NotImplementedException
0x00297DA9	0x00000017	[ 77] literal string: runtime_invoke_virtual
0x00297DC0	0x0000000F	[ 77] literal string: runtime_invoke
0x00297DCF	0x00000007	[ 77] literal string: params
0x00297DD6	0x0000000D	[ 77] literal string: sig->pinvoke
0x00297DE3	0x0000001B	[ 77] literal string: return type 0x%02x unknown
0x00297DFE	0x00000028	[ 77] literal string: Method contains unsupported native code
0x00297E26	0x00000009	[ 77] literal string: !pinvoke
0x00297E2F	0x00000014	[ 77] literal string: method->string_ctor
0x00297E43	0x0000000D	[ 77] literal string: CreateString
0x00297E50	0x00000035	[ 77] literal string: !(res->iflags & METHOD_IMPL_ATTRIBUTE_INTERNAL_CALL)
0x00297E85	0x0000002E	[ 77] literal string: !(res->flags & METHOD_ATTRIBUTE_PINVOKE_IMPL)
0x00297EB3	0x00000023	[ 77] literal string: cannot find CreateString for .ctor
0x00297ED6	0x0000000D	[ 77] literal string: piinfo->addr
0x00297EE3	0x00000008	[ 77] literal string: pinvoke
0x00297EEB	0x00000012	[ 77] literal string: wrapper_native_%p
0x00297EFD	0x00000013	[ 77] literal string: wrapper_aot_native
0x00297F10	0x00000030	[ 77] literal string: sig->param_count == invoke_sig->param_count + 1
0x00297F40	0x00000029	[ 77] literal string: !mono_method_signature (method)->pinvoke
0x00297F69	0x00000022	[ 77] literal string: UnmanagedFunctionPointerAttribute
0x00297F8B	0x00000024	[ 77] literal string: mono_array_length (typed_args) == 1
0x00297FAF	0x0000000C	[ 77] literal string: narg->field
0x00297FBB	0x00000008	[ 77] literal string: CharSet
0x00297FC3	0x0000000D	[ 77] literal string: SetLastError
0x00297FD0	0x0000000F	[ 77] literal string: BestFitMapping
0x00297FDF	0x00000016	[ 77] literal string: ThrowOnUnmappableChar
0x00297FF5	0x00000006	[ 77] literal string: token
0x00297FFB	0x00000017	[ 77] literal string: __castclass_with_cache
0x00298012	0x00000014	[ 77] literal string: __isinst_with_cache
0x00298026	0x00000014	[ 77] literal string: __isinst_wrapper_%s
0x0029803A	0x00000017	[ 77] literal string: __castclass_wrapper_%s
0x00298051	0x0000000E	[ 77] literal string: klass != NULL
0x0029805F	0x00000007	[ 77] literal string: stoptr
0x00298066	0x00000010	[ 77] literal string: void ptr object
0x00298076	0x00000015	[ 77] literal string: Shouldn't be called.
0x0029808B	0x0000000E	[ 77] literal string: Monitor:Enter
0x00298099	0x0000000D	[ 77] literal string: enter_method
0x002980A6	0x0000000D	[ 77] literal string: Monitor:Exit
0x002980B3	0x0000000C	[ 77] literal string: exit_method
0x002980BF	0x00000017	[ 77] literal string: Type:GetTypeFromHandle
0x002980D6	0x00000019	[ 77] literal string: gettypefromhandle_method
0x002980EF	0x00000017	[ 77] literal string: array_class->rank == 1
0x00298106	0x0000000D	[ 77] literal string: gsharedvt_in
0x00298113	0x0000000E	[ 77] literal string: gsharedvt_out
0x00298121	0x0000000F	[ 77] literal string: ElementAddr_%d
0x00298130	0x0000001B	[ 77] literal string: array is multi-dimensional
0x0029814B	0x0000000B	[ 77] literal string: startIndex
0x00298156	0x0000000D	[ 77] literal string: Must be >= 0
0x00298163	0x00000007	[ 77] literal string: length
0x0029816A	0x00000024	[ 77] literal string: start_index + length > array length
0x0029818E	0x00000006	[ 77] literal string: rtype
0x00298194	0x00000037	[ 77] literal string: Type %s cannot be marshaled as an unmanaged structure.
0x002981CB	0x00000002	[ 77] literal string: t
0x002981CD	0x00000004	[ 77] literal string: dst
0x002981D1	0x00000023	[ 77] literal string: Destination is a boxed value type.
0x002981F4	0x0000000B	[ 77] literal string: field_name
0x002981FF	0x00000039	[ 77] literal string: Field passed in is not a marshaled member of the type %s
0x00298238	0x0000000A	[ 77] literal string: fieldName
0x00298242	0x0000002B	[ 77] literal string: !mono_marshal_is_loading_type_info (klass)
0x0029826D	0x00000006	[ 77] literal string: mspec
0x00298273	0x00000021	[ 77] literal string: native type %02x not implemented
0x00298294	0x00000029	[ 77] literal string: marshaling conversion %d not implemented
0x002982BD	0x00000049	[ 77] literal string: No PInvoke conversion exists for value passed to Object-typed parameter.
0x00298306	0x00000008	[ 77] literal string: i < len
0x0029830E	0x0000000A	[ 77] literal string: byte == 1
0x00298318	0x00000012	[ 77] literal string: virt_stelemref_%s
0x0029832A	0x00000006	[ 77] literal string: index
0x00298330	0x0000000D	[ 77] literal string: sealed_class
0x0029833D	0x0000000A	[ 77] literal string: interface
0x00298347	0x00000008	[ 77] literal string: complex
0x0029834F	0x00000019	[ 77] literal string: orig_method->is_inflated
0x00298368	0x0000001B	[ 77] literal string: msize == info->native_size
0x00298383	0x0000004E	[ 77] literal string: Type %s which is passed to unmanaged code must have a StructLayout attribute.
0x002983D1	0x00000073	[ 77] literal string: Type %s which has an [ExplicitLayout] attribute cannot have a reference field at the same offset as another field.
0x00298444	0x0000002E	[ 77] literal string: COM support was disabled at compilation time.
0x00298472	0x00000025	[ 77] literal string: marshaling type %02x not implemented
0x00298497	0x00000016	[ 77] literal string: ArgumentNullException
0x002984AD	0x0000002A	[ 77] literal string: marshalling conversion %d not implemented
0x002984D7	0x0000003A	[ 77] literal string: Structure field of type %s can't be marshalled as LPArray
0x00298511	0x0000001A	[ 77] literal string: MarshalDirectiveException
0x0029852B	0x0000000E	[ 77] literal string: CallConvCdecl
0x00298539	0x00000010	[ 77] literal string: CallConvStdcall
0x00298549	0x00000011	[ 77] literal string: CallConvFastcall
0x0029855A	0x00000011	[ 77] literal string: CallConvThiscall
0x0029856B	0x0000003E	[ 77] literal string: marshalling bool as native type %x is currently not supported
0x002985A9	0x0000003F	[ 77] literal string: string/stringbuilder marshalling conversion %d not implemented
0x002985E8	0x0000000B	[ 77] literal string: conv != -1
0x002985F3	0x0000003C	[ 77] literal string: Byref array marshalling to managed code is not implemented.
0x0029862F	0x00000042	[ 77] literal string: [MarshalAs] attribute required to marshal arrays to managed code.
0x00298671	0x00000046	[ 77] literal string: Non LPArray marshalling of arrays to managed code is not implemented.
0x002986B7	0x00000060	[ 77] literal string: Either SizeConst or SizeParamIndex should be specified when marshalling arrays to managed code.
0x00298717	0x00000034	[ 77] literal string: Array size control parameter index is out of range.
0x0029874B	0x00000037	[ 77] literal string: Array size control parameter must be an integral type.
0x00298782	0x00000057	[ 77] literal string: Marshalling of non-string and non-blittable arrays to managed code is not implemented.
0x002987D9	0x0000000A	[ 77] literal string: !t->byref
0x002987E3	0x00000024	[ 77] literal string: spec->native == MONO_NATIVE_LPARRAY
0x00298807	0x0000001F	[ 77] literal string: t->attrs & PARAM_ATTRIBUTE_OUT
0x00298826	0x0000002E	[ 77] literal string: Marshalling of type object is not implemented
0x00298854	0x00000033	[ 77] literal string: Byref marshalling of delegates is not implemented.
0x00298887	0x00000038	[ 77] literal string: stringbuilder marshalling conversion %d not implemented
0x002988BF	0x0000000F	[ 77] literal string: encoding != -1
0x002988CE	0x0000001B	[ 77] literal string: m->orig_conv_args [argnum]
0x002988E9	0x0000001E	[ 77] literal string: encoding == MONO_NATIVE_LPSTR
0x00298907	0x0000003B	[ 77] literal string: The type `%s.%s' layout needs to be Sequential or Explicit
0x00298942	0x00000022	[ 77] literal string: paramterless constructor required
0x00298964	0x0000002C	[ 77] literal string: Returned SafeHandles should not be abstract
0x00298990	0x00000033	[ 77] literal string: mono/marshal: SafeHandles missing MANAGED_CONV_IN

0x002989C3	0x00000034	[ 77] literal string: mono/marshal: SafeHandles missing MANAGED_CONV_OUT

0x002989F7	0x00000037	[ 77] literal string: mono/marshal: SafeHandles missing MANAGED_CONV_RESULT

0x00298A2E	0x00000026	[ 77] literal string: Unhandled case for MarshalAction: %d

0x00298A54	0x00000010	[ 77] literal string: DangerousAddRef
0x00298A64	0x00000011	[ 77] literal string: DangerousRelease
0x00298A75	0x00000031	[ 77] literal string: string marshalling conversion %d not implemented
0x00298AA6	0x00000031	[ 77] literal string: VBByRefStr marshalling requires a ref parameter.
0x00298AD7	0x00000009	[ 77] literal string: ToOADate
0x00298AE0	0x0000000A	[ 77] literal string: to_oadate
0x00298AEA	0x0000000B	[ 77] literal string: FromOADate
0x00298AF5	0x0000000C	[ 77] literal string: from_oadate
0x00298B01	0x0000000E	[ 77] literal string: m->retobj_var
0x00298B0F	0x00000046	[ 77] literal string: HandleRefs can not be returned from unmanaged code (or passed by ref)
0x00298B55	0x0000001C	[ 77] literal string: t->type == MONO_TYPE_OBJECT
0x00298B71	0x00000011	[ 77] literal string: ICustomMarshaler
0x00298B82	0x00000031	[ 77] literal string: Current profile doesn't support ICustomMarshaler
0x00298BB3	0x00000012	[ 77] literal string: CleanUpNativeData
0x00298BC5	0x0000000F	[ 77] literal string: cleanup_native
0x00298BD4	0x00000013	[ 77] literal string: CleanUpManagedData
0x00298BE7	0x00000010	[ 77] literal string: cleanup_managed
0x00298BF7	0x00000017	[ 77] literal string: MarshalManagedToNative
0x00298C0E	0x0000001A	[ 77] literal string: marshal_managed_to_native
0x00298C28	0x00000017	[ 77] literal string: MarshalNativeToManaged
0x00298C3F	0x0000001A	[ 77] literal string: marshal_native_to_managed
0x00298C59	0x0000000E	[ 77] literal string: mtype != NULL
0x00298C67	0x0000000F	[ 77] literal string: mklass != NULL
0x00298C76	0x00000049	[ 77] literal string: Custom marshaler '%s' does not implement the ICustomMarshaler interface.
0x00298CBF	0x0000000C	[ 77] literal string: GetInstance
0x00298CCB	0x0000008B	[ 77] literal string: Custom marshaler '%s' does not implement a static GetInstance method that takes a single string parameter and returns an ICustomMarshaler.
0x00298D56	0x00000015	[ 77] literal string: ApplicationException
0x00298D6B	0x00000039	[ 77] literal string: custom marshalling of type %x is currently not supported
0x00298DA4	0x00000006	[ 77] literal string: dummy
0x00298DAA	0x00000029	[ 77] literal string: method->flags & METHOD_ATTRIBUTE_VIRTUAL
0x00298DD3	0x00000011	[ 77] literal string: delegate->method
0x00298DE4	0x00000012	[ 77] literal string: RemotingException
0x00298DF6	0x0000003A	[ 77] literal string: The async result object is null or of an unexpected type.
0x00298E30	0x0000003F	[ 77] literal string: The IAsyncResult object provided does not match this delegate.
0x00298E6F	0x0000001B	[ 77] literal string: %s
Exception Rethrown at:

0x00298E8A	0x00000009	[ 77] literal string: __this__
0x00298E93	0x00000027	[ 77] literal string: The delegate must have only one target
0x00298EBA	0x0000000C	[ 77] literal string: System.Text
0x00298EC6	0x0000000E	[ 77] literal string: StringBuilder
0x00298ED4	0x00000015	[ 77] literal string: string_builder_class
0x00298EE9	0x0000000C	[ 77] literal string: :.ctor(int)
0x00298EF5	0x00000008	[ 77] literal string: sb_ctor
0x00298EFD	0x00000003	[ 77] literal string: sb
0x00298F00	0x00000005	[ 77] literal string: !exc
0x00298F05	0x00000042	[ 77] literal string: arr->obj.vtable->klass->element_class == mono_defaults.char_class
0x00298F47	0x0000003B	[ 77] literal string: Could not load UnmanagedFunctionPointerAttribute due to %s
0x00298F82	0x00000013	[ 78] literal string: Mempool %p stats:

0x00298F95	0x00000019	[ 78] literal string: Total mem allocated: %d

0x00298FAE	0x00000010	[ 78] literal string: Num chunks: %d

0x00298FBE	0x00000011	[ 78] literal string: Free memory: %d

0x00298FCF	0x00000025	[ 79] literal string: #ifndef USED_CROSS_COMPILER_OFFSETS

0x00298FF4	0x00000017	[ 79] literal string: #ifndef HAVE_BOEHM_GC

0x0029900B	0x00000024	[ 79] literal string: #define HAS_CROSS_COMPILER_OFFSETS

0x0029902F	0x00000049	[ 79] literal string: #if defined (USE_CROSS_COMPILE_OFFSETS) || defined (MONO_CROSS_COMPILE)

0x00299078	0x00000029	[ 79] literal string: #if !defined (DISABLE_METADATA_OFFSETS)

0x002990A1	0x00000014	[ 79] literal string: DECL_ALIGN2(%s,%d)

0x002990B5	0x00000006	[ 79] literal string: gint8
0x002990BB	0x00000007	[ 79] literal string: gint16
0x002990C2	0x00000007	[ 79] literal string: gint32
0x002990C9	0x00000007	[ 79] literal string: gint64
0x002990D0	0x00000009	[ 79] literal string: gpointer
0x002990D9	0x0000000B	[ 79] literal string: MonoObject
0x002990E4	0x00000010	[ 79] literal string: synchronisation
0x002990F4	0x0000000A	[ 79] literal string: MonoClass
0x002990FE	0x00000011	[ 79] literal string: interface_bitmap
0x0029910F	0x0000000A	[ 79] literal string: byval_arg
0x00299119	0x0000000B	[ 79] literal string: cast_class
0x00299124	0x0000000E	[ 79] literal string: element_class
0x00299132	0x00000007	[ 79] literal string: idepth
0x00299139	0x0000000E	[ 79] literal string: instance_size
0x00299147	0x0000000D	[ 79] literal string: interface_id
0x00299154	0x00000011	[ 79] literal string: max_interface_id
0x00299165	0x00000005	[ 79] literal string: rank
0x0029916A	0x00000006	[ 79] literal string: sizes
0x00299170	0x0000000B	[ 79] literal string: supertypes
0x0029917B	0x0000000B	[ 79] literal string: MonoVTable
0x00299186	0x00000018	[ 79] literal string: runtime_generic_context
0x0029919E	0x0000000B	[ 79] literal string: MonoDomain
0x002991A9	0x00000012	[ 79] literal string: stack_overflow_ex
0x002991BB	0x0000000D	[ 79] literal string: MonoDelegate
0x002991C8	0x0000000C	[ 79] literal string: method_code
0x002991D4	0x00000013	[ 79] literal string: MonoInternalThread
0x002991E7	0x00000004	[ 79] literal string: tid
0x002991EB	0x00000009	[ 79] literal string: small_id
0x002991F4	0x0000000C	[ 79] literal string: static_data
0x00299200	0x00000016	[ 79] literal string: MonoMulticastDelegate
0x00299216	0x00000015	[ 79] literal string: MonoTransparentProxy
0x0029922B	0x00000003	[ 79] literal string: rp
0x0029922E	0x0000000D	[ 79] literal string: remote_class
0x0029923B	0x00000011	[ 79] literal string: custom_type_info
0x0029924C	0x0000000E	[ 79] literal string: MonoRealProxy
0x0029925A	0x00000011	[ 79] literal string: target_domain_id
0x0029926B	0x00000008	[ 79] literal string: context
0x00299273	0x00000011	[ 79] literal string: unwrapped_server
0x00299284	0x00000010	[ 79] literal string: MonoRemoteClass
0x00299294	0x0000000C	[ 79] literal string: proxy_class
0x002992A0	0x0000000A	[ 79] literal string: MonoArray
0x002992AA	0x00000007	[ 79] literal string: vector
0x002992B1	0x0000000B	[ 79] literal string: max_length
0x002992BC	0x00000010	[ 79] literal string: MonoArrayBounds
0x002992CC	0x0000000C	[ 79] literal string: lower_bound
0x002992D8	0x0000000F	[ 79] literal string: MonoSafeHandle
0x002992E7	0x0000000E	[ 79] literal string: MonoHandleRef
0x002992F5	0x00000014	[ 79] literal string: MonoComInteropProxy
0x00299309	0x0000000B	[ 79] literal string: com_object
0x00299314	0x0000000B	[ 79] literal string: MonoString
0x0029931F	0x00000006	[ 79] literal string: chars
0x00299325	0x0000000E	[ 79] literal string: MonoException
0x00299333	0x0000000D	[ 79] literal string: MonoTypedRef
0x00299340	0x00000010	[ 79] literal string: MonoThreadsSync
0x00299350	0x00000007	[ 79] literal string: status
0x00299357	0x00000005	[ 79] literal string: nest
0x0029935C	0x0000000F	[ 79] literal string: SgenThreadInfo
0x0029936B	0x0000000F	[ 79] literal string: tlab_next_addr
0x0029937A	0x0000000E	[ 79] literal string: tlab_temp_end
0x00299388	0x00000021	[ 79] literal string: #endif //disable metadata check

0x002993A9	0x00000013	[ 79] literal string: #ifdef TARGET_OSX

0x002993BC	0x00000013	[ 79] literal string: #ifdef TARGET_X86

0x002993CF	0x0000002B	[ 80] literal string: Invalid typeref row %d - table has %d rows
0x002993FA	0x0000002A	[ 80] literal string: Invalid typeref row %d coded index 0x%08x
0x00299424	0x00000055	[ 80] literal string: The metadata verifier doesn't support null ResolutionScope tokens for typeref row %d
0x00299479	0x00000029	[ 80] literal string: Invalid typeref row %d name token 0x%08x
0x002994A2	0x0000002E	[ 80] literal string: Invalid typeref row %d namespace token 0x%08x
0x002994D0	0x0000002E	[ 80] literal string: Invalid methodimpl row %d - table has %d rows
0x002994FE	0x00000049	[ 80] literal string: Invalid methodimpl body signature not compatible with declaration row %x
0x00299547	0x00000025	[ 80] literal string: CustomAttribute: Invalid constructor
0x0029956C	0x00000032	[ 80] literal string: CustomAttribute: Invalid constructor signature %s
0x0029959E	0x00000039	[ 80] literal string: CustomAttribute: Constructor cannot have VARAG signature
0x002995D7	0x0000002C	[ 80] literal string: CustomAttribute: Not enough room for prolog
0x00299603	0x0000002E	[ 80] literal string: CustomAttribute: Prolog is 0x%x, expected 0x1
0x00299631	0x00000036	[ 80] literal string: CustomAttribute: Not enough space for num_named field
0x00299667	0x0000003E	[ 80] literal string: CustomAttribute: Not enough space for named parameter %d kind
0x002996A5	0x00000034	[ 80] literal string: CustomAttribute: Invalid named parameter %d kind %x
0x002996D9	0x0000003E	[ 80] literal string: CustomAttribute: Not enough space for named parameter %d type
0x00299717	0x00000038	[ 80] literal string: CustomAttribute: Not enough room for array element type
0x0029974F	0x0000002F	[ 80] literal string: CustomAttribute: Invalid array element type %x
0x0029977E	0x00000031	[ 80] literal string: CustomAttribute: Invalid named parameter type %x
0x002997AF	0x00000031	[ 80] literal string: CustomAttribute: Not enough room for string size
0x002997E0	0x0000002C	[ 80] literal string: CustomAttribute: Not enough room for string
0x0029980C	0x00000029	[ 80] literal string: CustomAttribute: Null or empty enum name
0x00299835	0x00000027	[ 80] literal string: CustomAttribute: Invalid enum class %s
0x0029985C	0x0000002C	[ 80] literal string: CustomAttribute:Class %s::%s is not an enum
0x00299888	0x00000030	[ 80] literal string: CustomAttribute: Not enough room for array type
0x002998B8	0x0000002E	[ 80] literal string: CustomAttribute: Invalid boxed object type %x
0x002998E6	0x00000035	[ 80] literal string: CustomAttribute: Invalid class parameter type %s:%s 
0x0029991B	0x00000042	[ 80] literal string: CustomAttribute: Invalid valuetype parameter expected enum %s:%s 
0x0029995D	0x00000033	[ 80] literal string: CustomAttribute: Invalid array element type %s:%s 
0x00299990	0x0000002C	[ 80] literal string: CustomAttribute: Invalid parameter type %x 
0x002999BC	0x0000002E	[ 80] literal string: CustomAttribute: Not enough space for element
0x002999EA	0x00000033	[ 80] literal string: CustomAttribute: Could not decode signature header
0x00299A1D	0x00000027	[ 80] literal string: User string offset beyond heap_us size
0x00299A44	0x00000027	[ 80] literal string: Could not decode user string blob size
0x00299A6B	0x0000001A	[ 80] literal string: User string size overflow
0x00299A85	0x0000001C	[ 80] literal string: User string oveflow heap_us
0x00299AA1	0x0000002E	[ 80] literal string: MethodSpec: Could not decode signature header
0x00299ACF	0x00000030	[ 80] literal string: MethodSpec: Not enough room for call convention
0x00299AFF	0x00000038	[ 80] literal string: MethodSpec: Invalid call convention 0x%x, expected 0x0A
0x00299B37	0x00000030	[ 80] literal string: MethodSpec: Not enough room for parameter count
0x00299B67	0x00000028	[ 80] literal string: MethodSpec: Zero generic argument count
0x00299B8F	0x00000029	[ 80] literal string: MethodSpec: Could not parse parameter %d
0x00299BB8	0x00000023	[ 80] literal string: Type: Not enough room for the type
0x00299BDB	0x0000001C	[ 80] literal string: Type: Invalid type kind %x

0x00299BF7	0x0000002A	[ 80] literal string: Type: Failed to parse pointer custom attr
0x00299C21	0x00000030	[ 80] literal string: Type: Not enough room to parse the pointer type
0x00299C51	0x00000023	[ 80] literal string: Type: Could not parse pointer type
0x00299C74	0x00000029	[ 80] literal string: Type: Not enough room for the type token
0x00299C9D	0x00000024	[ 80] literal string: Type: invalid TypeDefOrRef token %x
0x00299CC1	0x00000051	[ 80] literal string: Type: Recursive type specification (%x). A type signature can't reference itself
0x00299D12	0x0000003C	[ 80] literal string: Type: Not enough room for to decode generic argument number
0x00299D4E	0x00000021	[ 80] literal string: Type: Could not parse array type
0x00299D6F	0x00000022	[ 80] literal string: Type: Could not parse array shape
0x00299D91	0x00000023	[ 80] literal string: Type: Could not parse generic inst
0x00299DB4	0x0000002F	[ 80] literal string: Type: Could not parse method pointer signature
0x00299DE3	0x00000030	[ 80] literal string: Type: Failed to parse array element custom attr
0x00299E13	0x0000002D	[ 80] literal string: MethodSig: Not enough room for the call conv
0x00299E40	0x00000021	[ 80] literal string: MethodSig: CallConv has 0x80 set
0x00299E61	0x0000002A	[ 80] literal string: MethodSig: CallConv is not valid, it's %x
0x00299E8B	0x00000036	[ 80] literal string: MethodSig: CallConv is not Default or Vararg, it's %x
0x00299EC1	0x00000037	[ 80] literal string: MethodSig: Not enough room for the generic param count
0x00299EF8	0x00000032	[ 80] literal string: MethodSig: Signature with generics but zero arity
0x00299F2A	0x00000034	[ 80] literal string: MethodSig: Standalone signature with generic params
0x00299F5E	0x0000002F	[ 80] literal string: MethodSig: Not enough room for the param count
0x00299F8D	0x00000025	[ 80] literal string: MethodSig: Error parsing return type
0x00299FB2	0x0000002D	[ 80] literal string: MethodSig: Not enough room for param %d type
0x00299FDF	0x00000036	[ 80] literal string: MethodSig: Found sentinel but signature is not vararg
0x0029A015	0x00000027	[ 80] literal string: MethodSig: More than one sentinel type
0x0029A03C	0x00000020	[ 80] literal string: MethodSig: Error parsing arg %d
0x0029A05C	0x00000024	[ 80] literal string: Param: Not enough room for the type
0x0029A080	0x00000029	[ 80] literal string: ReturnType: Not enough room for the type
0x0029A0A9	0x00000026	[ 80] literal string: GenericInst: Not enough room for kind
0x0029A0CF	0x0000002A	[ 80] literal string: GenericInst: Invalid GenericInst kind %x

0x0029A0F9	0x0000002C	[ 80] literal string: GenericInst: Not enough room for type token
0x0029A125	0x0000002B	[ 80] literal string: GenericInst: invalid TypeDefOrRef token %x
0x0029A150	0x0000005D	[ 80] literal string: Type: Recurside generic instance specification (%x). A type signature can't reference itself
0x0029A1AD	0x00000030	[ 80] literal string: GenericInst: Not enough room for argument count
0x0029A1DD	0x0000002D	[ 80] literal string: GenericInst: Zero arguments generic instance
0x0029A20A	0x00000029	[ 80] literal string: GenericInst: invalid generic argument %d
0x0029A233	0x00000025	[ 80] literal string: ArrayShape: Not enough room for Rank
0x0029A258	0x00000029	[ 80] literal string: ArrayShape: Invalid shape with zero Rank
0x0029A281	0x00000029	[ 80] literal string: ArrayShape: Not enough room for NumSizes
0x0029A2AA	0x00000030	[ 80] literal string: ArrayShape: Not enough room for Size of rank %d
0x0029A2DA	0x0000002C	[ 80] literal string: ArrayShape: Not enough room for NumLoBounds
0x0029A306	0x00000033	[ 80] literal string: ArrayShape: Not enough room for LoBound of rank %d
0x0029A339	0x00000028	[ 80] literal string: CustomMod: Not enough room for the type
0x0029A361	0x00000029	[ 80] literal string: CustomMod: Not enough room for the token
0x0029A38A	0x00000029	[ 80] literal string: CustomMod: invalid TypeDefOrRef token %x
0x0029A3B3	0x0000002C	[ 80] literal string: TypeSpec: Could not decode signature header
0x0029A3DF	0x00000023	[ 80] literal string: TypeSpec: Not enough room for type
0x0029A402	0x00000029	[ 80] literal string: TypeSpec: Not enough room for byref type
0x0029A42B	0x00000021	[ 80] literal string: TypeSpec: Invalid type typedref&
0x0029A44C	0x00000030	[ 80] literal string: MemberRefSig: Could not decode signature header
0x0029A47C	0x0000002D	[ 80] literal string: MethodSig: Could not decode signature header
0x0029A4A9	0x00000031	[ 80] literal string: StandAloneSig: Could not decode signature header
0x0029A4DA	0x00000031	[ 80] literal string: StandAloneSig: Not enough room for the call conv
0x0029A50B	0x0000002B	[ 80] literal string: Field: Not enough room for field signature
0x0029A536	0x00000029	[ 80] literal string: Field: Invalid signature 0x%x, must be 6
0x0029A55F	0x00000029	[ 80] literal string: LocalsSig: Not enough room for signature
0x0029A588	0x0000002D	[ 80] literal string: LocalsSig: Signature is not 0x28 or 0x08: %x
0x0029A5B5	0x0000002F	[ 80] literal string: LocalsSig: Not enough room for the param count
0x0029A5E4	0x00000024	[ 80] literal string: LocalsSig: Not enough room for type
0x0029A608	0x00000022	[ 80] literal string: LocalsSig: Error parsing local %d
0x0029A62A	0x00000032	[ 80] literal string: Type: Not enough room for byref type for local %d
0x0029A65C	0x0000002A	[ 80] literal string: Type: Invalid type typedref& for local %d
0x0029A686	0x0000001A	[ 80] literal string: MethodHeader: Invalid RVA
0x0029A6A0	0x00000029	[ 80] literal string: MethodHeader: Not enough room for header
0x0029A6C9	0x00000027	[ 80] literal string: MethodHeader: Invalid header type 0x%x
0x0029A6F0	0x00000055	[ 80] literal string: MethodHeader: Not enough room for method body. Required %d, but only %d is available
0x0029A745	0x0000002D	[ 80] literal string: MethodHeader: Not enough room for fat header
0x0029A772	0x00000024	[ 80] literal string: MethodHeader: header size must be 3
0x0029A796	0x0000002C	[ 80] literal string: MethodHeader: Not enough room for max stack
0x0029A7C2	0x0000002C	[ 80] literal string: MethodHeader: Not enough room for code size
0x0029A7EE	0x00000031	[ 80] literal string: MethodHeader: Not enough room for local vars tok
0x0029A81F	0x00000036	[ 80] literal string: MethodHeader: Invalid local vars signature table 0x%x
0x0029A855	0x00000046	[ 80] literal string: MethodHeader: Invalid local vars signature points to invalid row 0x%x
0x0029A89B	0x0000003B	[ 80] literal string: MethodHeader: Invalid local vars signature with zero index
0x0029A8D6	0x0000002D	[ 80] literal string: MethodHeader: Invalid fat signature flags %x
0x0029A903	0x0000002A	[ 80] literal string: MethodHeader: Not enough room for code %d
0x0029A92D	0x00000036	[ 80] literal string: MethodHeader: Not enough room for data section header
0x0029A963	0x00000030	[ 80] literal string: MethodHeader: Invalid section header flags 0x%x
0x0029A993	0x00000025	[ 80] literal string: MethodHeader: Section size too small
0x0029A9B8	0x00000035	[ 80] literal string: MethodHeader: Not enough room for section content %d
0x0029A9ED	0x0000004B	[ 80] literal string: MethodHeader: Invalid EH section size %d, it's not of the expected size %d
0x0029AA38	0x0000002D	[ 80] literal string: MethodHeader: Not enough room for section %d
0x0029AA65	0x00000036	[ 80] literal string: MethodHeader: Invalid section %d class token table %x
0x0029AA9B	0x00000036	[ 80] literal string: MethodHeader: Invalid section %d class token index %x
0x0029AAD1	0x0000002C	[ 80] literal string: FieldSig: Could not decode signature header
0x0029AAFD	0x0000002C	[ 80] literal string: FieldSig: Not enough room for the signature
0x0029AB29	0x0000001F	[ 80] literal string: FieldSig: Invalid signature %x
0x0029AB48	0x00000038	[ 80] literal string: TypeRef table row %d has duplicate for tuple (%s,%s,%x)
0x0029AB80	0x0000003D	[ 80] literal string: MethodSpec table row %d has invalid Instantiation token %08x
0x0029ABBD	0x0000002D	[ 80] literal string: Invalid TypeSpec row %d Signature field %08x
0x0029ABEA	0x00000041	[ 80] literal string: Invalid Event row %d has no AddOn or RemoveOn associated methods
0x0029AC2B	0x00000034	[ 80] literal string: Invalid Event row %d has no AddOn associated method
0x0029AC5F	0x00000037	[ 80] literal string: Invalid Event row %d has no RemoveOn associated method
0x0029AC96	0x00000034	[ 80] literal string: ../../../../../mono/mono/metadata/metadata-verify.c
0x0029ACCA	0x00000034	[ 80] literal string: Invalid StandAloneSig row %d Signature field 0x%08x
0x0029ACFE	0x00000037	[ 80] literal string: Invalid DeclSecurity row %d PermissionSet field 0x%08x
0x0029AD35	0x00000034	[ 80] literal string: Invalid FieldMarshal row %d NativeType field 0x%08x
0x0029AD69	0x00000032	[ 80] literal string: Invalid CustomAttribute row %d Value field 0x%08x
0x0029AD9B	0x00000038	[ 80] literal string: Invalid CustomAttribute constructor row %d Token 0x%08x
0x0029ADD3	0x0000004A	[ 80] literal string: decode_signature_header (ctx, data [MONO_CUSTOM_ATTR_VALUE], &size, &ptr)
0x0029AE1D	0x0000003A	[ 80] literal string: Invalid CustomAttribute content row %d Value field 0x%08x
0x0029AE57	0x00000031	[ 80] literal string: Invalid MemberRef row %d Signature field  0x%08x
0x0029AE88	0x00000030	[ 80] literal string: MemberRefSig: Not enough room for the call conv
0x0029AEB8	0x00000035	[ 80] literal string: Invalid method row %d invalid signature token 0x%08x
0x0029AEED	0x0000003D	[ 80] literal string: Invalid method row %d RVA points to an invalid method header
0x0029AF2A	0x00000032	[ 80] literal string: Invalid field row %d invalid signature token %08x
0x0029AF5C	0x00000031	[ 80] literal string: Typedef table must have exactly at least one row
0x0029AF8D	0x00000048	[ 80] literal string: Invalid typedef row %d for interface type must have a null extend field
0x0029AFD5	0x00000047	[ 80] literal string: Invalid typedef row %d for System.Object must have a null extend field
0x0029B01C	0x00000050	[ 80] literal string: Invalid typedef row %d for non-interface type must have a non-null extend field
0x0029B06C	0x0000002A	[ 80] literal string: table space is either empty or overflowed
0x0029B096	0x0000004C	[ 80] literal string: Tables data require %d bytes but the only %d are available in the #~ stream
0x0029B0E2	0x00000009	[ 80] literal string: res >= 0
0x0029B0EB	0x00000038	[ 80] literal string: TypeDef table row %d has duplicate for tuple (%s,%s,%x)
0x0029B123	0x00000041	[ 80] literal string: GenericParamConstraint table row %d has invalid Owner token %08x
0x0029B164	0x00000046	[ 80] literal string: GenericParamConstraint table row %d has invalid Constraint token %08x
0x0029B1AA	0x0000003E	[ 80] literal string: GenericParamConstraint table row %d has null Constraint token
0x0029B1E8	0x00000081	[ 80] literal string: GenericParamConstraint table row %d is not properly sorted. Previous value of the owner column is 0x%08x current value is 0x%08x
0x0029B269	0x00000044	[ 80] literal string: GenericParamConstraint table row %d has duplicate constraint 0x%08x
0x0029B2AD	0x00000036	[ 80] literal string: MethodSpec table row %d has invalid Method token %08x
0x0029B2E3	0x0000002E	[ 80] literal string: MethodSpec table row %d has null Method token
0x0029B311	0x00000039	[ 80] literal string: MethodSpec table row %d has invalid signature token %08x
0x0029B34A	0x00000037	[ 80] literal string: GenericParam table row %d has invalid Flags token %08x
0x0029B381	0x00000037	[ 80] literal string: GenericParam table row %d has invalid VarianceMask 0x3
0x0029B3B8	0x00000036	[ 80] literal string: GenericParam table row %d has invalid Name token %08x
0x0029B3EE	0x00000037	[ 80] literal string: GenericParam table row %d has invalid Owner token %08x
0x0029B425	0x0000002F	[ 80] literal string: GenericParam table row %d has null Owner token
0x0029B454	0x00000040	[ 80] literal string: GenericParam table row %d Number is out of order %d expected %d
0x0029B494	0x0000003C	[ 80] literal string: NestedClass table row %d has invalid NestedClass token %08x
0x0029B4D0	0x0000003F	[ 80] literal string: NestedClass table row %d has invalid EnclosingClass token %08x
0x0029B50F	0x00000051	[ 80] literal string: NestedClass table row %d has same token for NestedClass  and EnclosingClass %08x
0x0029B560	0x00000035	[ 80] literal string: ManifestResource table row %d has invalid Flags %08x
0x0029B595	0x00000044	[ 80] literal string: ManifestResource table row %d has invalid Flags VisibilityMask %08x
0x0029B5D9	0x00000034	[ 80] literal string: ManifestResource table row %d has invalid Name %08x
0x0029B60D	0x00000044	[ 80] literal string: ManifestResource table row %d has invalid Implementation token %08x
0x0029B651	0x0000004A	[ 80] literal string: ManifestResource table row %d has invalid Implementation token table %08x
0x0029B69B	0x00000047	[ 80] literal string: ManifestResource table row %d points to a file but has non-zero offset
0x0029B6E2	0x00000039	[ 80] literal string: ManifestResource table row %d invalid Offset field %08x 
0x0029B71B	0x00000031	[ 80] literal string: ExportedType table row %d has invalid Flags %08x
0x0029B74C	0x00000034	[ 80] literal string: ExportedType table row %d has invalid TypeName %08x
0x0029B780	0x00000039	[ 80] literal string: ExportedType table row %d has invalid TypeNamespace %08x
0x0029B7B9	0x00000040	[ 80] literal string: ExportedType table row %d has invalid Implementation token %08x
0x0029B7F9	0x00000038	[ 80] literal string: ExportedType table row %d has null Implementation token
0x0029B831	0x00000055	[ 80] literal string: ExportedType table row %d has denotes a nested type but has a non null TypeNamespace
0x0029B886	0x00000029	[ 80] literal string: File table row %d has invalid Flags %08x
0x0029B8AF	0x00000028	[ 80] literal string: File table row %d has invalid Name %08x
0x0029B8D7	0x0000002D	[ 80] literal string: File table row %d has invalid HashValue %08x
0x0029B904	0x00000030	[ 80] literal string: AssemblyRef table row %d has invalid Flags %08x
0x0029B934	0x0000003B	[ 80] literal string: AssemblyRef table row %d has invalid PublicKeyOrToken %08x
0x0029B96F	0x0000002F	[ 80] literal string: AssemblyRef table row %d has invalid Name %08x
0x0029B99E	0x00000032	[ 80] literal string: AssemblyRef table row %d has invalid Culture %08x
0x0029B9D0	0x00000034	[ 80] literal string: AssemblyRef table row %d has invalid HashValue %08x
0x0029BA04	0x00000035	[ 80] literal string: Assembly table can have zero or one rows, but now %d
0x0029BA39	0x0000002F	[ 80] literal string: Assembly table row %d has invalid HashAlgId %x
0x0029BA68	0x0000002D	[ 80] literal string: Assembly table row %d has invalid Flags %08x
0x0029BA95	0x00000031	[ 80] literal string: Assembly table row %d has invalid PublicKey %08x
0x0029BAC6	0x0000002C	[ 80] literal string: Assembly table row %d has invalid Name %08x
0x0029BAF2	0x0000002F	[ 80] literal string: Assembly table row %d has invalid Culture %08x
0x0029BB21	0x00000021	[ 80] literal string: Invalid FieldRVA row %d RVA %08x
0x0029BB42	0x00000023	[ 80] literal string: Invalid FieldRVA row %d Field %08x
0x0029BB65	0x00000028	[ 80] literal string: Invalid ImplMap row %d Flags field %08x
0x0029BB8D	0x00000032	[ 80] literal string: Invalid ImplMap row %d Invalid call conv field %x
0x0029BBBF	0x00000036	[ 80] literal string: Invalid ImplMap row %d Invalid MemberForward token %x
0x0029BBF5	0x0000003B	[ 80] literal string: Invalid ImplMap row %d only methods are supported token %x
0x0029BC30	0x00000022	[ 80] literal string: Invalid ImplMap row %d null token
0x0029BC52	0x0000002B	[ 80] literal string: Invalid ImplMap row %d ImportName Token %x
0x0029BC7D	0x00000034	[ 80] literal string: Invalid ImplMap row %d Invalid ImportScope token %x
0x0029BCB1	0x00000029	[ 80] literal string: Invalid ModuleRef row %d name field %08x
0x0029BCDA	0x0000002B	[ 80] literal string: Invalid MethodImpl row %d Class field %08x
0x0029BD05	0x00000030	[ 80] literal string: Invalid MethodImpl row %d MethodBody field %08x
0x0029BD35	0x00000037	[ 80] literal string: Invalid MethodImpl row %d MethodDeclaration field %08x
0x0029BD6C	0x00000031	[ 80] literal string: Invalid Property row %d PropertyFlags field %08x
0x0029BD9D	0x00000028	[ 80] literal string: Invalid Property row %d Name field %08x
0x0029BDC5	0x00000028	[ 80] literal string: Invalid Property row %d Type field %08x
0x0029BDED	0x0000005F	[ 80] literal string: Invalid Property row %d has HasDefault but there is no corresponding row in the Constant table
0x0029BE4C	0x0000002F	[ 80] literal string: PropertySig: Could not decode signature header
0x0029BE7B	0x0000002B	[ 80] literal string: PropertySig: Not enough room for signature
0x0029BEA6	0x0000002F	[ 80] literal string: PropertySig: Signature is not 0x28 or 0x08: %x
0x0029BED5	0x00000031	[ 80] literal string: PropertySig: Not enough room for the param count
0x0029BF06	0x0000002B	[ 80] literal string: PropertySig: Could not parse property type
0x0029BF31	0x00000022	[ 80] literal string: PropertySig: Error parsing arg %d
0x0029BF53	0x0000002F	[ 80] literal string: Invalid PropertyMap row %d Parent field 0x%08x
0x0029BF82	0x00000031	[ 80] literal string: Invalid PropertyMap row %d PropertyList field %d
0x0029BFB3	0x0000002B	[ 80] literal string: Invalid Event row %d EventFlags field %08x
0x0029BFDE	0x00000025	[ 80] literal string: Invalid Event row %d Name field %08x
0x0029C003	0x0000002A	[ 80] literal string: Invalid Event row %d EventType field %08x
0x0029C02D	0x0000002C	[ 80] literal string: Invalid EventMap row %d Parent field 0x%08x
0x0029C059	0x0000002B	[ 80] literal string: Invalid EventMap row %d EventList field %d
0x0029C084	0x00000034	[ 80] literal string: Invalid StandAloneSig row %d invalid signature 0x%x
0x0029C0B8	0x0000002E	[ 80] literal string: Invalid FieldLayout row %d Field field 0x%08x
0x0029C0E6	0x0000002F	[ 80] literal string: Invalid ClassLayout row %d Parent field 0x%08x
0x0029C115	0x0000002C	[ 80] literal string: Invalid ClassLayout row %d Packing field %d
0x0029C141	0x00000030	[ 80] literal string: Invalid DeclSecurity row %d Parent field 0x%08x
0x0029C171	0x00000031	[ 80] literal string: Invalid DeclSecurity row %d Parent field is null
0x0029C1A2	0x00000038	[ 80] literal string: Invalid DeclSecurity row %d PermissionSet field is null
0x0029C1DA	0x00000030	[ 80] literal string: Invalid FieldMarshal row %d Parent field 0x%08x
0x0029C20A	0x00000031	[ 80] literal string: Invalid FieldMarshal row %d Parent field is null
0x0029C23B	0x00000035	[ 80] literal string: Invalid FieldMarshal row %d NativeType field is null
0x0029C270	0x00000039	[ 80] literal string: Invalid FieldMarshal row %d invalid NativeType blob 0x%x
0x0029C2A9	0x00000033	[ 80] literal string: Invalid CustomAttribute row %d Parent field 0x%08x
0x0029C2DC	0x00000031	[ 80] literal string: Invalid CustomAttribute row %d Type field 0x%08x
0x0029C30D	0x00000037	[ 80] literal string: Invalid CustomAttribute row %d invalid value blob 0x%x
0x0029C344	0x0000002A	[ 80] literal string: Invalid Constant row %d Type field 0x%08x
0x0029C36E	0x00000038	[ 80] literal string: Invalid Constant row %d Parent field coded index 0x%08x
0x0029C3A6	0x00000033	[ 80] literal string: Invalid Constant row %d Parent field coded is null
0x0029C3D9	0x0000002B	[ 80] literal string: Invalid Constant row %d Value field 0x%08x
0x0029C404	0x0000001D	[ 80] literal string: ContantValue: invalid offset
0x0029C421	0x0000002E	[ 80] literal string: ContantValue: not enough space to decode size
0x0029C44F	0x00000042	[ 80] literal string: ContantValue: not enough space for string, required %d but got %d
0x0029C491	0x0000002A	[ 80] literal string: ContantValue: Expected size %d but got %d
0x0029C4BB	0x00000044	[ 80] literal string: ContantValue: Not enough room for constant, required %d but have %d
0x0029C4FF	0x00000032	[ 80] literal string: ContantValue: Type is class but value is not null
0x0029C531	0x00000038	[ 80] literal string: Invalid MemberRef row %d Class field coded index 0x%08x
0x0029C569	0x00000033	[ 80] literal string: Invalid MemberRef row %d Class field coded is null
0x0029C59C	0x00000045	[ 80] literal string: Invalid MemberRef row %d Name field coded is invalid or empty 0x%08x
0x0029C5E1	0x0000003B	[ 80] literal string: Invalid MemberRef row %d invalid signature blob token 0x%x
0x0029C61C	0x00000030	[ 80] literal string: Invalid InterfaceImpl row %d Class field 0x%08x
0x0029C64C	0x0000003F	[ 80] literal string: Invalid InterfaceImpl row %d Inteface field coded index 0x%08x
0x0029C68B	0x00000034	[ 80] literal string: Invalid InterfaceImpl row %d Inteface field is null
0x0029C6BF	0x00000035	[ 80] literal string: Param table has rows while the method table has zero
0x0029C6F4	0x0000002C	[ 80] literal string: Invalid param row %d bad Flags value 0x%08x
0x0029C720	0x00000046	[ 80] literal string: Invalid param row %d HasDefault = 1 but no owned row in Contant table
0x0029C766	0x00000047	[ 80] literal string: Invalid param row %d HasDefault = 0 but has owned row in Contant table
0x0029C7AD	0x00000050	[ 80] literal string: Invalid param row %d HasFieldMarshal = 1 but no owned row in FieldMarshal table
0x0029C7FD	0x0000002F	[ 80] literal string: Invalid param row %d Name = 1 bad token 0x%08x
0x0029C82C	0x00000037	[ 80] literal string: Invalid param row %d sequece = %d previus param has %d
0x0029C863	0x00000035	[ 80] literal string: Invalid method row %d invalid implflags field 0x%08x
0x0029C898	0x00000033	[ 80] literal string: Invalid method row %d invalid MemberAccessMask 0x7
0x0029C8CB	0x00000030	[ 80] literal string: Invalid method row %d invalid name field 0x%08x
0x0029C8FB	0x00000038	[ 80] literal string: Invalid method row %d .ctor or .cctor has generic param
0x0029C933	0x00000041	[ 80] literal string: Invalid method row %d is static and (final, virtual or new slot)
0x0029C974	0x00000032	[ 80] literal string: Invalid method row %d is Abstract and PinvokeImpl
0x0029C9A6	0x0000002C	[ 80] literal string: Invalid method row %d is Abstract and Final
0x0029C9D2	0x00000032	[ 80] literal string: Invalid method row %d is Abstract but not Virtual
0x0029CA04	0x0000004C	[ 80] literal string: Invalid method row %d is CompileControlled and SpecialName or RtSpecialName
0x0029CA50	0x0000003B	[ 80] literal string: Invalid method row %d is RTSpecialName but not SpecialName
0x0029CA8B	0x00000038	[ 80] literal string: Invalid method row %d is a global method but not Static
0x0029CAC3	0x00000044	[ 80] literal string: Invalid method row %d is a global method but is Abstract or Virtual
0x0029CB07	0x00000060	[ 80] literal string: Invalid method row %d is a global method but not CompilerControled, Public, Private or Assembly
0x0029CB67	0x00000044	[ 80] literal string: Invalid method row %d is (Final, NewSlot or Strict) but not Virtual
0x0029CBAB	0x00000031	[ 80] literal string: Invalid method row %d is PinvokeImpl and Virtual
0x0029CBDC	0x00000034	[ 80] literal string: Invalid method row %d is PinvokeImpl but not Static
0x0029CC10	0x00000066	[ 80] literal string: Invalid method row %d is not Abstract and neither PinvokeImpl, Runtime, InternalCall or with RVA != 0
0x0029CC76	0x00000050	[ 80] literal string: Invalid method row %d is CompilerControlled but neither RVA != 0 or PinvokeImpl
0x0029CCC6	0x00000057	[ 80] literal string: Invalid method row %d has RVA != 0 but is either Abstract, InternalCall or PinvokeImpl
0x0029CD1D	0x00000059	[ 80] literal string: Invalid method row %d has RVA != 0 but is CodeTypeMask is neither Native, CIL or Runtime
0x0029CD76	0x0000005D	[ 80] literal string: Invalid method row %d has RVA = 0 but neither Abstract, InternalCall, Runtime or PinvokeImpl
0x0029CDD3	0x00000036	[ 80] literal string: Invalid method row %d is PinvokeImpl but has RVA != 0
0x0029CE09	0x00000049	[ 80] literal string: Invalid method row %d is PinvokeImpl but has no row in the ImplMap table
0x0029CE52	0x00000045	[ 80] literal string: Invalid method row %d is RtSpecialName but not named .ctor or .cctor
0x0029CE97	0x00000048	[ 80] literal string: Invalid method row %d is named .ctor or .cctor but is not RtSpecialName
0x0029CEDF	0x00000038	[ 80] literal string: Invalid method row %d invalid signature blob token 0x%x
0x0029CF17	0x0000002B	[ 80] literal string: Invalid method row %d ParamList be be >= 1
0x0029CF42	0x0000005A	[ 80] literal string: Invalid method row %d ParamList rowid 0x%08x can't be smaller than of previous row 0x%08x
0x0029CF9C	0x0000003D	[ 80] literal string: Invalid method row %d ParamList rowid 0x%08x is out of range
0x0029CFD9	0x00000030	[ 80] literal string: Invalid field row %d invalid flags field 0x%08x
0x0029D009	0x00000032	[ 80] literal string: Invalid field row %d invalid field visibility 0x7
0x0029D03B	0x00000045	[ 80] literal string: Invalid field row %d cannot be InitOnly and Literal at the same time
0x0029D080	0x0000003A	[ 80] literal string: Invalid field row %d is RTSpecialName but not SpecialName
0x0029D0BA	0x0000002F	[ 80] literal string: Invalid field row %d is Literal but not Static
0x0029D0E9	0x00000062	[ 80] literal string: Invalid field row %d has FieldMarshal but there is no corresponding row in the FieldMarshal table
0x0029D14B	0x00000059	[ 80] literal string: Invalid field row %d has Default but there is no corresponding row in the Constant table
0x0029D1A4	0x00000058	[ 80] literal string: Invalid field row %d is Literal but there is no corresponding row in the Constant table
0x0029D1FC	0x0000002D	[ 80] literal string: Invalid field row %d invalid name token %08x
0x0029D229	0x00000037	[ 80] literal string: Invalid field row %d invalid signature blob token 0x%x
0x0029D260	0x0000003C	[ 80] literal string: Invalid field row %d is a global variable but is not static
0x0029D29C	0x00000047	[ 80] literal string: Invalid field row %d is a global variable but have wrong visibility %x
0x0029D2E3	0x00000032	[ 80] literal string: Invalid typedef row %d invalid flags field 0x%08x
0x0029D315	0x00000031	[ 80] literal string: Invalid typedef row %d invalid class layout 0x18
0x0029D346	0x00000041	[ 80] literal string: Invalid typedef row %d mono doesn't support custom string format
0x0029D387	0x0000003B	[ 80] literal string: Invalid typedef row %d for interface type must be abstract
0x0029D3C2	0x0000002F	[ 80] literal string: Invalid typedef row %d invalid name token %08x
0x0029D3F1	0x00000034	[ 80] literal string: Invalid typedef row %d invalid namespace token %08x
0x0029D425	0x00000037	[ 80] literal string: Invalid typedef row %d extend field coded index 0x%08x
0x0029D45C	0x00000042	[ 80] literal string: Invalid typedef row %d zero coded extend field coded index 0x%08x
0x0029D49E	0x00000052	[ 80] literal string: Invalid typedef row %d has nested visibility but no rows in the NestedClass table
0x0029D4F0	0x0000002C	[ 80] literal string: Invalid typedef row %d FieldList be be >= 1
0x0029D51C	0x0000003E	[ 80] literal string: Invalid typedef row %d FieldList rowid 0x%08x is out of range
0x0029D55A	0x0000005B	[ 80] literal string: Invalid typedef row %d FieldList rowid 0x%08x can't be smaller than of previous row 0x%08x
0x0029D5B5	0x0000002D	[ 80] literal string: Invalid typedef row %d MethodList be be >= 1
0x0029D5E2	0x0000003F	[ 80] literal string: Invalid typedef row %d MethodList rowid 0x%08x is out of range
0x0029D621	0x0000005C	[ 80] literal string: Invalid typedef row %d MethodList rowid 0x%08x can't be smaller than of previous row 0x%08x
0x0029D67D	0x00000034	[ 80] literal string: Module table must have exactly one row, but have %d
0x0029D6B1	0x00000030	[ 80] literal string: Module has an invalid name, string index 0x%08x
0x0029D6E1	0x0000002A	[ 80] literal string: Module has an invalid Mvid, guid index %x
0x0029D70B	0x00000023	[ 80] literal string: Module has a non zero Enc field %x
0x0029D72E	0x00000027	[ 80] literal string: Module has a non zero EncBase field %x
0x0029D755	0x0000004F	[ 80] literal string: Table schemata size (%d) too small to for initial decoding (requires 24 bytes)
0x0029D7A4	0x00000034	[ 80] literal string: Invalid table schemata major version %d, expected 2
0x0029D7D8	0x00000034	[ 80] literal string: Invalid table schemata minor version %d, expected 0
0x0029D80C	0x0000004A	[ 80] literal string: Invalid table schemata heap sizes 0x%02x, only bits 0, 1 and 2 can be set
0x0029D856	0x0000003B	[ 80] literal string: The metadata verifier doesn't support MS specific table %x
0x0029D891	0x00000011	[ 80] literal string: Invalid table %x
0x0029D8A2	0x00000052	[ 80] literal string: Table schemata size (%d) too small to for decoding row counts (requires %d bytes)
0x0029D8F4	0x00000041	[ 80] literal string: Invalid Table %d row count: %d. Mono only supports 16777215 rows
0x0029D935	0x00000019	[ 80] literal string: offset != INVALID_OFFSET
0x0029D94E	0x00000058	[ 80] literal string: Metadata root section is too small %d (at least 20 bytes required for initial decoding)
0x0029D9A6	0x0000003D	[ 80] literal string: Invalid metadata signature, expected 0x424A5342 but got %08x
0x0029D9E3	0x00000056	[ 80] literal string: Metadata root section is too small %d (at least %d bytes required for flags decoding)
0x0029DA39	0x00000042	[ 80] literal string: Metadata root section must have at least 2 streams (#~ and #GUID)
0x0029DA7B	0x0000005C	[ 80] literal string: Metadata root section is too small for initial decode of stream header %d, missing %d bytes
0x0029DAD7	0x00000030	[ 80] literal string: Invalid stream header %d offset/size pair %x/%x
0x0029DB07	0x00000043	[ 80] literal string: Metadata root section is too small to decode stream header %d name
0x0029DB4A	0x00000034	[ 80] literal string: Metadata stream header %d name larger than 32 bytes
0x0029DB7E	0x0000002A	[ 80] literal string: Metadata stream header %d invalid name %s
0x0029DBA8	0x00000025	[ 80] literal string: Duplicated metadata stream header %s
0x0029DBCD	0x0000001B	[ 80] literal string: Metadata #~ stream missing
0x0029DBE8	0x0000001D	[ 80] literal string: Metadata guid stream missing
0x0029DC05	0x00000013	[ 80] literal string: CLI header missing
0x0029DC18	0x00000038	[ 80] literal string: Invalid cli header size in data directory %d must be 72
0x0029DC50	0x00000026	[ 80] literal string: Invalid cli header size %d must be 72
0x0029DC76	0x0000002D	[ 80] literal string: Invalid medatata section rva/size pair %x/%x
0x0029DCA3	0x0000002B	[ 80] literal string: Missing medatata section in the CLI header
0x0029DCCE	0x00000019	[ 80] literal string: Invalid CLI header flags
0x0029DCE7	0x0000002B	[ 80] literal string: Invalid cli section %i rva/size pair %x/%x
0x0029DD12	0x00000038	[ 80] literal string: Metadata verifier doesn't support cli header section %d
0x0029DD4A	0x0000004F	[ 80] literal string: Resource section is too small, must be at least 16 bytes long but it's %d long
0x0029DD99	0x00000056	[ 80] literal string: Resource section is too small, the number of entries (%d) doesn't fit on it's size %d
0x0029DDEF	0x00000028	[ 80] literal string: Import table size %d is smaller than 40
0x0029DE17	0x00000023	[ 80] literal string: Invalid Import Lookup Table rva %x
0x0029DE3A	0x00000021	[ 80] literal string: Invalid Import Table Name rva %x
0x0029DE5B	0x00000024	[ 80] literal string: Invalid Import Address Table rva %x
0x0029DE7F	0x00000043	[ 80] literal string: Import Address Table rva %x different from data directory entry %x
0x0029DEC2	0x0000001B	[ 80] literal string: name_rva != INVALID_OFFSET
0x0029DEDD	0x00000020	[ 80] literal string: Invalid Import Table Name: '%s'
0x0029DEFD	0x00000014	[ 80] literal string: Import Lookup Table
0x0029DF11	0x00000015	[ 80] literal string: Import Address Table
0x0029DF26	0x0000001D	[ 80] literal string: import_rva != INVALID_OFFSET
0x0029DF43	0x00000020	[ 80] literal string: Invalid Hint/Name rva %d for %s
0x0029DF63	0x00000021	[ 80] literal string: hint_table_rva != INVALID_OFFSET
0x0029DF84	0x0000001A	[ 80] literal string: Invalid Hint / Name: '%s'
0x0029DF9E	0x0000001A	[ 80] literal string: Invalid data directory %d
0x0029DFB8	0x0000002E	[ 80] literal string: Invalid data directory %d rva/size pair %x/%x
0x0029DFE6	0x00000020	[ 80] literal string: Invalid PE optional header size
0x0029E006	0x00000044	[ 80] literal string: Metadata verifier doesn't handle sections with intialized data only
0x0029E04A	0x0000002E	[ 80] literal string: Invalid PointerToRawData %x points beyond EOF
0x0029E078	0x00000026	[ 80] literal string: Invalid VirtualSize points beyond EOF
0x0029E09E	0x0000004B	[ 80] literal string: Metadata verifier doesn't handle sections with SizeOfRawData < VirtualSize
0x0029E0E9	0x0000002B	[ 80] literal string: Invalid SizeOfRawData %x points beyond EOF
0x0029E114	0x00000034	[ 80] literal string: Metadata verifier doesn't handle section relocation
0x0029E148	0x00000019	[ 80] literal string: Invalid section flags %x
0x0029E161	0x00000020	[ 80] literal string: Invalid optional header size %d
0x0029E181	0x0000001D	[ 80] literal string: Invalid Section Aligmnent %x
0x0029E19E	0x0000001A	[ 80] literal string: Invalid file Aligmnent %x
0x0029E1B8	0x0000001D	[ 80] literal string: Too many data directories %x
0x0029E1D5	0x00000027	[ 80] literal string: Metadata verifier doesn't handle PE32+
0x0029E1FC	0x00000021	[ 80] literal string: Invalid optional header magic %d
0x0029E21D	0x0000001C	[ 80] literal string: Invalid PE header watermark
0x0029E239	0x0000001E	[ 80] literal string: File with truncated pe header
0x0029E257	0x00000020	[ 80] literal string: Invalid PE header Machine value
0x0029E277	0x00000027	[ 80] literal string: Not enough space for the MS-DOS header
0x0029E29E	0x00000019	[ 80] literal string: Invalid MS-DOS watermark
0x0029E2B7	0x00000033	[ 80] literal string: MS-DOS lfanew offset points to outside of the file
0x0029E2EA	0x0000002D	[ 81] literal string: ../../../../../mono/mono/metadata/metadata.c
0x0029E317	0x00000007	[ 81] literal string: i == 3
0x0029E31E	0x00000007	[ 81] literal string: i == 1
0x0029E325	0x00000007	[ 81] literal string: i == 2
0x0029E32C	0x00000011	[ 81] literal string: i == 0 || i == 1
0x0029E33D	0x00000007	[ 81] literal string: i == 0
0x0029E344	0x00000007	[ 81] literal string: i == 5
0x0029E34B	0x00000011	[ 81] literal string: i == 4 || i == 5
0x0029E35C	0x00000037	[ 81] literal string: Can't handle MONO_MT_TABLE_IDX for table %d element %d
0x0029E393	0x0000002C	[ 81] literal string: idx > 0 && idx <= meta->tables [table].rows
0x0029E3BF	0x00000020	[ 81] literal string: index < meta->heap_strings.size
0x0029E3DF	0x0000001B	[ 81] literal string: index < meta->heap_us.size
0x0029E3FA	0x0000001D	[ 81] literal string: index < meta->heap_blob.size
0x0029E417	0x0000001D	[ 81] literal string: index < meta->heap_guid.size
0x0029E434	0x0000000E	[ 81] literal string: idx < t->rows
0x0029E442	0x00000012	[ 81] literal string: res_size == count
0x0029E454	0x0000002B	[ 81] literal string: col < mono_metadata_table_count (bitfield)
0x0029E47F	0x00000012	[ 81] literal string: ival < 0x20000000
0x0029E491	0x0000005C	[ 81] literal string: compressed signed value appears to use 29 bits for compressed representation: %x (raw: %8x)
0x0029E4ED	0x0000003D	[ 81] literal string: mono_metadata_token_table(token) == MONO_TABLE_STANDALONESIG
0x0029E52A	0x00000026	[ 81] literal string: Could not parse return type signature
0x0029E550	0x0000002A	[ 81] literal string: Found sentinel for methoddef or no vararg
0x0029E57A	0x0000002C	[ 81] literal string: Found sentinel twice in the same signature.
0x0029E5A6	0x00000035	[ 81] literal string: Could not parse type argument %d on method signature
0x0029E5DB	0x00000015	[ 81] literal string: !helper.cached_class
0x0029E5F0	0x0000000C	[ 81] literal string: ptr != NULL
0x0029E5FC	0x00000020	[ 81] literal string: wrong signature for locals blob
0x0029E61C	0x00000024	[ 81] literal string: mono_type_size: type 0x%02x unknown
0x0029E640	0x0000000A	[ 81] literal string: t != NULL
0x0029E64A	0x0000000B	[ 81] literal string: allow_open
0x0029E655	0x00000014	[ 81] literal string: type 0x%02x unknown
0x0029E669	0x00000024	[ 81] literal string: type->type == MONO_TYPE_GENERICINST
0x0029E68D	0x00000031	[ 81] literal string: Not a valid token for the constant table: 0x%08x
0x0029E6BE	0x00000027	[ 81] literal string: Could not create typespec %x due to %s
0x0029E6E5	0x00000021	[ 81] literal string: Could not verify type spec %08x.
0x0029E706	0x00000020	[ 81] literal string: Could not parse type spec %08x.
0x0029E726	0x00000026	[ 81] literal string: cant marshal bool to native type %02x
0x0029E74C	0x00000026	[ 81] literal string: cant marshal char to native type %02x
0x0029E772	0x0000009F	[ 81] literal string: Can not marshal string to native type '%02x': Invalid managed/unmanaged type combination (String fields must be paired with LPStr, LPWStr, BStr or ByValTStr).
0x0029E811	0x00000027	[ 81] literal string: cant marshal array as native type %02x
0x0029E838	0x00000028	[ 81] literal string: cant marshal object as native type %02x
0x0029E860	0x00000023	[ 81] literal string: type 0x%02x not handled in marshal
0x0029E883	0x00000020	[ 81] literal string: Invalid MethodDefOfRef token %x
0x0029E8A3	0x00000045	[ 81] literal string: %02X%02X%02X%02X-%02X%02X-%02X%02X-%02X%02X-%02X%02X%02X%02X%02X%02X
0x0029E8E8	0x00000006	[ 81] literal string: owner
0x0029E8EE	0x00000028	[ 81] literal string: wrong token %x to get_generic_param_row
0x0029E916	0x00000048	[ 81] literal string: GenericParam table unsorted or hole in generic param sequence: token %d
0x0029E95E	0x00000032	[ 81] literal string: container->parent == NULL || container->is_method
0x0029E990	0x0000001E	[ 81] literal string: type->type == MONO_TYPE_FNPTR
0x0029E9AE	0x0000001C	[ 81] literal string: type->type == MONO_TYPE_PTR
0x0029E9CA	0x0000002F	[ 81] literal string: param_num >= 0 && param_num < sig->param_count
0x0029E9F9	0x00000020	[ 81] literal string: implement type compare for %0x!
0x0029EA19	0x00000016	[ 81] literal string: !container->is_method
0x0029EA2F	0x00000015	[ 81] literal string: container->is_method
0x0029EA44	0x00000148	[ 81] literal string: method->declaring->klass->image == image || (method->context.class_inst && ginst_in_image (method->context.class_inst, image)) || (method->context.method_inst && ginst_in_image (method->context.method_inst, image)) || (((MonoMethod*)method)->signature && signature_in_image (mono_method_signature ((MonoMethod*)method), image))
0x0029EB8C	0x0000002B	[ 81] literal string: gclass_in_image (gclass, user_data->image)
0x0029EBB7	0x00000023	[ 81] literal string: got more than 64 modifiers in type
0x0029EBDA	0x00000043	[ 81] literal string: type 0x%02x not handled in do_mono_metadata_parse_type on image %s
0x0029EC1D	0x00000021	[ 81] literal string: is_var || type == MONO_TYPE_MVAR
0x0029EC3E	0x00000033	[ 82] literal string: ../../../../../mono/mono/metadata/method-builder.c
0x0029EC71	0x0000000B	[ 82] literal string: mb != NULL
0x0029EC7C	0x00000038	[ 83] literal string: Lock %p in object %p held by thread %d, nest level: %d

0x0029ECB4	0x0000001E	[ 83] literal string: 	Waiting on semaphore %p: %d

0x0029ECD2	0x0000001E	[ 83] literal string: Lock %p in object %p untaken

0x0029ECF0	0x0000004D	[ 83] literal string: Total locks (in %d array(s)): %d, used: %d, on freelist: %d, to recycle: %d

0x0029ED3D	0x0000000A	[ 83] literal string: lockTaken
0x0029ED47	0x0000001A	[ 83] literal string: lockTaken is already true
0x0029ED61	0x0000000B	[ 83] literal string: Not locked
0x0029ED6C	0x0000001A	[ 83] literal string: Not locked by this thread
0x0029ED86	0x0000001C	[ 83] literal string: Failed to set up wait event
0x0029EDA2	0x00000016	[ 83] literal string: Failed to regain lock
0x0029EDB8	0x0000002C	[ 83] literal string: ../../../../../mono/mono/metadata/monitor.c
0x0029EDE4	0x0000000F	[ 83] literal string: mon->nest == 1
0x0029EDF3	0x0000000C	[ 83] literal string: sem != NULL
0x0029EDFF	0x00000017	[ 83] literal string: mon->wait_list == NULL
0x0029EE16	0x00000018	[ 84] literal string: Could not decode header
0x0029EE2E	0x0000002D	[ 84] literal string: Invalid opcode %d argument %d max opcode %d

0x0029EE5B	0x0000001E	[ 84] literal string: Invalid instruction target %x
0x0029EE79	0x00000035	[ 84] literal string: ../../../../../mono/mono/metadata/mono-basic-block.c
0x0029EEAE	0x00000017	[ 84] literal string: Invalid instruction %x
0x0029EEC5	0x00000008	[ 84] literal string: current
0x0029EECD	0x0000001E	[ 84] literal string: Invalid switch instruction %x
0x0029EEEB	0x00000019	[ 84] literal string: Invalid last instruction
0x0029EF04	0x00000009	[ 85] literal string: <buffer>
0x0029EF0D	0x0000000A	[ 85] literal string: <bundled>
0x0029EF17	0x0000000A	[ 85] literal string: %s.config
0x0029EF21	0x0000000B	[ 85] literal string: assemblies
0x0029EF2C	0x0000000C	[ 85] literal string: MONO_CONFIG
0x0029EF38	0x00000007	[ 85] literal string: config
0x0029EF3F	0x0000000D	[ 85] literal string: .mono/config
0x0029EF4C	0x0000000D	[ 85] literal string: MONO_CFG_DIR
0x0029EF59	0x00000012	[ 85] literal string: dependentAssembly
0x0029EF6B	0x00000011	[ 85] literal string: assemblyIdentity
0x0029EF7C	0x0000000F	[ 85] literal string: publicKeyToken
0x0029EF8B	0x00000008	[ 85] literal string: culture
0x0029EF93	0x00000010	[ 85] literal string: bindingRedirect
0x0029EFA3	0x0000000B	[ 85] literal string: oldVersion
0x0029EFAE	0x00000002	[ 85] literal string: -
0x0029EFB0	0x0000000B	[ 85] literal string: newVersion
0x0029EFBB	0x00000022	[ 85] literal string: Config attempting to parse: '%s'.
0x0029EFDD	0x00000009	[ 85] literal string: aotcache
0x0029EFE6	0x00000004	[ 85] literal string: app
0x0029EFEA	0x00000008	[ 85] literal string: options
0x0029EFF2	0x0000001F	[ 85] literal string: legacyUnhandledExceptionPolicy
0x0029F011	0x00000007	[ 85] literal string: dllmap
0x0029F018	0x00000003	[ 85] literal string: os
0x0029F01B	0x00000004	[ 85] literal string: osx
0x0029F01F	0x00000004	[ 85] literal string: cpu
0x0029F023	0x00000009	[ 85] literal string: wordsize
0x0029F02C	0x00000003	[ 85] literal string: 32
0x0029F02F	0x00000009	[ 85] literal string: dllentry
0x0029F038	0x0000002C	[ 86] literal string: ../../../../../mono/mono/metadata/mono-cq.c
0x0029F064	0x0000000B	[ 86] literal string: MonoCQItem
0x0029F06F	0x00000013	[ 86] literal string: monocq_item_vtable
0x0029F082	0x0000002F	[ 87] literal string: ../../../../../mono/mono/metadata/mono-debug.c
0x0029F0B1	0x00000018	[ 87] literal string: !mono_debug_initialized
0x0029F0C9	0x00000029	[ 87] literal string: The mdb debugger is no longer supported.
0x0029F0F2	0x00000056	[ 87] literal string: ../../../../../mono/mono/metadata/mono-debug.c:202:: unloading unknown domain %p / %d
0x0029F148	0x00000010	[ 87] literal string: size < max_size
0x0029F158	0x0000000F	[ 87] literal string: at %s <0x%05x>
0x0029F167	0x0000001A	[ 87] literal string: at %s <IL 0x%05x, 0x%05x>
0x0029F181	0x00000018	[ 87] literal string: at %s [0x%05x] in %s:%d
0x0029F199	0x0000000C	[ 87] literal string: initialized
0x0029F1A5	0x00000024	[ 87] literal string: lookup_data_table () failed for %p

0x0029F1C9	0x0000001C	[ 88] literal string: wrong type for gc hashtable
0x0029F1E5	0x0000002E	[ 88] literal string: ../../../../../mono/mono/metadata/mono-hash.c
0x0029F213	0x0000000D	[ 88] literal string: hash != NULL
0x0029F220	0x00000012	[ 88] literal string: predicate != NULL
0x0029F232	0x0000002E	[ 88] literal string: Size: %d Table Size: %d Max Chain Length: %d

0x0029F260	0x0000000D	[ 89] literal string: MonoListItem
0x0029F26D	0x0000002F	[ 89] literal string: ../../../../../mono/mono/metadata/mono-mlist.c
0x0029F29C	0x00000015	[ 89] literal string: monolist_item_vtable
0x0029F2B1	0x00000006	[ 90] literal string: %d/%s
0x0029F2B7	0x00000007	[ 90] literal string: _Total
0x0029F2BE	0x0000000C	[ 90] literal string: % User Time
0x0029F2CA	0x00000012	[ 90] literal string: % Privileged Time
0x0029F2DC	0x00000011	[ 90] literal string: % Interrupt Time
0x0029F2ED	0x0000000B	[ 90] literal string: % DCP Time
0x0029F2F8	0x00000011	[ 90] literal string: % Processor Time
0x0029F309	0x0000000D	[ 90] literal string: Thread Count
0x0029F316	0x00000012	[ 90] literal string: Allocated Objects
0x0029F328	0x00000016	[ 90] literal string: Total Physical Memory
0x0029F33E	0x00000033	[ 90] literal string: Physical memory installed in the machine, in bytes
0x0029F371	0x0000001A	[ 90] literal string: Available Physical Memory
0x0029F38B	0x00000033	[ 90] literal string: Physical memory available in the machine, in bytes
0x0029F3BE	0x00000010	[ 90] literal string: Requests Queued
0x0029F3CE	0x0000000F	[ 90] literal string: Requests Total
0x0029F3DD	0x0000000D	[ 90] literal string: Requests/Sec
0x0029F3EA	0x00000015	[ 90] literal string: # of IL Bytes JITted
0x0029F3FF	0x00000017	[ 90] literal string: # of IL Methods JITted
0x0029F416	0x0000000E	[ 90] literal string: % Time in JIT
0x0029F424	0x00000014	[ 90] literal string: IL Bytes Jitted/Sec
0x0029F438	0x00000016	[ 90] literal string: Standard Jit Failures
0x0029F44E	0x00000013	[ 90] literal string: # of Exceps Thrown
0x0029F461	0x00000017	[ 90] literal string: # of Exceps Thrown/Sec
0x0029F478	0x00000011	[ 90] literal string: # of Filters/Sec
0x0029F489	0x00000012	[ 90] literal string: # of Finallys/Sec
0x0029F49B	0x00000019	[ 90] literal string: Throw to Catch Depth/Sec
0x0029F4B4	0x00000014	[ 90] literal string: # Gen 0 Collections
0x0029F4C8	0x00000014	[ 90] literal string: # Gen 1 Collections
0x0029F4DC	0x00000014	[ 90] literal string: # Gen 2 Collections
0x0029F4F0	0x0000001B	[ 90] literal string: Promoted Memory from Gen 0
0x0029F50B	0x0000001B	[ 90] literal string: Promoted Memory from Gen 1
0x0029F526	0x00000019	[ 90] literal string: Gen 0 Promoted Bytes/Sec
0x0029F53F	0x00000019	[ 90] literal string: Gen 1 Promoted Bytes/Sec
0x0029F558	0x00000028	[ 90] literal string: Promoted Finalization-Memory from Gen 0
0x0029F580	0x00000010	[ 90] literal string: Gen 0 heap size
0x0029F590	0x00000010	[ 90] literal string: Gen 1 heap size
0x0029F5A0	0x00000010	[ 90] literal string: Gen 2 heap size
0x0029F5B0	0x00000017	[ 90] literal string: Large Object Heap size
0x0029F5C7	0x00000017	[ 90] literal string: Finalization Survivors
0x0029F5DE	0x0000000D	[ 90] literal string: # GC Handles
0x0029F5EB	0x00000014	[ 90] literal string: Allocated Bytes/sec
0x0029F5FF	0x0000000D	[ 90] literal string: # Induced GC
0x0029F60C	0x0000000D	[ 90] literal string: % Time in GC
0x0029F619	0x00000015	[ 90] literal string: # Bytes in all Heaps
0x0029F62E	0x00000018	[ 90] literal string: # Total committed Bytes
0x0029F646	0x00000017	[ 90] literal string: # Total reserved Bytes
0x0029F65D	0x00000014	[ 90] literal string: # of Pinned Objects
0x0029F671	0x00000018	[ 90] literal string: # of Sink Blocks in use
0x0029F689	0x00000011	[ 90] literal string: Remote Calls/sec
0x0029F69A	0x00000013	[ 90] literal string: Total Remote Calls
0x0029F6AD	0x00000009	[ 90] literal string: Channels
0x0029F6B6	0x00000010	[ 90] literal string: Context Proxies
0x0029F6C6	0x0000001D	[ 90] literal string: Context-Bound Classes Loaded
0x0029F6E3	0x00000022	[ 90] literal string: Context-Bound Objects Alloc / sec
0x0029F705	0x00000009	[ 90] literal string: Contexts
0x0029F70E	0x00000017	[ 90] literal string: Current Classes Loaded
0x0029F725	0x00000015	[ 90] literal string: Total Classes Loaded
0x0029F73A	0x00000017	[ 90] literal string: Rate of Classes Loaded
0x0029F751	0x00000013	[ 90] literal string: Current appdomains
0x0029F764	0x00000011	[ 90] literal string: Total Appdomains
0x0029F775	0x00000013	[ 90] literal string: Rate of appdomains
0x0029F788	0x00000013	[ 90] literal string: Current Assemblies
0x0029F79B	0x00000011	[ 90] literal string: Total Assemblies
0x0029F7AC	0x00000013	[ 90] literal string: Rate of Assemblies
0x0029F7BF	0x00000019	[ 90] literal string: Total # of Load Failures
0x0029F7D8	0x00000016	[ 90] literal string: Rate of Load Failures
0x0029F7EE	0x00000015	[ 90] literal string: Bytes in Loader Heap
0x0029F803	0x0000001A	[ 90] literal string: Total appdomains unloaded
0x0029F81D	0x0000001C	[ 90] literal string: Rate of appdomains unloaded
0x0029F839	0x00000017	[ 90] literal string: Total # of Contentions
0x0029F850	0x00000016	[ 90] literal string: Contention Rate / sec
0x0029F866	0x00000015	[ 90] literal string: Current Queue Length
0x0029F87B	0x00000012	[ 90] literal string: Queue Length Peak
0x0029F88D	0x00000013	[ 90] literal string: Queue Length / sec
0x0029F8A0	0x0000001D	[ 90] literal string: # of current logical Threads
0x0029F8BD	0x0000001E	[ 90] literal string: # of current physical Threads
0x0029F8DB	0x00000020	[ 90] literal string: # of current recognized threads
0x0029F8FB	0x0000001E	[ 90] literal string: # of total recognized threads
0x0029F919	0x00000021	[ 90] literal string: rate of recognized threads / sec
0x0029F93A	0x0000000A	[ 90] literal string: # of CCWs
0x0029F944	0x0000000B	[ 90] literal string: # of Stubs
0x0029F94F	0x00000011	[ 90] literal string: # of marshalling
0x0029F960	0x00000015	[ 90] literal string: Total Runtime Checks
0x0029F975	0x00000013	[ 90] literal string: # Link Time Checks
0x0029F988	0x00000014	[ 90] literal string: % Time in RT checks
0x0029F99C	0x00000011	[ 90] literal string: Stack Walk Depth
0x0029F9AD	0x00000011	[ 90] literal string: Work Items Added
0x0029F9BE	0x00000015	[ 90] literal string: Work Items Added/Sec
0x0029F9D3	0x00000014	[ 90] literal string: IO Work Items Added
0x0029F9E7	0x00000018	[ 90] literal string: IO Work Items Added/Sec
0x0029F9FF	0x0000000D	[ 90] literal string: # of Threads
0x0029FA0C	0x00000010	[ 90] literal string: # of IO Threads
0x0029FA1C	0x00000013	[ 90] literal string: Bytes Received/sec
0x0029FA2F	0x0000000F	[ 90] literal string: Bytes Sent/sec
0x0029FA3E	0x00000010	[ 90] literal string: Bytes Total/sec
0x0029FA4E	0x0000000A	[ 90] literal string: Processor
0x0029FA58	0x00000008	[ 90] literal string: Process
0x0029FA60	0x0000000C	[ 90] literal string: Mono Memory
0x0029FA6C	0x00000008	[ 90] literal string: ASP.NET
0x0029FA74	0x0000000D	[ 90] literal string: .NET CLR JIT
0x0029FA81	0x00000014	[ 90] literal string: .NET CLR Exceptions
0x0029FA95	0x00000010	[ 90] literal string: .NET CLR Memory
0x0029FAA5	0x00000012	[ 90] literal string: .NET CLR Remoting
0x0029FAB7	0x00000011	[ 90] literal string: .NET CLR Loading
0x0029FAC8	0x00000019	[ 90] literal string: .NET CLR LocksAndThreads
0x0029FAE1	0x00000011	[ 90] literal string: .NET CLR Interop
0x0029FAF2	0x00000012	[ 90] literal string: .NET CLR Security
0x0029FB04	0x00000010	[ 90] literal string: Mono Threadpool
0x0029FB14	0x00000012	[ 90] literal string: Network Interface
0x0029FB26	0x0000002A	[ 90] literal string: Mono was unable to retrieve memory usage!
0x0029FB50	0x0000003A	[ 92] literal string: WindowsIdentity._GetRoles should never be called on POSIX
0x0029FB8A	0x00000014	[ 92] literal string: System.Security.dll
0x0029FB9E	0x00000032	[ 92] literal string: ../../../../../mono/mono/metadata/mono-security.c
0x0029FBD0	0x0000001D	[ 92] literal string: System.Security.Cryptography
0x0029FBED	0x00000010	[ 92] literal string: ProtectedMemory
0x0029FBFD	0x00000008	[ 92] literal string: Protect
0x0029FC05	0x0000000A	[ 92] literal string: Unprotect
0x0029FC0F	0x0000002D	[ 93] literal string: ../../../../../mono/mono/metadata/mono-wsq.c
0x0029FC3C	0x0000001A	[ 93] literal string: mono_wsq_count (wsq) == 0
0x0029FC56	0x00000038	[ 94] literal string: Could not lookup zero argument constructor for class %s
0x0029FC8E	0x0000001C	[ 94] literal string: TypeInitializationException
0x0029FCAA	0x0000002F	[ 94] literal string: compile method called on uninitialized runtime
0x0029FCD9	0x00000018	[ 94] literal string: mono_object_new_ptrfree
0x0029FCF1	0x0000001C	[ 94] literal string: mono_object_new_ptrfree_box
0x0029FD0D	0x00000015	[ 94] literal string: mono_object_new_fast
0x0029FD22	0x00000012	[ 94] literal string: mono_string_alloc
0x0029FD34	0x00000042	[ 94] literal string: mono_method_get_imt_slot: %s.%s.%s is not an interface MonoMethod
0x0029FD76	0x0000002B	[ 94] literal string: ../../../../../mono/mono/metadata/object.c
0x0029FDA1	0x0000002A	[ 94] literal string: imt_slot >= 0 && imt_slot < MONO_IMT_SIZE
0x0029FDCB	0x00000012	[ 94] literal string: item->size > size
0x0029FDDD	0x0000001C	[ 94] literal string: Generic virtual thunk bytes
0x0029FDF9	0x00000016	[ 94] literal string: Generic virtual cases
0x0029FE0F	0x00000017	[ 94] literal string: field->parent == klass
0x0029FE26	0x00000035	[ 94] literal string: ((MonoMethodInflated*)method)->declaring->slot != -1
0x0029FE5B	0x00000011	[ 94] literal string: iface_offset > 0
0x0029FE6C	0x00000034	[ 94] literal string: Invoking method '%s' when running in no-exec mode.

0x0029FEA0	0x0000002F	[ 94] literal string: !(field->type->attrs & FIELD_ATTRIBUTE_STATIC)
0x0029FECF	0x0000002C	[ 94] literal string: field->type->attrs & FIELD_ATTRIBUTE_STATIC
0x0029FEFB	0x00000030	[ 94] literal string: !(field->type->attrs & FIELD_ATTRIBUTE_LITERAL)
0x0029FF2B	0x00000035	[ 94] literal string: type 0x%x not handled in mono_field_get_value_object
0x0029FF60	0x00000008	[ 94] literal string: Pointer
0x0029FF68	0x0000002C	[ 94] literal string: type 0x%02x should not be in constant table
0x0029FF94	0x00000015	[ 94] literal string: klass->fields_inited
0x0029FFA9	0x00000042	[ 94] literal string: mono_class_from_mono_type (klass->fields [0].type) == param_class
0x0029FFEB	0x00000052	[ 94] literal string: mono_class_from_mono_type (klass->fields [1].type) == mono_defaults.boolean_class
0x002A003D	0x00000038	[ 94] literal string: Could not lookup delegate invoke method for delegate %s
0x002A0075	0x0000003B	[ 94] literal string: 
Cannot determine the text encoding for argument %d (%s).

0x002A00B0	0x0000004B	[ 94] literal string: Please add the correct encoding to MONO_EXTERNAL_ENCODINGS and try again.

0x002A00FB	0x00000043	[ 94] literal string: 
Cannot determine the text encoding for the assembly location: %s

0x002A013E	0x0000001D	[ 94] literal string: Unable to load Main method.

0x002A015B	0x00000013	[ 94] literal string: UnhandledException
0x002A016E	0x00000005	[ 94] literal string: args
0x002A0173	0x00000008	[ 94] literal string: .config
0x002A017B	0x00000013	[ 94] literal string: STAThreadAttribute
0x002A018E	0x0000002E	[ 94] literal string: arg->vtable->klass == mono_defaults.int_class
0x002A01BC	0x00000033	[ 94] literal string: type 0x%x not handled in mono_runtime_invoke_array
0x002A01EF	0x00000005	[ 94] literal string: !obj
0x002A01F4	0x0000002E	[ 94] literal string: res->vtable->klass == mono_defaults.int_class
0x002A0222	0x00000009	[ 94] literal string: !box_exc
0x002A022B	0x00000021	[ 94] literal string: klass == dest->obj.vtable->klass
0x002A024C	0x00000021	[ 94] literal string: size == mono_array_length (dest)
0x002A026D	0x00000003	[ 94] literal string: ac
0x002A0270	0x0000000A	[ 94] literal string: s != NULL
0x002A027A	0x00000011	[ 94] literal string: class->valuetype
0x002A028B	0x0000002C	[ 94] literal string: size == mono_class_value_size (class, NULL)
0x002A02B7	0x0000004E	[ 94] literal string: size == mono_class_value_size (mono_object_class (dest)->element_class, NULL)
0x002A0305	0x0000001E	[ 94] literal string: obj->vtable->klass->valuetype
0x002A0323	0x00000007	[ 94] literal string: Handle
0x002A032A	0x0000000A	[ 94] literal string: os_handle
0x002A0334	0x00000011	[ 94] literal string: safe_wait_handle
0x002A0345	0x00000009	[ 94] literal string: ToString
0x002A034E	0x0000001A	[ 94] literal string: 
Unhandled Exception:
%s

0x002A0368	0x00000022	[ 94] literal string: !method->klass->generic_container
0x002A038A	0x00000040	[ 94] literal string: The proxy call returned an incorrect number of output arguments
0x002A03CA	0x00000017	[ 94] literal string: type != MONO_TYPE_VOID
0x002A03E1	0x0000002F	[ 94] literal string: runtime invoke called on uninitialized runtime
0x002A0410	0x0000002E	[ 94] literal string: domain == mono_object_domain (domain->domain)
0x002A043E	0x00000004	[ 94] literal string: exc
0x002A0442	0x0000001D	[ 94] literal string: System.Runtime.Serialization
0x002A045F	0x00000017	[ 94] literal string: SerializationException
0x002A0476	0x00000029	[ 94] literal string: Could not serialize unhandled exception.
0x002A049F	0x00000023	[ 94] literal string: mono_object_domain (exc) == domain
0x002A04C2	0x00000057	[ 94] literal string: Exception inside UnhandledException handler with invalid message (Invalid characters)

0x002A0519	0x00000031	[ 94] literal string: exception inside UnhandledException handler: %s

0x002A054A	0x0000001C	[ 94] literal string: UnhandledExceptionEventArgs
0x002A0566	0x00000018	[ 94] literal string: System.Runtime.Remoting
0x002A057E	0x00000011	[ 94] literal string: RemotingServices
0x002A058F	0x00000014	[ 94] literal string: DeserializeCallData
0x002A05A3	0x00000012	[ 94] literal string: SerializeCallData
0x002A05B5	0x0000000C	[ 94] literal string: got type %x
0x002A05C1	0x00000016	[ 94] literal string: ThreadStaticAttribute
0x002A05D7	0x00000017	[ 94] literal string: ContextStaticAttribute
0x002A05EE	0x00000011	[ 94] literal string: !((gsize)vt & 7)
0x002A05FF	0x00000039	[ 94] literal string: !(gc_bits & ~((1 << MONO_VTABLE_AVAILABLE_GC_BITS) - 1))
0x002A0638	0x00000034	[ 94] literal string: !(field->type->attrs & FIELD_ATTRIBUTE_HAS_DEFAULT)
0x002A066C	0x00000059	[ 94] literal string: (fklass->byval_arg.type == MONO_TYPE_PTR) || (fklass->byval_arg.type == MONO_TYPE_FNPTR)
0x002A06C5	0x0000001B	[ 94] literal string: (imt_table_bytes & 7) == 4
0x002A06E0	0x0000001E	[ 94] literal string: !domain->thunk_free_lists [0]
0x002A06FE	0x0000000C	[ 94] literal string: offset <= 0
0x002A070A	0x0000000A	[ 94] literal string: Ephemeron
0x002A0714	0x00000028	[ 94] literal string: (field->offset % sizeof(gpointer)) == 0
0x002A073C	0x0000001E	[ 94] literal string: pos < size || pos <= max_size
0x002A075A	0x00000037	[ 94] literal string: compute_class_bitmap: Invalid type %x for field %s:%s

0x002A0791	0x00000045	[ 94] literal string: Trying to get the init exception for a non-failed vtable of class %s
0x002A07D6	0x0000000E	[ 96] literal string: ProcessModule
0x002A07E4	0x00000009	[ 96] literal string: filename
0x002A07ED	0x0000002B	[ 96] literal string: This system does not support EnumProcesses
0x002A0818	0x0000000E	[ 96] literal string: filemajorpart
0x002A0826	0x0000000E	[ 96] literal string: fileminorpart
0x002A0834	0x0000000E	[ 96] literal string: filebuildpart
0x002A0842	0x00000010	[ 96] literal string: fileprivatepart
0x002A0852	0x00000011	[ 96] literal string: productmajorpart
0x002A0863	0x00000011	[ 96] literal string: productminorpart
0x002A0874	0x00000011	[ 96] literal string: productbuildpart
0x002A0885	0x00000013	[ 96] literal string: productprivatepart
0x002A0898	0x00000008	[ 96] literal string: isdebug
0x002A08A0	0x0000000D	[ 96] literal string: isprerelease
0x002A08AD	0x0000000A	[ 96] literal string: ispatched
0x002A08B7	0x0000000F	[ 96] literal string: isprivatebuild
0x002A08C6	0x0000000F	[ 96] literal string: isspecialbuild
0x002A08D5	0x00000019	[ 96] literal string: \VarFileInfo\Translation
0x002A08EE	0x00000009	[ 96] literal string: language
0x002A08F7	0x00000009	[ 96] literal string: comments
0x002A0900	0x0000000C	[ 96] literal string: companyname
0x002A090C	0x00000010	[ 96] literal string: filedescription
0x002A091C	0x0000000C	[ 96] literal string: fileversion
0x002A0928	0x0000000D	[ 96] literal string: internalname
0x002A0935	0x0000000F	[ 96] literal string: legalcopyright
0x002A0944	0x00000010	[ 96] literal string: legaltrademarks
0x002A0954	0x00000011	[ 96] literal string: originalfilename
0x002A0965	0x0000000D	[ 96] literal string: privatebuild
0x002A0972	0x0000000C	[ 96] literal string: productname
0x002A097E	0x0000000F	[ 96] literal string: productversion
0x002A098D	0x0000000D	[ 96] literal string: specialbuild
0x002A099A	0x0000002A	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\Comments
0x002A09C4	0x0000002D	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\CompanyName
0x002A09F1	0x00000031	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\FileDescription
0x002A0A22	0x0000002D	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\FileVersion
0x002A0A4F	0x0000002E	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\InternalName
0x002A0A7D	0x00000030	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\LegalCopyright
0x002A0AAD	0x00000031	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\LegalTrademarks
0x002A0ADE	0x00000032	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\OriginalFilename
0x002A0B10	0x0000002E	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\PrivateBuild
0x002A0B3E	0x0000002D	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\ProductName
0x002A0B6B	0x00000030	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\ProductVersion
0x002A0B9B	0x0000002E	[ 96] literal string: \StringFileInfo\%02X%02X%02X%02X\SpecialBuild
0x002A0BC9	0x00000010	[ 96] literal string: FileVersionInfo
0x002A0BD9	0x00000009	[ 96] literal string: baseaddr
0x002A0BE2	0x0000000A	[ 96] literal string: entryaddr
0x002A0BEC	0x0000000C	[ 96] literal string: memory_size
0x002A0BF8	0x0000000B	[ 96] literal string: modulename
0x002A0C03	0x0000000D	[ 96] literal string: version_info
0x002A0C10	0x0000002D	[ 97] literal string: ../../../../../mono/mono/metadata/profiler.c
0x002A0C3D	0x00000008	[ 97] literal string: default
0x002A0C45	0x0000000B	[ 97] literal string: log:report
0x002A0C50	0x00000009	[ 97] literal string: default:
0x002A0C59	0x00000005	[ 97] literal string: time
0x002A0C5E	0x00000007	[ 97] literal string: ,calls
0x002A0C65	0x00000007	[ 97] literal string: ,alloc
0x002A0C6C	0x00000005	[ 97] literal string: stat
0x002A0C71	0x00000008	[ 97] literal string: ,sample
0x002A0C79	0x00000006	[ 97] literal string: file=
0x002A0C7F	0x0000000B	[ 97] literal string: ,output=%s
0x002A0C8A	0x00000023	[ 97] literal string: profiler : Unknown argument '%s'.

0x002A0CAD	0x00000011	[ 97] literal string: mono-profiler-%s
0x002A0CBE	0x00000058	[ 97] literal string: The '%s' profiler wasn't found in the main executable nor could it be loaded from '%s'.
0x002A0D16	0x00000016	[ 97] literal string: mono_profiler_startup
0x002A0D2C	0x00000024	[ 97] literal string: Could not open main executable (%s)
0x002A0D50	0x00000019	[ 97] literal string: mono_profiler_startup_%s
0x002A0D69	0x0000000D	[ 98] literal string: /dev/urandom
0x002A0D76	0x0000000C	[ 98] literal string: /dev/random
0x002A0D82	0x00000010	[ 98] literal string: MONO_EGD_SOCKET
0x002A0D92	0x00000023	[ 98] literal string: Entropy error! Error in read (%s).
0x002A0DB5	0x0000003A	[ 98] literal string: Entropy problem! Can't create or connect to egd socket %s
0x002A0DEF	0x0000001A	[ 98] literal string: Failed to open egd socket
0x002A0E09	0x0000001B	[ 98] literal string: Send egd request failed %d
0x002A0E24	0x00000025	[ 98] literal string: Failed to send request to egd socket
0x002A0E49	0x0000001E	[ 98] literal string: Receive egd request failed %d
0x002A0E67	0x00000027	[ 98] literal string: Failed to get response from egd socket
0x002A0E8E	0x0000002F	[ 99] literal string: ../../../../../mono/mono/metadata/reflection.c
0x002A0EBD	0x0000001C	[ 99] literal string: klass->ref_info_handle != 0
0x002A0ED9	0x00000009	[ 99] literal string: <Module>
0x002A0EE2	0x0000000B	[ 99] literal string: MonoMethod
0x002A0EED	0x0000000C	[ 99] literal string: MonoCMethod
0x002A0EF9	0x00000046	[ 99] literal string: opt_param_types && (mono_method_signature (method)->sentinelpos >= 0)
0x002A0F3F	0x00000043	[ 99] literal string: (parent & MONO_TYPEDEFORREF_MASK) == MONO_MEMBERREF_PARENT_TYPEREF
0x002A0F82	0x0000000E	[ 99] literal string: MethodBuilder
0x002A0F90	0x00000038	[ 99] literal string: mono_metadata_token_table (parent) == MONO_TABLE_METHOD
0x002A0FC8	0x0000001F	[ 99] literal string: requested method token for %s

0x002A0FE7	0x0000000E	[ 99] literal string: TypeDelegator
0x002A0FF5	0x0000003D	[ 99] literal string: User defined subclasses of System.Type are not yet supported
0x002A1032	0x00000013	[ 99] literal string: ConstructorBuilder
0x002A1045	0x0000000D	[ 99] literal string: FieldBuilder
0x002A1052	0x0000000C	[ 99] literal string: TypeBuilder
0x002A105E	0x00000009	[ 99] literal string: MonoType
0x002A1067	0x0000001C	[ 99] literal string: GenericTypeParameterBuilder
0x002A1083	0x00000011	[ 99] literal string: MonoGenericClass
0x002A1094	0x00000012	[ 99] literal string: MonoGenericMethod
0x002A10A6	0x00000013	[ 99] literal string: MonoGenericCMethod
0x002A10B9	0x0000000A	[ 99] literal string: MonoField
0x002A10C3	0x00000010	[ 99] literal string: MonoArrayMethod
0x002A10D3	0x00000010	[ 99] literal string: SignatureHelper
0x002A10E3	0x0000000C	[ 99] literal string: EnumBuilder
0x002A10EF	0x00000017	[ 99] literal string: FieldOnTypeBuilderInst
0x002A1106	0x0000001D	[ 99] literal string: ConstructorOnTypeBuilderInst
0x002A1123	0x00000018	[ 99] literal string: MethodOnTypeBuilderInst
0x002A113B	0x00000018	[ 99] literal string: requested token for %s

0x002A1153	0x00000021	[ 99] literal string: RefEmit_YouForgotToDefineAModule
0x002A1174	0x00000034	[ 99] literal string: Public key token length invalid for assembly %s: %i
0x002A11A8	0x0000003D	[ 99] literal string: START_TEXT_RVA == assembly->sections [MONO_SECTION_TEXT].rva
0x002A11E5	0x0000000C	[ 99] literal string: _CorDllMain
0x002A11F1	0x0000000C	[ 99] literal string: _CorExeMain
0x002A11FD	0x0000001C	[ 99] literal string: SetFilePointer returned %d

0x002A1219	0x0000001A	[ 99] literal string: SetEndOfFile returned %d

0x002A1233	0x0000000B	[ 99] literal string: type->type
0x002A123E	0x0000000D	[ 99] literal string: MonoAssembly
0x002A124B	0x0000000B	[ 99] literal string: MonoModule
0x002A1256	0x0000000B	[ 99] literal string: res->token
0x002A1261	0x0000001A	[ 99] literal string: table_index < table->rows
0x002A127B	0x0000001B	[ 99] literal string: method_is_dynamic (method)
0x002A1296	0x0000000A	[ 99] literal string: MonoEvent
0x002A12A0	0x00000012	[ 99] literal string: MonoParameterInfo
0x002A12B2	0x0000000E	[ 99] literal string: ParameterInfo
0x002A12C0	0x0000000B	[ 99] literal string: MethodBody
0x002A12CB	0x00000012	[ 99] literal string: LocalVariableInfo
0x002A12DD	0x00000018	[ 99] literal string: ExceptionHandlingClause
0x002A12F5	0x00000006	[ 99] literal string: Value
0x002A12FB	0x00000013	[ 99] literal string: dbnull_value_field
0x002A130E	0x00000038	[ 99] literal string: field_index >= 0 && field_index < dgclass->count_fields
0x002A1346	0x0000003E	[ 99] literal string: mono_class_is_reflection_method_or_constructor (member_class)
0x002A1384	0x00000030	[ 99] literal string: MetadataToken is not supported for type '%s.%s'
0x002A13B4	0x0000001F	[ 99] literal string: CustomAttributeFormatException
0x002A13D3	0x0000003D	[ 99] literal string: Binary format of the specified custom attribute was invalid.
0x002A1410	0x00000028	[ 99] literal string: Unknown table for custom attr type %08x
0x002A1438	0x0000003C	[ 99] literal string: Can't find custom attr constructor image: %s mtoken: 0x%08x
0x002A1474	0x00000037	[ 99] literal string: Invalid custom attribute blob on image %s for index %x
0x002A14AB	0x00000058	[ 99] literal string: mono_reflection_get_custom_attrs_info:: can't handle a CTBI with base_method of type %s
0x002A1503	0x00000042	[ 99] literal string: Custom attributes on a ParamInfo with member %s are not supported
0x002A1545	0x00000010	[ 99] literal string: AssemblyBuilder
0x002A1555	0x0000000E	[ 99] literal string: ModuleBuilder
0x002A1563	0x0000002A	[ 99] literal string: get custom attrs not yet supported for %s
0x002A158D	0x00000005	[ 99] literal string: base
0x002A1592	0x00000022	[ 99] literal string: Cannot handle corlib user type %s
0x002A15B4	0x0000004F	[ 99] literal string: Invalid generic instantiation, one or more arguments are not proper user types
0x002A1603	0x00000031	[ 99] literal string: mono_array_length (ctorArgs) == sig->param_count
0x002A1634	0x00000015	[ 99] literal string: p - buffer <= buflen
0x002A1649	0x00000026	[ 99] literal string: mono_class_get_ref_info (klass) == tb
0x002A166F	0x00000007	[ 99] literal string: Object
0x002A1676	0x0000000F	[ 99] literal string: BuildingObject
0x002A1685	0x00000005	[ 99] literal string: Enum
0x002A168A	0x00000017	[ 99] literal string: tb->nesting_type->type
0x002A16A1	0x00000047	[ 99] literal string: tb->generic_container && (tb->generic_container->owner.klass == klass)
0x002A16E8	0x00000036	[ 99] literal string: klass->generic_container->type_params [i].param.owner
0x002A171E	0x00000013	[ 99] literal string: tb->fields != NULL
0x002A1731	0x00000024	[ 99] literal string: mono_array_length (tb->fields) >= 1
0x002A1755	0x00000013	[ 99] literal string: MarshalAsAttribute
0x002A1768	0x0000002A	[ 99] literal string: System_Reflection_Emit_MarshalAsAttribute
0x002A1792	0x00000019	[ 99] literal string: klass->generic_container
0x002A17AB	0x00000025	[ 99] literal string: gtype->type == MONO_TYPE_GENERICINST
0x002A17D0	0x00000013	[ 99] literal string: gclass->is_dynamic
0x002A17E3	0x00000020	[ 99] literal string: image_is_dynamic (klass->image)
0x002A1803	0x00000061	[ 99] literal string: strcmp (((MonoObject*)mono_class_get_ref_info (klass))->vtable->klass->name, "TypeBuilder") == 0
0x002A1864	0x0000000C	[ 99] literal string: mb->mhandle
0x002A1870	0x0000001F	[ 99] literal string: res != (MonoReflectionType*)tb
0x002A188F	0x0000000E	[ 99] literal string: DynamicMethod
0x002A189D	0x00000010	[ 99] literal string: method->mhandle
0x002A18AD	0x00000019	[ 99] literal string: image_is_dynamic (image)
0x002A18C6	0x0000002D	[ 99] literal string: Could not find required dynamic token 0x%08x
0x002A18F3	0x00000017	[ 99] literal string: System.Reflection.Emit
0x002A190A	0x00000023	[ 99] literal string: System_Reflection_Emit_TypeBuilder
0x002A192D	0x0000000F	[ 99] literal string: IsAssignableTo
0x002A193C	0x00000020	[ 99] literal string: mono_class_get_ref_info (klass)
0x002A195C	0x0000005F	[ 99] literal string: !strcmp (((MonoObject*)(mono_class_get_ref_info (klass)))->vtable->klass->name, "TypeBuilder")
0x002A19BB	0x00000008	[ 99] literal string: reftype
0x002A19C3	0x0000000C	[ 99] literal string: refassembly
0x002A19CF	0x00000007	[ 99] literal string: String
0x002A19D6	0x00000007	[ 99] literal string: result
0x002A19DD	0x0000003E	[ 99] literal string: inflated_field && !strcmp (field->name, inflated_field->name)
0x002A1A1B	0x00000041	[ 99] literal string: resolve_object:: can't handle a FTBI with base_method of type %s
0x002A1A5C	0x00000041	[ 99] literal string: resolve_object:: can't handle a CTBI with base_method of type %s
0x002A1A9D	0x00000041	[ 99] literal string: resolve_object:: can't handle a MTBI with base_method of type %s
0x002A1ADE	0x00000020	[ 99] literal string: klass->methods [i]->is_inflated
0x002A1AFE	0x00000018	[ 99] literal string: i < klass->method.count
0x002A1B16	0x00000016	[ 99] literal string: !klass->generic_class
0x002A1B2C	0x0000000A	[ 99] literal string: container
0x002A1B36	0x00000043	[ 99] literal string: we can't encode valuetypes, we should have never reached this line
0x002A1B79	0x00000029	[ 99] literal string: we don't encode constant type 0x%02x yet
0x002A1BA2	0x00000017	[ 99] literal string: need to encode type %x
0x002A1BB9	0x00000007	[ 99] literal string: gclass
0x002A1BC0	0x00000037	[ 99] literal string: Could not load struct '%s' with packing size %d >= 256
0x002A1BF7	0x00000023	[ 99] literal string: Can't handle methods of type %s:%s
0x002A1C1A	0x00000033	[ 99] literal string: default_class_from_mono_type: implement me 0x%02x

0x002A1C4D	0x0000003F	[ 99] literal string: User defined subclasses of System.Type are not yet supported22
0x002A1C8C	0x00000010	[ 99] literal string: PropertyBuilder
0x002A1C9C	0x0000003E	[ 99] literal string: generic valutype %s not handled in custom attr value decoding
0x002A1CDA	0x0000001E	[ 99] literal string: unhandled type in custom attr
0x002A1CF8	0x00000035	[ 99] literal string: type 0x%02x not yet supported in custom attr encoder
0x002A1D2D	0x00000019	[ 99] literal string: get_UnderlyingSystemType
0x002A1D46	0x0000000C	[ 99] literal string: PointerType
0x002A1D52	0x0000000A	[ 99] literal string: ByRefType
0x002A1D5C	0x0000000A	[ 99] literal string: ArrayType
0x002A1D66	0x00000010	[ 99] literal string: image->assembly
0x002A1D76	0x00000015	[ 99] literal string: Can't handle type %s
0x002A1D8B	0x00000015	[ 99] literal string: can't handle type %s
0x002A1DA0	0x00000024	[ 99] literal string: Could not find a field with name %s
0x002A1DC4	0x00000027	[ 99] literal string: Could not find a property with name %s
0x002A1DEB	0x00000021	[ 99] literal string: Could not find the setter for %s
0x002A1E0C	0x0000001D	[ 99] literal string: CustomAttributeNamedArgument
0x002A1E29	0x0000001D	[ 99] literal string: CustomAttributeTypedArgument
0x002A1E46	0x00000037	[ 99] literal string: Could not load type %s while decoding custom attribute
0x002A1E7D	0x0000003C	[ 99] literal string: Unknown type 0x%02x for object type encoding in custom attr
0x002A1EB9	0x00000016	[ 99] literal string: !subc->has_references
0x002A1ECF	0x00000036	[ 99] literal string: Type 0x%02x not handled in custom attr array decoding
0x002A1F05	0x00000036	[ 99] literal string: Type 0x%02x not handled in custom attr value decoding
0x002A1F3B	0x0000003C	[ 99] literal string: Could not load enum type %s while decoding custom attribute
0x002A1F77	0x00000004	[ 99] literal string: +%s
0x002A1F7B	0x0000001F	[ 99] literal string: assembly_is_dynamic (assembly)
0x002A1F9A	0x00000009	[ 99] literal string: Version=
0x002A1FA3	0x00000009	[ 99] literal string: Culture=
0x002A1FAC	0x00000010	[ 99] literal string: PublicKeyToken=
0x002A1FBC	0x0000000A	[ 99] literal string: idx != -1
0x002A1FC6	0x00000008	[ 99] literal string: Missing
0x002A1FCE	0x00000014	[ 99] literal string: missing_value_field
0x002A1FE2	0x00000019	[ 99] literal string: is_field_on_inst (field)
0x002A1FFB	0x00000017	[ 99] literal string: WriteFile returned %d

0x002A2012	0x00000020	[ 99] literal string: (assembly->code.index % 4) == 0
0x002A2032	0x00000025	[ 99] literal string: (assembly->resources.index % 4) == 0
0x002A2057	0x00000010	[ 99] literal string: p - buf <= size
0x002A2067	0x00000003	[ 99] literal string: #~
0x002A206A	0x00000009	[ 99] literal string: #Strings
0x002A2073	0x00000004	[ 99] literal string: #US
0x002A2077	0x00000006	[ 99] literal string: #Blob
0x002A207D	0x00000006	[ 99] literal string: #GUID
0x002A2083	0x00000044	[ 99] literal string: (p - (unsigned char*)meta->raw_metadata) < assembly->tstream.offset
0x002A20C7	0x00000020	[ 99] literal string: col count mismatch in %d: %d %d
0x002A20E7	0x00000069	[ 99] literal string: (p - (const unsigned char*)meta->tables [i].base) == (meta->tables [i].rows * meta->tables [i].row_size)
0x002A2150	0x00000039	[ 99] literal string: assembly->guid.offset + assembly->guid.index < meta_size
0x002A2189	0x00000004	[ 99] literal string: 2.1
0x002A218D	0x0000000C	[ 99] literal string: mscoree.dll
0x002A2199	0x00000041	[ 99] literal string: mono_image_get_method_on_inst_token: don't know how to handle %s
0x002A21DA	0x0000002B	[ 99] literal string: unknown typeref or def token 0x%08x for %s
0x002A2205	0x00000040	[ 99] literal string: mono_image_get_field_on_inst_token: don't know how to handle %s
0x002A2245	0x0000001E	[ 99] literal string: size <= (buf->end - buf->buf)
0x002A2263	0x00000012	[ 99] literal string: helper->type == 2
0x002A2275	0x00000015	[ 99] literal string: !method->is_inflated
0x002A228A	0x0000003A	[ 99] literal string: mono_metadata_token_table (token) == MONO_TABLE_MEMBERREF
0x002A22C4	0x00000040	[ 99] literal string: (parent & MONO_TYPEDEFORREF_MASK) == MONO_TYPEDEFORREF_TYPESPEC
0x002A2304	0x00000013	[ 99] literal string: tb->generic_params
0x002A2317	0x00000005	[ 99] literal string: ctor
0x002A231C	0x00000037	[ 99] literal string: m->klass->generic_class || m->klass->generic_container
0x002A2353	0x00000015	[ 99] literal string: is_field_on_inst (f)
0x002A2368	0x0000002F	[ 99] literal string: mono_method_signature (m)->generic_param_count
0x002A2397	0x00000025	[ 99] literal string: got unexpected table 0x%02x in fixup
0x002A23BC	0x0000001F	[ 99] literal string: got wrong token in custom attr
0x002A23DB	0x0000002A	[ 99] literal string: Method %s does not have any IL associated
0x002A2405	0x00000029	[ 99] literal string: a method does not have any IL associated
0x002A242E	0x00000020	[ 99] literal string: No clauses for ex info block %d
0x002A244E	0x00000015	[ 99] literal string: col < table->columns
0x002A2463	0x0000000F	[ 99] literal string: table->columns
0x002A2472	0x0000004A	[ 99] literal string: (scope & MONO_RESOLUTION_SCOPE_MASK) == MONO_RESOLUTION_SCOPE_ASSEMBLYREF
0x002A24BC	0x00000007	[ 99] literal string: %s%c%s
0x002A24C3	0x0000002F	[ 99] literal string: Invalid public key length: %d bits (total: %d)
0x002A24F2	0x0000002D	[100] literal string: ../../../../../mono/mono/metadata/remoting.c
0x002A251F	0x0000000C	[101] literal string: ProcessExit
0x002A252B	0x0000002C	[101] literal string: ../../../../../mono/mono/metadata/runtime.c
0x002A2557	0x00000045	[102] literal string: Inheritance failure for type %s. Parent class %s is more restricted.
0x002A259C	0x00000050	[102] literal string: Inheritance failure for type %s. Default constructor security mismatch with %s.
0x002A25EC	0x00000046	[102] literal string: Override failure for %s over %s. Override MUST be [SecurityCritical].
0x002A2632	0x0000004A	[102] literal string: Override failure for %s over %s. Override must NOT be [SecurityCritical].
0x002A267C	0x0000003B	[102] literal string: Transparent method %s cannot get or set Critical field %s.
0x002A26B7	0x00000043	[102] literal string: Transparent method %s cannot get or set private/internal field %s.
0x002A26FA	0x00000038	[102] literal string: Transparent method %s cannot invoke Critical method %s.
0x002A2732	0x00000040	[102] literal string: Transparent method %s cannot invoke private/internal method %s.
0x002A2772	0x00000046	[102] literal string: Transparent method %s cannot create a delegate on Critical method %s.
0x002A27B8	0x0000004E	[102] literal string: Transparent method %s cannot create a delegate on private/internal method %s.
0x002A2806	0x00000042	[102] literal string: Dynamic method %s cannot create access private/internal field %s.
0x002A2848	0x00000043	[102] literal string: Dynamic method %s cannot create access private/internal method %s.
0x002A288B	0x00000039	[102] literal string: Transparent method %s cannot call use Critical field %s.
0x002A28C4	0x00000036	[102] literal string: Transparent method %s cannot call Critical method %s.
0x002A28FA	0x0000001A	[102] literal string: SecurityCriticalAttribute
0x002A2914	0x00000036	[102] literal string: ../../../../../mono/mono/metadata/security-core-clr.c
0x002A294A	0x0000001E	[102] literal string: SecuritySafeCriticalAttribute
0x002A2968	0x00000012	[102] literal string: 'no caller found'
0x002A297A	0x00000013	[102] literal string: GetterAdapterFrame
0x002A298D	0x00000019	[102] literal string: StaticGetterAdapterFrame
0x002A29A6	0x0000000E	[102] literal string: AddEventFrame
0x002A29B4	0x0000001B	[102] literal string: StaticAddEventAdapterFrame
0x002A29CF	0x00000027	[102] literal string: No caller outside reflection was found
0x002A29F6	0x0000000A	[102] literal string: Activator
0x002A2A00	0x0000000D	[102] literal string: InvokeMember
0x002A2A0D	0x0000000E	[102] literal string: DynamicInvoke
0x002A2A1B	0x0000001A	[102] literal string: EnsureElevatedPermissions
0x002A2A35	0x00000019	[102] literal string: CheckElevatedPermissions
0x002A2A4E	0x00000010	[103] literal string: SecurityManager
0x002A2A5E	0x00000035	[103] literal string: ../../../../../mono/mono/metadata/security-manager.c
0x002A2A93	0x00000017	[103] literal string: secman.securitymanager
0x002A2AAA	0x0000000F	[103] literal string: InternalDemand
0x002A2AB9	0x0000000E	[103] literal string: secman.demand
0x002A2AC7	0x00000015	[103] literal string: InternalDemandChoice
0x002A2ADC	0x00000014	[103] literal string: secman.demandchoice
0x002A2AF0	0x00000010	[103] literal string: DemandUnmanaged
0x002A2B00	0x00000017	[103] literal string: secman.demandunmanaged
0x002A2B17	0x00000012	[103] literal string: InheritanceDemand
0x002A2B29	0x00000019	[103] literal string: secman.inheritancedemand
0x002A2B42	0x00000023	[103] literal string: InheritanceDemandSecurityException
0x002A2B65	0x00000020	[103] literal string: secman.inheritsecurityexception
0x002A2B85	0x0000000B	[103] literal string: LinkDemand
0x002A2B90	0x00000012	[103] literal string: secman.linkdemand
0x002A2BA2	0x00000014	[103] literal string: LinkDemandUnmanaged
0x002A2BB6	0x0000001B	[103] literal string: secman.linkdemandunmanaged
0x002A2BD1	0x00000014	[103] literal string: LinkDemandFullTrust
0x002A2BE5	0x0000001B	[103] literal string: secman.linkdemandfulltrust
0x002A2C00	0x0000001C	[103] literal string: LinkDemandSecurityException
0x002A2C1C	0x00000023	[103] literal string: secman.linkdemandsecurityexception
0x002A2C3F	0x00000026	[103] literal string: AllowPartiallyTrustedCallersAttribute
0x002A2C65	0x00000024	[103] literal string: secman.allowpartiallytrustedcallers
0x002A2C89	0x00000027	[103] literal string: SuppressUnmanagedCodeSecurityAttribute
0x002A2CB0	0x00000025	[103] literal string: secman.suppressunmanagedcodesecurity
0x002A2CD5	0x00000008	[103] literal string: Capture
0x002A2CDD	0x0000001F	[104] literal string: collect-before-alloc-triggered
0x002A2CFC	0x0000002F	[104] literal string: ../../../../../mono/mono/metadata/sgen-alloc.c
0x002A2D2B	0x00000049	[104] literal string: !mono_class_has_finalizer (klass) && !mono_class_is_marshalbyref (klass)
0x002A2D74	0x00000012	[104] literal string: mono_gc_alloc_obj
0x002A2D86	0x00000015	[104] literal string: mono_gc_alloc_vector
0x002A2D9B	0x00000015	[104] literal string: mono_gc_alloc_string
0x002A2DB0	0x00000015	[104] literal string: object ptr int int32
0x002A2DC5	0x0000000B	[104] literal string: AllocSmall
0x002A2DD0	0x00000006	[104] literal string: Alloc
0x002A2DD6	0x0000000C	[104] literal string: AllocVector
0x002A2DE2	0x0000000C	[104] literal string: AllocString
0x002A2DEE	0x00000019	[104] literal string: clause->data.catch_class
0x002A2E07	0x0000000E	[104] literal string: oom_exc_class
0x002A2E15	0x00000059	[104] literal string: Warning: Degraded allocation.  Consider increasing nursery-size if the warning persists.
0x002A2E6E	0x0000004A	[104] literal string: Warning: Repeated degraded allocation.  Consider increasing nursery-size.
0x002A2EB8	0x0000001A	[104] literal string: mature allocation failure
0x002A2ED2	0x00000011	[104] literal string: vtable->gc_descr
0x002A2EE3	0x0000000B	[104] literal string: *p == NULL
0x002A2EEE	0x00000021	[104] literal string: TLAB segment must be zeroed out.
0x002A2F0F	0x00000032	[105] literal string: GC_BRIDGE waiting for bridge processing to finish
0x002A2F41	0x00000039	[105] literal string: Invalid bridge callback version. Expected %d but got %d

0x002A2F7A	0x0000004C	[105] literal string: Invalid value for bridge implementation, valid values are: 'new' and 'old'.
0x002A2FC6	0x00000030	[105] literal string: ../../../../../mono/mono/metadata/sgen-bridge.c
0x002A2FF6	0x00000020	[105] literal string: bridge_processor.num_xrefs == 0
0x002A3016	0x00000008	[105] literal string: bridge=
0x002A301E	0x00000019	[105] literal string: enable-bridge-accounting
0x002A3037	0x0000000D	[105] literal string: bridge-dump=
0x002A3044	0x00000013	[105] literal string: bridge-compare-to=
0x002A3057	0x0000003B	[105] literal string: Cannot compare bridge implementation to itself - ignoring.
0x002A3092	0x0000003D	[105] literal string: Invalid bridge implementation to compare against - ignoring.
0x002A30CF	0x00000017	[105] literal string:   bridge=<class-name>

0x002A30E6	0x0000001C	[105] literal string:   enable-bridge-accounting

0x002A3102	0x00000021	[105] literal string:   bridge-dump=<filename-prefix>

0x002A3123	0x00000026	[105] literal string:   bridge-compare-to=<implementation>

0x002A3149	0x00000045	[105] literal string: Warning: Bridge implementation does not support dumping - ignoring.

0x002A318E	0x00000043	[105] literal string: xrefs [i].src_scc_index >= 0 && xrefs [i].src_scc_index < num_sccs
0x002A31D1	0x00000043	[105] literal string: xrefs [i].dst_scc_index >= 0 && xrefs [i].dst_scc_index < num_sccs
0x002A3214	0x00000017	[105] literal string: mono_bridge_test_field
0x002A322B	0x00000004	[105] literal string: new
0x002A322F	0x00000007	[105] literal string: tarjan
0x002A3236	0x0000000B	[106] literal string: card table
0x002A3241	0x0000001A	[106] literal string: cardtable major scan time
0x002A325B	0x00000018	[106] literal string: cardtable los scan time
0x002A3280	0x00000008	[107] literal string: INVALID
0x002A3288	0x0000000B	[107] literal string: run length
0x002A3293	0x00000007	[107] literal string: bitmap
0x002A329A	0x00000013	[107] literal string: small pointer-free
0x002A32BC	0x0000000F	[107] literal string: complex arrray
0x002A32CB	0x00000015	[107] literal string: complex pointer-free
0x002A32E0	0x00000008	[107] literal string: mono-gc
0x002A32E8	0x00000021	[107] literal string: Begin heap consistency check...

0x002A3309	0x0000001E	[107] literal string: Heap consistency check done.

0x002A3335	0x0000002F	[107] literal string: ../../../../../mono/mono/metadata/sgen-debug.c
0x002A3364	0x00000011	[107] literal string: !missing_remsets
0x002A337A	0x00000024	[107] literal string: sgen_safe_name (*(_objptr)) != NULL
0x002A339E	0x0000001E	[107] literal string: sgen_safe_name (*(p)) != NULL
0x002A33BC	0x00000022	[107] literal string: sgen_safe_name (*(p + i)) != NULL
0x002A33EB	0x0000000D	[107] literal string: !broken_heap
0x002A33F8	0x00000012	[107] literal string: ptr_in_heap (obj)
0x002A340A	0x00000022	[107] literal string: SCCS count expected %d but got %d
0x002A342C	0x00000012	[107] literal string: scc->num_objs > 0
0x002A343E	0x0000000A	[107] literal string: new_entry
0x002A3448	0x00000010	[107] literal string: a_scc_index_ptr
0x002A3458	0x00000021	[107] literal string: a_scc->num_objs == scc->num_objs
0x002A3479	0x00000020	[107] literal string: *a_scc_index_ptr == a_scc_index
0x002A3499	0x0000002B	[107] literal string: xref->src_scc_index != xref->dst_scc_index
0x002A34C4	0x0000000E	[107] literal string: scc_index_ptr
0x002A34D2	0x00000037	[107] literal string: a_xrefs [i].src_scc_index == b_xrefs [i].src_scc_index
0x002A3509	0x00000037	[107] literal string: a_xrefs [i].dst_scc_index == b_xrefs [i].dst_scc_index
0x002A3540	0x00000059	[107] literal string: xdomain reference in %p (%s.%s) at offset %d (%s) to %p (%s.%s) (%s)  -  pointed to by:

0x002A359A	0x00000015	[107] literal string: System.Globalization
0x002A35B2	0x00000009	[107] literal string: Object[]
0x002A35BB	0x00000007	[107] literal string: Byte[]
0x002A35C2	0x0000000A	[107] literal string: System.IO
0x002A35CC	0x0000000D	[107] literal string: MemoryStream
0x002A35E7	0x00000034	[107] literal string: ((MonoObject*)(*o))->vtable->domain != check_domain
0x002A361B	0x00000023	[107] literal string: found ref to %p in root record %p

0x002A363E	0x00000031	[107] literal string: found ref to %p in object %p (%s) at offset %td

0x002A366F	0x0000003A	[107] literal string: found possible ref to %p in object %p (%s) at offset %td

0x002A36A9	0x00000020	[107] literal string: !SGEN_OBJECT_IS_FORWARDED (obj)
0x002A36C9	0x0000001C	[107] literal string: SGEN_OBJECT_IS_PINNED (obj)
0x002A36E5	0x0000001D	[107] literal string: !SGEN_OBJECT_IS_PINNED (obj)
0x002A3702	0x00000034	[107] literal string: All objects remaining in the nursery must be pinned
0x002A3736	0x00000025	[107] literal string: !SGEN_OBJECT_IS_FORWARDED (__target)
0x002A375B	0x0000002A	[107] literal string: major_collector.is_object_live (__target)
0x002A3785	0x00000025	[107] literal string: sgen_los_object_is_pinned (__target)
0x002A37AA	0x0000005A	[107] literal string: Oldspace->newspace reference %p at offset %td in object %p (%s.%s) not found in remsets.

0x002A3804	0x0000003F	[107] literal string: Invalid object pointer %p at offset %td in object %p (%s.%s):

0x002A3843	0x0000000E	[107] literal string: first == last
0x002A3851	0x0000000F	[107] literal string: debugging data
0x002A3860	0x00000033	[107] literal string: Could not load vtable for obj %p slot %d (size %d)
0x002A3893	0x00000030	[107] literal string: we must have mod union for marked major objects
0x002A38C3	0x00000054	[107] literal string: major->major reference %p at offset %td in object %p (%s.%s) not found in remsets.

0x002A3917	0x00000031	[107] literal string: Pointer is the start of object %p in LOS space.

0x002A3948	0x00000036	[107] literal string: Pointer is at offset 0x%x of object %p in LOS space.

0x002A397E	0x00000030	[107] literal string: Pointer is the start of object %p in oldspace.

0x002A39AE	0x00000035	[107] literal string: Pointer is at offset 0x%x of object %p in oldspace.

0x002A39E3	0x0000001C	[107] literal string: Object is forwarded to %p:

0x002A39FF	0x0000000C	[107] literal string: VTable: %p

0x002A3A0B	0x0000000B	[107] literal string: Class: %s

0x002A3A16	0x00000011	[107] literal string: Descriptor: %lx

0x002A3A27	0x0000001A	[107] literal string: Descriptor type: %d (%s)

0x002A3A41	0x0000000A	[107] literal string: Size: %d

0x002A3A4B	0x00000021	[107] literal string: nursery-ptr (unalloc'd-memory)


0x002A3A6C	0x0000000E	[107] literal string: nursery-ptr


0x002A3A7A	0x00000028	[107] literal string: nursery-ptr (interior-ptr offset %td)


0x002A3AB0	0x00000011	[107] literal string: Pointer unknown.
0x002A3AD0	0x00000022	[107] literal string: Pointer is inside a pinned chunk.
0x002A3B00	0x0000002B	[107] literal string: VTable is invalid (points inside nursery).
0x002A3B30	0x0000001B	[107] literal string: VTable is invalid (empty).
0x002A3B50	0x00000012	[107] literal string: Object is pinned.
0x002A3B70	0x00000019	[107] literal string: Pointer inside oldspace.
0x002A3B89	0x00000034	[108] literal string: ../../../../../mono/mono/metadata/sgen-descriptor.c
0x002A3BBD	0x0000002D	[108] literal string: user_descriptors_next < MAX_USER_DESCRIPTORS
0x002A3BEA	0x00000037	[109] literal string: ../../../../../mono/mono/metadata/sgen-fin-weak-hash.c
0x002A3C21	0x00000005	[109] literal string: copy
0x002A3C26	0x0000000E	[109] literal string: Invalid index
0x002A3C34	0x00000063	[109] literal string: Invalid next entry index - as long as we're busy, other thread can only increment or invalidate it
0x002A3C97	0x00000049	[109] literal string: Invalid state transition - other thread can only make busy state invalid
0x002A3CE0	0x00000037	[109] literal string: user_data == NULL || user_data == mono_gc_run_finalize
0x002A3D17	0x0000001A	[109] literal string: Invalid stage entry state
0x002A3D31	0x00000009	[110] literal string: koupepia
0x002A3D3A	0x0000003E	[110] literal string: CORRUPT CANARY:
addr->%p
type->%s
excepted->'%s'
found->'%s'

0x002A3D78	0x0000000D	[110] literal string: clear domain
0x002A3D85	0x0000002C	[110] literal string: ../../../../../mono/mono/metadata/sgen-gc.c
0x002A3DB1	0x00000023	[110] literal string: !concurrent_collection_in_progress
0x002A3DD4	0x00000037	[110] literal string: Target pointer of global remset must be in the nursery
0x002A3E0B	0x00000034	[110] literal string: Global remsets can only be added during collections
0x002A3E3F	0x0000005A	[110] literal string: Global remsets outside of collection pauses can only be added by the concurrent collector
0x002A3E99	0x00000047	[110] literal string: Non-pinned objects can only remain in nursery if it is a split nursery
0x002A3EE0	0x0000003A	[110] literal string: size >= sizeof (MonoObject) && size <= MAX_SMALL_OBJ_SIZE
0x002A3F1A	0x00000025	[110] literal string: <occupied offset="%td" size="%td"/>

0x002A3F3F	0x00000020	[110] literal string: <section type="%s" size="%lu">

0x002A3F5F	0x0000001B	[110] literal string: start < section->next_data
0x002A3F7A	0x0000000C	[110] literal string: </section>

0x002A3F86	0x0000002D	[110] literal string: mono_profiler_events & MONO_PROFILE_GC_MOVES
0x002A3FB3	0x0000001E	[110] literal string: Invalid current generation %d
0x002A3FD1	0x0000000D	[110] literal string: LOS overflow
0x002A3FDE	0x00000017	[110] literal string: Degraded mode overflow
0x002A3FF5	0x00000010	[110] literal string: Minor allowance
0x002A4005	0x0000000D	[110] literal string: Nursery full
0x002A4012	0x0000001D	[110] literal string: Finish concurrent collection
0x002A402F	0x00000019	[110] literal string: What generation is this?
0x002A4048	0x00000024	[110] literal string: Why did this not get handled above?
0x002A406C	0x0000000F	[110] literal string: Minor overflow
0x002A407B	0x00000012	[110] literal string: Excessive pinning
0x002A408D	0x0000001F	[110] literal string: Heap size: %lu, LOS size: %lu

0x002A40AC	0x00000047	[110] literal string: nursery collection didn't find enough room for %zd alloc (%zd pinned)

0x002A40F3	0x0000002E	[110] literal string: sgen_gray_object_queue_is_empty (&gray_queue)
0x002A4121	0x00000016	[110] literal string: entry->object == NULL
0x002A4137	0x00000007	[110] literal string: !entry
0x002A413E	0x0000001C	[110] literal string: stack_end < info->stack_end
0x002A415A	0x0000000D	[110] literal string: user request
0x002A4167	0x00000028	[110] literal string: Warning: In environment variable `%s': 
0x002A418F	0x00000006	[110] literal string:  - %s
0x002A4195	0x00000007	[110] literal string: major=
0x002A419C	0x00000007	[110] literal string: minor=
0x002A41A3	0x00000007	[110] literal string: simple
0x002A41AA	0x00000006	[110] literal string: split
0x002A41B0	0x00000018	[110] literal string: Using `simple` instead.
0x002A41C8	0x0000001E	[110] literal string: Unknown minor collector `%s'.
0x002A41E6	0x0000000A	[110] literal string: marksweep
0x002A41F0	0x0000000F	[110] literal string: marksweep-conc
0x002A41FF	0x0000001B	[110] literal string: Using `marksweep` instead.
0x002A421A	0x0000001E	[110] literal string: Unknown major collector `%s'.
0x002A4238	0x0000000F	[110] literal string: max-heap-size=
0x002A4247	0x0000000D	[110] literal string: Rounding up.
0x002A4254	0x0000002F	[110] literal string: `max-heap-size` size must be a multiple of %d.
0x002A4283	0x00000024	[110] literal string: `max-heap-size` must be an integer.
0x002A42A7	0x00000011	[110] literal string: soft-heap-limit=
0x002A42B8	0x00000024	[110] literal string: `soft-heap-limit` must be positive.
0x002A42DC	0x00000026	[110] literal string: `soft-heap-limit` must be an integer.
0x002A4302	0x0000000C	[110] literal string: stack-mark=
0x002A430E	0x00000008	[110] literal string: precise
0x002A4316	0x0000000D	[110] literal string: conservative
0x002A4323	0x00000016	[110] literal string: Using `conservative`.
0x002A4339	0x00000011	[110] literal string: Using `precise`.
0x002A434A	0x0000005C	[110] literal string: Invalid value `%s` for `stack-mark` option, possible values are: `precise`, `conservative`.
0x002A43A6	0x00000017	[110] literal string: bridge-implementation=
0x002A43BD	0x0000000F	[110] literal string: toggleref-test
0x002A43CC	0x0000000E	[110] literal string: nursery-size=
0x002A43DA	0x00000015	[110] literal string: Using default value.
0x002A43EF	0x00000027	[110] literal string: `nursery-size` must be a power of two.
0x002A4416	0x0000002A	[110] literal string: `nursery-size` must be at least %d bytes.
0x002A4440	0x00000023	[110] literal string: `nursery-size` must be an integer.
0x002A4463	0x00000013	[110] literal string: save-target-ratio=
0x002A4476	0x00000012	[110] literal string: save-target-ratio
0x002A4488	0x00000019	[110] literal string: default-allowance-ratio=
0x002A44A1	0x00000018	[110] literal string: default-allowance-ratio
0x002A44B9	0x00000019	[110] literal string: allow-synchronous-major=
0x002A44D2	0x0000000A	[110] literal string: Ignoring.
0x002A44DC	0x0000004C	[110] literal string: `allow-synchronous-major` is only valid for the concurrent major collector.
0x002A4528	0x00000038	[110] literal string: `allow-synchronous-major` must be either `yes' or `no'.
0x002A4560	0x0000000A	[110] literal string: cementing
0x002A456A	0x0000000D	[110] literal string: no-cementing
0x002A4577	0x00000015	[110] literal string: Unknown option `%s`.
0x002A458C	0x00000045	[110] literal string: 
%s must be a comma-delimited list of one or more of the following:

0x002A45D1	0x0000004F	[110] literal string:   max-heap-size=N (where N is an integer, possibly with a k, m or a g suffix)

0x002A4620	0x00000051	[110] literal string:   soft-heap-limit=n (where N is an integer, possibly with a k, m or a g suffix)

0x002A4671	0x0000004E	[110] literal string:   nursery-size=N (where N is an integer, possibly with a k, m or a g suffix)

0x002A46BF	0x00000057	[110] literal string:   major=COLLECTOR (where COLLECTOR is `marksweep', `marksweep-conc', `marksweep-par')

0x002A4716	0x0000003C	[110] literal string:   minor=COLLECTOR (where COLLECTOR is `simple' or `split')

0x002A4752	0x00000041	[110] literal string:   wbarrier=WBARRIER (where WBARRIER is `remset' or `cardtable')

0x002A4793	0x0000004D	[110] literal string:   stack-mark=MARK-METHOD (where MARK-METHOD is 'precise' or 'conservative')

0x002A47E0	0x00000012	[110] literal string:   [no-]cementing

0x002A47F2	0x0000003E	[110] literal string:   allow-synchronous-major=FLAG (where FLAG is `yes' or `no')

0x002A4830	0x00000018	[110] literal string:  Experimental options:

0x002A4848	0x0000003E	[110] literal string:   save-target-ratio=R (where R must be between %.2f - %.2f).

0x002A4886	0x00000044	[110] literal string:   default-allowance-ratio=R (where R must be between %.2f - %.2f).

0x002A48CA	0x0000000E	[110] literal string: MONO_GC_DEBUG
0x002A48D8	0x00000006	[110] literal string: %s.%d
0x002A48DE	0x00000003	[110] literal string: wb
0x002A48E1	0x00000010	[110] literal string: print-allowance
0x002A48F1	0x0000000E	[110] literal string: print-pinning
0x002A48FF	0x00000015	[110] literal string: verify-before-allocs
0x002A4914	0x00000016	[110] literal string: verify-before-allocs=
0x002A492A	0x00000016	[110] literal string: collect-before-allocs
0x002A4940	0x00000017	[110] literal string: collect-before-allocs=
0x002A4957	0x0000001A	[110] literal string: verify-before-collections
0x002A4971	0x0000001B	[110] literal string: check-at-minor-collections
0x002A498C	0x0000001C	[110] literal string: mod-union-consistency-check
0x002A49A8	0x0000004A	[110] literal string: `mod-union-consistency-check` only works with concurrent major collector.
0x002A49F2	0x00000010	[110] literal string: check-mark-bits
0x002A4A02	0x00000015	[110] literal string: check-nursery-pinned
0x002A4A17	0x0000000F	[110] literal string: xdomain-checks
0x002A4A26	0x0000000C	[110] literal string: clear-at-gc
0x002A4A32	0x00000014	[110] literal string: clear-nursery-at-gc
0x002A4A46	0x00000017	[110] literal string: clear-at-tlab-creation
0x002A4A5D	0x0000001D	[110] literal string: debug-clear-at-tlab-creation
0x002A4A7A	0x00000012	[110] literal string: check-scan-starts
0x002A4A8C	0x0000001B	[110] literal string: verify-nursery-at-minor-gc
0x002A4AA7	0x00000011	[110] literal string: check-concurrent
0x002A4AB8	0x00000040	[110] literal string: `check-concurrent` only works with concurrent major collectors.
0x002A4AF8	0x00000019	[110] literal string: dump-nursery-at-minor-gc
0x002A4B11	0x00000015	[110] literal string: no-managed-allocator
0x002A4B26	0x0000000E	[110] literal string: disable-minor
0x002A4B34	0x0000000E	[110] literal string: disable-major
0x002A4B42	0x0000000B	[110] literal string: heap-dump=
0x002A4B4D	0x0000000D	[110] literal string: <sgen-dump>

0x002A4B5A	0x00000011	[110] literal string: binary-protocol=
0x002A4B6B	0x00000010	[110] literal string: Ignoring limit.
0x002A4B7B	0x00000034	[110] literal string: Binary protocol file size limit must be an integer.
0x002A4BAF	0x00000011	[110] literal string: nursery-canaries
0x002A4BC0	0x00000010	[110] literal string: do-not-finalize
0x002A4BD0	0x00000058	[110] literal string: 
%s must be of the format [<l>[:<filename>]|<option>]+ where <l> is a debug level 0-9.

0x002A4C28	0x00000016	[110] literal string: Valid <option>s are:

0x002A4C3E	0x0000001F	[110] literal string:   collect-before-allocs[=<n>]

0x002A4C5D	0x0000001E	[110] literal string:   verify-before-allocs[=<n>]

0x002A4C7B	0x0000001E	[110] literal string:   check-at-minor-collections

0x002A4C99	0x00000013	[110] literal string:   check-mark-bits

0x002A4CAC	0x00000018	[110] literal string:   check-nursery-pinned

0x002A4CC4	0x0000001D	[110] literal string:   verify-before-collections

0x002A4CE1	0x0000001E	[110] literal string:   verify-nursery-at-minor-gc

0x002A4CFF	0x0000001C	[110] literal string:   dump-nursery-at-minor-gc

0x002A4D1B	0x00000011	[110] literal string:   disable-minor

0x002A4D2C	0x00000011	[110] literal string:   disable-major

0x002A4D3D	0x00000012	[110] literal string:   xdomain-checks

0x002A4D4F	0x00000014	[110] literal string:   check-concurrent

0x002A4D63	0x00000019	[110] literal string:   clear-[nursery-]at-gc

0x002A4D7C	0x0000001A	[110] literal string:   clear-at-tlab-creation

0x002A4D96	0x00000020	[110] literal string:   debug-clear-at-tlab-creation

0x002A4DB6	0x00000015	[110] literal string:   check-scan-starts

0x002A4DCB	0x00000018	[110] literal string:   no-managed-allocator

0x002A4DE3	0x00000013	[110] literal string:   print-allowance

0x002A4DF6	0x00000011	[110] literal string:   print-pinning

0x002A4E07	0x00000018	[110] literal string:   heap-dump=<filename>

0x002A4E1F	0x00000032	[110] literal string:   binary-protocol=<filename>[:<file-size-limit>]

0x002A4E51	0x00000014	[110] literal string:   nursery-canaries

0x002A4E65	0x00000013	[110] literal string:   do-not-finalize

0x002A4E78	0x00000005	[110] literal string: sgen
0x002A4E7D	0x00000009	[110] literal string: wbarrier
0x002A4E86	0x00000012	[110] literal string: array_filler_type
0x002A4E98	0x0000003C	[110] literal string: Invalid finalizer callback version. Expected %d but got %d

0x002A4ED4	0x0000001E	[110] literal string: Allocating nursery size: %zu

0x002A4EF2	0x00000038	[110] literal string: sgen_memgov_try_alloc_space (alloc_size, SPACE_NURSERY)
0x002A4F2A	0x00000017	[110] literal string: `%s` must be a number.
0x002A4F41	0x00000022	[110] literal string: `%s` must be between %.2f - %.2f.
0x002A4F63	0x00000014	[110] literal string: Collection max time
0x002A4F77	0x00000015	[110] literal string: Minor fragment clear
0x002A4F8C	0x0000000E	[110] literal string: Minor pinning
0x002A4F9A	0x0000001A	[110] literal string: Minor scan remembered set
0x002A4FB4	0x00000012	[110] literal string: Minor scan pinned
0x002A4FC6	0x0000001C	[110] literal string: Minor scan registered roots
0x002A4FE2	0x00000017	[110] literal string: Minor scan thread data
0x002A4FF9	0x00000018	[110] literal string: Minor finish gray stack
0x002A5011	0x00000018	[110] literal string: Minor fragment creation
0x002A5029	0x00000015	[110] literal string: Major fragment clear
0x002A503E	0x0000000E	[110] literal string: Major pinning
0x002A504C	0x00000012	[110] literal string: Major scan pinned
0x002A505E	0x0000001C	[110] literal string: Major scan registered roots
0x002A507A	0x00000017	[110] literal string: Major scan thread data
0x002A5091	0x00000018	[110] literal string: Major scan alloc_pinned
0x002A50A9	0x00000015	[110] literal string: Major scan finalized
0x002A50BE	0x00000017	[110] literal string: Major scan big objects
0x002A50D5	0x00000018	[110] literal string: Major finish gray stack
0x002A50ED	0x00000017	[110] literal string: Major free big objects
0x002A5104	0x00000010	[110] literal string: Major LOS sweep
0x002A5114	0x0000000C	[110] literal string: Major sweep
0x002A5120	0x00000018	[110] literal string: Major fragment creation
0x002A5138	0x00000019	[110] literal string: Number of pinned objects
0x002A5151	0x0000002D	[110] literal string: !mono_native_tls_get_value (thread_info_key)
0x002A517E	0x0000000B	[110] literal string: !found_obj
0x002A5189	0x0000005B	[110] literal string: ((root->root_desc != 0) && (descr != NULL)) || ((root->root_desc == 0) && (descr == NULL))
0x002A51E4	0x00000024	[110] literal string: Can't have objects without vtables.
0x002A5208	0x0000001B	[110] literal string: byte index %d out of range
0x002A5223	0x0000000C	[110] literal string: !num_marked
0x002A522F	0x00000045	[110] literal string: Why is the gray queue not empty after workers have finished working?
0x002A5274	0x0000003A	[110] literal string: scan_whole_nursery only applies to concurrent collections
0x002A52AE	0x00000055	[110] literal string: sgen_section_gray_queue_is_empty (sgen_workers_get_distribute_section_gray_queue ())
0x002A5303	0x00000029	[110] literal string: Can't have workers working after joining
0x002A532C	0x00000021	[110] literal string: !object_is_pinned (bigobj->data)
0x002A534D	0x00000006	[110] literal string: major
0x002A5353	0x0000003F	[110] literal string: Can't have workers working after major collection has finished
0x002A5392	0x0000001F	[110] literal string: <collection type="%s" num="%d"
0x002A53B1	0x0000000D	[110] literal string:  reason="%s"
0x002A53BE	0x00000003	[110] literal string: >

0x002A53C1	0x0000002F	[110] literal string: <other-mem-usage type="mempools" size="%ld"/>

0x002A53F0	0x00000024	[110] literal string: <pinned type="stack" bytes="%zu"/>

0x002A5414	0x00000024	[110] literal string: <pinned type="other" bytes="%zu"/>

0x002A5438	0x00000012	[110] literal string: <pinned-objects>

0x002A544A	0x00000013	[110] literal string: </pinned-objects>

0x002A545D	0x00000008	[110] literal string: nursery
0x002A5465	0x00000007	[110] literal string: <los>

0x002A546C	0x00000008	[110] literal string: </los>

0x002A5474	0x0000000F	[110] literal string: </collection>

0x002A5483	0x00000004	[110] literal string: <>"
0x002A5487	0x00000018	[110] literal string: j < sizeof (class_name)
0x002A549F	0x00000021	[110] literal string: <object class="%s.%s" size="%zd"
0x002A54C0	0x00000004	[110] literal string: LOS
0x002A54C4	0x0000000F	[110] literal string:  location="%s"
0x002A54D3	0x00000004	[110] literal string: />

0x002A54D7	0x00000014	[110] literal string: %s generation done

0x002A54EB	0x0000004E	[110] literal string: Finalize queue handling scan for %s generation: %d usecs %d ephemeron rounds

0x002A5539	0x00000028	[110] literal string: sgen_gray_object_queue_is_empty (queue)
0x002A5561	0x0000001B	[110] literal string: !object_is_forwarded (cur)
0x002A557C	0x00000018	[110] literal string: !object_is_pinned (cur)
0x002A5594	0x0000002D	[110] literal string: NFC-BAD SCAN START [%zu] %p for obj [%p %p]

0x002A55C1	0x00000022	[110] literal string: concurrent_collection_in_progress
0x002A55E3	0x00000024	[110] literal string: current_collection_generation == -1
0x002A5607	0x0000001A	[110] literal string: finish_up_concurrent_mark
0x002A5621	0x0000002A	[110] literal string: Finding pinned pointers: %zd in %d usecs

0x002A564B	0x00000015	[110] literal string: Root scan: %d usecs

0x002A5660	0x0000002F	[110] literal string: Precise stack mark not supported - disabling.

0x002A568F	0x00000027	[110] literal string: Potential pinning address out of range
0x002A56B6	0x00000015	[110] literal string: Pin queue not sorted
0x002A56CB	0x0000001E	[110] literal string: Scan start index out of range
0x002A56E9	0x00000031	[110] literal string: Scanning pinned roots (%d bytes, %d/%d entries)

0x002A571A	0x0000001E	[110] literal string: major_collector.is_concurrent
0x002A5738	0x0000001B	[110] literal string: Start major collection %d

0x002A5753	0x00000018	[110] literal string: num_objects_marked == 0
0x002A576B	0x0000002D	[110] literal string: Start nursery collection %d %p-%p, size: %d

0x002A5798	0x0000002C	[110] literal string: nursery_section->size >= max_garbage_amount
0x002A57C4	0x0000001F	[110] literal string: Old generation scan: %d usecs

0x002A57E3	0x00000022	[110] literal string: !sgen_collection_is_concurrent ()
0x002A5805	0x00000032	[110] literal string: Fragment creation: %d usecs, %lu bytes available

0x002A5837	0x00000006	[110] literal string: minor
0x002A583D	0x0000001E	[110] literal string: Checking nursery canaries...

0x002A585B	0x00000012	[110] literal string: FORWARDED OBJ %p

0x002A586D	0x0000000F	[110] literal string: PINNED OBJ %p

0x002A587C	0x00000011	[110] literal string: HOLE [%p %p %d]

0x002A588D	0x0000001A	[110] literal string: OBJ  [%p %p %d %d %s %d]

0x002A58A7	0x0000000A	[110] literal string: finishing
0x002A58B1	0x0000001D	[110] literal string: SGEN_OBJECT_IS_PINNED (addr)
0x002A58CE	0x00000047	[110] literal string: Why is the gray queue not empty before we have started doing anything?
0x002A5915	0x00000004	[110] literal string: old
0x002A5919	0x00000036	[110] literal string: mono_object_domain (start) == mono_get_root_domain ()
0x002A594F	0x0000002E	[111] literal string: ../../../../../mono/mono/metadata/sgen-gray.c
0x002A597D	0x00000029	[111] literal string: Can't set gray queue alloc-prepare twice
0x002A59A6	0x0000000E	[111] literal string: !queue->first
0x002A59B4	0x00000029	[111] literal string: sgen_section_gray_queue_is_empty (queue)
0x002A59DD	0x00000025	[112] literal string: clean should reset hash_table->table
0x002A5A02	0x0000002B	[112] literal string: clean should reset hash_table->num_entries
0x002A5A2D	0x0000001B	[112] literal string: rehash guarantees size > 0
0x002A5A48	0x00000032	[113] literal string: ../../../../../mono/mono/metadata/sgen-internal.c
0x002A5A7A	0x00000025	[113] literal string: type >= 0 && type < INTERNAL_MEM_MAX
0x002A5A9F	0x0000002D	[113] literal string: size <= allocator_sizes [NUM_ALLOCATORS - 1]
0x002A5ACC	0x0000002C	[113] literal string: fixed_type_allocator_indexes [type] == slot
0x002A5AF8	0x00000025	[113] literal string: index >= 0 && index < NUM_ALLOCATORS
0x002A5B1D	0x00000038	[113] literal string: allocator_sizes [index_for_size (max_size)] == max_size
0x002A5B55	0x0000000A	[113] literal string: pin-queue
0x002A5B5F	0x00000009	[113] literal string: fragment
0x002A5B68	0x00000008	[113] literal string: section
0x002A5B70	0x0000000C	[113] literal string: scan-starts
0x002A5B7C	0x0000000A	[113] literal string: fin-table
0x002A5B86	0x0000000F	[113] literal string: finalize-entry
0x002A5B95	0x00000015	[113] literal string: finalize-ready-entry
0x002A5BAA	0x0000000E	[113] literal string: dislink-table
0x002A5BB8	0x00000008	[113] literal string: dislink
0x002A5BC0	0x0000000C	[113] literal string: roots-table
0x002A5BCC	0x0000000C	[113] literal string: root-record
0x002A5BD8	0x0000000B	[113] literal string: statistics
0x002A5BE3	0x0000000D	[113] literal string: pinned-class
0x002A5BF0	0x0000000D	[113] literal string: remset-class
0x002A5BFD	0x0000000B	[113] literal string: gray-queue
0x002A5C08	0x00000011	[113] literal string: marksweep-tables
0x002A5C19	0x00000015	[113] literal string: marksweep-block-info
0x002A5C2E	0x0000001A	[113] literal string: marksweep-block-info-sort
0x002A5C48	0x0000000F	[113] literal string: ephemeron-link
0x002A5C57	0x0000000C	[113] literal string: worker-data
0x002A5C63	0x00000010	[113] literal string: worker-job-data
0x002A5C73	0x0000000C	[113] literal string: bridge-data
0x002A5C7F	0x00000016	[113] literal string: old-bridge-hash-table
0x002A5C95	0x0000001C	[113] literal string: old-bridge-hash-table-entry
0x002A5CB1	0x00000012	[113] literal string: bridge-hash-table
0x002A5CC3	0x00000018	[113] literal string: bridge-hash-table-entry
0x002A5CDB	0x00000019	[113] literal string: tarjan-bridge-hash-table
0x002A5CF4	0x0000001F	[113] literal string: tarjan-bridge-hash-table-entry
0x002A5D13	0x0000001D	[113] literal string: tarjan-bridge-object-buckets
0x002A5D30	0x00000018	[113] literal string: bridge-alive-hash-table
0x002A5D48	0x0000001E	[113] literal string: bridge-alive-hash-table-entry
0x002A5D66	0x0000000D	[113] literal string: bridge-debug
0x002A5D73	0x00000010	[113] literal string: job-queue-entry
0x002A5D83	0x0000000F	[113] literal string: toggleref-data
0x002A5D92	0x00000014	[113] literal string: cardtable-mod-union
0x002A5DA6	0x00000010	[113] literal string: binary-protocol
0x002A5DB6	0x0000000A	[113] literal string: temporary
0x002A5DC0	0x0000002D	[114] literal string: ../../../../../mono/mono/metadata/sgen-los.c
0x002A5DED	0x0000001F	[114] literal string: size > SGEN_MAX_SMALL_OBJ_SIZE
0x002A5E0C	0x00000010	[114] literal string: (size & 1) == 0
0x002A5E1C	0x0000002D	[114] literal string: !((mword)obj->data & (SGEN_ALLOC_ALIGN - 1))
0x002A5E49	0x00000021	[114] literal string: los_num_sections == num_sections
0x002A5E6A	0x0000000D	[114] literal string: huge-los-ptr
0x002A5E77	0x00000008	[114] literal string: los-ptr
0x002A5E7F	0x00000016	[114] literal string: %s (size %d pin %d)


0x002A5E95	0x0000002D	[114] literal string: %s (interior-ptr offset %td size %d pin %d)

0x002A5EC2	0x00000006	[114] literal string: cards
0x002A5EC8	0x00000042	[114] literal string: size > 0 && size - sizeof (LOSObject) <= LOS_SECTION_OBJECT_LIMIT
0x002A5F0A	0x00000023	[114] literal string: (size & (LOS_CHUNK_SIZE - 1)) == 0
0x002A5F2D	0x0000001C	[114] literal string: section->free_chunk_map [i]
0x002A5F49	0x00000033	[114] literal string: section->num_free_chunks <= LOS_SECTION_NUM_CHUNKS
0x002A5F7C	0x0000001D	[114] literal string: !section->free_chunk_map [i]
0x002A5F99	0x00000033	[115] literal string: ../../../../../mono/mono/metadata/sgen-marksweep.c
0x002A5FCC	0x00000040	[115] literal string: MS_BLOCK_OBJ_SIZE_INDEX (i) == ms_find_block_obj_size_index (i)
0x002A600C	0x00000019	[115] literal string: # major blocks allocated
0x002A6025	0x00000015	[115] literal string: # major blocks freed
0x002A603A	0x0000001A	[115] literal string: # major blocks lazy swept
0x002A6054	0x0000001A	[115] literal string: # major objects evacuated
0x002A606E	0x0000001D	[115] literal string: # major blocks freed ideally
0x002A608B	0x00000022	[115] literal string: # major blocks freed less ideally
0x002A60AD	0x00000022	[115] literal string: # major blocks freed individually
0x002A60CF	0x00000026	[115] literal string: # major blocks allocated less ideally
0x002A60F5	0x00000014	[115] literal string: Wrong scan function
0x002A6109	0x00000035	[115] literal string: ../../../../../mono/mono/metadata/sgen-copy-object.h
0x002A613E	0x00000023	[115] literal string: objsize <= SGEN_MAX_SMALL_OBJ_SIZE
0x002A6161	0x0000002B	[115] literal string: major-ptr (block %p sz %d pin %d ref %d)


0x002A618C	0x00000004	[115] literal string: 	(

0x002A6190	0x00000008	[115] literal string: object

0x002A6198	0x0000000D	[115] literal string: dead-object

0x002A61A5	0x00000019	[115] literal string: interior-ptr offset %td

0x002A61BE	0x0000001E	[115] literal string: dead-interior-ptr offset %td

0x002A61DC	0x0000000E	[115] literal string:  marked %d)


0x002A61EA	0x0000005B	[115] literal string:   evacuation-threshold=P (where P is a percentage, an integer in 0-100)
  (no-)lazy-sweep

0x002A6245	0x00000016	[115] literal string: evacuation-threshold=
0x002A625B	0x0000003D	[115] literal string: evacuation-threshold must be an integer in the range 0-100.

0x002A6298	0x0000000B	[115] literal string: lazy-sweep
0x002A62A3	0x0000000E	[115] literal string: no-lazy-sweep
0x002A62B1	0x0000000B	[115] literal string: have_swept
0x002A62BC	0x00000022	[115] literal string: section reserve can't be negative
0x002A62DE	0x00000018	[115] literal string: empty block count wrong
0x002A62F6	0x0000001D	[115] literal string: we're not shifting correctly
0x002A6313	0x00000013	[115] literal string: algorithm is wrong
0x002A6326	0x00000014	[115] literal string: array length is off
0x002A633A	0x00000015	[115] literal string: we're missing blocks
0x002A634F	0x0000002B	[115] literal string: !sgen_concurrent_collection_in_progress ()
0x002A637A	0x0000000F	[115] literal string: <occupancies>

0x002A6389	0x00000032	[115] literal string: <occupancy size="%d" available="%d" used="%d" />

0x002A63BB	0x00000010	[115] literal string: </occupancies>

0x002A63CB	0x00000020	[115] literal string: <section type="%s" size="%zu">

0x002A63EB	0x00000025	[115] literal string: Number of cards calculation is wrong
0x002A6410	0x0000000B	[115] literal string: !mod_union
0x002A641B	0x00000012	[115] literal string: scan_front <= obj
0x002A642D	0x00000023	[115] literal string: Block must be swept after sweeping
0x002A6450	0x00000013	[115] literal string: major heap section
0x002A6463	0x00000026	[115] literal string: !((mword)block & (MS_BLOCK_SIZE - 1))
0x002A6489	0x00000027	[115] literal string: num_major_sections >= old_num_sections
0x002A64B0	0x00000015	[115] literal string: pinned alloc failure
0x002A64C5	0x00000016	[115] literal string: no object of size %d

0x002A64DB	0x00000049	[116] literal string: Error: Garbage collector could not allocate %zu bytes of memory for %s.

0x002A6524	0x00000039	[116] literal string: ../../../../../mono/mono/metadata/sgen-memory-governor.c
0x002A655D	0x00000034	[116] literal string: !(flags & ~(SGEN_ALLOC_HEAP | SGEN_ALLOC_ACTIVATE))
0x002A6591	0x0000001C	[116] literal string: !(flags & ~SGEN_ALLOC_HEAP)
0x002A65AD	0x0000002A	[116] literal string: Memory shouldn't run out in worker thread
0x002A65D7	0x0000000D	[116] literal string: Memgov alloc
0x002A65E4	0x00000011	[116] literal string: Memgov max alloc
0x002A65F5	0x00000014	[116] literal string: Setting to minimum.
0x002A6609	0x00000040	[116] literal string: `max-heap-size` must be at least as large as `soft-heap-limit`.
0x002A6649	0x00000045	[116] literal string: `max-heap-size` must be at least 4 times as large as `nursery size`.
0x002A668E	0x0000001C	[116] literal string: total %.2fms, bridge %.2fms
0x002A66AA	0x0000003C	[116] literal string: GC_MAJOR%s: (%s) pause %.2fms, %s major %dK/%dK los %dK/%dK
0x002A66E6	0x0000000A	[116] literal string: _OVERFLOW
0x002A66F0	0x00000041	[116] literal string: GC_MINOR%s: (%s) pause %.2fms, %s promoted %dK major %dK los %dK
0x002A6731	0x0000002A	[116] literal string: need_calculate_minor_collection_allowance
0x002A675B	0x00000033	[116] literal string: Before collection: %ld bytes (%ld major, %ld LOS)

0x002A678E	0x00000032	[116] literal string: After collection: %ld bytes (%ld major, %ld LOS)

0x002A67C0	0x00000016	[116] literal string: Allowance: %ld bytes

0x002A67E0	0x0000001D	[117] literal string: Bridge hash table entry %p:

0x002A67FD	0x00000011	[117] literal string:   is bridge: %d

0x002A680E	0x00000012	[117] literal string:   is visited: %d

0x002A682E	0x00000034	[117] literal string: ../../../../../mono/mono/metadata/sgen-new-bridge.c
0x002A6862	0x00000007	[117] literal string: x == 0
0x002A6878	0x0000000D	[117] literal string: capacity > 0
0x002A6885	0x0000001B	[117] literal string: OBJECT %s (%p) SCC [%d] %s
0x002A68A0	0x00000006	[117] literal string: ALIVE
0x002A68A6	0x00000005	[117] literal string: DEAD
0x002A68AB	0x000000BC	[117] literal string: GC_NEW_BRIDGE num-objects %d num_hash_entries %d sccs size %d init %.2fms df1 %.2fms sort %.2fms dfs2 %.2fms setup-cb %.2fms free-data %.2fms links %d/%d/%d/%d dfs passes %d/%d ignored %d
0x002A6975	0x00000021	[117] literal string: entry->v.dfs1.finishing_time > 0
0x002A6996	0x0000001C	[117] literal string: j == hash_table.num_entries
0x002A69B2	0x0000001D	[117] literal string: OBJECT %s::%s (%p) weight %f
0x002A69D4	0x00000011	[117] literal string: bridge_scc->flag
0x002A69E5	0x0000000B	[117] literal string: src != dst
0x002A69F0	0x00000019	[117] literal string: src->index != dst->index
0x002A6A09	0x00000012	[117] literal string: !bridge_scc->flag
0x002A6A1B	0x0000001F	[117] literal string: bridge_scc->num_bridge_entries
0x002A6A3A	0x00000011	[117] literal string: da->capacity > 0
0x002A6A54	0x00000017	[117] literal string: da->array.capacity > 1
0x002A6A6B	0x00000027	[117] literal string: dyn_array_ptr_size (&entry->srcs) == 0
0x002A6A92	0x0000000B	[117] literal string: %s.%d.gexf
0x002A6A9F	0x0000003F	[117] literal string: Warning: Could not open bridge dump file `%s` for writing: %s

0x002A6ADE	0x000000C9	[117] literal string: <gexf xmlns="http://www.gexf.net/1.2draft" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd" version="1.2">

0x002A6BA7	0x000000AE	[117] literal string: <graph defaultedgetype="directed">
<attributes class="node">
<attribute id="0" title="class" type="string"/>
<attribute id="1" title="bridge" type="boolean"/>
</attributes>

0x002A6C55	0x00000009	[117] literal string: <nodes>

0x002A6C5E	0x0000006D	[117] literal string: <node id="%p"><attvalues><attvalue for="0" value="%s.%s"/><attvalue for="1" value="%s"/></attvalues></node>

0x002A6CD0	0x00000006	[117] literal string: false
0x002A6CD6	0x0000000A	[117] literal string: </nodes>

0x002A6CE0	0x00000009	[117] literal string: <edges>

0x002A6CE9	0x00000029	[117] literal string: <edge id="%d" source="%p" target="%p"/>

0x002A6D12	0x0000000A	[117] literal string: </edges>

0x002A6D1C	0x00000011	[117] literal string: </graph></gexf>

0x002A6D2D	0x0000001A	[117] literal string: !src->v.dfs1.forwarded_to
0x002A6D47	0x00000020	[117] literal string: !obj_entry->v.dfs1.forwarded_to
0x002A6D74	0x00000035	[117] literal string: ../../../../../mono/mono/metadata/sgen-scan-object.h
0x002A6DA9	0x0000001D	[117] literal string: obj_entry_again == obj_entry
0x002A6DC6	0x00000020	[117] literal string: !dst_entry->v.dfs1.forwarded_to
0x002A6DE6	0x00000022	[117] literal string: entry->v.dfs1.finishing_time == 0
0x002A6E08	0x00000019	[117] literal string: t > 0 && t <= G_MAXINT32
0x002A6E30	0x00000027	[117] literal string: Pointer is a registered bridge object.
0x002A6E57	0x0000003B	[118] literal string: ../../../../../mono/mono/metadata/sgen-nursery-allocator.c
0x002A6E92	0x00000032	[118] literal string: fragment->fragment_end > fragment->fragment_start
0x002A6EC4	0x00000016	[118] literal string: Invalid range [%p %p]
0x002A6EDA	0x0000003A	[118] literal string: start + sgen_safe_object_get_size ((MonoObject*)o) == end
0x002A6F14	0x00000016	[118] literal string: Nursery fully pinned

0x002A6F2A	0x0000001C	[118] literal string: Invalid nursery object size
0x002A6F4E	0x00000034	[119] literal string: ../../../../../mono/mono/metadata/sgen-old-bridge.c
0x002A6F82	0x0000001F	[119] literal string: sgen_need_bridge_processing ()
0x002A6FA7	0x000000B1	[119] literal string: GC_OLD_BRIDGE num-objects %d num_hash_entries %d sccs size %d init %.2fms df1 %.2fms sort %.2fms dfs2 %.2fms setup-cb %.2fms free-data %.2fms links %d/%d/%d/%d dfs passes %d/%d
0x002A7058	0x00000044	[119] literal string: bridge_processor->num_sccs == 0 && bridge_processor->num_xrefs == 0
0x002A709C	0x0000003C	[119] literal string: !bridge_processor->api_sccs && !bridge_processor->api_xrefs
0x002A70D8	0x0000001E	[119] literal string: bridge_processing_in_progress
0x002A70F6	0x0000001B	[119] literal string: entry->finishing_time >= 0
0x002A711A	0x00000010	[119] literal string: scc->index == i
0x002A712A	0x00000025	[119] literal string: dyn_array_ptr_size (&dfs_stack) == 0
0x002A7153	0x00000031	[119] literal string: dyn_array_int_get (&dst->xrefs, i) != dst->index
0x002A7184	0x00000009	[119] literal string: size > 0
0x002A718F	0x0000001A	[119] literal string: entry->finishing_time < 0
0x002A71A9	0x00000031	[120] literal string: ../../../../../mono/mono/metadata/sgen-os-mach.c
0x002A71DA	0x00000013	[120] literal string: !info->stack_start
0x002A71ED	0x00000028	[120] literal string: thread %p stopped at %p stack_start=%p

0x002A7215	0x0000001A	[121] literal string: 
%-50s  %10s  %10s  %10s

0x002A722F	0x00000006	[121] literal string: Class
0x002A7235	0x00000006	[121] literal string: Stack
0x002A723B	0x00000007	[121] literal string: Static
0x002A7242	0x00000006	[121] literal string: Other
0x002A7248	0x00000006	[121] literal string: %-50s
0x002A724E	0x00000008	[121] literal string:   %10ld
0x002A7256	0x0000000E	[121] literal string: 
%-50s  %10s

0x002A7264	0x00000009	[121] literal string: #Remsets
0x002A726D	0x0000000E	[121] literal string: %-50s  %10ld

0x002A727B	0x0000001B	[122] literal string: Pin queue search gone awry
0x002A7296	0x0000001D	[122] literal string: Pin queue entry out of range
0x002A72B3	0x00000046	[122] literal string: Pin queue trimming assumes the whole pin queue is used by the nursery
0x002A72F9	0x0000002C	[122] literal string: Concurrent cementing cannot simply be reset
0x002A7325	0x0000002E	[122] literal string: Concurrent cementing has already been started
0x002A7353	0x00000029	[122] literal string: Concurrent cementing hasn't been started
0x002A737C	0x0000003C	[122] literal string: Looking up cementing for non-nursery objects makes no sense
0x002A73B8	0x0000002D	[122] literal string: Cementing wasn't inited with concurrent flag
0x002A73E5	0x0000002C	[122] literal string: Can only cement pointers to nursery objects
0x002A7411	0x0000001C	[122] literal string: Cementing hash inconsistent
0x002A742D	0x00000037	[123] literal string: ../../../../../mono/mono/metadata/sgen-pointer-queue.c
0x002A7464	0x00000011	[123] literal string: queue->next_slot
0x002A7475	0x00000023	[124] literal string: Binary protocol buffer count error
0x002A7498	0x00000032	[124] literal string: ../../../../../mono/mono/metadata/sgen-protocol.c
0x002A74CA	0x00000024	[124] literal string: Locked use count must be at least 1
0x002A74EE	0x00000011	[124] literal string: debugging memory
0x002A74FF	0x00000024	[124] literal string: Exclusively locked count must be -1
0x002A7523	0x00000028	[124] literal string: Somebody messed with the exclusive lock
0x002A754B	0x00000048	[124] literal string: Indexed binary protocol filename must only be used with file size limit
0x002A7593	0x00000012	[124] literal string: buffer->index > 0
0x002A75A5	0x0000007C	[127] literal string:   alloc-ratio=P (where P is a percentage, an integer in 1-100)
  promotion-age=P (where P is a number, an integer in 1-%d)

0x002A7621	0x0000000D	[127] literal string: alloc-ratio=
0x002A762E	0x00000034	[127] literal string: alloc-ratio must be an integer in the range 1-100.

0x002A7662	0x0000000F	[127] literal string: promotion-age=
0x002A7671	0x00000035	[127] literal string: promotion-age must be an integer in the range 1-%d.

0x002A76A6	0x00000037	[127] literal string: ../../../../../mono/mono/metadata/sgen-split-nursery.c
0x002A76DD	0x00000028	[127] literal string: res->fragment_end > res->fragment_start
0x002A7705	0x0000001E	[127] literal string: byte < sgen_space_bitmap_size
0x002A7723	0x0000003C	[128] literal string: More threads have died (%d) that been initialy suspended %d
0x002A775F	0x00000037	[128] literal string: restarted %d thread(s) (pause time: %d usec, max: %d)

0x002A7796	0x0000000B	[128] literal string: World stop
0x002A77A1	0x0000000E	[128] literal string: World restart
0x002A77AF	0x0000002D	[128] literal string: ../../../../../mono/mono/metadata/sgen-stw.c
0x002A77DC	0x00000054	[128] literal string: info->stack_start >= info->stack_start_limit && info->stack_start < info->stack_end
0x002A783E	0x00000037	[129] literal string: ../../../../../mono/mono/metadata/sgen-tarjan-bridge.c
0x002A7884	0x000000B5	[129] literal string: GC_TAR_BRIDGE bridges %d objects %d colors %d ignored %d sccs %d xref %d cache %d/%d setup %.2fms tarjan %.2fms scc-setup %.2fms gather-xref %.2fms xref-setup %.2fms cleanup %.2fms
0x002A7939	0x00000024	[129] literal string: dyn_array_ptr_size (&dest->bridges)
0x002A795D	0x00000018	[129] literal string: xref_count == api_index
0x002A7975	0x00000020	[129] literal string: sd->state == FINISHED_OFF_STACK
0x002A7995	0x00000026	[129] literal string: dyn_array_ptr_size (&scan_stack) == 1
0x002A79BB	0x00000026	[129] literal string: dyn_array_ptr_size (&loop_stack) == 0
0x002A79E1	0x00000012	[129] literal string: data->index == -1
0x002A79F3	0x00000016	[129] literal string: data->low_index == -1
0x002A7A09	0x00000017	[129] literal string: data->state == SCANNED
0x002A7A20	0x00000023	[129] literal string: Invalid state when building SCC %d
0x002A7A43	0x00000006	[129] literal string: found
0x002A7A49	0x0000000C	[129] literal string: cd->visited
0x002A7A57	0x00000018	[129] literal string: other->state != INITIAL
0x002A7A6F	0x00000017	[129] literal string: data->state == INITIAL
0x002A7A86	0x00000033	[130] literal string: ../../../../../mono/mono/metadata/sgen-toggleref.c
0x002A7AB9	0x00000007	[130] literal string: __test
0x002A7AC0	0x0000001A	[130] literal string: mono_toggleref_test_field
0x002A7ADA	0x00000015	[130] literal string: toggleref-cb obj %d

0x002A7AEF	0x0000002D	[131] literal string: Can't wake workers during nursery collection
0x002A7B1C	0x00000023	[131] literal string: We are not waiting for the workers
0x002A7B3F	0x00000032	[131] literal string: We got the semaphore, so it must have been posted
0x002A7B71	0x0000005C	[131] literal string: We are finishing the nursery collection, so we should have waited for the semaphore earlier
0x002A7BCD	0x00000016	[131] literal string: Stolen from self lock
0x002A7BE3	0x00000019	[131] literal string: Stolen from self no lock
0x002A7BFC	0x00000013	[131] literal string: Stolen from others
0x002A7C0F	0x00000011	[131] literal string: # workers waited
0x002A7C20	0x00000031	[131] literal string: ../../../../../mono/mono/metadata/sgen-workers.c
0x002A7C51	0x00000023	[131] literal string: workers_job_queue_num_entries == 0
0x002A7C74	0x0000004F	[131] literal string: Nobody else should have modified the state - workers have not been started yet
0x002A7CC3	0x0000002C	[131] literal string: Can't be in nursery collection when joining
0x002A7CEF	0x0000001E	[131] literal string: Why is post_done already set?
0x002A7D0D	0x00000042	[131] literal string: sgen_section_gray_queue_is_empty (&workers_distribute_gray_queue)
0x002A7D4F	0x00000027	[131] literal string: !workers_data [i].stealable_stack_fill
0x002A7D76	0x00000047	[131] literal string: sgen_gray_object_queue_is_empty (&workers_data [i].private_gray_queue)
0x002A7DBD	0x00000022	[131] literal string: index >= 0 && index < workers_num
0x002A7DDF	0x0000001D	[131] literal string: !workers_data [index].thread
0x002A7DFC	0x00000044	[131] literal string: Why are we doing work while there's a nursery collection happening?
0x002A7E40	0x0000003D	[131] literal string: !sgen_gray_object_queue_is_empty (&data->private_gray_queue)
0x002A7E7D	0x0000003C	[131] literal string: sgen_gray_object_queue_is_empty (&data->private_gray_queue)
0x002A7EB9	0x0000003E	[131] literal string: How can we be awake without the semaphore having been posted?
0x002A7EF7	0x00000028	[131] literal string: There are too many worker threads awake
0x002A7F1F	0x00000014	[131] literal string: data != victim_data
0x002A7F33	0x0000001C	[131] literal string: collection_needs_workers ()
0x002A7F4F	0x0000002A	[131] literal string: sgen_concurrent_collection_in_progress ()
0x002A7F79	0x0000001B	[131] literal string: !sgen_ptr_in_nursery (obj)
0x002A7F94	0x00000017	[131] literal string: SGEN_LOAD_VTABLE (obj)
0x002A7FAB	0x00000031	[131] literal string: !workers_distribute_gray_queue.locked == !locked
0x002A7FDC	0x0000002D	[131] literal string: Cannot wake up more workers than are present
0x002A8009	0x00000029	[131] literal string: Nobody else should be mutating the state
0x002A8032	0x00000028	[131] literal string: Must be in the nursery collection state
0x002A805A	0x00000023	[131] literal string: We're awake, but num_awake is zero
0x002A807D	0x00000036	[131] literal string: post_done must be set in the nursery collection state
0x002A80B3	0x00000032	[131] literal string: Once done has been posted no threads can be awake
0x002A80E5	0x00000033	[131] literal string: Once done has been posted no thread must be awoken
0x002A8118	0x00000030	[131] literal string: Can't go from nursery collection to not working
0x002A8148	0x00000033	[131] literal string: A worker can't wait without being in working state
0x002A817B	0x0000002D	[131] literal string: How can we be awake, yet we are not counted?
0x002A81A8	0x00000048	[131] literal string: How can we be working, yet no worker threads are awake or to be awoken?
0x002A81F0	0x00000033	[131] literal string: Can only signal enqueue work when in no work state
0x002A8223	0x00000029	[131] literal string: No workers can be awake when not working
0x002A824C	0x0000001A	[131] literal string: Can't have posted already
0x002A8266	0x00000027	[131] literal string: post_done can only be set when working
0x002A828D	0x00000032	[132] literal string: ves_icall_System_Net_Sockets_Socket_Poll_internal
0x002A82BF	0x00000034	[132] literal string: ves_icall_System_Net_Sockets_Socket_Select_internal
0x002A82F3	0x0000000D	[132] literal string: LingerOption
0x002A8300	0x00000008	[132] literal string: enabled
0x002A8308	0x00000008	[132] literal string: seconds
0x002A8310	0x00000006	[132] literal string: group
0x002A8316	0x00000008	[132] literal string: ifIndex
0x002A831E	0x0000000C	[132] literal string: iface_index
0x002A832A	0x0000000D	[132] literal string: invalid hint
0x002A8337	0x0000000E	[132] literal string: ipv4Supported
0x002A8345	0x0000000E	[132] literal string: ipv6Supported
0x002A8353	0x0000002E	[132] literal string: ../../../../../mono/mono/metadata/socket-io.c
0x002A8381	0x0000000A	[132] literal string: m_Address
0x002A838B	0x0000000A	[132] literal string: m_Numbers
0x002A8395	0x0000000B	[132] literal string: System.dll
0x002A83A0	0x0000004A	[132] literal string: System.Net.Sockets.SocketOptionName 0x%x is not supported at Socket level
0x002A83EA	0x00000046	[132] literal string: System.Net.Sockets.SocketOptionName 0x%x is not supported at IP level
0x002A8430	0x00000048	[132] literal string: System.Net.Sockets.SocketOptionName 0x%x is not supported at IPv6 level
0x002A8478	0x00000047	[132] literal string: System.Net.Sockets.SocketOptionName 0x%x is not supported at TCP level
0x002A84BF	0x00000040	[132] literal string: System.Net.Sockets.SocketOptionLevel has unsupported value 0x%x
0x002A84FF	0x00000047	[132] literal string: System.Net.Sockets.SocketOptionName 0x%x is not supported at UDP level
0x002A8546	0x0000003C	[132] literal string: System.Net.Sockets.SocketOptionLevel has unknown value 0x%x
0x002A8582	0x00000007	[132] literal string: socket
0x002A8589	0x00000010	[132] literal string: SystemException
0x002A8599	0x0000000E	[132] literal string: SocketAddress
0x002A85A7	0x00000017	[132] literal string: domain->sockaddr_class
0x002A85BE	0x0000001C	[132] literal string: domain->sockaddr_data_field
0x002A85DA	0x0000001C	[132] literal string: unknown address family 0x%x
0x002A85F6	0x00000039	[132] literal string: System.Net.Sockets.SocketType has unsupported value 0x%x
0x002A862F	0x00000035	[132] literal string: System.Net.Sockets.SocketType has unknown value 0x%x
0x002A8664	0x0000003B	[132] literal string: System.Net.Sockets.ProtocolType has unsupported value 0x%x
0x002A869F	0x0000003C	[132] literal string: System.Net.Sockets.AddressFamily has unsupported value 0x%x
0x002A86DB	0x00000038	[132] literal string: System.Net.Sockets.AddressFamily has unknown value 0x%x
0x002A8713	0x00000032	[133] literal string: ../../../../../mono/mono/metadata/string-icalls.c
0x002A8745	0x00000015	[135] literal string: MONO_THREADS_PER_CPU
0x002A875A	0x0000000E	[135] literal string: MonoAsyncCall
0x002A8768	0x0000002F	[135] literal string: ../../../../../mono/mono/metadata/threadpool.c
0x002A8797	0x00000011	[135] literal string: async_call_klass
0x002A87A8	0x00000008	[135] literal string: threads
0x002A87B0	0x00000013	[135] literal string: async_tp.pc_nitems
0x002A87C3	0x00000016	[135] literal string: async_io_tp.pc_nitems
0x002A87D9	0x00000015	[135] literal string: async_tp.pc_nthreads
0x002A87EE	0x00000018	[135] literal string: async_io_tp.pc_nthreads
0x002A8806	0x00000010	[135] literal string: wait_event != 0
0x002A8816	0x0000000B	[135] literal string: ac != NULL
0x002A8821	0x0000002A	[135] literal string: domain->state == MONO_APPDOMAIN_UNLOADING
0x002A884B	0x00000012	[135] literal string: SocketAsyncResult
0x002A885D	0x00000007	[135] literal string: Socket
0x002A8864	0x00000013	[135] literal string: System.Net.Sockets
0x002A8877	0x00000015	[135] literal string: IO Threadpool worker
0x002A888C	0x00000012	[135] literal string: Threadpool worker
0x002A889E	0x00000010	[135] literal string: threads != NULL
0x002A88AE	0x00000013	[135] literal string: Threadpool monitor
0x002A88C1	0x00000011	[135] literal string: AsyncReadHandler
0x002A88D2	0x00000010	[135] literal string: SocketAsyncCall
0x002A88E2	0x00000011	[135] literal string: MONO_DISABLE_AIO
0x002A88F3	0x00000031	[135] literal string: get_event_from_state: unknown value in switch!!!
0x002A892E	0x0000002C	[136] literal string: ../../../../../mono/mono/metadata/threads.c
0x002A895A	0x0000009B	[136] literal string: ((char*)&internal->unused2 - (char*)internal) == mono_defaults.internal_thread_class->fields [mono_defaults.internal_thread_class->field.count - 1].offset
0x002A89F5	0x000000B9	[136] literal string: Thread %u calling into managed code is not registered with the GC. On UNIX, this can be fixed by #include-ing <gc.h> before <pthread.h> in the file containing the thread creation code.
0x002A8AAE	0x0000000E	[136] literal string: thread_handle
0x002A8ABC	0x00000005	[136] literal string: info
0x002A8ACE	0x0000000F	[136] literal string: thread != NULL
0x002A8ADD	0x00000021	[136] literal string: Thread has already been started.
0x002A8AFE	0x0000002F	[136] literal string: this->obj.vtable->domain == mono_domain_get ()
0x002A8B2D	0x00000022	[136] literal string: Thread.Name can only be set once.
0x002A8B4F	0x00000009	[136] literal string: internal
0x002A8B58	0x00000022	[136] literal string: domain != mono_get_root_domain ()
0x002A8B7A	0x0000001D	[136] literal string: Thread has not been started.
0x002A8B97	0x0000001B	[136] literal string: thread->abort_state_handle
0x002A8BB2	0x00000035	[136] literal string: Unable to reset abort because no abort was requested
0x002A8BE7	0x00000006	[136] literal string: state
0x002A8BED	0x00000051	[136] literal string: Thread.ExceptionState cannot access an ExceptionState from a different AppDomain
0x002A8C3E	0x00000029	[136] literal string: Thread has not been started, or is dead.
0x002A8C67	0x00000020	[136] literal string: background_change_event != NULL
0x002A8C87	0x0000000E	[136] literal string: shutting_down
0x002A8C95	0x00000026	[136] literal string: static_type == SPECIAL_STATIC_CONTEXT
0x002A8CBB	0x0000000C	[136] literal string: local_slots
0x002A8CC7	0x0000002C	[136] literal string: local_slots field not found in Thread class
0x002A8D02	0x00000004	[136] literal string: _ec
0x002A8D06	0x00000006	[136] literal string: field
0x002A8D0C	0x00000042	[136] literal string: mono_class_try_get_vtable (domain, mono_defaults.appdomain_class)
0x002A8D4E	0x00000007	[136] literal string: offset
0x002A8D55	0x0000001B	[136] literal string: (offset & 0x80000000) == 0
0x002A8D70	0x0000002C	[136] literal string: size <= static_data_size [static_data->idx]
0x002A8D9C	0x00000027	[136] literal string: static_data->idx < NUM_STATIC_DATA_IDX
0x002A8DC3	0x0000000B	[136] literal string: rs != NULL
0x002A8DCE	0x00000007	[136] literal string: !error
0x002A8DE2	0x00000014	[136] literal string: 
"<unnamed thread>"
0x002A8DF6	0x00000006	[136] literal string:   %s

0x002A8DFC	0x00000019	[136] literal string:   at <unknown> <0x%05x>

0x002A8E15	0x0000000F	[136] literal string: current_thread
0x002A8E24	0x00000015	[136] literal string: current_thread_field
0x002A8E39	0x00000011	[136] literal string: thread->synch_cs
0x002A8E4A	0x00000026	[136] literal string: current->obj.vtable->domain == domain
0x002A8E70	0x00000015	[136] literal string: !*current_thread_ptr
0x002A8E85	0x0000001C	[136] literal string: !thread->root_domain_thread
0x002A8EA1	0x00000018	[136] literal string: thread->internal_thread
0x002A8EB9	0x0000001F	[136] literal string: %s: CreateSemaphore error 0x%x
0x002A8ED8	0x0000000E	[136] literal string: create_thread
0x002A8EE6	0x00000017	[136] literal string: Couldn't create thread
0x002A8EFD	0x0000001C	[136] literal string: %s: CreateThread error 0x%x
0x002A8F19	0x00000017	[136] literal string: start_delegate != NULL
0x002A8F30	0x0000002F	[137] literal string: ../../../../../mono/mono/metadata/tpool-poll.c
0x002A8F5F	0x00000004	[137] literal string: err
0x002A8F63	0x00000022	[138] literal string: Could not decode method signature
0x002A8F85	0x00000038	[138] literal string: Method and signature don't match in terms of genericity
0x002A8FBD	0x0000001F	[138] literal string: Could not decode method header
0x002A8FDC	0x00000038	[138] literal string: Method with locals variable but without init locals set
0x002A9014	0x0000001C	[138] literal string: Invalid local %d of type %s
0x002A9030	0x00000020	[138] literal string: Invalid parameter %d of type %s
0x002A9050	0x0000001C	[138] literal string: Invalid local %i of type %s
0x002A906C	0x00000020	[138] literal string: Invalid parameter %i of type %s
0x002A908C	0x00000023	[138] literal string: try clause out of bounds at 0x%04x
0x002A90AF	0x0000001E	[138] literal string: try clause len <= 0 at 0x%04x
0x002A90CD	0x00000027	[138] literal string: handler clause out of bounds at 0x%04x
0x002A90F4	0x00000022	[138] literal string: handler clause len <= 0 at 0x%04x
0x002A9116	0x00000039	[138] literal string: try block (at 0x%04x) includes handler block (at 0x%04x)
0x002A914F	0x00000026	[138] literal string: filter clause out of bounds at 0x%04x
0x002A9175	0x0000003C	[138] literal string: filter clause must come before the handler clause at 0x%04x
0x002A91B1	0x00000022	[138] literal string: Catch clause %d with invalid type
0x002A91D3	0x0000001A	[138] literal string: Invalid branch target: %s
0x002A91ED	0x0000002B	[138] literal string: ../../../../../mono/mono/metadata/verify.c
0x002A9218	0x00000044	[138] literal string: Branch or EH block at [0x%04x] targets middle instruction at 0x%04x
0x002A925C	0x00000021	[138] literal string: Invalid instruction %x at 0x%04x
0x002A927D	0x0000003B	[138] literal string: Branch or EH block targets middle of instruction at 0x%04x
0x002A92B8	0x00000049	[138] literal string: Branch or EH block targets between prefix '%s' and instruction at 0x%04x
0x002A9301	0x00000021	[138] literal string: fallthru off try block at 0x%04x
0x002A9322	0x00000023	[138] literal string: fallout of handler block at 0x%04x
0x002A9345	0x00000022	[138] literal string: fallout of filter block at 0x%04x
0x002A9367	0x00000021	[138] literal string: fallthru handler block at 0x%04x
0x002A9388	0x00000038	[138] literal string: Try to enter try block with a non-empty stack at 0x%04x
0x002A93C0	0x0000002A	[138] literal string: Code overrun starting with 0x%x at 0x%04x
0x002A93EA	0x0000001B	[138] literal string: Use of the `unused' opcode
0x002A9405	0x0000002A	[138] literal string: Eval stack must be empty in jmp at 0x%04x
0x002A942F	0x0000002D	[138] literal string: jmp cannot escape exception blocks at 0x%04x
0x002A945C	0x0000002B	[138] literal string: Intruction jmp is not verifiable at 0x%04x
0x002A9487	0x0000002D	[138] literal string: Intruction calli is not verifiable at 0x%04x
0x002A94B4	0x00000025	[138] literal string: Too many switch entries %x at 0x%04x
0x002A94D9	0x0000000A	[138] literal string: castclass
0x002A94E3	0x00000041	[138] literal string: endfinally must be used inside a finally/fault handler at 0x%04x
0x002A9524	0x0000004A	[138] literal string: Cannot use arglist on method without VARGARG calling convention at 0x%04x
0x002A956E	0x0000003A	[138] literal string: tail prefix must be used only with call opcodes at 0x%04x
0x002A95A8	0x0000000D	[138] literal string: constrained.
0x002A95B5	0x0000002E	[138] literal string: Instruction cpblk is not verifiable at 0x%04x
0x002A95E3	0x00000030	[138] literal string: Instruction initblk is not verifiable at 0x%04x
0x002A9613	0x00000036	[138] literal string: rethrow must be used inside a catch handler at 0x%04x
0x002A9649	0x00000024	[138] literal string: Invalid instruction FE %x at 0x%04x
0x002A966D	0x00000037	[138] literal string: Invalid instruction after constrained prefix at 0x%04x
0x002A96A4	0x00000034	[138] literal string: Invalid instruction after readonly prefix at 0x%04x
0x002A96D8	0x00000034	[138] literal string: Invalid instruction after volatile prefix at 0x%04x
0x002A970C	0x00000035	[138] literal string: Invalid instruction after unaligned prefix at 0x%04x
0x002A9741	0x00000023	[138] literal string: Run ahead of method code at 0x%04x
0x002A9764	0x00000040	[138] literal string: Branch or exception block target middle of intruction at 0x%04x
0x002A97A4	0x0000002B	[138] literal string: Branch to delegate code sequence at 0x%04x
0x002A97CF	0x00000047	[138] literal string: Invalid ldftn with virtual function in method with stdarg 0 at  0x%04x
0x002A9816	0x0000005C	[138] literal string: Invalid call to a non-final virtual function in method with stdarg.0 or ldarga.0 at  0x%04x
0x002A9872	0x0000005F	[138] literal string: Constructor %s for type %s not calling base type ctor due to a TypeLoadException on base type.
0x002A98D1	0x00000037	[138] literal string: Constructor %s for type %s not calling base type ctor.
0x002A9908	0x00000025	[138] literal string: mono_type_is_generic_argument (type)
0x002A992D	0x00000047	[138] literal string: Expected a typedref as argument for refanytype, but found %s at 0x%04x
0x002A9974	0x00000008	[138] literal string: Invalid
0x002A997C	0x0000000B	[138] literal string: Native Int
0x002A9987	0x00000008	[138] literal string: Float64
0x002A998F	0x0000000F	[138] literal string: Native Pointer
0x002A999E	0x00000008	[138] literal string: Complex
0x002A99A6	0x00000013	[138] literal string: ctx->eval.size > 0
0x002A99B9	0x00000034	[138] literal string: Found use of uninitialized 'this ptr' ref at 0x%04x
0x002A99ED	0x00000007	[138] literal string: sizeof
0x002A99F4	0x00000024	[138] literal string: Invalid use of byref type at 0x%04x
0x002A9A18	0x00000023	[138] literal string: Invalid use of void type at 0x%04x
0x002A9A3B	0x00000024	[138] literal string: Invalid type token 0x%08x at 0x%04x
0x002A9A5F	0x00000034	[138] literal string: Cannot load type from token 0x%08x for %s at 0x%04x
0x002A9A93	0x0000002B	[138] literal string: Invalid use of byref type for %s at 0x%04x
0x002A9ABE	0x0000002A	[138] literal string: Invalid use of void type for %s at 0x%04x
0x002A9AE8	0x0000002B	[138] literal string: Invalid use of typedbyref for %s at 0x%04x
0x002A9B13	0x0000002F	[138] literal string: Could not retrieve type token for %s at 0x%04x
0x002A9B42	0x00000053	[138] literal string: Cannot use the generic type definition in a boxable type position for %s at 0x%04x
0x002A9B95	0x00000035	[138] literal string: Unmanaged pointer is not a verifiable type at 0x%04x
0x002A9BCA	0x00000008	[138] literal string: initobj
0x002A9BD2	0x0000002D	[138] literal string: Invalid object address for initobj at 0x%04x
0x002A9BFF	0x00000035	[138] literal string: Cannot use a readonly pointer with initobj at 0x%04x
0x002A9C34	0x00000043	[138] literal string: Type token of initobj not compatible with value on stack at 0x%04x
0x002A9C77	0x0000003B	[138] literal string: Initobj %s not compatible with value on stack %s at 0x%04x
0x002A9CB2	0x00000021	[138] literal string: using byref native int at 0x%04x
0x002A9CD3	0x00000020	[138] literal string: target->type == MONO_TYPE_ARRAY
0x002A9CF3	0x00000036	[138] literal string: Stack size must have one item for endfilter at 0x%04x
0x002A9D29	0x00000038	[138] literal string: Stack item type is not an int32 for endfilter at 0x%04x
0x002A9D61	0x00000045	[138] literal string: endfilter is not the last instruction of the filter clause at 0x%04x
0x002A9DA6	0x0000002A	[138] literal string: endfilter outside filter clause at 0x%04x
0x002A9DD0	0x00000035	[138] literal string: Stack must have only size item in localloc at 0x%04x
0x002A9E05	0x00000033	[138] literal string: Instruction localloc in never verifiable at 0x%04x
0x002A9E38	0x00000026	[138] literal string: Invalid token %x for ldftn  at 0x%04x
0x002A9E5E	0x0000000A	[138] literal string: ldvirtfrn
0x002A9E68	0x00000006	[138] literal string: ldftn
0x002A9E6E	0x0000002E	[138] literal string: Cannot use ldftn with a constructor at 0x%04x
0x002A9E9C	0x00000028	[138] literal string: Invalid argument to ldvirtftn at 0x%04x
0x002A9EC4	0x00000032	[138] literal string: Cannot use ldvirtftn with a constructor at 0x%04x
0x002A9EF6	0x0000002A	[138] literal string: Unexpected object for ldvirtftn at 0x%04x
0x002A9F20	0x0000003B	[138] literal string: Loaded method is not visible for ldftn/ldvirtftn at 0x%04x
0x002A9F5B	0x00000021	[138] literal string: Invalid generic type argument %d
0x002A9F7C	0x00000023	[138] literal string: Invalid generic method argument %d
0x002A9F9F	0x0000002D	[138] literal string: Invalid method token 0x%08x for %s at 0x%04x
0x002A9FCC	0x00000036	[138] literal string: Cannot load method from token 0x%08x for %s at 0x%04x
0x002AA002	0x00000043	[138] literal string: Invalid generic method instantiation of method %s.%s::%s at 0x%04x
0x002AA045	0x00000075	[138] literal string: Invalid generic method instantiation of method %s.%s::%s (generic args don't respect target's constraints) at 0x%04x
0x002AA0BA	0x0000002E	[138] literal string: Could not resolve underlying type of %x at %d
0x002AA0E8	0x00000028	[138] literal string: Illegal value set on stack 0x%02x at %d
0x002AA110	0x00000044	[138] literal string: Compare instruction applyed to ill formed stack (%s x %s) at 0x%04x
0x002AA154	0x0000003A	[138] literal string: Compare instruction is not verifiable (%s x %s) at 0x%04x
0x002AA18E	0x00000002	[138] literal string: [
0x002AA190	0x00000006	[138] literal string: boxed
0x002AA196	0x00000005	[138] literal string: cmmp
0x002AA19B	0x00000003	[138] literal string: mp
0x002AA19E	0x00000008	[138] literal string: unboxed
0x002AA1A6	0x00000003	[138] literal string: ] 
0x002AA1A9	0x00000024	[138] literal string: Branch target out of code at 0x%04x
0x002AA1CD	0x0000002D	[138] literal string: Leave not allowed in finally block at 0x%04x
0x002AA1FA	0x00000041	[138] literal string: Table index out of range 0x%x for token %x for ldtoken at 0x%04x
0x002AA23B	0x00000038	[138] literal string: Invalid table 0x%x for token 0x%x for ldtoken at 0x%04x
0x002AA273	0x00000033	[138] literal string: Invalid token 0x%x for ldtoken at 0x%04x due to %s
0x002AA2A6	0x00000022	[138] literal string: Invalid ldtoken type %x at 0x%04x
0x002AA2C8	0x0000000A	[138] literal string: refanyval
0x002AA2D2	0x00000036	[138] literal string: Cannot use a readonly pointer with mkrefany at 0x%04x
0x002AA308	0x00000040	[138] literal string: Expected a managed pointer for mkrefany, but found %s at 0x%04x
0x002AA348	0x0000002B	[138] literal string: Type not compatible for mkrefany at 0x%04x
0x002AA373	0x00000048	[138] literal string: Expected float32 or float64 on stack for ckfinit but found %s at 0x%04x
0x002AA3BB	0x00000046	[138] literal string: Expected a typedref as argument for refanyval, but found %s at 0x%04x
0x002AA401	0x0000000A	[138] literal string: unbox.any
0x002AA40B	0x0000003B	[138] literal string: Invalid type %s at stack for unbox.any operation at 0x%04x
0x002AA446	0x0000000B	[138] literal string: stelem.any
0x002AA451	0x00000022	[138] literal string: Type (0x%08x) not found at 0x%04x
0x002AA473	0x00000045	[138] literal string: Index type(%s) for stdelem.X is not an int or a native int at 0x%04x
0x002AA4B8	0x0000002E	[138] literal string: Invalid array type(%s) for stelem.X at 0x%04x
0x002AA4E6	0x00000041	[138] literal string: Invalid array type is not a reference type for stelem.ref 0x%04x
0x002AA527	0x00000034	[138] literal string: Invalid array type on stack for stdelem.X at 0x%04x
0x002AA55B	0x0000003C	[138] literal string: Invalid value is not a reference type for stelem.ref 0x%04x
0x002AA597	0x0000002F	[138] literal string: Invalid value on stack for stdelem.X at 0x%04x
0x002AA5C6	0x00000052	[138] literal string: Cannot use stobj with a boxed source value that is not a reference type at 0x%04x
0x002AA618	0x0000002E	[138] literal string: unknown opcode %02x in mono_type_from_opcode 
0x002AA646	0x0000000B	[138] literal string: ldelem.any
0x002AA651	0x00000044	[138] literal string: Index type(%s) for ldelem.X is not an int or a native int at 0x%04x
0x002AA695	0x0000002E	[138] literal string: Invalid array type(%s) for ldelem.X at 0x%04x
0x002AA6C3	0x00000041	[138] literal string: Invalid array type is not a reference type for ldelem.ref 0x%04x
0x002AA704	0x00000033	[138] literal string: Invalid array type on stack for ldelem.X at 0x%04x
0x002AA737	0x00000008	[138] literal string: ldelema
0x002AA73F	0x00000043	[138] literal string: Index type(%s) for ldelema is not an int or a native int at 0x%04x
0x002AA782	0x0000002D	[138] literal string: Invalid array type(%s) for ldelema at 0x%04x
0x002AA7AF	0x00000032	[138] literal string: Invalid array type on stack for ldelema at 0x%04x
0x002AA7E1	0x00000027	[138] literal string: Invalid array type for ldlen at 0x%04x
0x002AA808	0x00000007	[138] literal string: newarr
0x002AA80F	0x00000041	[138] literal string: Array size type on stack (%s) is not a verifiable type at 0x%04x
0x002AA850	0x00000004	[138] literal string: box
0x002AA854	0x00000035	[138] literal string: Invalid type at stack for boxing operation at 0x%04x
0x002AA889	0x00000006	[138] literal string: stobj
0x002AA88F	0x00000033	[138] literal string: Cannot use a readonly pointer with stobj at 0x%04x
0x002AA8C2	0x00000031	[138] literal string: Invalid destination of stobj operation at 0x%04x
0x002AA8F3	0x0000003C	[138] literal string: Token '%s' and source '%s' of stobj don't match ' at 0x%04x
0x002AA92F	0x0000003B	[138] literal string: Destination and token types of stobj don't match at 0x%04x
0x002AA96A	0x00000007	[138] literal string: stsfld
0x002AA971	0x00000028	[138] literal string: Cannot store non static field at 0x%04x
0x002AA999	0x00000048	[138] literal string: Typedbyref field is an unverfiable type in store static field at 0x%04x
0x002AA9E1	0x0000002A	[138] literal string: Type at stack is not accessible at 0x%04x
0x002AAA0B	0x0000004F	[138] literal string: Incompatible type in static field store expected '%s' but found '%s' at 0x%04x
0x002AAA5A	0x0000002C	[138] literal string: Invalid field token 0x%08x for %s at 0x%04x
0x002AAA86	0x00000035	[138] literal string: Cannot load field from token 0x%08x for %s at 0x%04x
0x002AAABB	0x00000030	[138] literal string: Cannot reference literal field %s::%s at 0x%04x
0x002AAAEB	0x0000002E	[138] literal string: Incompatible type %s in field store at 0x%04x
0x002AAB19	0x00000032	[138] literal string: Typedbyref field is an unverfiable type at 0x%04x
0x002AAB4B	0x0000000A	[138] literal string: obj->type
0x002AAB55	0x00000043	[138] literal string: Native int is not a verifiable type to reference a field at 0x%04x
0x002AAB98	0x0000006E	[138] literal string: Type at stack is a managed pointer to a reference type and is not compatible to reference the field at 0x%04x
0x002AAC06	0x0000005A	[138] literal string: Type at stack is a boxed valuetype and is not compatible to reference the field at 0x%04x
0x002AAC60	0x0000004C	[138] literal string: Expected type '%s' but found '%s' referencing the 'this' argument at 0x%04x
0x002AACAC	0x00000008	[138] literal string: ldsflda
0x002AACB4	0x00000007	[138] literal string: ldsfld
0x002AACBB	0x00000027	[138] literal string: Cannot load non static field at 0x%04x
0x002AACE2	0x00000037	[138] literal string: Cannot take the address of a init-only field at 0x%04x
0x002AAD19	0x0000003C	[138] literal string: Cannot take the address of a temporary value-type at 0x%04x
0x002AAD55	0x00000043	[138] literal string: Invalid type on stack for throw, expected reference type at 0x%04x
0x002AAD98	0x0000005A	[138] literal string: Invalid type on stack for throw, expected reference type but found unboxed %s  at 0x%04x 
0x002AADF2	0x0000002B	[138] literal string: Invalid reference type for unbox at 0x%04x
0x002AAE1D	0x00000037	[138] literal string: Invalid type %s at stack for unbox operation at 0x%04x
0x002AAE54	0x0000001A	[138] literal string: Invalid %s type at 0x%04x
0x002AAE6E	0x0000001F	[138] literal string: Invalid value for %s at 0x%04x
0x002AAE8D	0x00000041	[138] literal string: Expected a reference type on stack for %s but found %s at 0x%04x
0x002AAECE	0x00000007	[138] literal string: newobj
0x002AAED5	0x00000035	[138] literal string: Method from token 0x%08x not a constructor at 0x%04x
0x002AAF0A	0x0000003E	[138] literal string: Trying to instantiate an abstract or interface type at 0x%04x
0x002AAF48	0x0000002D	[138] literal string: Constructor %s not visible from %s at 0x%04x
0x002AAF75	0x00000032	[138] literal string: Invalid constructor signature to newobj at 0x%04x
0x002AAFA7	0x00000038	[138] literal string: Invalid constructor signature missing hasthis at 0x%04x
0x002AAFDF	0x00000027	[138] literal string: Invalid delegate constructor at 0x%04x
0x002AB006	0x0000004B	[138] literal string: Incompatible parameter value with constructor signature: %s X %s at 0x%04x
0x002AB051	0x0000003E	[138] literal string: Cannot use a readonly pointer as argument of newobj at 0x%04x
0x002AB08F	0x00000046	[138] literal string: Invalid function pointer parameter for delegate constructor at 0x%04x
0x002AB0D5	0x00000045	[138] literal string: Invalid method on stack to create delegate %s construction at 0x%04x
0x002AB11A	0x00000032	[138] literal string: Delegate type %s with bad Invoke method at 0x%04x
0x002AB14C	0x00000052	[138] literal string: Function pointer signature '%s' doesn't match delegate's signature '%s' at 0x%04x
0x002AB19E	0x00000036	[138] literal string: Invalid code sequence for delegate creation at 0x%04x
0x002AB1D4	0x00000051	[138] literal string: This object not compatible with function pointer for delegate creation at 0x%04x
0x002AB225	0x0000004D	[138] literal string: Non-null this args used with static function for delegate creation at 0x%04x
0x002AB272	0x00000038	[138] literal string: Invalid first parameter for delegate creation at 0x%04x
0x002AB2AA	0x0000002E	[138] literal string: Invalid ldftn with virtual function at 0x%04x
0x002AB2D8	0x0000005D	[138] literal string: Invalid object argument, it is not the this pointer, to ldftn with virtual method at  0x%04x
0x002AB335	0x00000022	[138] literal string: Invalid string token %x at 0x%04x
0x002AB357	0x00000022	[138] literal string: Invalid string index %x at 0x%04x
0x002AB379	0x00000006	[138] literal string: ldobj
0x002AB37F	0x00000027	[138] literal string: Invalid argument %s to ldobj at 0x%04x
0x002AB3A6	0x00000028	[138] literal string: Using native pointer to ldobj at 0x%04x
0x002AB3CE	0x00000034	[138] literal string: Invalid type at stack for ldojb operation at 0x%04x
0x002AB402	0x00000006	[138] literal string: cpobj
0x002AB408	0x0000002C	[138] literal string: Invalid source of cpobj operation at 0x%04x
0x002AB434	0x00000031	[138] literal string: Invalid destination of cpobj operation at 0x%04x
0x002AB465	0x00000033	[138] literal string: Cannot use a readonly pointer with cpobj at 0x%04x
0x002AB498	0x00000036	[138] literal string: Token and source types of cpobj don't match at 0x%04x
0x002AB4CE	0x0000003B	[138] literal string: Destination and token types of cpobj don't match at 0x%04x
0x002AB509	0x00000055	[138] literal string: Invalid type (%s) at stack for conversion operation. Numeric type expected at 0x%04x
0x002AB55E	0x00000020	[138] literal string: unknown type %02x in conversion
0x002AB57E	0x0000002E	[138] literal string: Invalid type at stack for unary not at 0x%04x
0x002AB5AC	0x00000030	[138] literal string: Invalid non-pointer argument to stind at 0x%04x
0x002AB5DC	0x00000033	[138] literal string: Cannot use a readonly pointer with stind at 0x%04x
0x002AB60F	0x0000003E	[138] literal string: Invalid addr type at stack for stind 0x%x operation at 0x%04x
0x002AB64D	0x0000003F	[138] literal string: Invalid value type at stack for stind 0x%x operation at 0x%04x
0x002AB68C	0x00000034	[138] literal string: Load indirect not using a manager pointer at 0x%04x
0x002AB6C0	0x0000004E	[138] literal string: Invalid type at stack for ldind_ref expected object byref operation at 0x%04x
0x002AB70E	0x00000039	[138] literal string: Invalid type at stack for ldind 0x%x operation at 0x%04x
0x002AB747	0x00000025	[138] literal string: Invalid argument to switch at 0x%04x
0x002AB76C	0x00000027	[138] literal string: Switch target %x out of code at 0x%04x
0x002AB793	0x0000003A	[138] literal string: Switch target %x escapes out of exception block at 0x%04x
0x002AB7CD	0x0000002C	[138] literal string: Boolean branch target out of code at 0x%04x
0x002AB7F9	0x00000037	[138] literal string: Branch target escapes out of exception block at 0x%04x
0x002AB830	0x00000038	[138] literal string: Argument type %s not valid for brtrue/brfalse at 0x%04x
0x002AB868	0x0000000A	[138] literal string: arg->type
0x002AB872	0x00000024	[138] literal string: branch target out of code at 0x%04x
0x002AB896	0x00000009	[138] literal string: callvirt
0x002AB89F	0x00000037	[138] literal string: Cannot use callvirtual with valuetype method at 0x%04x
0x002AB8D6	0x00000034	[138] literal string: Cannot use callvirtual with static method at 0x%04x
0x002AB90A	0x00000032	[138] literal string: Cannot use call with an abstract method at 0x%04x
0x002AB93C	0x0000003A	[138] literal string: Could not resolve signature of %s:%s at 0x%04x due to: %s
0x002AB976	0x0000008A	[138] literal string: Incompatible parameter with function signature: Calling method with signature (%s) but for argument %d there is a (%s) on stack at 0x%04x
0x002ABA00	0x0000003A	[138] literal string: Cannot use a readonly pointer as argument of %s at 0x%04x
0x002ABA3A	0x00000035	[138] literal string: Cannot  pass a byref argument to a tail %s at 0x%04x
0x002ABA6F	0x00000030	[138] literal string: Cannot call a constructor outside one at 0x%04x
0x002ABA9F	0x0000004B	[138] literal string: Cannot call a constructor of a type different from this or super at 0x%04x
0x002ABAEA	0x00000036	[138] literal string: Invalid 'this ptr' argument for constructor at 0x%04x
0x002ABB20	0x00000074	[138] literal string: Cannot use the call opcode with a non-final virtual method on an object different than the 'this' pointer at 0x%04x
0x002ABB94	0x00000041	[138] literal string: Object is not a managed pointer for a constrained call at 0x%04x
0x002ABBD5	0x00000036	[138] literal string: Object not compatible with constrained type at 0x%04x
0x002ABC0B	0x0000004F	[138] literal string: Cannot call a reference type using a managed pointer to the this arg at 0x%04x
0x002ABC5A	0x0000002C	[138] literal string: Cannot call a valuetype baseclass at 0x%04x
0x002ABC86	0x0000002F	[138] literal string: Cannot use a valuetype with callvirt at 0x%04x
0x002ABCB5	0x0000004D	[138] literal string: Cannot use a boxed or literal valuetype to call a valuetype method at 0x%04x
0x002ABD02	0x00000072	[138] literal string: Incompatible this argument on stack with method signature expected '%s' but got '%s' for a call to '%s' at 0x%04x
0x002ABD74	0x00000026	[138] literal string: Method %s is not accessible at 0x%04x
0x002ABD9A	0x00000032	[138] literal string: Tail call with incompatible return type at 0x%04x
0x002ABDCC	0x00000028	[138] literal string: Tail call not followed by ret at 0x%04x
0x002ABDF4	0x0000001E	[138] literal string: ctx->eval.size - distance > 0
0x002ABE12	0x00000020	[138] literal string: ctx->eval.size < ctx->max_stack
0x002ABE32	0x00000025	[138] literal string: ctx->eval.size <= ctx->eval.max_size
0x002ABE57	0x00000018	[138] literal string: new_size >= stack->size
0x002ABE6F	0x00000015	[138] literal string: new_size >= required
0x002ABE84	0x0000004F	[138] literal string: Compare and Branch instruction applyed to ill formed stack (%s x %s) at 0x%04x
0x002ABED3	0x00000045	[138] literal string: Compare and Branch instruction is not verifiable (%s x %s) at 0x%04x
0x002ABF18	0x0000002D	[138] literal string: Method doesn't have stack-depth %d at 0x%04x
0x002ABF45	0x0000002A	[138] literal string: Method doesn't have argument %d at 0x%04x
0x002ABF6F	0x00000031	[138] literal string: Incompatible type %s in argument store at 0x%04x
0x002ABFA0	0x0000002B	[138] literal string: Method doesn't have local var %d at 0x%04x
0x002ABFCB	0x00000053	[138] literal string: Cannot use a readonly managed reference when storing on a local variable at 0x%04x
0x002AC01E	0x00000056	[138] literal string: Incompatible type '%s' on stack cannot be stored to local %d with type '%s' at 0x%04x
0x002AC074	0x0000001D	[138] literal string: Method doesn't have local %d
0x002AC091	0x00000019	[138] literal string: ByRef of ByRef at 0x%04x
0x002AC0AA	0x0000005F	[138] literal string: Incompatible return value on stack with method signature, expected '%s' but got '%s' at 0x%04x
0x002AC109	0x0000000C	[138] literal string: ArgIterator
0x002AC115	0x00000055	[138] literal string: Method returns byref, TypedReference, ArgIterator or RuntimeArgumentHandle at 0x%04x
0x002AC16A	0x00000029	[138] literal string: Stack not empty (%d) after ret at 0x%04x
0x002AC193	0x0000002D	[138] literal string: ret cannot escape exception blocks at 0x%04x
0x002AC1C0	0x00000034	[138] literal string: Stack underflow, required %d, but have %d at 0x%04x
0x002AC1F4	0x00000039	[138] literal string: Binary instruction applyed to ill formed stack (%s x %s)
0x002AC22D	0x0000002F	[138] literal string: Binary instruction is not verifiable (%s x %s)
0x002AC25C	0x00000020	[138] literal string: Method doesn't have argument %d
0x002AC27C	0x0000003C	[138] literal string: Could not merge stacks, different sizes (%d x %d) at 0x%04x
0x002AC2B8	0x0000004B	[138] literal string: Could not merge stack at depth %d, types not compatible: %s X %s at 0x%04x
0x002AC303	0x0000003C	[138] literal string: Cannot merge stacks due to a TypeLoadException %s at 0x%04x
0x002AC33F	0x0000000C	[138] literal string: match_class
0x002AC34B	0x00000024	[138] literal string: Invalid class %s used for exception
0x002AC36F	0x00000019	[138] literal string: Stack overflow at 0x%04x
0x002AC388	0x0000001F	[138] literal string: Exception clause inside filter
0x002AC3A7	0x00000037	[138] literal string: Nested exception clause appears after enclosing clause
0x002AC3DE	0x0000001B	[138] literal string: Exception handlers overlap
0x002AC3F9	0x0000004A	[138] literal string: Exception clauses with shared protected block are neither catch or filter
0x002AC443	0x0000001A	[138] literal string: Exception clauses overlap
0x002AC45D	0x0000001C	[138] literal string: Invalid null type at 0x%04x
0x002AC479	0x00000053	[138] literal string: Invalid generic type (%s%s) (argument out of range or %s is not generic) at 0x%04x
0x002AC4CC	0x00000036	[138] literal string: Invalid generic instantiation of type %s.%s at 0x%04x
0x002AC502	0x00000024	[138] literal string: Could not load type %s.%s at 0x%04x
0x002AC526	0x0000003B	[138] literal string: Invalid generic type instantiation of type %s.%s at 0x%04x
0x002AC561	0x0000006D	[138] literal string: Invalid generic type instantiation of type %s.%s (generic args don't respect target's constraints) at 0x%04x
0x002AC5CE	0x0000002F	[139] literal string: ../../../../../mono/mono/io-layer/collection.c
0x002AC5FD	0x00000031	[139] literal string: %s: Couldn't create handle collection thread: %s
0x002AC62E	0x00000016	[139] literal string: _wapi_collection_init
0x002AC644	0x0000002A	[140] literal string: ../../../../../mono/mono/io-layer/error.c
0x002AC66E	0x00000009	[140] literal string: ret == 0
0x002AC677	0x0000000D	[140] literal string: errno_to_WSA
0x002AC684	0x00000031	[140] literal string: %s: Need to translate %d [%s] into winsock error
0x002AC6B5	0x00000013	[140] literal string: Unknown errno: %s

0x002AC6C8	0x0000000B	[141] literal string: manual: %s
0x002AC6D3	0x00000005	[141] literal string: TRUE
0x002AC6D8	0x0000002B	[141] literal string: ../../../../../mono/mono/io-layer/events.c
0x002AC703	0x00000025	[141] literal string: %s: error opening named event handle
0x002AC728	0x0000000F	[141] literal string: wapi_OpenEvent
0x002AC737	0x0000002B	[141] literal string: %s: error looking up named event handle %p
0x002AC762	0x0000000F	[141] literal string: namedevent_set
0x002AC771	0x00000030	[141] literal string: _WAPI_SHARED_HANDLE(_wapi_handle_type (handle))
0x002AC7A1	0x00000011	[141] literal string: namedevent_reset
0x002AC7B2	0x00000011	[141] literal string: namedevent_pulse
0x002AC7C3	0x00000025	[141] literal string: %s: error looking up event handle %p
0x002AC7E8	0x0000000A	[141] literal string: event_set
0x002AC7F2	0x00000031	[141] literal string: !_WAPI_SHARED_HANDLE(_wapi_handle_type (handle))
0x002AC823	0x0000003E	[141] literal string: Bad call to mono_mutex_lock result %d for global signal mutex
0x002AC861	0x0000003B	[141] literal string: Bad call to pthread_cond_broadcast result %d for handle %p
0x002AC89C	0x00000038	[141] literal string: Bad call to pthread_cond_signal result %d for handle %p
0x002AC8D4	0x00000040	[141] literal string: Bad call to mono_mutex_unlock result %d for global signal mutex
0x002AC914	0x0000000C	[141] literal string: event_reset
0x002AC920	0x0000000C	[141] literal string: event_pulse
0x002AC92C	0x00000020	[141] literal string: %s: error creating event handle
0x002AC94C	0x00000012	[141] literal string: namedevent_create
0x002AC95E	0x0000000D	[141] literal string: event_create
0x002AC96B	0x0000000F	[141] literal string: namedevent_own
0x002AC97A	0x00000021	[141] literal string: namedevent_handle->set_count > 0
0x002AC99B	0x0000000A	[141] literal string: event_own
0x002AC9A5	0x0000001C	[141] literal string: event_handle->set_count > 0
0x002AC9C1	0x00000007	[142] literal string: Unused
0x002AC9C8	0x00000005	[142] literal string: File
0x002AC9CD	0x00000004	[142] literal string: Sem
0x002AC9D1	0x00000006	[142] literal string: Mutex
0x002AC9D7	0x00000006	[142] literal string: Event
0x002AC9DD	0x00000005	[142] literal string: Find
0x002AC9E2	0x00000005	[142] literal string: Pipe
0x002AC9E7	0x00000008	[142] literal string: N.Mutex
0x002AC9EF	0x00000006	[142] literal string: N.Sem
0x002AC9F5	0x00000008	[142] literal string: N.Event
0x002AC9FD	0x00000008	[142] literal string: Error!!
0x002ACA05	0x0000002C	[142] literal string: ../../../../../mono/mono/io-layer/handles.c
0x002ACA31	0x0000001C	[142] literal string: _wapi_shared_layout != NULL
0x002ACA4D	0x0000001D	[142] literal string: _wapi_has_shut_down == FALSE
0x002ACA6A	0x00000017	[142] literal string: !_WAPI_FD_HANDLE(type)
0x002ACA81	0x0000000D	[142] literal string: thr_ret == 0
0x002ACA8E	0x0000001F	[142] literal string: handle_idx >= _wapi_fd_reserve
0x002ACAAD	0x0000001A	[142] literal string: _WAPI_SHARED_HANDLE(type)
0x002ACAC7	0x0000000C	[142] literal string: offset != 0
0x002ACAD3	0x00000016	[142] literal string: _WAPI_FD_HANDLE(type)
0x002ACAE9	0x0000001B	[142] literal string: !_WAPI_SHARED_HANDLE(type)
0x002ACB04	0x00000015	[142] literal string: shared->type == type
0x002ACB19	0x00000027	[142] literal string: %s: Attempting to ref unused handle %p
0x002ACB40	0x00000011	[142] literal string: _wapi_handle_ref
0x002ACB51	0x00000018	[142] literal string: %s: iteration overflow!
0x002ACB69	0x00000025	[142] literal string: _wapi_handle_count_signalled_handles
0x002ACB8E	0x00000011	[142] literal string: %3x [%7s] %s %d 
0x002ACB9F	0x00000003	[142] literal string: Sg
0x002ACBA2	0x00000003	[142] literal string: Un
0x002ACBA5	0x00000020	[142] literal string: file_handle->share_info != NULL
0x002ACBC5	0x0000000D	[142] literal string: offset: 0x%x
0x002ACBD2	0x00000034	[142] literal string: ../../../../../mono/mono/io-layer/handles-private.h
0x002ACC06	0x0000000A	[142] literal string: ms < 1000
0x002ACC10	0x00000029	[142] literal string: %s: Attempting to unref unused handle %p
0x002ACC39	0x00000018	[142] literal string: _wapi_handle_unref_full
0x002ACC51	0x0000002C	[142] literal string: Error destroying handle %p mutex due to %d

0x002ACC7D	0x0000002F	[142] literal string: Error destroying handle %p cond var due to %d

0x002ACCAC	0x0000001C	[142] literal string: Unknown WapiHandleType: %d

0x002ACCC8	0x0000001C	[142] literal string: _wapi_private_handles [idx]
0x002ACCE4	0x00000003	[143] literal string: .*
0x002ACCE7	0x0000002C	[144] literal string: [%20s] acc: %c%c%c, shr: %c%c%c, attrs: %5u
0x002ACD13	0x0000001F	[144] literal string: %s: error creating file handle
0x002ACD32	0x00000010	[144] literal string: wapi_CreateFile
0x002ACD42	0x00000008	[144] literal string: <stdin>
0x002ACD4A	0x00000009	[144] literal string: <stdout>
0x002ACD53	0x00000009	[144] literal string: <stderr>
0x002ACD5C	0x00000027	[144] literal string: ../../../../../mono/mono/io-layer/io.c
0x002ACD83	0x00000023	[144] literal string: %s: LEAPS(yg): %lld LEAPS(y): %lld
0x002ACDA6	0x0000001A	[144] literal string: wapi_FileTimeToSystemTime
0x002ACDC0	0x0000001F	[144] literal string: %s: error creating find handle
0x002ACDDF	0x00000013	[144] literal string: wapi_FindFirstFile
0x002ACDF2	0x00000024	[144] literal string: %s: error looking up find handle %p
0x002ACE16	0x00000012	[144] literal string: wapi_FindNextFile
0x002ACE28	0x00000042	[144] literal string: %s: Bad encoding for '%s'
Consider using MONO_EXTERNAL_ENCODINGS

0x002ACE6A	0x0000000F	[144] literal string: wapi_FindClose
0x002ACE79	0x00000010	[144] literal string: count <= length
0x002ACE89	0x00000024	[144] literal string: %s: error creating pipe read handle
0x002ACEAD	0x00000010	[144] literal string: wapi_CreatePipe
0x002ACEBD	0x00000025	[144] literal string: %s: error creating pipe write handle
0x002ACEE2	0x00000004	[144] literal string: %s/
0x002ACEE6	0x00000004	[144] literal string: afp
0x002ACEEA	0x00000007	[144] literal string: autofs
0x002ACEF1	0x00000007	[144] literal string: cddafs
0x002ACEF8	0x00000007	[144] literal string: cd9660
0x002ACEFF	0x00000006	[144] literal string: devfs
0x002ACF05	0x00000006	[144] literal string: exfat
0x002ACF0B	0x00000006	[144] literal string: fdesc
0x002ACF11	0x00000004	[144] literal string: ftp
0x002ACF15	0x00000004	[144] literal string: hfs
0x002ACF19	0x00000006	[144] literal string: msdos
0x002ACF1F	0x00000004	[144] literal string: nfs
0x002ACF23	0x00000005	[144] literal string: ntfs
0x002ACF28	0x00000006	[144] literal string: smbfs
0x002ACF2E	0x00000004	[144] literal string: udf
0x002ACF32	0x00000007	[144] literal string: webdav
0x002ACF39	0x00000024	[144] literal string: %s: error looking up pipe handle %p
0x002ACF5D	0x0000000B	[144] literal string: pipe_write
0x002ACF68	0x0000000A	[144] literal string: pipe_read
0x002ACF72	0x00000027	[144] literal string: %s: error looking up console handle %p
0x002ACF99	0x0000000E	[144] literal string: console_write
0x002ACFA7	0x0000000D	[144] literal string: console_read
0x002ACFB4	0x00000024	[144] literal string: %s: error looking up file handle %p
0x002ACFD8	0x00000011	[144] literal string: file_setfiletime
0x002ACFE9	0x00000011	[144] literal string: file_getfiletime
0x002ACFFA	0x00000011	[144] literal string: file_getfilesize
0x002AD00B	0x00000012	[144] literal string: file_setendoffile
0x002AD01D	0x0000000A	[144] literal string: file_seek
0x002AD027	0x0000000B	[144] literal string: file_flush
0x002AD032	0x0000000B	[144] literal string: file_write
0x002AD03D	0x0000000A	[144] literal string: file_read
0x002AD047	0x00000016	[144] literal string: info->handle_refs > 0
0x002AD05D	0x00000019	[144] literal string: MONO_STRICT_IO_EMULATION
0x002AD076	0x0000000E	[145] literal string: wapi_LockFile
0x002AD084	0x00000010	[145] literal string: wapi_UnlockFile
0x002AD094	0x00000021	[146] literal string: %s: Unsupported flags passed: %d
0x002AD0B5	0x00000013	[146] literal string: wapi_FormatMessage
0x002AD0C8	0x0000002A	[146] literal string: %s: Message width mask (%d) not supported
0x002AD0F2	0x00000041	[146] literal string: %s: Locale 0x%x not supported, returning language neutral string
0x002AD133	0x00000019	[146] literal string: mono-io-layer-error (%d)
0x002AD14C	0x00000015	[146] literal string: No message specified
0x002AD161	0x00000043	[146] literal string: messages.c: A message was found on the uncommon code path: %d - %s
0x002AD1A4	0x0000004C	[146] literal string: Mono: Incorrect message sorted in io-layer/messages.c at index %d (msg=%s)

0x002AD1F0	0x00000049	[146] literal string: Mono: Error %d with text %s is improperly sorted in io-layer/messages.c

0x002AD239	0x00000011	[146] literal string: Invalid function
0x002AD24A	0x0000000E	[146] literal string: Arena trashed
0x002AD258	0x00000012	[146] literal string: Not enough memory
0x002AD26A	0x0000000E	[146] literal string: Invalid block
0x002AD278	0x00000010	[146] literal string: Bad environment
0x002AD288	0x0000000B	[146] literal string: Bad format
0x002AD293	0x0000000F	[146] literal string: Invalid access
0x002AD2A2	0x0000000E	[146] literal string: Invalid drive
0x002AD2B0	0x00000012	[146] literal string: Current directory
0x002AD2C2	0x0000000E	[146] literal string: Write protect
0x002AD2D0	0x00000009	[146] literal string: Bad unit
0x002AD2D9	0x0000000A	[146] literal string: Not ready
0x002AD2E3	0x0000000C	[146] literal string: Bad command
0x002AD2EF	0x00000004	[146] literal string: CRC
0x002AD2F3	0x00000005	[146] literal string: Seek
0x002AD2F8	0x0000000D	[146] literal string: Not DOS disk
0x002AD305	0x00000011	[146] literal string: Sector not found
0x002AD316	0x0000000D	[146] literal string: Out of paper
0x002AD323	0x0000000C	[146] literal string: Write fault
0x002AD32F	0x0000000B	[146] literal string: Read fault
0x002AD33A	0x0000000B	[146] literal string: Wrong disk
0x002AD345	0x00000018	[146] literal string: Sharing buffer exceeded
0x002AD35D	0x0000000B	[146] literal string: Handle EOF
0x002AD368	0x00000011	[146] literal string: Handle disk full
0x002AD379	0x0000000D	[146] literal string: Rem not list
0x002AD386	0x0000000F	[146] literal string: Duplicate name
0x002AD395	0x0000000C	[146] literal string: Bad netpath
0x002AD3A1	0x0000000D	[146] literal string: Network busy
0x002AD3AE	0x00000016	[146] literal string: Device does not exist
0x002AD3C4	0x00000012	[146] literal string: Too many commands
0x002AD3D6	0x0000000F	[146] literal string: ADAP HDW error
0x002AD3E5	0x00000011	[146] literal string: Bad net response
0x002AD3F6	0x00000015	[146] literal string: Unexpected net error
0x002AD40B	0x0000000D	[146] literal string: Bad rem adap
0x002AD418	0x00000011	[146] literal string: Print queue full
0x002AD429	0x0000000F	[146] literal string: No spool space
0x002AD438	0x00000010	[146] literal string: Print cancelled
0x002AD448	0x00000010	[146] literal string: Netname deleted
0x002AD458	0x00000016	[146] literal string: Network access denied
0x002AD46E	0x00000010	[146] literal string: Bad device type
0x002AD47E	0x0000000D	[146] literal string: Bad net name
0x002AD48B	0x0000000F	[146] literal string: Too many names
0x002AD49A	0x00000012	[146] literal string: Too many sessions
0x002AD4AC	0x0000000F	[146] literal string: Sharing paused
0x002AD4BB	0x0000000E	[146] literal string: Req not accep
0x002AD4C9	0x0000000D	[146] literal string: Redir paused
0x002AD4D6	0x0000000C	[146] literal string: File exists
0x002AD4E2	0x0000000C	[146] literal string: Cannot make
0x002AD4EE	0x00000009	[146] literal string: Fail i24
0x002AD4F7	0x00000012	[146] literal string: Out of structures
0x002AD509	0x00000011	[146] literal string: Already assigned
0x002AD51A	0x00000011	[146] literal string: Invalid password
0x002AD52B	0x00000010	[146] literal string: Net write fault
0x002AD53B	0x0000000E	[146] literal string: No proc slots
0x002AD549	0x00000014	[146] literal string: Too many semaphores
0x002AD55D	0x00000022	[146] literal string: Exclusive semaphore already owned
0x002AD57F	0x00000011	[146] literal string: Semaphore is set
0x002AD590	0x0000001C	[146] literal string: Too many semaphore requests
0x002AD5AC	0x0000001A	[146] literal string: Invalid at interrupt time
0x002AD5C6	0x00000015	[146] literal string: Semaphore owner died
0x002AD5DB	0x00000015	[146] literal string: Semaphore user limit
0x002AD5F0	0x0000000C	[146] literal string: Disk change
0x002AD5FC	0x0000000D	[146] literal string: Drive locked
0x002AD609	0x0000000C	[146] literal string: Broken pipe
0x002AD615	0x0000000C	[146] literal string: Open failed
0x002AD621	0x00000010	[146] literal string: Buffer overflow
0x002AD631	0x0000000A	[146] literal string: Disk full
0x002AD63B	0x00000017	[146] literal string: No more search handles
0x002AD652	0x00000016	[146] literal string: Invalid target handle
0x002AD668	0x00000011	[146] literal string: Invalid category
0x002AD679	0x00000016	[146] literal string: Invalid verify switch
0x002AD68F	0x00000011	[146] literal string: Bad driver level
0x002AD6A0	0x00000012	[146] literal string: Semaphore timeout
0x002AD6B2	0x00000014	[146] literal string: Insufficient buffer
0x002AD6C6	0x0000000E	[146] literal string: Invalid level
0x002AD6D4	0x00000010	[146] literal string: No volume label
0x002AD6E4	0x00000011	[146] literal string: Module not found
0x002AD6F5	0x00000011	[146] literal string: Wait no children
0x002AD706	0x00000013	[146] literal string: Child not complete
0x002AD719	0x00000015	[146] literal string: Direct access handle
0x002AD72E	0x0000000E	[146] literal string: Negative seek
0x002AD73C	0x0000000F	[146] literal string: Seek on device
0x002AD74B	0x0000000F	[146] literal string: Is join target
0x002AD75A	0x0000000A	[146] literal string: Is joined
0x002AD764	0x0000000B	[146] literal string: Is substed
0x002AD76F	0x0000000B	[146] literal string: Not joined
0x002AD77A	0x0000000C	[146] literal string: Not substed
0x002AD786	0x0000000D	[146] literal string: Join to join
0x002AD793	0x0000000F	[146] literal string: Subst to subst
0x002AD7A2	0x0000000E	[146] literal string: Join to subst
0x002AD7B0	0x0000000E	[146] literal string: Subst to join
0x002AD7BE	0x0000000B	[146] literal string: Busy drive
0x002AD7C9	0x0000000B	[146] literal string: Same drive
0x002AD7D4	0x00000013	[146] literal string: Directory not root
0x002AD7E7	0x00000014	[146] literal string: Directory not empty
0x002AD7FB	0x0000000E	[146] literal string: Is subst path
0x002AD809	0x0000000D	[146] literal string: Is join path
0x002AD816	0x0000000A	[146] literal string: Path busy
0x002AD820	0x00000010	[146] literal string: Is subst target
0x002AD830	0x0000000D	[146] literal string: System trace
0x002AD83D	0x00000014	[146] literal string: Invalid event count
0x002AD851	0x00000014	[146] literal string: Too many muxwaiters
0x002AD865	0x00000014	[146] literal string: Invalid list format
0x002AD879	0x0000000F	[146] literal string: Label too long
0x002AD888	0x0000000E	[146] literal string: Too many TCBs
0x002AD896	0x0000000F	[146] literal string: Signal refused
0x002AD8A5	0x0000000A	[146] literal string: Discarded
0x002AD8AF	0x00000013	[146] literal string: Bad thread ID addr
0x002AD8C2	0x0000000E	[146] literal string: Bad arguments
0x002AD8D0	0x0000000D	[146] literal string: Bad pathname
0x002AD8DD	0x0000000F	[146] literal string: Signal pending
0x002AD8EC	0x00000012	[146] literal string: Max thrds reached
0x002AD8FE	0x0000000C	[146] literal string: Lock failed
0x002AD90A	0x00000005	[146] literal string: Busy
0x002AD90F	0x00000011	[146] literal string: Cancel violation
0x002AD920	0x0000001B	[146] literal string: Atomic locks not supported
0x002AD93B	0x00000017	[146] literal string: Invalid segment number
0x002AD952	0x00000010	[146] literal string: Invalid ordinal
0x002AD962	0x00000014	[146] literal string: Invalid flag number
0x002AD976	0x0000000E	[146] literal string: Sem not found
0x002AD984	0x00000019	[146] literal string: Invalid starting codeseg
0x002AD99D	0x00000011	[146] literal string: Invalid stackseg
0x002AD9AE	0x00000013	[146] literal string: Invalid moduletype
0x002AD9C1	0x00000016	[146] literal string: Invalid exe signature
0x002AD9D7	0x00000013	[146] literal string: Exe marked invalid
0x002AD9EA	0x0000000F	[146] literal string: Bad exe format
0x002AD9F9	0x00000043	[146] literal string: Iterated data exceeds 64k (and that should be enough for anybody!)
0x002ADA3C	0x00000015	[146] literal string: Invalid minallocsize
0x002ADA51	0x0000001A	[146] literal string: Dynlink from invalid ring
0x002ADA6B	0x00000011	[146] literal string: IOPL not enabled
0x002ADA7C	0x0000000F	[146] literal string: Invalid segdpl
0x002ADA8B	0x00000018	[146] literal string: Autodataseg exceeds 64k
0x002ADAA3	0x00000019	[146] literal string: Ring2seg must be movable
0x002ADABC	0x0000001B	[146] literal string: Reloc chain exceeds seglim
0x002ADAD7	0x00000017	[146] literal string: Infloop in reloc chain
0x002ADAEE	0x00000012	[146] literal string: Env var not found
0x002ADB00	0x0000000F	[146] literal string: No signal sent
0x002ADB0F	0x00000017	[146] literal string: Filename exceeds range
0x002ADB26	0x00000013	[146] literal string: Ring2 stack in use
0x002ADB39	0x00000018	[146] literal string: Meta expansion too long
0x002ADB51	0x00000016	[146] literal string: Invalid signal number
0x002ADB67	0x00000012	[146] literal string: Thread 1 inactive
0x002ADB79	0x00000007	[146] literal string: Locked
0x002ADB80	0x00000011	[146] literal string: Too many modules
0x002ADB91	0x00000014	[146] literal string: Nesting not allowed
0x002ADBA5	0x0000001A	[146] literal string: Exe machine type mismatch
0x002ADBBF	0x00000009	[146] literal string: Bad pipe
0x002ADBC8	0x0000000A	[146] literal string: Pipe busy
0x002ADBD2	0x00000008	[146] literal string: No data
0x002ADBDA	0x00000013	[146] literal string: Pipe not connected
0x002ADBED	0x0000000A	[146] literal string: More data
0x002ADBF7	0x00000010	[146] literal string: VC disconnected
0x002ADC07	0x00000010	[146] literal string: Invalid EA name
0x002ADC17	0x00000015	[146] literal string: EA list inconsistent
0x002ADC2C	0x0000000D	[146] literal string: Wait timeout
0x002ADC39	0x0000000E	[146] literal string: No more items
0x002ADC47	0x0000000C	[146] literal string: Cannot copy
0x002ADC53	0x0000000E	[146] literal string: EAS didnt fit
0x002ADC61	0x00000010	[146] literal string: EA file corrupt
0x002ADC71	0x0000000E	[146] literal string: EA table full
0x002ADC7F	0x00000012	[146] literal string: Invalid EA handle
0x002ADC91	0x00000012	[146] literal string: EAs not supported
0x002ADCA3	0x0000000A	[146] literal string: Not owner
0x002ADCAD	0x0000000F	[146] literal string: Too many posts
0x002ADCBC	0x0000000D	[146] literal string: Partial copy
0x002ADCC9	0x00000013	[146] literal string: Oplock not granted
0x002ADCDC	0x00000018	[146] literal string: Invalid oplock protocol
0x002ADCF4	0x00000014	[146] literal string: Disk too fragmented
0x002ADD08	0x0000000F	[146] literal string: Delete pending
0x002ADD17	0x00000011	[146] literal string: Mr Mid not found
0x002ADD28	0x00000010	[146] literal string: Invalid address
0x002ADD38	0x00000014	[146] literal string: Arithmetic overflow
0x002ADD4C	0x0000000F	[146] literal string: Pipe connected
0x002ADD5B	0x0000000F	[146] literal string: Pipe listening
0x002ADD6A	0x00000011	[146] literal string: EA access denied
0x002ADD7B	0x0000000E	[146] literal string: IO incomplete
0x002ADD89	0x0000000B	[146] literal string: IO pending
0x002ADD94	0x0000000A	[146] literal string: No access
0x002ADD9E	0x0000000B	[146] literal string: Swap error
0x002ADDA9	0x0000000F	[146] literal string: Stack overflow
0x002ADDB8	0x00000010	[146] literal string: Invalid message
0x002ADDC8	0x00000011	[146] literal string: Can not complete
0x002ADDD9	0x0000000E	[146] literal string: Invalid flags
0x002ADDE7	0x00000014	[146] literal string: Unrecognised volume
0x002ADDFB	0x0000000D	[146] literal string: File invalid
0x002ADE08	0x00000011	[146] literal string: Full screen mode
0x002ADE19	0x00000009	[146] literal string: No token
0x002ADE22	0x00000007	[146] literal string: Bad DB
0x002ADE29	0x00000008	[146] literal string: Bad key
0x002ADE31	0x0000000B	[146] literal string: Can't open
0x002ADE3C	0x0000000B	[146] literal string: Can't read
0x002ADE47	0x0000000C	[146] literal string: Can't write
0x002ADE53	0x00000013	[146] literal string: Registry recovered
0x002ADE66	0x00000011	[146] literal string: Registry corrupt
0x002ADE77	0x00000013	[146] literal string: Registry IO failed
0x002ADE8A	0x00000012	[146] literal string: Not registry file
0x002ADE9C	0x0000000C	[146] literal string: Key deleted
0x002ADEA8	0x0000000D	[146] literal string: No log space
0x002ADEB5	0x00000011	[146] literal string: Key has children
0x002ADEC6	0x00000017	[146] literal string: Child must be volatile
0x002ADEDD	0x00000010	[146] literal string: Notify enum dir
0x002ADEED	0x0000001B	[146] literal string: Dependent services running
0x002ADF08	0x00000018	[146] literal string: Invalid service control
0x002ADF20	0x00000018	[146] literal string: Service request timeout
0x002ADF38	0x00000012	[146] literal string: Service no thread
0x002ADF4A	0x00000018	[146] literal string: Service database locked
0x002ADF62	0x00000018	[146] literal string: Service already running
0x002ADF7A	0x00000018	[146] literal string: Invalid service account
0x002ADF92	0x00000011	[146] literal string: Service disabled
0x002ADFA3	0x00000014	[146] literal string: Circular dependency
0x002ADFB7	0x00000017	[146] literal string: Service does not exist
0x002ADFCE	0x0000001B	[146] literal string: Service cannot accept ctrl
0x002ADFE9	0x00000013	[146] literal string: Service not active
0x002ADFFC	0x00000022	[146] literal string: Failed service controller connect
0x002AE01E	0x00000015	[146] literal string: Exception in service
0x002AE033	0x00000018	[146] literal string: Database does not exist
0x002AE04B	0x00000017	[146] literal string: Service specific error
0x002AE062	0x00000010	[146] literal string: Process aborted
0x002AE072	0x00000018	[146] literal string: Service dependency fail
0x002AE08A	0x00000015	[146] literal string: Service logon failed
0x002AE09F	0x00000013	[146] literal string: Service start hang
0x002AE0B2	0x00000015	[146] literal string: Invalid service lock
0x002AE0C7	0x0000001A	[146] literal string: Service marked for delete
0x002AE0E1	0x0000000F	[146] literal string: Service exists
0x002AE0F0	0x00000014	[146] literal string: Already running lkg
0x002AE104	0x0000001B	[146] literal string: Service dependency deleted
0x002AE11F	0x00000016	[146] literal string: Boot already accepted
0x002AE135	0x00000016	[146] literal string: Service never started
0x002AE14B	0x00000017	[146] literal string: Duplicate service name
0x002AE162	0x0000001A	[146] literal string: Different service account
0x002AE17C	0x0000001D	[146] literal string: Cannot detect driver failure
0x002AE199	0x0000001C	[146] literal string: Cannot detect process abort
0x002AE1B5	0x00000014	[146] literal string: No recovery program
0x002AE1C9	0x00000013	[146] literal string: Service not in exe
0x002AE1DC	0x00000015	[146] literal string: Not safeboot service
0x002AE1F1	0x0000000D	[146] literal string: End of media
0x002AE1FE	0x00000012	[146] literal string: Filemark detected
0x002AE210	0x00000013	[146] literal string: Beginning of media
0x002AE223	0x00000011	[146] literal string: Setmark detected
0x002AE234	0x00000011	[146] literal string: No data detected
0x002AE245	0x00000012	[146] literal string: Partition failure
0x002AE257	0x00000015	[146] literal string: Invalid block length
0x002AE26C	0x00000017	[146] literal string: Device not partitioned
0x002AE283	0x00000015	[146] literal string: Unable to lock media
0x002AE298	0x00000017	[146] literal string: Unable to unload media
0x002AE2AF	0x0000000E	[146] literal string: Media changed
0x002AE2BD	0x0000000A	[146] literal string: Bus reset
0x002AE2C7	0x00000012	[146] literal string: No media in drive
0x002AE2D9	0x00000017	[146] literal string: No unicode translation
0x002AE2F0	0x00000010	[146] literal string: DLL init failed
0x002AE300	0x00000015	[146] literal string: Shutdown in progress
0x002AE315	0x00000018	[146] literal string: No shutdown in progress
0x002AE32D	0x0000000A	[146] literal string: IO device
0x002AE337	0x00000011	[146] literal string: Serial IO device
0x002AE348	0x00000009	[146] literal string: IRQ busy
0x002AE351	0x0000000C	[146] literal string: More writes
0x002AE35D	0x00000010	[146] literal string: Counter timeout
0x002AE36D	0x00000019	[146] literal string: Floppy ID mark not found
0x002AE386	0x00000016	[146] literal string: Floppy wrong cylinder
0x002AE39C	0x00000015	[146] literal string: Floppy unknown error
0x002AE3B1	0x00000015	[146] literal string: Floppy bad registers
0x002AE3C6	0x00000018	[146] literal string: Disk recalibrate failed
0x002AE3DE	0x00000016	[146] literal string: Disk operation failed
0x002AE3F4	0x00000012	[146] literal string: Disk reset failed
0x002AE406	0x0000000D	[146] literal string: EOM overflow
0x002AE413	0x00000019	[146] literal string: Not enough server memory
0x002AE42C	0x00000012	[146] literal string: Possible deadlock
0x002AE43E	0x00000011	[146] literal string: Mapped alignment
0x002AE44F	0x00000017	[146] literal string: Set power state vetoed
0x002AE466	0x00000017	[146] literal string: Set power state failed
0x002AE47D	0x0000000F	[146] literal string: Too many links
0x002AE48C	0x00000010	[146] literal string: Old win version
0x002AE49C	0x0000000D	[146] literal string: App wrong OS
0x002AE4A9	0x00000014	[146] literal string: Single instance app
0x002AE4BD	0x0000000A	[146] literal string: Rmode app
0x002AE4C7	0x0000000C	[146] literal string: Invalid DLL
0x002AE4D3	0x0000000F	[146] literal string: No association
0x002AE4E2	0x00000009	[146] literal string: DDE fail
0x002AE4EB	0x0000000E	[146] literal string: DLL not found
0x002AE4F9	0x00000015	[146] literal string: No more user handles
0x002AE50E	0x00000012	[146] literal string: Message sync only
0x002AE520	0x00000015	[146] literal string: Source element empty
0x002AE535	0x00000019	[146] literal string: Destination element full
0x002AE54E	0x00000018	[146] literal string: Illegal element address
0x002AE566	0x00000015	[146] literal string: Magazine not present
0x002AE57B	0x0000001F	[146] literal string: Device reinitialization needed
0x002AE59A	0x00000019	[146] literal string: Device requires cleaning
0x002AE5B3	0x00000011	[146] literal string: Device door open
0x002AE5C4	0x00000015	[146] literal string: Device not connected
0x002AE5D9	0x0000000A	[146] literal string: Not found
0x002AE5E3	0x00000009	[146] literal string: No match
0x002AE5EC	0x0000000E	[146] literal string: Set not found
0x002AE5FA	0x00000010	[146] literal string: Point not found
0x002AE60A	0x00000014	[146] literal string: No tracking service
0x002AE61E	0x0000000D	[146] literal string: No volume ID
0x002AE62B	0x0000001A	[146] literal string: Unable to remove replaced
0x002AE645	0x0000001B	[146] literal string: Unable to move replacement
0x002AE660	0x0000001D	[146] literal string: Unable to move replacement 2
0x002AE67D	0x0000001B	[146] literal string: Journal delete in progress
0x002AE698	0x00000013	[146] literal string: Journal not active
0x002AE6AB	0x00000015	[146] literal string: Potential file found
0x002AE6C0	0x00000016	[146] literal string: Journal entry deleted
0x002AE6D6	0x0000000B	[146] literal string: Bad device
0x002AE6E1	0x00000013	[146] literal string: Connection unavail
0x002AE6F4	0x0000001A	[146] literal string: Device already remembered
0x002AE70E	0x00000013	[146] literal string: No net or bad path
0x002AE721	0x0000000D	[146] literal string: Bad provider
0x002AE72E	0x00000014	[146] literal string: Cannot open profile
0x002AE742	0x0000000C	[146] literal string: Bad profile
0x002AE74E	0x0000000E	[146] literal string: Not container
0x002AE75C	0x0000000F	[146] literal string: Extended error
0x002AE76B	0x00000013	[146] literal string: Invalid group name
0x002AE77E	0x00000016	[146] literal string: Invalid computer name
0x002AE794	0x00000013	[146] literal string: Invalid event name
0x002AE7A7	0x00000014	[146] literal string: Invalid domain name
0x002AE7BB	0x00000015	[146] literal string: Invalid service name
0x002AE7D0	0x00000011	[146] literal string: Invalid net name
0x002AE7E1	0x00000013	[146] literal string: Invalid share name
0x002AE7F4	0x00000016	[146] literal string: Invalid password name
0x002AE80A	0x00000015	[146] literal string: Invalid message name
0x002AE81F	0x00000015	[146] literal string: Invalid message dest
0x002AE834	0x0000001C	[146] literal string: Session credential conflict
0x002AE850	0x0000001E	[146] literal string: Remote session limit exceeded
0x002AE86E	0x00000010	[146] literal string: Dup domain name
0x002AE87E	0x0000000B	[146] literal string: No network
0x002AE889	0x0000000A	[146] literal string: Cancelled
0x002AE893	0x00000011	[146] literal string: User mapped file
0x002AE8A4	0x00000013	[146] literal string: Connection refused
0x002AE8B7	0x00000014	[146] literal string: Graceful disconnect
0x002AE8CB	0x0000001B	[146] literal string: Address already associated
0x002AE8E6	0x00000017	[146] literal string: Address not associated
0x002AE8FD	0x00000012	[146] literal string: Connected invalid
0x002AE90F	0x00000012	[146] literal string: Connection active
0x002AE921	0x00000014	[146] literal string: Network unreachable
0x002AE935	0x00000011	[146] literal string: Host unreachable
0x002AE946	0x00000015	[146] literal string: Protocol unreachable
0x002AE95B	0x00000011	[146] literal string: Port unreachable
0x002AE96C	0x00000010	[146] literal string: Request aborted
0x002AE97C	0x00000013	[146] literal string: Connection aborted
0x002AE98F	0x00000006	[146] literal string: Retry
0x002AE995	0x00000017	[146] literal string: Connection count limit
0x002AE9AC	0x00000017	[146] literal string: Login time restriction
0x002AE9C3	0x00000018	[146] literal string: Login wksta restriction
0x002AE9DB	0x00000012	[146] literal string: Incorrect address
0x002AE9ED	0x00000013	[146] literal string: Already registered
0x002AEA00	0x00000012	[146] literal string: Service not found
0x002AEA12	0x00000012	[146] literal string: Not authenticated
0x002AEA24	0x0000000E	[146] literal string: Not logged on
0x002AEA32	0x00000009	[146] literal string: Continue
0x002AEA3B	0x00000014	[146] literal string: Already initialised
0x002AEA4F	0x00000010	[146] literal string: No more devices
0x002AEA5F	0x0000000D	[146] literal string: No such site
0x002AEA6C	0x00000019	[146] literal string: Domain controller exists
0x002AEA85	0x00000012	[146] literal string: Only if connected
0x002AEA97	0x00000014	[146] literal string: Override no changes
0x002AEAAB	0x00000011	[146] literal string: Bad user profile
0x002AEABC	0x00000015	[146] literal string: Not supported on SBS
0x002AEAD1	0x0000001C	[146] literal string: Server shutdown in progress
0x002AEAED	0x0000000A	[146] literal string: Host down
0x002AEAF7	0x00000010	[146] literal string: Non account sid
0x002AEB07	0x0000000F	[146] literal string: Non domain sid
0x002AEB16	0x0000000E	[146] literal string: Apphelp block
0x002AEB24	0x0000001A	[146] literal string: Access disabled by policy
0x002AEB3E	0x00000014	[146] literal string: Reg nat consumption
0x002AEB52	0x00000012	[146] literal string: CSC share offline
0x002AEB64	0x00000010	[146] literal string: PK init failure
0x002AEB74	0x0000001C	[146] literal string: Smartcard subsystem failure
0x002AEB90	0x00000013	[146] literal string: Downgrade detected
0x002AEBA3	0x00000017	[146] literal string: Smartcard cert revoked
0x002AEBBA	0x00000015	[146] literal string: Issuing CA untrusted
0x002AEBCF	0x00000013	[146] literal string: Revocation offline
0x002AEBE2	0x00000017	[146] literal string: PK init client failure
0x002AEBF9	0x00000017	[146] literal string: Smartcard cert expired
0x002AEC10	0x0000000F	[146] literal string: Machine locked
0x002AEC1F	0x0000001F	[146] literal string: Callback supplied invalid data
0x002AEC3E	0x00000021	[146] literal string: Sync foreground refresh required
0x002AEC5F	0x0000000F	[146] literal string: Driver blocked
0x002AEC6E	0x0000001A	[146] literal string: Invalid import of non DLL
0x002AEC88	0x00000011	[146] literal string: Not all assigned
0x002AEC99	0x00000010	[146] literal string: Some not mapped
0x002AECA9	0x00000016	[146] literal string: No quotas for account
0x002AECBF	0x00000017	[146] literal string: Local user session key
0x002AECD6	0x00000011	[146] literal string: Null LM password
0x002AECE7	0x00000011	[146] literal string: Unknown revision
0x002AECF8	0x00000012	[146] literal string: Revision mismatch
0x002AED0A	0x0000000E	[146] literal string: Invalid owner
0x002AED18	0x00000016	[146] literal string: Invalid primary group
0x002AED2E	0x00000017	[146] literal string: No impersonation token
0x002AED45	0x00000018	[146] literal string: Can't disable mandatory
0x002AED5D	0x00000011	[146] literal string: No logon servers
0x002AED6E	0x00000016	[146] literal string: No such logon session
0x002AED84	0x00000012	[146] literal string: No such privilege
0x002AED96	0x00000013	[146] literal string: Privilege not held
0x002AEDA9	0x00000015	[146] literal string: Invalid account name
0x002AEDBE	0x0000000C	[146] literal string: User exists
0x002AEDCA	0x0000000D	[146] literal string: No such user
0x002AEDD7	0x0000000D	[146] literal string: Group exists
0x002AEDE4	0x0000000E	[146] literal string: No such group
0x002AEDF2	0x00000010	[146] literal string: Member in group
0x002AEE02	0x00000014	[146] literal string: Member not in group
0x002AEE16	0x0000000B	[146] literal string: Last admin
0x002AEE21	0x0000000F	[146] literal string: Wrong password
0x002AEE30	0x00000014	[146] literal string: Ill formed password
0x002AEE44	0x00000015	[146] literal string: Password restriction
0x002AEE59	0x0000000E	[146] literal string: Logon failure
0x002AEE67	0x00000014	[146] literal string: Account restriction
0x002AEE7B	0x00000014	[146] literal string: Invalid logon hours
0x002AEE8F	0x00000014	[146] literal string: Invalid workstation
0x002AEEA3	0x00000011	[146] literal string: Password expired
0x002AEEB4	0x00000011	[146] literal string: Account disabled
0x002AEEC5	0x0000000C	[146] literal string: None mapped
0x002AEED1	0x00000019	[146] literal string: Too many LUIDs requested
0x002AEEEA	0x00000010	[146] literal string: LUIDs exhausted
0x002AEEFA	0x00000016	[146] literal string: Invalid sub authority
0x002AEF10	0x0000000C	[146] literal string: Invalid ACL
0x002AEF1C	0x0000000C	[146] literal string: Invalid SID
0x002AEF28	0x00000017	[146] literal string: Invalid security descr
0x002AEF3F	0x00000014	[146] literal string: Bad inheritance ACL
0x002AEF53	0x00000010	[146] literal string: Server disabled
0x002AEF63	0x00000014	[146] literal string: Server not disabled
0x002AEF77	0x00000015	[146] literal string: Invalid ID authority
0x002AEF8C	0x00000018	[146] literal string: Allotted space exceeded
0x002AEFA4	0x00000019	[146] literal string: Invalid group attributes
0x002AEFBD	0x00000018	[146] literal string: Bad impersonation level
0x002AEFD5	0x00000015	[146] literal string: Can't open anonymous
0x002AEFEA	0x00000015	[146] literal string: Bad validation class
0x002AEFFF	0x0000000F	[146] literal string: Bad token type
0x002AF00E	0x00000016	[146] literal string: No security on object
0x002AF024	0x00000019	[146] literal string: Can't access domain info
0x002AF03D	0x00000015	[146] literal string: Invalid server state
0x002AF052	0x00000015	[146] literal string: Invalid domain state
0x002AF067	0x00000014	[146] literal string: Invalid domain role
0x002AF07B	0x0000000F	[146] literal string: No such domain
0x002AF08A	0x0000000E	[146] literal string: Domain exists
0x002AF098	0x00000016	[146] literal string: Domain limit exceeded
0x002AF0AE	0x00000017	[146] literal string: Internal DB corruption
0x002AF0C5	0x00000013	[146] literal string: Generic not mapped
0x002AF0D8	0x00000016	[146] literal string: Bad descriptor format
0x002AF0EE	0x00000012	[146] literal string: Not logon process
0x002AF100	0x00000015	[146] literal string: Logon session exists
0x002AF115	0x00000010	[146] literal string: No such package
0x002AF125	0x00000018	[146] literal string: Bad logon session state
0x002AF13D	0x00000018	[146] literal string: Logon session collision
0x002AF155	0x00000013	[146] literal string: Invalid logon type
0x002AF168	0x00000013	[146] literal string: Cannot impersonate
0x002AF17B	0x00000014	[146] literal string: Rxact invalid state
0x002AF18F	0x00000015	[146] literal string: Rxact commit failure
0x002AF1A4	0x00000010	[146] literal string: Special account
0x002AF1B4	0x0000000E	[146] literal string: Special group
0x002AF1C2	0x0000000D	[146] literal string: Special user
0x002AF1CF	0x00000016	[146] literal string: Members primary group
0x002AF1E5	0x00000015	[146] literal string: Token already in use
0x002AF1FA	0x0000000E	[146] literal string: No such alias
0x002AF208	0x00000014	[146] literal string: Member not in alias
0x002AF21C	0x00000010	[146] literal string: Member in alias
0x002AF22C	0x0000000D	[146] literal string: Alias exists
0x002AF239	0x00000012	[146] literal string: Logon not granted
0x002AF24B	0x00000011	[146] literal string: Too many secrets
0x002AF25C	0x00000010	[146] literal string: Secret too long
0x002AF26C	0x00000012	[146] literal string: Internal DB error
0x002AF27E	0x00000015	[146] literal string: Too many context IDs
0x002AF293	0x00000017	[146] literal string: Logon type not granted
0x002AF2AA	0x0000001D	[146] literal string: NT cross encryption required
0x002AF2C7	0x0000000F	[146] literal string: No such member
0x002AF2D6	0x0000000F	[146] literal string: Invalid member
0x002AF2E5	0x0000000E	[146] literal string: Too many SIDs
0x002AF2F3	0x0000001D	[146] literal string: LM cross encryption required
0x002AF310	0x0000000F	[146] literal string: No inheritance
0x002AF31F	0x0000000D	[146] literal string: File corrupt
0x002AF32C	0x0000000D	[146] literal string: Disk corrupt
0x002AF339	0x00000014	[146] literal string: No user session key
0x002AF34D	0x00000017	[146] literal string: Licence quota exceeded
0x002AF364	0x00000012	[146] literal string: Wrong target name
0x002AF376	0x00000013	[146] literal string: Mutual auth failed
0x002AF389	0x0000000A	[146] literal string: Time skew
0x002AF393	0x0000001B	[146] literal string: Current domain not allowed
0x002AF3AE	0x00000016	[146] literal string: Invalid window handle
0x002AF3C4	0x00000014	[146] literal string: Invalid menu handle
0x002AF3D8	0x00000016	[146] literal string: Invalid cursor handle
0x002AF3EE	0x00000015	[146] literal string: Invalid accel handle
0x002AF403	0x00000014	[146] literal string: Invalid hook handle
0x002AF417	0x00000013	[146] literal string: Invalid DWP handle
0x002AF42A	0x00000011	[146] literal string: TLW with wschild
0x002AF43B	0x00000016	[146] literal string: Cannot find WND class
0x002AF451	0x00000017	[146] literal string: Window of other thread
0x002AF468	0x0000001A	[146] literal string: Hotkey already registered
0x002AF482	0x00000015	[146] literal string: Class already exists
0x002AF497	0x00000015	[146] literal string: Class does not exist
0x002AF4AC	0x00000012	[146] literal string: Class has windows
0x002AF4BE	0x00000014	[146] literal string: Invalid icon handle
0x002AF4D2	0x00000015	[146] literal string: Private dialog index
0x002AF4E7	0x00000015	[146] literal string: Listbox ID not found
0x002AF4FC	0x00000017	[146] literal string: No wildcard characters
0x002AF513	0x00000013	[146] literal string: Clipboard not open
0x002AF526	0x00000016	[146] literal string: Hotkey not registered
0x002AF53C	0x00000012	[146] literal string: Window not dialog
0x002AF54E	0x00000015	[146] literal string: Control ID not found
0x002AF563	0x00000019	[146] literal string: Invalid combobox message
0x002AF57C	0x00000014	[146] literal string: Window not combobox
0x002AF590	0x00000014	[146] literal string: Invalid edit height
0x002AF5A4	0x0000000D	[146] literal string: DC not found
0x002AF5B1	0x00000014	[146] literal string: Invalid hook filter
0x002AF5C5	0x00000014	[146] literal string: Invalid filter proc
0x002AF5D9	0x00000010	[146] literal string: Hook needs HMOD
0x002AF5E9	0x00000011	[146] literal string: Global only hook
0x002AF5FA	0x00000011	[146] literal string: Journal hook set
0x002AF60B	0x00000013	[146] literal string: Hook not installed
0x002AF61E	0x00000013	[146] literal string: Invalid LB message
0x002AF631	0x00000013	[146] literal string: Setcount on bad LB
0x002AF644	0x00000014	[146] literal string: LB without tabstops
0x002AF658	0x0000001F	[146] literal string: Destroy object of other thread
0x002AF677	0x00000012	[146] literal string: Child window menu
0x002AF689	0x0000000F	[146] literal string: No system menu
0x002AF698	0x00000015	[146] literal string: Invalid msgbox style
0x002AF6AD	0x00000012	[146] literal string: Invalid SPI value
0x002AF6BF	0x00000016	[146] literal string: Screen already locked
0x002AF6D5	0x0000001C	[146] literal string: HWNDs have different parent
0x002AF6F1	0x00000011	[146] literal string: Not child window
0x002AF702	0x00000013	[146] literal string: Invalid GW command
0x002AF715	0x00000012	[146] literal string: Invalid thread ID
0x002AF727	0x00000015	[146] literal string: Non MDI child window
0x002AF73C	0x00000015	[146] literal string: Popup already active
0x002AF751	0x0000000E	[146] literal string: No scrollbars
0x002AF75F	0x00000018	[146] literal string: Invalid scrollbar range
0x002AF777	0x00000018	[146] literal string: Invalid showwin command
0x002AF78F	0x00000014	[146] literal string: No system resources
0x002AF7A3	0x0000001A	[146] literal string: Nonpaged system resources
0x002AF7BD	0x00000017	[146] literal string: Paged system resources
0x002AF7D4	0x00000012	[146] literal string: Working set quota
0x002AF7E6	0x0000000F	[146] literal string: Pagefile quota
0x002AF7F5	0x00000011	[146] literal string: Commitment limit
0x002AF806	0x00000014	[146] literal string: Menu item not found
0x002AF81A	0x00000018	[146] literal string: Invalid keyboard handle
0x002AF832	0x00000016	[146] literal string: Hook type not allowed
0x002AF848	0x00000023	[146] literal string: Requires interactive windowstation
0x002AF86B	0x00000008	[146] literal string: Timeout
0x002AF873	0x00000017	[146] literal string: Invalid monitor handle
0x002AF88A	0x00000016	[146] literal string: Eventlog file corrupt
0x002AF8A0	0x00000015	[146] literal string: Eventlog can't start
0x002AF8B5	0x0000000E	[146] literal string: Log file full
0x002AF8C3	0x00000016	[146] literal string: Eventlog file changed
0x002AF8D9	0x00000018	[146] literal string: Install service failure
0x002AF8F1	0x00000011	[146] literal string: Install userexit
0x002AF902	0x00000010	[146] literal string: Install failure
0x002AF912	0x00000010	[146] literal string: Install suspend
0x002AF922	0x00000010	[146] literal string: Unknown product
0x002AF932	0x00000010	[146] literal string: Unknown feature
0x002AF942	0x00000012	[146] literal string: Unknown component
0x002AF954	0x00000011	[146] literal string: Unknown property
0x002AF965	0x00000015	[146] literal string: Invalid handle state
0x002AF97A	0x00000012	[146] literal string: Bad configuration
0x002AF98C	0x0000000D	[146] literal string: Index absent
0x002AF999	0x00000016	[146] literal string: Install source absent
0x002AF9AF	0x00000018	[146] literal string: Install package version
0x002AF9C7	0x00000014	[146] literal string: Product uninstalled
0x002AF9DB	0x00000011	[146] literal string: Bad query syntax
0x002AF9EC	0x0000000E	[146] literal string: Invalid field
0x002AF9FA	0x0000000F	[146] literal string: Device removed
0x002AFA09	0x00000018	[146] literal string: Install already running
0x002AFA21	0x0000001C	[146] literal string: Install package open failed
0x002AFA3D	0x00000018	[146] literal string: Install package invalid
0x002AFA55	0x00000013	[146] literal string: Install UI failure
0x002AFA68	0x00000014	[146] literal string: Install log failure
0x002AFA7C	0x0000001D	[146] literal string: Install language unsupported
0x002AFA99	0x0000001A	[146] literal string: Install transform failure
0x002AFAB3	0x00000019	[146] literal string: Install package rejected
0x002AFACC	0x00000014	[146] literal string: Function not called
0x002AFAE0	0x00000010	[146] literal string: Function failed
0x002AFAF0	0x0000000E	[146] literal string: Invalid table
0x002AFAFE	0x00000012	[146] literal string: Datatype mismatch
0x002AFB10	0x00000011	[146] literal string: Unsupported type
0x002AFB21	0x0000000E	[146] literal string: Create failed
0x002AFB2F	0x00000018	[146] literal string: Install temp unwritable
0x002AFB47	0x0000001D	[146] literal string: Install platform unsupported
0x002AFB64	0x00000010	[146] literal string: Install notused
0x002AFB74	0x0000001A	[146] literal string: Patch package open failed
0x002AFB8E	0x00000016	[146] literal string: Patch package invalid
0x002AFBA4	0x0000001A	[146] literal string: Patch package unsupported
0x002AFBBE	0x00000010	[146] literal string: Product version
0x002AFBCE	0x00000015	[146] literal string: Invalid command line
0x002AFBE3	0x0000001A	[146] literal string: Install remote disallowed
0x002AFBFD	0x00000019	[146] literal string: Success reboot initiated
0x002AFC16	0x00000017	[146] literal string: Patch target not found
0x002AFC2D	0x00000017	[146] literal string: Patch package rejected
0x002AFC44	0x0000001B	[146] literal string: Install transform rejected
0x002AFC5F	0x0000001D	[146] literal string: RPC S Invalid string binding
0x002AFC7C	0x0000001C	[146] literal string: RPC S Wrong kind of binding
0x002AFC98	0x00000016	[146] literal string: RPC S Invalid binding
0x002AFCAE	0x0000001C	[146] literal string: RPC S Protseq not supported
0x002AFCCA	0x0000001A	[146] literal string: RPC S Invalid RPC protseq
0x002AFCE4	0x0000001A	[146] literal string: RPC S Invalid string UUID
0x002AFCFE	0x0000001E	[146] literal string: RPC S Invalid endpoint format
0x002AFD1C	0x00000017	[146] literal string: RPC S Invalid net addr
0x002AFD33	0x00000018	[146] literal string: RPC S No endpoint found
0x002AFD4B	0x00000016	[146] literal string: RPC S Invalid timeout
0x002AFD61	0x00000017	[146] literal string: RPC S Object not found
0x002AFD78	0x00000019	[146] literal string: RPC S Already registered
0x002AFD91	0x0000001E	[146] literal string: RPC S Type already registered
0x002AFDAF	0x00000018	[146] literal string: RPC S Already listening
0x002AFDC7	0x0000001E	[146] literal string: RPC S Not protseqs registered
0x002AFDE5	0x00000014	[146] literal string: RPC S Not listening
0x002AFDF9	0x00000017	[146] literal string: RPC S Unknown mgr type
0x002AFE10	0x00000011	[146] literal string: RPC S Unknown IF
0x002AFE21	0x00000012	[146] literal string: RPC S No bindings
0x002AFE33	0x00000013	[146] literal string: RPC S Not protseqs
0x002AFE46	0x0000001C	[146] literal string: RPC S Can't create endpoint
0x002AFE62	0x00000017	[146] literal string: RPC S Out of resources
0x002AFE79	0x00000019	[146] literal string: RPC S Server unavailable
0x002AFE92	0x00000016	[146] literal string: RPC S Server too busy
0x002AFEA8	0x0000001E	[146] literal string: RPC S Invalid network options
0x002AFEC6	0x00000015	[146] literal string: RPC S No call active
0x002AFEDB	0x00000012	[146] literal string: RPC S Call failed
0x002AFEED	0x00000016	[146] literal string: RPC S Call failed DNE
0x002AFF03	0x00000015	[146] literal string: RPC S Protocol error
0x002AFF18	0x0000001C	[146] literal string: RPC S Unsupported trans syn
0x002AFF34	0x00000017	[146] literal string: RPC S Unsupported type
0x002AFF4B	0x00000012	[146] literal string: RPC S Invalid tag
0x002AFF5D	0x00000014	[146] literal string: RPC S Invalid bound
0x002AFF71	0x00000014	[146] literal string: RPC S No entry name
0x002AFF85	0x0000001A	[146] literal string: RPC S Invalid name syntax
0x002AFF9F	0x0000001E	[146] literal string: RPC S Unsupported name syntax
0x002AFFBD	0x00000016	[146] literal string: RPC S UUID no address
0x002AFFD3	0x00000019	[146] literal string: RPC S Duplicate endpoint
0x002AFFEC	0x00000019	[146] literal string: RPC S Unknown authn type
0x002B0005	0x0000001A	[146] literal string: RPC S Max calls too small
0x002B001F	0x00000016	[146] literal string: RPC S String too long
0x002B0035	0x00000018	[146] literal string: RPC S Protseq not found
0x002B004D	0x0000001B	[146] literal string: RPC S Procnum out of range
0x002B0068	0x0000001A	[146] literal string: RPC S Binding has no auth
0x002B0082	0x0000001C	[146] literal string: RPC S Unknown authn service
0x002B009E	0x0000001A	[146] literal string: RPC S Unknown authn level
0x002B00B8	0x0000001C	[146] literal string: RPC S Invalid auth identity
0x002B00D4	0x0000001C	[146] literal string: RPC S Unknown authz service
0x002B00F0	0x00000014	[146] literal string: EPT S Invalid entry
0x002B0104	0x00000017	[146] literal string: EPT S Can't perform op
0x002B011B	0x00000015	[146] literal string: EPT S Not registered
0x002B0130	0x00000018	[146] literal string: RPC S Nothing to export
0x002B0148	0x00000016	[146] literal string: RPC S Incomplete name
0x002B015E	0x0000001A	[146] literal string: RPC S Invalid vers option
0x002B0178	0x00000016	[146] literal string: RPC S No more members
0x002B018E	0x0000001E	[146] literal string: RPC S Not all objs unexported
0x002B01AC	0x0000001A	[146] literal string: RPC S Interface not found
0x002B01C6	0x0000001B	[146] literal string: RPC S Entry already exists
0x002B01E1	0x00000016	[146] literal string: RPC S Entry not found
0x002B01F7	0x0000001F	[146] literal string: RPC S Name service unavailable
0x002B0216	0x00000015	[146] literal string: RPC S Invalid naf ID
0x002B022B	0x00000015	[146] literal string: RPC S Cannot support
0x002B0240	0x0000001B	[146] literal string: RPC S No context available
0x002B025B	0x00000015	[146] literal string: RPC S Internal error
0x002B0270	0x00000012	[146] literal string: RPC S Zero divide
0x002B0282	0x00000014	[146] literal string: RPC S Address error
0x002B0296	0x00000012	[146] literal string: RPC S FP div zero
0x002B02A8	0x00000013	[146] literal string: RPC S FP Underflow
0x002B02BB	0x0000000F	[146] literal string: RPC S Overflow
0x002B02CA	0x00000016	[146] literal string: RPC X No more entries
0x002B02E0	0x0000001E	[146] literal string: RPC X SS char trans open fail
0x002B02FE	0x0000001F	[146] literal string: RPC X SS char trans short file
0x002B031D	0x00000019	[146] literal string: RPC S SS in null context
0x002B0336	0x00000019	[146] literal string: RPC X SS context damaged
0x002B034F	0x0000001A	[146] literal string: RPC X SS handles mismatch
0x002B0369	0x00000020	[146] literal string: RPC X SS cannot get call handle
0x002B0389	0x00000017	[146] literal string: RPC X Null ref pointer
0x002B03A0	0x0000001E	[146] literal string: RPC X enum value out of range
0x002B03BE	0x0000001B	[146] literal string: RPC X byte count too small
0x002B03D9	0x00000014	[146] literal string: RPC X bad stub data
0x002B03ED	0x00000014	[146] literal string: Invalid user buffer
0x002B0401	0x00000013	[146] literal string: Unrecognised media
0x002B0414	0x00000014	[146] literal string: No trust lsa secret
0x002B0428	0x00000015	[146] literal string: No trust sam account
0x002B043D	0x00000017	[146] literal string: Trusted domain failure
0x002B0454	0x0000001D	[146] literal string: Trusted relationship failure
0x002B0471	0x0000000E	[146] literal string: Trust failure
0x002B047F	0x00000017	[146] literal string: RPC S call in progress
0x002B0496	0x0000001B	[146] literal string: Error netlogon not started
0x002B04B1	0x00000010	[146] literal string: Account expired
0x002B04C1	0x0000001C	[146] literal string: Redirector has open handles
0x002B04DD	0x00000021	[146] literal string: Printer driver already installed
0x002B04FE	0x0000000D	[146] literal string: Unknown port
0x002B050B	0x00000017	[146] literal string: Unknown printer driver
0x002B0522	0x00000017	[146] literal string: Unknown printprocessor
0x002B0539	0x00000017	[146] literal string: Invalid separator file
0x002B0550	0x00000011	[146] literal string: Invalid priority
0x002B0561	0x00000015	[146] literal string: Invalid printer name
0x002B0576	0x00000017	[146] literal string: Printer already exists
0x002B058D	0x00000018	[146] literal string: Invalid printer command
0x002B05A5	0x00000011	[146] literal string: Invalid datatype
0x002B05B6	0x00000014	[146] literal string: Invalid environment
0x002B05CA	0x00000017	[146] literal string: RPC S no more bindings
0x002B05E1	0x00000022	[146] literal string: Nologon interdomain trust account
0x002B0603	0x00000022	[146] literal string: Nologon workstation trust account
0x002B0625	0x0000001D	[146] literal string: Nologon server trust account
0x002B0642	0x0000001A	[146] literal string: Domain trust inconsistent
0x002B065C	0x00000018	[146] literal string: Server has open handles
0x002B0674	0x00000018	[146] literal string: Resource data not found
0x002B068C	0x00000018	[146] literal string: Resource type not found
0x002B06A4	0x00000018	[146] literal string: Resource name not found
0x002B06BC	0x00000018	[146] literal string: Resource lang not found
0x002B06D4	0x00000011	[146] literal string: Not enough quota
0x002B06E5	0x00000014	[146] literal string: RPC S no interfaces
0x002B06F9	0x00000015	[146] literal string: RPC S Call cancelled
0x002B070E	0x00000019	[146] literal string: RPC S Binding incomplete
0x002B0727	0x00000013	[146] literal string: RPC S Comm failure
0x002B073A	0x0000001E	[146] literal string: RPC S Unsupported authn level
0x002B0758	0x00000014	[146] literal string: RPC S No princ name
0x002B076C	0x00000014	[146] literal string: RPC S Not RPC error
0x002B0780	0x00000016	[146] literal string: RPC U UUID local only
0x002B0796	0x00000014	[146] literal string: RPC S Sec pkg error
0x002B07AA	0x00000014	[146] literal string: RPC S Not cancelled
0x002B07BE	0x00000018	[146] literal string: RPC X Invalid ES action
0x002B07D6	0x00000017	[146] literal string: RPC X Wrong ES version
0x002B07ED	0x00000019	[146] literal string: RPC X Wrong stub version
0x002B0806	0x0000001A	[146] literal string: RPC X Invalid pipe object
0x002B0820	0x00000017	[146] literal string: RPC X Wrong pipe order
0x002B0837	0x00000019	[146] literal string: RPC X Wrong pipe version
0x002B0850	0x0000001D	[146] literal string: RPC S group member not found
0x002B086D	0x00000013	[146] literal string: EPT S Can't create
0x002B0880	0x00000015	[146] literal string: RPC S Invalid object
0x002B0895	0x0000000D	[146] literal string: Invalid time
0x002B08A2	0x00000012	[146] literal string: Invalid form name
0x002B08B4	0x00000012	[146] literal string: Invalid form size
0x002B08C6	0x00000010	[146] literal string: Already waiting
0x002B08D6	0x00000010	[146] literal string: Printer deleted
0x002B08E6	0x00000016	[146] literal string: Invalid printer state
0x002B08FC	0x00000015	[146] literal string: Password must change
0x002B0911	0x0000001C	[146] literal string: Domain controller not found
0x002B092D	0x00000013	[146] literal string: Account locked out
0x002B0940	0x00000010	[146] literal string: OR Invalid OXID
0x002B0950	0x0000000F	[146] literal string: OR Invalid OID
0x002B095F	0x0000000F	[146] literal string: OR Invalid set
0x002B096E	0x00000016	[146] literal string: RPC S Send incomplete
0x002B0984	0x0000001B	[146] literal string: RPC S Invalid async handle
0x002B099F	0x00000019	[146] literal string: RPC S Invalid async call
0x002B09B8	0x00000012	[146] literal string: RPC X Pipe closed
0x002B09CA	0x0000001C	[146] literal string: RPC X Pipe discipline error
0x002B09E6	0x00000011	[146] literal string: RPC X Pipe empty
0x002B09F7	0x0000000C	[146] literal string: No sitename
0x002B0A03	0x00000012	[146] literal string: Can't access file
0x002B0A15	0x00000017	[146] literal string: Can't resolve filename
0x002B0A2C	0x0000001A	[146] literal string: RPC S Entry type mismatch
0x002B0A46	0x0000001C	[146] literal string: RPC S Not all objs exported
0x002B0A62	0x0000001D	[146] literal string: RPC S Interface not exported
0x002B0A7F	0x00000018	[146] literal string: RPC S Profile not added
0x002B0A97	0x00000018	[146] literal string: RPC S PRF ELT not added
0x002B0AAF	0x0000001A	[146] literal string: RPC S PRF ELT not removed
0x002B0AC9	0x00000018	[146] literal string: RPC S GRP ELT not added
0x002B0AE1	0x0000001A	[146] literal string: RPC S GRP ELT not removed
0x002B0AFB	0x00000012	[146] literal string: KM driver blocked
0x002B0B0D	0x00000010	[146] literal string: Context expired
0x002B0B1D	0x00000015	[146] literal string: Invalid pixel format
0x002B0B32	0x0000000B	[146] literal string: Bad driver
0x002B0B3D	0x00000015	[146] literal string: Invalid window style
0x002B0B52	0x00000017	[146] literal string: Metafile not supported
0x002B0B69	0x00000018	[146] literal string: Transform not supported
0x002B0B81	0x00000017	[146] literal string: Clipping not supported
0x002B0B98	0x0000000C	[146] literal string: Invalid CMM
0x002B0BA4	0x00000010	[146] literal string: Invalid profile
0x002B0BB4	0x0000000E	[146] literal string: Tag not found
0x002B0BC2	0x00000010	[146] literal string: Tag not present
0x002B0BD2	0x0000000E	[146] literal string: Duplicate tag
0x002B0BE0	0x00000023	[146] literal string: Profile not associated with device
0x002B0C03	0x00000012	[146] literal string: Profile not found
0x002B0C15	0x00000013	[146] literal string: Invalid colorspace
0x002B0C28	0x00000010	[146] literal string: ICM not enabled
0x002B0C38	0x00000013	[146] literal string: Deleting ICM xform
0x002B0C4B	0x00000012	[146] literal string: Invalid transform
0x002B0C5D	0x00000014	[146] literal string: Colorspace mismatch
0x002B0C71	0x00000013	[146] literal string: Invalid colorindex
0x002B0C84	0x00000019	[146] literal string: Connected other password
0x002B0C9D	0x00000021	[146] literal string: Connected other password default
0x002B0CBE	0x0000000D	[146] literal string: Bad username
0x002B0CCB	0x0000000E	[146] literal string: Not connected
0x002B0CD9	0x0000000B	[146] literal string: Open files
0x002B0CE4	0x00000013	[146] literal string: Active connections
0x002B0CF7	0x0000000E	[146] literal string: Device in use
0x002B0D05	0x00000016	[146] literal string: Unknown print monitor
0x002B0D1B	0x00000016	[146] literal string: Printer driver in use
0x002B0D31	0x00000015	[146] literal string: Spool file not found
0x002B0D46	0x00000010	[146] literal string: SPL no startdoc
0x002B0D56	0x0000000E	[146] literal string: SPL no addjob
0x002B0D64	0x00000022	[146] literal string: Print processor already installed
0x002B0D86	0x00000020	[146] literal string: Print monitor already installed
0x002B0DA6	0x00000016	[146] literal string: Invalid print monitor
0x002B0DBC	0x00000015	[146] literal string: Print monitor in use
0x002B0DD1	0x00000018	[146] literal string: Printer has jobs queued
0x002B0DE9	0x00000018	[146] literal string: Success reboot required
0x002B0E01	0x00000019	[146] literal string: Success restart required
0x002B0E1A	0x00000012	[146] literal string: Printer not found
0x002B0E2C	0x00000016	[146] literal string: Printer driver warned
0x002B0E42	0x00000017	[146] literal string: Printer driver blocked
0x002B0E59	0x0000000E	[146] literal string: Wins internal
0x002B0E67	0x00000017	[146] literal string: Can not del local wins
0x002B0E7E	0x0000000C	[146] literal string: Static init
0x002B0E8A	0x0000000B	[146] literal string: Inc backup
0x002B0E95	0x0000000C	[146] literal string: Full backup
0x002B0EA1	0x00000011	[146] literal string: Rec not existent
0x002B0EB2	0x00000010	[146] literal string: RPL not allowed
0x002B0EC2	0x00000016	[146] literal string: DHCP address conflict
0x002B0ED8	0x00000013	[146] literal string: WMU GUID not found
0x002B0EEB	0x00000017	[146] literal string: WMI instance not found
0x002B0F02	0x00000015	[146] literal string: WMI ItemID not found
0x002B0F17	0x0000000E	[146] literal string: WMI try again
0x002B0F25	0x00000011	[146] literal string: WMI DP not found
0x002B0F36	0x0000001C	[146] literal string: WMI unresolved instance ref
0x002B0F52	0x00000014	[146] literal string: WMU already enabled
0x002B0F66	0x00000016	[146] literal string: WMU GUID disconnected
0x002B0F7C	0x00000017	[146] literal string: WMI server unavailable
0x002B0F93	0x0000000E	[146] literal string: WMI DP failed
0x002B0FA1	0x00000010	[146] literal string: WMI invalid MOF
0x002B0FB1	0x00000014	[146] literal string: WMI invalid reginfo
0x002B0FC5	0x00000015	[146] literal string: WMI already disabled
0x002B0FDA	0x0000000E	[146] literal string: WMI read only
0x002B0FE8	0x00000010	[146] literal string: WMI set failure
0x002B0FF8	0x0000000E	[146] literal string: Invalid media
0x002B1006	0x00000010	[146] literal string: Invalid library
0x002B1016	0x00000013	[146] literal string: Invalid media pool
0x002B1029	0x00000015	[146] literal string: Drive media mismatch
0x002B103E	0x0000000E	[146] literal string: Media offline
0x002B104C	0x00000010	[146] literal string: Library offline
0x002B105C	0x00000006	[146] literal string: Empty
0x002B1062	0x0000000A	[146] literal string: Not empty
0x002B106C	0x00000012	[146] literal string: Media unavailable
0x002B107E	0x00000012	[146] literal string: Resource disabled
0x002B1090	0x00000010	[146] literal string: Invalid cleaner
0x002B10A0	0x00000010	[146] literal string: Unable to clean
0x002B10B0	0x00000011	[146] literal string: Object not found
0x002B10C1	0x00000011	[146] literal string: Database failure
0x002B10D2	0x0000000E	[146] literal string: Database full
0x002B10E0	0x00000013	[146] literal string: Media incompatible
0x002B10F3	0x00000015	[146] literal string: Resource not present
0x002B1108	0x00000012	[146] literal string: Invalid operation
0x002B111A	0x00000014	[146] literal string: Media not available
0x002B112E	0x00000015	[146] literal string: Device not available
0x002B1143	0x00000010	[146] literal string: Request refused
0x002B1153	0x00000015	[146] literal string: Invalid drive object
0x002B1168	0x0000000D	[146] literal string: Library full
0x002B1175	0x00000016	[146] literal string: Medium not accessible
0x002B118B	0x00000016	[146] literal string: Unable to load medium
0x002B11A1	0x0000001A	[146] literal string: Unable to inventory drive
0x002B11BB	0x00000019	[146] literal string: Unable to inventory slot
0x002B11D4	0x0000001E	[146] literal string: Unable to inventory transport
0x002B11F2	0x0000000F	[146] literal string: Transport full
0x002B1201	0x00000013	[146] literal string: Controlling ieport
0x002B1214	0x0000001E	[146] literal string: Unable to eject mounted media
0x002B1232	0x00000011	[146] literal string: Cleaner slot set
0x002B1243	0x00000015	[146] literal string: Cleaner slot not set
0x002B1258	0x00000018	[146] literal string: Cleaner cartridge spent
0x002B1270	0x00000010	[146] literal string: Unexpected omid
0x002B1280	0x00000017	[146] literal string: Can't delete last item
0x002B1297	0x00000019	[146] literal string: Message exceeds max size
0x002B12B0	0x0000001A	[146] literal string: Volume contains sys files
0x002B12CA	0x00000010	[146] literal string: Indigenous type
0x002B12DA	0x00000015	[146] literal string: No supporting drives
0x002B12EF	0x0000001C	[146] literal string: Cleaner cartridge installed
0x002B130B	0x0000000D	[146] literal string: Fill offline
0x002B1318	0x0000001A	[146] literal string: Remote storage not active
0x002B1332	0x0000001B	[146] literal string: Remote storage media error
0x002B134D	0x00000014	[146] literal string: Not a reparse point
0x002B1361	0x0000001B	[146] literal string: Reparse attribute conflict
0x002B137C	0x00000015	[146] literal string: Invalid reparse data
0x002B1391	0x00000014	[146] literal string: Reparse tag invalid
0x002B13A5	0x00000015	[146] literal string: Reparse tag mismatch
0x002B13BA	0x00000017	[146] literal string: Volume not sis enabled
0x002B13D1	0x0000001A	[146] literal string: Dependent resource exists
0x002B13EB	0x00000015	[146] literal string: Dependency not found
0x002B1400	0x0000001A	[146] literal string: Dependency already exists
0x002B141A	0x00000014	[146] literal string: Resource not online
0x002B142E	0x00000018	[146] literal string: Host node not available
0x002B1446	0x00000017	[146] literal string: Resource not available
0x002B145D	0x00000013	[146] literal string: Resource not found
0x002B1470	0x00000011	[146] literal string: Shutdown cluster
0x002B1481	0x00000018	[146] literal string: Can't evict active node
0x002B1499	0x00000016	[146] literal string: Object already exists
0x002B14AF	0x0000000F	[146] literal string: Object in list
0x002B14BE	0x00000014	[146] literal string: Group not available
0x002B14D2	0x00000010	[146] literal string: Group not found
0x002B14E2	0x00000011	[146] literal string: Group not online
0x002B14F3	0x0000001D	[146] literal string: Host node not resource owner
0x002B1510	0x0000001A	[146] literal string: Host node not group owner
0x002B152A	0x00000015	[146] literal string: Resmon create failed
0x002B153F	0x00000015	[146] literal string: Resmon online failed
0x002B1554	0x00000010	[146] literal string: Resource online
0x002B1564	0x00000010	[146] literal string: Quorum resource
0x002B1574	0x00000013	[146] literal string: Not quorum capable
0x002B1587	0x00000016	[146] literal string: Cluster shutting down
0x002B159D	0x0000000E	[146] literal string: Invalid state
0x002B15AB	0x0000001B	[146] literal string: Resource properties stored
0x002B15C6	0x00000011	[146] literal string: Not quorum class
0x002B15D7	0x0000000E	[146] literal string: Core resource
0x002B15E5	0x0000001E	[146] literal string: Quorum resource online failed
0x002B1603	0x00000016	[146] literal string: Quorumlog open failed
0x002B1619	0x00000013	[146] literal string: Clusterlog corrupt
0x002B162C	0x00000022	[146] literal string: Clusterlog record exceeds maxsize
0x002B164E	0x0000001B	[146] literal string: Clusterlog exceeds maxsize
0x002B1669	0x0000001E	[146] literal string: Clusterlog chkpoint not found
0x002B1687	0x0000001C	[146] literal string: Clusterlog not enough space
0x002B16A3	0x00000013	[146] literal string: Quorum owner alive
0x002B16B6	0x00000016	[146] literal string: Network not available
0x002B16CC	0x00000013	[146] literal string: Node not available
0x002B16DF	0x00000018	[146] literal string: All nodes not available
0x002B16F7	0x00000010	[146] literal string: Resource failed
0x002B1707	0x00000015	[146] literal string: Cluster invalid node
0x002B171C	0x00000014	[146] literal string: Cluster node exists
0x002B1730	0x00000019	[146] literal string: Cluster join in progress
0x002B1749	0x00000017	[146] literal string: Cluster node not found
0x002B1760	0x0000001D	[146] literal string: Cluster local node not found
0x002B177D	0x00000017	[146] literal string: Cluster network exists
0x002B1794	0x0000001A	[146] literal string: Cluster network not found
0x002B17AE	0x0000001C	[146] literal string: Cluster netinterface exists
0x002B17CA	0x0000001F	[146] literal string: Cluster netinterface not found
0x002B17E9	0x00000018	[146] literal string: Cluster invalid request
0x002B1801	0x00000021	[146] literal string: Cluster invalid network provider
0x002B1822	0x00000012	[146] literal string: Cluster node down
0x002B1834	0x00000019	[146] literal string: Cluster node unreachable
0x002B184D	0x00000018	[146] literal string: Cluster node not member
0x002B1865	0x0000001D	[146] literal string: Cluster join not in progress
0x002B1882	0x00000018	[146] literal string: Cluster invalid network
0x002B189A	0x00000010	[146] literal string: Cluster node up
0x002B18AA	0x00000016	[146] literal string: Cluster ipaddr in use
0x002B18C0	0x00000018	[146] literal string: Cluster node not paused
0x002B18D8	0x0000001C	[146] literal string: Cluster no security context
0x002B18F4	0x0000001D	[146] literal string: Cluster network not internal
0x002B1911	0x00000018	[146] literal string: Cluster node already up
0x002B1929	0x0000001A	[146] literal string: Cluster node already down
0x002B1943	0x0000001F	[146] literal string: Cluster network already online
0x002B1962	0x00000020	[146] literal string: Cluster network already offline
0x002B1982	0x0000001C	[146] literal string: Cluster node already member
0x002B199E	0x0000001E	[146] literal string: Cluster last internal network
0x002B19BC	0x0000001F	[146] literal string: Cluster network has dependents
0x002B19DB	0x0000001C	[146] literal string: Invalid operation on quorum
0x002B19F7	0x00000017	[146] literal string: Dependency not allowed
0x002B1A0E	0x00000014	[146] literal string: Cluster node paused
0x002B1A22	0x00000019	[146] literal string: Node can't host resource
0x002B1A3B	0x00000017	[146] literal string: Cluster node not ready
0x002B1A52	0x0000001B	[146] literal string: Cluster node shutting down
0x002B1A6D	0x00000015	[146] literal string: Cluster join aborted
0x002B1A82	0x0000001E	[146] literal string: Cluster incompatible versions
0x002B1AA0	0x00000025	[146] literal string: Cluster maxnum of resources exceeded
0x002B1AC5	0x0000001E	[146] literal string: Cluster system config changed
0x002B1AE3	0x00000020	[146] literal string: Cluster resource type not found
0x002B1B03	0x0000001E	[146] literal string: Cluster restype not supported
0x002B1B21	0x0000001A	[146] literal string: Cluster resname not found
0x002B1B3B	0x00000023	[146] literal string: Cluster no RPC packages registered
0x002B1B5E	0x0000001E	[146] literal string: Cluster owner not in preflist
0x002B1B7C	0x0000001D	[146] literal string: Cluster database seqmismatch
0x002B1B99	0x00000015	[146] literal string: Resmon invalid state
0x002B1BAE	0x00000017	[146] literal string: Cluster gum not locker
0x002B1BC5	0x00000016	[146] literal string: Quorum disk not found
0x002B1BDB	0x00000018	[146] literal string: Database backup corrupt
0x002B1BF3	0x00000022	[146] literal string: Cluster node already has DFS root
0x002B1C15	0x0000001F	[146] literal string: Resource property unchangeable
0x002B1C34	0x00000021	[146] literal string: Cluster membership invalid state
0x002B1C55	0x0000001C	[146] literal string: Cluster quorumlog not found
0x002B1C71	0x00000018	[146] literal string: Cluster membership halt
0x002B1C89	0x0000001D	[146] literal string: Cluster instance ID mismatch
0x002B1CA6	0x00000021	[146] literal string: Cluster network not found for IP
0x002B1CC7	0x00000024	[146] literal string: Cluster property data type mismatch
0x002B1CEB	0x0000001E	[146] literal string: Cluster evict without cleanup
0x002B1D09	0x0000001B	[146] literal string: Cluster parameter mismatch
0x002B1D24	0x00000019	[146] literal string: Node cannot be clustered
0x002B1D3D	0x00000019	[146] literal string: Cluster wrong OS version
0x002B1D56	0x00000026	[146] literal string: Cluster can't create dup cluster name
0x002B1D7C	0x00000012	[146] literal string: Decryption failed
0x002B1D8E	0x0000000F	[146] literal string: File encrypted
0x002B1D9D	0x00000013	[146] literal string: No recovery policy
0x002B1DB0	0x00000007	[146] literal string: No EFS
0x002B1DB7	0x0000000A	[146] literal string: Wrong EFS
0x002B1DC1	0x0000000D	[146] literal string: No user keys
0x002B1DCE	0x00000012	[146] literal string: File not encryped
0x002B1DE0	0x00000012	[146] literal string: Not export format
0x002B1DF2	0x0000000F	[146] literal string: File read only
0x002B1E01	0x00000013	[146] literal string: Dir EFS disallowed
0x002B1E14	0x00000017	[146] literal string: EFS server not trusted
0x002B1E2B	0x00000014	[146] literal string: Bad recovery policy
0x002B1E3F	0x00000015	[146] literal string: ETS alg blob too big
0x002B1E54	0x00000017	[146] literal string: Volume not support EFS
0x002B1E6B	0x0000000D	[146] literal string: EFS disabled
0x002B1E78	0x00000018	[146] literal string: EFS version not support
0x002B1E90	0x00000019	[146] literal string: No browser servers found
0x002B1EA9	0x00000020	[146] literal string: Sched E service not localsystem
0x002B1EC9	0x0000001C	[146] literal string: Ctx winstation name invalid
0x002B1EE5	0x0000000F	[146] literal string: Ctx invalid PD
0x002B1EF4	0x00000011	[146] literal string: Ctx PD not found
0x002B1F05	0x00000011	[146] literal string: Ctx WD not found
0x002B1F16	0x0000001F	[146] literal string: Ctx cannot make eventlog entry
0x002B1F35	0x0000001B	[146] literal string: Ctx service name collision
0x002B1F50	0x00000012	[146] literal string: Ctx close pending
0x002B1F62	0x0000000E	[146] literal string: Ctx no outbuf
0x002B1F70	0x00000018	[146] literal string: Ctx modem inf not found
0x002B1F88	0x00000016	[146] literal string: Ctx invalid modemname
0x002B1F9E	0x00000019	[146] literal string: Ctx modem response error
0x002B1FB7	0x0000001B	[146] literal string: Ctx modem response timeout
0x002B1FD2	0x0000001E	[146] literal string: Ctx modem response no carrier
0x002B1FF0	0x00000020	[146] literal string: Ctx modem response no dial tone
0x002B2010	0x00000018	[146] literal string: Ctx modem response busy
0x002B2028	0x00000019	[146] literal string: Ctx modem response voice
0x002B2041	0x0000000D	[146] literal string: Ctx TD error
0x002B204E	0x00000019	[146] literal string: Ctx winstation not found
0x002B2067	0x0000001E	[146] literal string: Ctx winstation already exists
0x002B2085	0x00000014	[146] literal string: Ctx winstation busy
0x002B2099	0x00000013	[146] literal string: Ctx bad video mode
0x002B20AC	0x00000015	[146] literal string: Ctx graphics invalid
0x002B20C1	0x00000013	[146] literal string: Ctx logon disabled
0x002B20D4	0x00000010	[146] literal string: Ctx not console
0x002B20E4	0x00000019	[146] literal string: Ctx client query timeout
0x002B20FD	0x00000017	[146] literal string: Ctx console disconnect
0x002B2114	0x00000014	[146] literal string: Ctx console connect
0x002B2128	0x00000012	[146] literal string: Ctx shadow denied
0x002B213A	0x0000001D	[146] literal string: Ctx winstation access denied
0x002B2157	0x0000000F	[146] literal string: Ctx invalid WD
0x002B2166	0x00000013	[146] literal string: Ctx shadow invalid
0x002B2179	0x00000014	[146] literal string: Ctx shadow disabled
0x002B218D	0x0000001A	[146] literal string: Ctx client licence in use
0x002B21A7	0x0000001B	[146] literal string: Ctx client licence not set
0x002B21C2	0x0000001A	[146] literal string: Ctx licence not available
0x002B21DC	0x0000001B	[146] literal string: Ctx licence client invalid
0x002B21F7	0x00000014	[146] literal string: Ctx licence expired
0x002B220B	0x00000017	[146] literal string: Ctx shadow not running
0x002B2222	0x00000020	[146] literal string: Ctx shadow ended by mode change
0x002B2242	0x0000001D	[146] literal string: FRS err invalid API sequence
0x002B225F	0x00000019	[146] literal string: FRS err starting service
0x002B2278	0x00000019	[146] literal string: FRS err stopping service
0x002B2291	0x00000015	[146] literal string: FRS err internal API
0x002B22A6	0x00000011	[146] literal string: FRS err internal
0x002B22B7	0x00000015	[146] literal string: FRS err service comm
0x002B22CC	0x0000001A	[146] literal string: FRS err insufficient priv
0x002B22E6	0x00000017	[146] literal string: FRS err authentication
0x002B22FD	0x00000021	[146] literal string: FRS err parent insufficient priv
0x002B231E	0x0000001E	[146] literal string: FRS err parent authentication
0x002B233C	0x0000001D	[146] literal string: FRS err child to parent comm
0x002B2359	0x0000001D	[146] literal string: FRS err parent to child comm
0x002B2376	0x00000018	[146] literal string: FRS err sysvol populate
0x002B238E	0x00000020	[146] literal string: FRS err sysvol populate timeout
0x002B23AE	0x00000017	[146] literal string: FRS err sysvol is busy
0x002B23C5	0x00000016	[146] literal string: FRS err sysvol demote
0x002B23DB	0x00000022	[146] literal string: FRS err invalid service parameter
0x002B23FD	0x00000011	[146] literal string: DS not installed
0x002B240E	0x00000020	[146] literal string: DS membership evaluated locally
0x002B242E	0x00000019	[146] literal string: DS no attribute or value
0x002B2447	0x0000001C	[146] literal string: DS invalid attribute syntax
0x002B2463	0x0000001C	[146] literal string: DS attribute type undefined
0x002B247F	0x0000001D	[146] literal string: DS attribute or value exists
0x002B249C	0x00000008	[146] literal string: DS busy
0x002B24A4	0x0000000F	[146] literal string: DS unavailable
0x002B24B3	0x00000015	[146] literal string: DS no rids allocated
0x002B24C8	0x00000010	[146] literal string: DS no more rids
0x002B24D8	0x00000018	[146] literal string: DS incorrect role owner
0x002B24F0	0x00000015	[146] literal string: DS ridmgr init error
0x002B2505	0x00000017	[146] literal string: DS obj class violation
0x002B251C	0x00000015	[146] literal string: DS can't on non leaf
0x002B2531	0x00000010	[146] literal string: DS can't on rnd
0x002B2541	0x00000017	[146] literal string: DS can't mod obj class
0x002B2558	0x00000018	[146] literal string: DS cross dom move error
0x002B2570	0x00000014	[146] literal string: DS GC not available
0x002B2584	0x0000000E	[146] literal string: Shared policy
0x002B2592	0x00000018	[146] literal string: Policy object not found
0x002B25AA	0x00000012	[146] literal string: Policy only in DS
0x002B25BC	0x00000011	[146] literal string: Promotion active
0x002B25CD	0x00000014	[146] literal string: No promotion active
0x002B25E1	0x00000014	[146] literal string: DS operations error
0x002B25F5	0x00000012	[146] literal string: DS protocol error
0x002B2607	0x00000016	[146] literal string: DS timelimit exceeded
0x002B261D	0x00000016	[146] literal string: DS sizelimit exceeded
0x002B2633	0x00000018	[146] literal string: DS admin limit exceeded
0x002B264B	0x00000011	[146] literal string: DS compare false
0x002B265C	0x00000010	[146] literal string: DS compare true
0x002B266C	0x0000001D	[146] literal string: DS auth method not supported
0x002B2689	0x00000018	[146] literal string: DS strong auth required
0x002B26A1	0x00000016	[146] literal string: DS inappropriate auth
0x002B26B7	0x00000010	[146] literal string: DS auth unknown
0x002B26C7	0x0000000C	[146] literal string: DS referral
0x002B26D3	0x0000001E	[146] literal string: DS unavailable crit extension
0x002B26F1	0x0000001C	[146] literal string: DS confidentiality required
0x002B270D	0x0000001A	[146] literal string: DS inappropriate matching
0x002B2727	0x00000018	[146] literal string: DS constraint violation
0x002B273F	0x00000012	[146] literal string: DS no such object
0x002B2751	0x00000011	[146] literal string: DS alias problem
0x002B2762	0x00000015	[146] literal string: DS invalid dn syntax
0x002B2777	0x0000000B	[146] literal string: DS is leaf
0x002B2782	0x00000017	[146] literal string: DS alias deref problem
0x002B2799	0x00000018	[146] literal string: DS unwilling to perform
0x002B27B1	0x0000000F	[146] literal string: DS loop detect
0x002B27C0	0x00000014	[146] literal string: DS naming violation
0x002B27D4	0x0000001C	[146] literal string: DS object results too large
0x002B27F0	0x00000019	[146] literal string: DS affects multiple dsas
0x002B2809	0x0000000F	[146] literal string: DS server down
0x002B2818	0x0000000F	[146] literal string: DS local error
0x002B2827	0x00000012	[146] literal string: DS encoding error
0x002B2839	0x00000012	[146] literal string: DS decoding error
0x002B284B	0x00000012	[146] literal string: DS filter unknown
0x002B285D	0x0000000F	[146] literal string: DS param error
0x002B286C	0x00000011	[146] literal string: DS not supported
0x002B287D	0x00000017	[146] literal string: DS no results returned
0x002B2894	0x00000015	[146] literal string: DS control not found
0x002B28A9	0x0000000F	[146] literal string: DS client loop
0x002B28B8	0x0000001B	[146] literal string: DS referral limit exceeded
0x002B28D3	0x00000018	[146] literal string: DS sort control missing
0x002B28EB	0x00000016	[146] literal string: DS offset range error
0x002B2901	0x00000013	[146] literal string: DS root must be nc
0x002B2914	0x00000019	[146] literal string: DS and replica inhibited
0x002B292D	0x00000019	[146] literal string: DS att not def in schema
0x002B2946	0x00000019	[146] literal string: DS max obj size exceeded
0x002B295F	0x0000001A	[146] literal string: DS obj string name exists
0x002B2979	0x0000001C	[146] literal string: DS no rdn defined in schema
0x002B2995	0x0000001C	[146] literal string: DS rdn doesn't match schema
0x002B29B1	0x0000001B	[146] literal string: DS no requested atts found
0x002B29CC	0x00000019	[146] literal string: DS user buffer too small
0x002B29E5	0x00000015	[146] literal string: DS att is not on obj
0x002B29FA	0x00000019	[146] literal string: DS illegal mod operation
0x002B2A13	0x00000011	[146] literal string: DS obj too large
0x002B2A24	0x00000015	[146] literal string: DS bad instance type
0x002B2A39	0x00000016	[146] literal string: DS masterdsa required
0x002B2A4F	0x00000019	[146] literal string: DS object class required
0x002B2A68	0x00000018	[146] literal string: DS missing required att
0x002B2A80	0x00000019	[146] literal string: DS att not def for class
0x002B2A99	0x00000016	[146] literal string: DS att already exists
0x002B2AAF	0x00000018	[146] literal string: DS can't add att values
0x002B2AC7	0x0000001B	[146] literal string: DS single value constraint
0x002B2AE2	0x00000014	[146] literal string: DS range constraint
0x002B2AF6	0x0000001A	[146] literal string: DS att val already exists
0x002B2B10	0x00000019	[146] literal string: DS can't rem missing att
0x002B2B29	0x0000001D	[146] literal string: DS can't rem missing att val
0x002B2B46	0x00000018	[146] literal string: DS root can't be subref
0x002B2B5E	0x0000000F	[146] literal string: DS no chaining
0x002B2B6D	0x00000013	[146] literal string: DS no chained eval
0x002B2B80	0x00000014	[146] literal string: DS no parent object
0x002B2B94	0x00000016	[146] literal string: DS parent is an alias
0x002B2BAA	0x0000001D	[146] literal string: DS can't mix master and reps
0x002B2BC7	0x00000012	[146] literal string: DS children exist
0x002B2BD9	0x00000011	[146] literal string: DS obj not found
0x002B2BEA	0x00000017	[146] literal string: DS aliased obj missing
0x002B2C01	0x00000013	[146] literal string: DS bad name syntax
0x002B2C14	0x00000019	[146] literal string: DS alias points to alias
0x002B2C2D	0x00000015	[146] literal string: DS can't redef alias
0x002B2C42	0x00000010	[146] literal string: DS out of scope
0x002B2C52	0x00000018	[146] literal string: DS object being removed
0x002B2C6A	0x00000018	[146] literal string: DS can't delete dsa obj
0x002B2C82	0x00000011	[146] literal string: DS generic error
0x002B2C93	0x0000001A	[146] literal string: DS dsa must be int master
0x002B2CAD	0x00000011	[146] literal string: DS class not dsa
0x002B2CBE	0x00000018	[146] literal string: DS insuff access rights
0x002B2CD6	0x00000014	[146] literal string: DS illegal superior
0x002B2CEA	0x0000001A	[146] literal string: DS attribute owned by sam
0x002B2D04	0x00000017	[146] literal string: DS name too many parts
0x002B2D1B	0x00000011	[146] literal string: DS name too long
0x002B2D2C	0x00000017	[146] literal string: DS name value too long
0x002B2D43	0x00000014	[146] literal string: DS name unparseable
0x002B2D57	0x00000015	[146] literal string: DS name type unknown
0x002B2D6C	0x00000011	[146] literal string: DS not an object
0x002B2D7D	0x00000016	[146] literal string: DS sec desc too short
0x002B2D93	0x00000014	[146] literal string: DS sec desc invalid
0x002B2DA7	0x00000013	[146] literal string: DS no deleted name
0x002B2DBA	0x0000001B	[146] literal string: DS subref must have parent
0x002B2DD5	0x00000015	[146] literal string: DS ncname must be nc
0x002B2DEA	0x00000019	[146] literal string: DS can't add system only
0x002B2E03	0x0000001A	[146] literal string: DS class must be concrete
0x002B2E1D	0x0000000F	[146] literal string: DS invalid dmd
0x002B2E2C	0x00000013	[146] literal string: DS obj GUID exists
0x002B2E3F	0x00000013	[146] literal string: DS not on backlink
0x002B2E52	0x00000016	[146] literal string: DS no crossref for nc
0x002B2E68	0x00000011	[146] literal string: DS shutting down
0x002B2E79	0x00000015	[146] literal string: DS unknown operation
0x002B2E8E	0x00000016	[146] literal string: DS invalid role owner
0x002B2EA4	0x00000019	[146] literal string: DS couldn't contact fsmo
0x002B2EBD	0x00000016	[146] literal string: DS cross nc dn rename
0x002B2ED3	0x00000019	[146] literal string: DS can't mod system only
0x002B2EEC	0x00000013	[146] literal string: DS replicator only
0x002B2EFF	0x00000019	[146] literal string: DS obj class not defined
0x002B2F18	0x0000001A	[146] literal string: DS obj class not subclass
0x002B2F32	0x0000001A	[146] literal string: DS name reference invalid
0x002B2F4C	0x00000014	[146] literal string: DS cross ref exists
0x002B2F60	0x0000001D	[146] literal string: DS can't del master crossref
0x002B2F7D	0x0000001E	[146] literal string: DS subtree notify not nc head
0x002B2F9B	0x0000001D	[146] literal string: DS notify filter too complex
0x002B2FB8	0x0000000B	[146] literal string: DS dup rdn
0x002B2FC3	0x0000000B	[146] literal string: DS dup oid
0x002B2FCE	0x0000000F	[146] literal string: DS dup mapi ID
0x002B2FDD	0x00000016	[146] literal string: DS dup schema ID GUID
0x002B2FF3	0x00000019	[146] literal string: DS dup LDAP display name
0x002B300C	0x00000015	[146] literal string: DS semantic att test
0x002B3021	0x00000013	[146] literal string: DS syntax mismatch
0x002B3034	0x00000017	[146] literal string: DS exists in must have
0x002B304B	0x00000016	[146] literal string: DS exists in may have
0x002B3061	0x00000018	[146] literal string: DS nonexistent may have
0x002B3079	0x00000019	[146] literal string: DS nonexistent must have
0x002B3092	0x00000015	[146] literal string: DS aux cls test fail
0x002B30A7	0x00000018	[146] literal string: DS nonexistent poss sup
0x002B30BF	0x00000015	[146] literal string: DS sub cls test fail
0x002B30D4	0x00000019	[146] literal string: DS bad rdn att ID syntax
0x002B30ED	0x00000015	[146] literal string: DS exists in aux cls
0x002B3102	0x00000015	[146] literal string: DS exists in sub cls
0x002B3117	0x00000016	[146] literal string: DS exists in poss sup
0x002B312D	0x00000017	[146] literal string: DS recalcschema failed
0x002B3144	0x0000001C	[146] literal string: DS tree delete not finished
0x002B3160	0x00000010	[146] literal string: DS can't delete
0x002B3170	0x00000015	[146] literal string: DS att schema req ID
0x002B3185	0x00000019	[146] literal string: DS bad att schema syntax
0x002B319E	0x00000013	[146] literal string: DS can't cache att
0x002B31B1	0x00000015	[146] literal string: DS can't cache class
0x002B31C6	0x0000001A	[146] literal string: DS can't remove att cache
0x002B31E0	0x0000001C	[146] literal string: DS can't remove class cache
0x002B31FC	0x00000015	[146] literal string: DS can't retrieve DN
0x002B3211	0x00000012	[146] literal string: DS missing supref
0x002B3223	0x0000001B	[146] literal string: DS can't retrieve instance
0x002B323E	0x00000016	[146] literal string: DS code inconsistency
0x002B3254	0x00000012	[146] literal string: DS database error
0x002B3266	0x00000015	[146] literal string: DS governsid missing
0x002B327B	0x00000018	[146] literal string: DS missing expected att
0x002B3293	0x00000019	[146] literal string: DS ncname missing cr ref
0x002B32AC	0x0000001B	[146] literal string: DS security checking error
0x002B32C7	0x00000015	[146] literal string: DS schema not loaded
0x002B32DC	0x00000017	[146] literal string: DS schema alloc failed
0x002B32F3	0x00000019	[146] literal string: DS att schema req syntax
0x002B330C	0x00000012	[146] literal string: DS gcverify error
0x002B331E	0x00000017	[146] literal string: DS dra schema mismatch
0x002B3335	0x00000016	[146] literal string: DS can't find dsa obj
0x002B334B	0x0000001A	[146] literal string: DS can't find expected nc
0x002B3365	0x0000001A	[146] literal string: DS can't find nc in cache
0x002B337F	0x00000018	[146] literal string: DS can't retrieve child
0x002B3397	0x0000001B	[146] literal string: DS security illegal modify
0x002B33B2	0x0000001C	[146] literal string: DS can't replace hidden rec
0x002B33CE	0x00000016	[146] literal string: DS bad hierarchy file
0x002B33E4	0x00000020	[146] literal string: DS build hierarchy table failed
0x002B3404	0x00000018	[146] literal string: DS config param missing
0x002B341C	0x0000001E	[146] literal string: DS counting ab indices failed
0x002B343A	0x00000021	[146] literal string: DS hierarchy table malloc failed
0x002B345B	0x00000014	[146] literal string: DS internal failure
0x002B346F	0x00000011	[146] literal string: DS unknown error
0x002B3480	0x0000001B	[146] literal string: DS root requires class top
0x002B349B	0x00000017	[146] literal string: DS refusing fmso roles
0x002B34B2	0x00000019	[146] literal string: DS missing fmso settings
0x002B34CB	0x0000001D	[146] literal string: DS unable to surrender roles
0x002B34E8	0x0000000F	[146] literal string: DS dra generic
0x002B34F7	0x00000019	[146] literal string: DS dra invalid parameter
0x002B3510	0x0000000C	[146] literal string: DS dra busy
0x002B351C	0x0000000E	[146] literal string: DS dra bad dn
0x002B352A	0x0000000E	[146] literal string: DS dra bad nc
0x002B3538	0x00000011	[146] literal string: DS dra dn exists
0x002B3549	0x00000016	[146] literal string: DS dra internal error
0x002B355F	0x00000018	[146] literal string: DS dra inconsistent dit
0x002B3577	0x00000019	[146] literal string: DS dra connection failed
0x002B3590	0x00000019	[146] literal string: DS dra bad instance type
0x002B35A9	0x00000012	[146] literal string: DS dra out of mem
0x002B35BB	0x00000014	[146] literal string: DS dra mail problem
0x002B35CF	0x0000001A	[146] literal string: DS dra ref already exists
0x002B35E9	0x00000015	[146] literal string: DS dra ref not found
0x002B35FE	0x00000019	[146] literal string: DS dra obj is rep source
0x002B3617	0x00000010	[146] literal string: DS dra db error
0x002B3627	0x00000012	[146] literal string: DS dra no replica
0x002B3639	0x00000015	[146] literal string: DS dra access denied
0x002B364E	0x00000015	[146] literal string: DS dra not supported
0x002B3663	0x00000015	[146] literal string: DS dra RPC cancelled
0x002B3678	0x00000017	[146] literal string: DS dra source disabled
0x002B368F	0x00000015	[146] literal string: DS dra sink disabled
0x002B36A4	0x00000016	[146] literal string: DS dra name collision
0x002B36BA	0x0000001A	[146] literal string: DS dra source reinstalled
0x002B36D4	0x00000016	[146] literal string: DS dra missing parent
0x002B36EA	0x00000011	[146] literal string: DS dra preempted
0x002B36FB	0x00000014	[146] literal string: DS dra abandon sync
0x002B370F	0x00000010	[146] literal string: DS dra shutdown
0x002B371F	0x00000020	[146] literal string: DS dra incompatible partial set
0x002B373F	0x00000021	[146] literal string: DS dra source is partial replica
0x002B3760	0x0000001E	[146] literal string: DS dra extn connection failed
0x002B377E	0x0000001B	[146] literal string: DS install schema mismatch
0x002B3799	0x0000000F	[146] literal string: DS dup link ID
0x002B37A8	0x00000018	[146] literal string: DS name error resolving
0x002B37C0	0x00000018	[146] literal string: DS name error not found
0x002B37D8	0x00000019	[146] literal string: DS name error not unique
0x002B37F1	0x00000019	[146] literal string: DS name error no mapping
0x002B380A	0x0000001A	[146] literal string: DS name error domain only
0x002B3824	0x00000025	[146] literal string: DS name error no syntactical mapping
0x002B3849	0x00000017	[146] literal string: DS constructed att mod
0x002B3860	0x00000016	[146] literal string: DS wrong om obj class
0x002B3876	0x00000014	[146] literal string: DS dra repl pending
0x002B388A	0x0000000F	[146] literal string: DS ds required
0x002B3899	0x0000001D	[146] literal string: DS invalid LDAP display name
0x002B38B6	0x00000013	[146] literal string: DS non base search
0x002B38C9	0x00000017	[146] literal string: DS can't retrieve atts
0x002B38E0	0x00000019	[146] literal string: DS backlink without link
0x002B38F9	0x00000012	[146] literal string: DS epoch mismatch
0x002B390B	0x00000015	[146] literal string: DS src name mismatch
0x002B3920	0x0000001C	[146] literal string: DS src and dst nc identical
0x002B393C	0x00000013	[146] literal string: DS dst nc mismatch
0x002B394F	0x0000001E	[146] literal string: DS not authoritive for dst nc
0x002B396D	0x00000015	[146] literal string: DS src GUID mismatch
0x002B3982	0x0000001D	[146] literal string: DS can't move deleted object
0x002B399F	0x0000001D	[146] literal string: DS pdc operation in progress
0x002B39BC	0x0000001D	[146] literal string: DS cross domain cleanup reqd
0x002B39D9	0x0000001F	[146] literal string: DS illegal xdom move operation
0x002B39F8	0x00000024	[146] literal string: DS can't with acct group membershps
0x002B3A1C	0x0000001A	[146] literal string: DS nc must have nc parent
0x002B3A36	0x00000019	[146] literal string: DS dst domain not native
0x002B3A4F	0x00000024	[146] literal string: DS missing infrastructure container
0x002B3A73	0x0000001C	[146] literal string: DS can't move account group
0x002B3A8F	0x0000001D	[146] literal string: DS can't move resource group
0x002B3AAC	0x00000017	[146] literal string: DS invalid search flag
0x002B3AC3	0x0000001B	[146] literal string: DS no tree delete above nc
0x002B3ADE	0x00000021	[146] literal string: DS couldn't lock tree for delete
0x002B3AFF	0x0000002D	[146] literal string: DS couldn't identify objects for tree delete
0x002B3B2C	0x00000014	[146] literal string: DS sam init failure
0x002B3B40	0x0000001D	[146] literal string: DS sensitive group violation
0x002B3B5D	0x0000001C	[146] literal string: DS can't mod primarygroupid
0x002B3B79	0x0000001B	[146] literal string: DS illegal base schema mod
0x002B3B94	0x00000019	[146] literal string: DS nonsafe schema change
0x002B3BAD	0x0000001C	[146] literal string: DS schema update disallowed
0x002B3BC9	0x0000001D	[146] literal string: DS can't create under schema
0x002B3BE6	0x0000001E	[146] literal string: DS install no src sch version
0x002B3C04	0x00000025	[146] literal string: DS install no sch version in inifile
0x002B3C29	0x00000016	[146] literal string: DS invalid group type
0x002B3C3F	0x00000026	[146] literal string: DS no nest globalgroup in mixeddomain
0x002B3C65	0x00000025	[146] literal string: DS no nest localgroup in mixeddomain
0x002B3C8A	0x00000022	[146] literal string: DS global can't have local member
0x002B3CAC	0x00000026	[146] literal string: DS global can't have universal member
0x002B3CD2	0x00000025	[146] literal string: DS universal can't have local member
0x002B3CF7	0x00000028	[146] literal string: DS global can't have crossdomain member
0x002B3D1F	0x0000002D	[146] literal string: DS local can't have crossdomain local member
0x002B3D4C	0x00000018	[146] literal string: DS have primary members
0x002B3D64	0x0000001F	[146] literal string: DS string sd conversion failed
0x002B3D83	0x00000014	[146] literal string: DS naming master gc
0x002B3D97	0x00000012	[146] literal string: DS lookup failure
0x002B3DA9	0x00000018	[146] literal string: DS couldn't update spns
0x002B3DC1	0x00000015	[146] literal string: DS can't retrieve sd
0x002B3DD6	0x00000012	[146] literal string: DS key not unique
0x002B3DE8	0x0000001B	[146] literal string: DS wrong linked att syntax
0x002B3E03	0x0000001D	[146] literal string: DS sam need bootkey password
0x002B3E20	0x0000001B	[146] literal string: DS sam need bootkey floppy
0x002B3E3B	0x0000000F	[146] literal string: DS can't start
0x002B3E4A	0x00000010	[146] literal string: DS init failure
0x002B3E5A	0x00000020	[146] literal string: DS no pkt privacy on connection
0x002B3E7A	0x0000001B	[146] literal string: DS source domain in forest
0x002B3E95	0x00000024	[146] literal string: DS destination domain not in forest
0x002B3EB9	0x00000024	[146] literal string: DS destination auditing not enabled
0x002B3EDD	0x00000020	[146] literal string: DS can't find dc for src domain
0x002B3EFD	0x0000001D	[146] literal string: DS src obj not group or user
0x002B3F1A	0x0000001C	[146] literal string: DS src sid exists in forest
0x002B3F36	0x00000025	[146] literal string: DS src and dst object class mismatch
0x002B3F5B	0x00000011	[146] literal string: Sam init failure
0x002B3F6C	0x00000018	[146] literal string: DS dra schema info ship
0x002B3F84	0x00000017	[146] literal string: DS dra schema conflict
0x002B3F9B	0x0000001F	[146] literal string: DS dra earlier schema conflict
0x002B3FBA	0x00000017	[146] literal string: DS dra obj nc mismatch
0x002B3FD1	0x00000015	[146] literal string: DS nc still has dsas
0x002B3FE6	0x0000000F	[146] literal string: DS gc required
0x002B3FF5	0x0000001E	[146] literal string: DS local member of local only
0x002B4013	0x0000001E	[146] literal string: DS no fpo in universal groups
0x002B4031	0x00000013	[146] literal string: DS can't add to gc
0x002B4044	0x0000001A	[146] literal string: DS no checkpoint with pdc
0x002B405E	0x0000001F	[146] literal string: DS source auditing not enabled
0x002B407D	0x00000020	[146] literal string: DS can't create in nondomain nc
0x002B409D	0x00000018	[146] literal string: DS invalid name for spn
0x002B40B5	0x00000021	[146] literal string: DS filter uses constructed attrs
0x002B40D6	0x0000001C	[146] literal string: DS unicodepwd not in quotes
0x002B40F2	0x00000022	[146] literal string: DS machine account quota exceeded
0x002B4114	0x00000019	[146] literal string: DS must be run on dst dc
0x002B412D	0x00000021	[146] literal string: DS src dc must be sp4 or greater
0x002B414E	0x00000022	[146] literal string: DS can't tree delete critical obj
0x002B4170	0x00000018	[146] literal string: DS init failure console
0x002B4188	0x0000001C	[146] literal string: DS sam init failure console
0x002B41A4	0x0000001B	[146] literal string: DS forest version too high
0x002B41BF	0x0000001B	[146] literal string: DS domain version too high
0x002B41DA	0x0000001A	[146] literal string: DS forest version too low
0x002B41F4	0x0000001A	[146] literal string: DS domain version too low
0x002B420E	0x00000018	[146] literal string: DS incompatible version
0x002B4226	0x00000013	[146] literal string: DS low dsa version
0x002B4239	0x00000027	[146] literal string: DS no behaviour version in mixeddomain
0x002B4260	0x0000001C	[146] literal string: DS not supported sort order
0x002B427C	0x00000013	[146] literal string: DS name not unique
0x002B428F	0x00000022	[146] literal string: DS machine account created prent4
0x002B42B1	0x00000018	[146] literal string: DS out of version store
0x002B42C9	0x0000001E	[146] literal string: DS incompatible controls used
0x002B42E7	0x00000011	[146] literal string: DS no ref domain
0x002B42F8	0x00000014	[146] literal string: DS reserved link ID
0x002B430C	0x00000019	[146] literal string: DS link ID not available
0x002B4325	0x00000022	[146] literal string: DS ag can't have universal member
0x002B4347	0x00000028	[146] literal string: DS modifydn disallowed by instance type
0x002B436F	0x0000001F	[146] literal string: DS no object move in schema nc
0x002B438E	0x0000001F	[146] literal string: DS modifydn disallowed by flag
0x002B43AD	0x0000001E	[146] literal string: DS modifydn wrong grandparent
0x002B43CB	0x0000001D	[146] literal string: DS name error trust referral
0x002B43E8	0x00000021	[146] literal string: Not supported on standard server
0x002B4409	0x00000022	[146] literal string: DS can't access remote part of ad
0x002B442B	0x0000001D	[146] literal string: DS cr impossible to validate
0x002B4448	0x00000019	[146] literal string: DS thread limit exceeded
0x002B4461	0x0000000F	[146] literal string: DS not closest
0x002B4470	0x00000027	[146] literal string: DS can't derive spn without server ref
0x002B4497	0x0000001B	[146] literal string: DS single user mode failed
0x002B44B2	0x0000001A	[146] literal string: DS ntdscript syntax error
0x002B44CC	0x0000001B	[146] literal string: DS ntdscript process error
0x002B44E7	0x00000019	[146] literal string: DS different repl epochs
0x002B4500	0x0000001A	[146] literal string: DS drs extensions changed
0x002B451A	0x00000031	[146] literal string: DS replica set change not allowed on disabled cr
0x002B454B	0x00000011	[146] literal string: DS no msds intid
0x002B455C	0x00000012	[146] literal string: DS dup msds intid
0x002B456E	0x00000016	[146] literal string: DS exists in rdnattid
0x002B4584	0x00000018	[146] literal string: DS authorisation failed
0x002B459C	0x00000012	[146] literal string: DS invalid script
0x002B45AE	0x0000001D	[146] literal string: DS remote crossref op failed
0x002B45CB	0x0000001D	[146] literal string: DNS error rcode format error
0x002B45E8	0x0000001F	[146] literal string: DNS error rcode server failure
0x002B4607	0x0000001B	[146] literal string: DNS error rcode name error
0x002B4622	0x00000020	[146] literal string: DNS error rcode not implemented
0x002B4642	0x00000018	[146] literal string: DNS error rcode refused
0x002B465A	0x00000019	[146] literal string: DNS error rcode yxdomain
0x002B4673	0x00000018	[146] literal string: DNS error rcode yxrrset
0x002B468B	0x00000018	[146] literal string: DNS error rcode nxrrset
0x002B46A3	0x00000018	[146] literal string: DNS error rcode notauth
0x002B46BB	0x00000018	[146] literal string: DNS error rcode notzone
0x002B46D3	0x00000017	[146] literal string: DNS error rcode badsig
0x002B46EA	0x00000017	[146] literal string: DNS error rcode badkey
0x002B4701	0x00000018	[146] literal string: DNS error rcode badtime
0x002B4719	0x00000014	[146] literal string: DNS info no records
0x002B472D	0x00000015	[146] literal string: DNS error bad packet
0x002B4742	0x00000014	[146] literal string: DNS error no packet
0x002B4756	0x00000010	[146] literal string: DNS error rcode
0x002B4766	0x0000001A	[146] literal string: DNS error unsecure packet
0x002B4780	0x00000017	[146] literal string: DNS error invalid type
0x002B4797	0x0000001D	[146] literal string: DNS error invalid IP address
0x002B47B4	0x0000001B	[146] literal string: DNS error invalid property
0x002B47CF	0x0000001A	[146] literal string: DNS error try again later
0x002B47E9	0x00000015	[146] literal string: DNS error not unique
0x002B47FE	0x00000017	[146] literal string: DNS error non RFC name
0x002B4815	0x00000010	[146] literal string: DNS status FQDN
0x002B4825	0x00000017	[146] literal string: DNS status dotted name
0x002B483C	0x0000001C	[146] literal string: DNS status single part name
0x002B4858	0x0000001C	[146] literal string: DNS error invalid name char
0x002B4874	0x00000017	[146] literal string: DNS error numeric name
0x002B488B	0x00000025	[146] literal string: DNS error not allowed on root server
0x002B48B0	0x0000001E	[146] literal string: DNS error zone does not exist
0x002B48CE	0x00000018	[146] literal string: DNS error not zone info
0x002B48E6	0x00000021	[146] literal string: DNS error invalid zone operation
0x002B4907	0x00000023	[146] literal string: DNS error zone configuration error
0x002B492A	0x00000022	[146] literal string: DNS error zone has not SOA record
0x002B494C	0x00000021	[146] literal string: DNS error zone has no NS records
0x002B496D	0x00000016	[146] literal string: DNS error zone locked
0x002B4983	0x0000001F	[146] literal string: DNS error zone creation failed
0x002B49A2	0x0000001E	[146] literal string: DNS error zone already exists
0x002B49C0	0x00000022	[146] literal string: DNS error autozone already exists
0x002B49E2	0x0000001C	[146] literal string: DNS error invalid zone type
0x002B49FE	0x00000027	[146] literal string: DNS error secondary requires master IP
0x002B4A25	0x0000001D	[146] literal string: DNS error zone not secondary
0x002B4A42	0x00000023	[146] literal string: DNS error need secondary addresses
0x002B4A65	0x0000001B	[146] literal string: DNS error wins init failed
0x002B4A80	0x0000001C	[146] literal string: DNS error need wins servers
0x002B4A9C	0x0000001D	[146] literal string: DNS error nbstat init failed
0x002B4AB9	0x0000001D	[146] literal string: DNS error SOA delete invalid
0x002B4AD6	0x00000023	[146] literal string: DNS error forwarder already exists
0x002B4AF9	0x00000022	[146] literal string: DNS error zone requires master IP
0x002B4B1B	0x0000001B	[146] literal string: DNS error zone is shutdown
0x002B4B36	0x00000024	[146] literal string: DNS error primary requires datafile
0x002B4B5A	0x00000020	[146] literal string: DNS error invalid datafile name
0x002B4B7A	0x00000020	[146] literal string: DNS error datafile open failure
0x002B4B9A	0x00000020	[146] literal string: DNS error file writeback failed
0x002B4BBA	0x0000001B	[146] literal string: DNS error datafile parsing
0x002B4BD5	0x00000020	[146] literal string: DNS error record does not exist
0x002B4BF5	0x00000018	[146] literal string: DNS error record format
0x002B4C0D	0x0000001F	[146] literal string: DNS error node creation failed
0x002B4C2C	0x0000001E	[146] literal string: DNS error unknown record type
0x002B4C4A	0x0000001B	[146] literal string: DNS error record timed out
0x002B4C65	0x0000001B	[146] literal string: DNS error name not in zone
0x002B4C80	0x00000015	[146] literal string: DNS error CNAME loop
0x002B4C95	0x00000018	[146] literal string: DNS error node is CNAME
0x002B4CAD	0x0000001A	[146] literal string: DNS error CNAME collision
0x002B4CC7	0x00000023	[146] literal string: DNS error record only at zone root
0x002B4CEA	0x00000020	[146] literal string: DNS error record already exists
0x002B4D0A	0x00000019	[146] literal string: DNS error secondary data
0x002B4D23	0x0000001F	[146] literal string: DNS error no create cache data
0x002B4D42	0x0000001E	[146] literal string: DNS error name does not exist
0x002B4D60	0x0000001E	[146] literal string: DNS warning PTR create failed
0x002B4D7E	0x0000001D	[146] literal string: DNS warning domain undeleted
0x002B4D9B	0x00000019	[146] literal string: DNS error ds unavailable
0x002B4DB4	0x00000021	[146] literal string: DNS error ds zone already exists
0x002B4DD5	0x00000021	[146] literal string: DNS error no bootfile if ds zone
0x002B4DF6	0x00000017	[146] literal string: DNS info AXFR complete
0x002B4E0D	0x0000000F	[146] literal string: DNS error AXFR
0x002B4E1C	0x0000001A	[146] literal string: DNS info added local wins
0x002B4E36	0x0000001B	[146] literal string: DNS status continue needed
0x002B4E51	0x00000013	[146] literal string: DNS error no TCPIP
0x002B4E64	0x00000019	[146] literal string: DNS error no DNS servers
0x002B4E7D	0x0000001C	[146] literal string: DNS error dp does not exist
0x002B4E99	0x0000001C	[146] literal string: DNS error dp already exists
0x002B4EB5	0x0000001A	[146] literal string: DNS error dp not enlisted
0x002B4ECF	0x0000001E	[146] literal string: DNS error dp already enlisted
0x002B4EED	0x0000000E	[146] literal string: QOS receivers
0x002B4EFB	0x0000000C	[146] literal string: QOS senders
0x002B4F07	0x0000000F	[146] literal string: QOS no senders
0x002B4F16	0x00000011	[146] literal string: QOS no receivers
0x002B4F27	0x00000016	[146] literal string: QOS request confirmed
0x002B4F3D	0x00000016	[146] literal string: QOS admission failure
0x002B4F53	0x00000013	[146] literal string: QOS policy failure
0x002B4F66	0x0000000E	[146] literal string: QOS bad style
0x002B4F74	0x0000000F	[146] literal string: QOS bad object
0x002B4F83	0x00000017	[146] literal string: QOS traffic ctrl error
0x002B4F9A	0x00000012	[146] literal string: QOS generic error
0x002B4FAC	0x00000011	[146] literal string: QOS eservicetype
0x002B4FBD	0x0000000E	[146] literal string: QOS eflowspec
0x002B4FCB	0x00000011	[146] literal string: QOS eprovspecbuf
0x002B4FDC	0x00000011	[146] literal string: QOS efilterstyle
0x002B4FED	0x00000010	[146] literal string: QOS efiltertype
0x002B4FFD	0x00000011	[146] literal string: QOS efiltercount
0x002B500E	0x0000000F	[146] literal string: QOS eobjlength
0x002B501D	0x0000000F	[146] literal string: QOS eflowcount
0x002B502C	0x00000012	[146] literal string: QOS eunknownpsobj
0x002B503E	0x0000000F	[146] literal string: QOS epolicyobj
0x002B504D	0x0000000E	[146] literal string: QOS eflowdesc
0x002B505B	0x00000010	[146] literal string: QOS epsflowspec
0x002B506B	0x00000012	[146] literal string: QOS epsfilterspec
0x002B507D	0x0000000F	[146] literal string: QOS esdmodeobj
0x002B508C	0x00000012	[146] literal string: QOS eshaperateobj
0x002B509E	0x00000014	[146] literal string: QOS reserved petype
0x002B50B2	0x00000017	[146] literal string: IPSEC qm policy exists
0x002B50C9	0x0000001A	[146] literal string: IPSEC qm policy not found
0x002B50E3	0x00000017	[146] literal string: IPSEC qm policy in use
0x002B50FA	0x00000017	[146] literal string: IPSEC mm policy exists
0x002B5111	0x0000001A	[146] literal string: IPSEC mm policy not found
0x002B512B	0x00000017	[146] literal string: IPSEC mm policy in use
0x002B5142	0x00000017	[146] literal string: IPSEC mm filter exists
0x002B5159	0x0000001A	[146] literal string: IPSEC mm filter not found
0x002B5173	0x0000001E	[146] literal string: IPSEC transport filter exists
0x002B5191	0x00000021	[146] literal string: IPSEC transport filter not found
0x002B51B2	0x00000015	[146] literal string: IPSEC mm auth exists
0x002B51C7	0x00000018	[146] literal string: IPSEC mm auth not found
0x002B51DF	0x00000015	[146] literal string: IPSEC mm auth in use
0x002B51F4	0x00000022	[146] literal string: IPSEC default mm policy not found
0x002B5216	0x00000020	[146] literal string: IPSEC default mm auth not found
0x002B5236	0x00000022	[146] literal string: IPSEC default qm policy not found
0x002B5258	0x0000001B	[146] literal string: IPSEC tunnel filter exists
0x002B5273	0x0000001E	[146] literal string: IPSEC tunnel filter not found
0x002B5291	0x00000021	[146] literal string: IPSEC mm filter pending deletion
0x002B52B2	0x00000028	[146] literal string: IPSEC transport filter pending deletion
0x002B52DA	0x00000025	[146] literal string: IPSEC tunnel filter pending deletion
0x002B52FF	0x00000021	[146] literal string: IPSEC mm policy pending deletion
0x002B5320	0x0000001F	[146] literal string: IPSEC mm auth pending deletion
0x002B533F	0x00000021	[146] literal string: IPSEC qm policy pending deletion
0x002B5360	0x00000014	[146] literal string: IPSEC IKE auth fail
0x002B5374	0x00000016	[146] literal string: IPSEC IKE attrib fail
0x002B538A	0x0000001E	[146] literal string: IPSEC IKE negotiation pending
0x002B53A8	0x00000023	[146] literal string: IPSEC IKE general processing error
0x002B53CB	0x00000014	[146] literal string: IPSEC IKE timed out
0x002B53DF	0x00000012	[146] literal string: IPSEC IKE no cert
0x002B53F1	0x00000015	[146] literal string: IPSEC IKE sa deleted
0x002B5406	0x00000014	[146] literal string: IPSEC IKE sa reaped
0x002B541A	0x0000001A	[146] literal string: IPSEC IKE mm acquire drop
0x002B5434	0x0000001A	[146] literal string: IPSEC IKE qm acquire drop
0x002B544E	0x00000018	[146] literal string: IPSEC IKE queue drop mm
0x002B5466	0x0000001B	[146] literal string: IPSEC IKE queue drop no mm
0x002B5481	0x0000001B	[146] literal string: IPSEC IKE drop no response
0x002B549C	0x00000018	[146] literal string: IPSEC IKE mm delay drop
0x002B54B4	0x00000018	[146] literal string: IPSEC IKE qm delay drop
0x002B54CC	0x00000010	[146] literal string: IPSEC IKE error
0x002B54DC	0x00000015	[146] literal string: IPSEC IKE crl failed
0x002B54F1	0x0000001C	[146] literal string: IPSEC IKE invalid key usage
0x002B550D	0x0000001C	[146] literal string: IPSEC IKE invalid cert type
0x002B5529	0x00000019	[146] literal string: IPSEC IKE no private key
0x002B5542	0x00000012	[146] literal string: IPSEC IKE dh fail
0x002B5554	0x00000019	[146] literal string: IPSEC IKE invalid header
0x002B556D	0x00000014	[146] literal string: IPSEC IKE no policy
0x002B5581	0x0000001C	[146] literal string: IPSEC IKE invalid signature
0x002B559D	0x00000019	[146] literal string: IPSEC IKE kerberos error
0x002B55B6	0x00000018	[146] literal string: IPSEC IKE no public key
0x002B55CE	0x00000016	[146] literal string: IPSEC IKE process err
0x002B55E4	0x00000019	[146] literal string: IPSEC IKE process err sa
0x002B55FD	0x0000001B	[146] literal string: IPSEC IKE process err prop
0x002B5618	0x0000001C	[146] literal string: IPSEC IKE process err trans
0x002B5634	0x00000019	[146] literal string: IPSEC IKE process err ke
0x002B564D	0x00000019	[146] literal string: IPSEC IKE process err ID
0x002B5666	0x0000001B	[146] literal string: IPSEC IKE process err cert
0x002B5681	0x0000001F	[146] literal string: IPSEC IKE process err cert req
0x002B56A0	0x0000001B	[146] literal string: IPSEC IKE process err hash
0x002B56BB	0x0000001A	[146] literal string: IPSEC IKE process err sig
0x002B56D5	0x0000001C	[146] literal string: IPSEC IKE process err nonce
0x002B56F1	0x0000001D	[146] literal string: IPSEC IKE process err notify
0x002B570E	0x0000001D	[146] literal string: IPSEC IKE process err delete
0x002B572B	0x0000001D	[146] literal string: IPSEC IKE process err vendor
0x002B5748	0x0000001A	[146] literal string: IPSEC IKE invalid payload
0x002B5762	0x00000017	[146] literal string: IPSEC IKE load soft sa
0x002B5779	0x0000001C	[146] literal string: IPSEC IKE soft sa torn down
0x002B5795	0x00000019	[146] literal string: IPSEC IKE invalid cookie
0x002B57AE	0x00000017	[146] literal string: IPSEC IKE no peer cert
0x002B57C5	0x0000001A	[146] literal string: IPSEC IKE peer CRL failed
0x002B57DF	0x00000018	[146] literal string: IPSEC IKE policy change
0x002B57F7	0x00000017	[146] literal string: IPSEC IKE no mm policy
0x002B580E	0x00000014	[146] literal string: IPSEC IKE notcbpriv
0x002B5822	0x00000016	[146] literal string: IPSEC IKE secloadfail
0x002B5838	0x00000016	[146] literal string: IPSEC IKE failsspinit
0x002B584E	0x00000017	[146] literal string: IPSEC IKE failqueryssp
0x002B5865	0x00000015	[146] literal string: IPSEC IKE srvacqfail
0x002B587A	0x00000017	[146] literal string: IPSEC IKE srvquerycred
0x002B5891	0x00000015	[146] literal string: IPSEC IKE getspifail
0x002B58A6	0x00000019	[146] literal string: IPSEC IKE invalid filter
0x002B58BF	0x00000018	[146] literal string: IPSEC IKE out of memory
0x002B58D7	0x00000020	[146] literal string: IPSEC IKE add update key failed
0x002B58F7	0x00000019	[146] literal string: IPSEC IKE invalid policy
0x002B5910	0x00000016	[146] literal string: IPSEC IKE unknown doi
0x002B5926	0x0000001C	[146] literal string: IPSEC IKE invalid situation
0x002B5942	0x00000015	[146] literal string: IPSEC IKE dh failure
0x002B5957	0x00000018	[146] literal string: IPSEC IKE invalid group
0x002B596F	0x00000012	[146] literal string: IPSEC IKE encrypt
0x002B5981	0x00000012	[146] literal string: IPSEC IKE decrypt
0x002B5993	0x00000017	[146] literal string: IPSEC IKE policy match
0x002B59AA	0x00000019	[146] literal string: IPSEC IKE unsupported ID
0x002B59C3	0x00000017	[146] literal string: IPSEC IKE invalid hash
0x002B59DA	0x0000001B	[146] literal string: IPSEC IKE invalid hash alg
0x002B59F5	0x0000001C	[146] literal string: IPSEC IKE invalid hash size
0x002B5A11	0x0000001E	[146] literal string: IPSEC IKE invalid encrypt alg
0x002B5A2F	0x0000001B	[146] literal string: IPSEC IKE invalid auth alg
0x002B5A4A	0x00000016	[146] literal string: IPSEC IKE invalid sig
0x002B5A60	0x00000016	[146] literal string: IPSEC IKE load failed
0x002B5A76	0x00000015	[146] literal string: IPSEC IKE rpc delete
0x002B5A8B	0x00000018	[146] literal string: IPSEC IKE benign reinit
0x002B5AA3	0x0000002C	[146] literal string: IPSEC IKE invalid responder lifetime notify
0x002B5ACF	0x0000001E	[146] literal string: IPSEC IKE invalid cert keylen
0x002B5AED	0x00000013	[146] literal string: IPSEC IKE mm limit
0x002B5B00	0x0000001F	[146] literal string: IPSEC IKE negotiation disabled
0x002B5B1F	0x00000019	[146] literal string: IPSEC IKE neg status end
0x002B5B38	0x00000016	[146] literal string: Sxs section not found
0x002B5B4E	0x00000015	[146] literal string: Sxs can't gen actctx
0x002B5B63	0x0000001E	[146] literal string: Sxs invalid actctxdata format
0x002B5B81	0x00000017	[146] literal string: Sxs assembly not found
0x002B5B98	0x0000001A	[146] literal string: Sxs manifest format error
0x002B5BB2	0x00000019	[146] literal string: Sxs manifest parse error
0x002B5BCB	0x00000020	[146] literal string: Sxs activation context disabled
0x002B5BEB	0x00000012	[146] literal string: Sxs key not found
0x002B5BFD	0x00000015	[146] literal string: Sxs version conflict
0x002B5C12	0x00000017	[146] literal string: Sxs wrong section type
0x002B5C29	0x0000001C	[146] literal string: Sxs thread queries disabled
0x002B5C45	0x00000020	[146] literal string: Sxs process default already set
0x002B5C65	0x0000001B	[146] literal string: Sxs unknown encoding group
0x002B5C80	0x00000015	[146] literal string: Sxs unknown encoding
0x002B5C95	0x0000001E	[146] literal string: Sxs invalid XML namespace URI
0x002B5CB3	0x0000002B	[146] literal string: Sxs root manifest dependency not installed
0x002B5CDE	0x0000002B	[146] literal string: Sxs leaf manifest dependency not installed
0x002B5D09	0x00000029	[146] literal string: Sxs invalid assembly indentity attribute
0x002B5D32	0x00000030	[146] literal string: Sxs manifest missing required default namespace
0x002B5D62	0x00000030	[146] literal string: Sxs manifest invalid required default namespace
0x002B5D92	0x00000033	[146] literal string: Sxs private manifest cross path with reparse point
0x002B5DC5	0x00000017	[146] literal string: Sxs duplicate dll name
0x002B5DDC	0x0000001F	[146] literal string: Sxs duplicate windowclass name
0x002B5DFB	0x00000014	[146] literal string: Sxs duplicate clsid
0x002B5E0F	0x00000012	[146] literal string: Sxs duplicate iid
0x002B5E21	0x00000014	[146] literal string: Sxs duplicate tlbid
0x002B5E35	0x00000015	[146] literal string: Sxs duplicate progid
0x002B5E4A	0x0000001C	[146] literal string: Sxs duplicate assembly name
0x002B5E66	0x00000017	[146] literal string: Sxs file hash mismatch
0x002B5E7D	0x00000017	[146] literal string: Sxs policy parse error
0x002B5E94	0x00000017	[146] literal string: Sxs XML e missingquote
0x002B5EAB	0x00000018	[146] literal string: Sxs XML e commentsyntax
0x002B5EC3	0x0000001B	[146] literal string: Sxs XML e badstartnamechar
0x002B5EDE	0x00000016	[146] literal string: Sxs XML e badnamechar
0x002B5EF4	0x0000001A	[146] literal string: Sxs XML e badcharinstring
0x002B5F0E	0x00000018	[146] literal string: Sxs XML e xmldeclsyntax
0x002B5F26	0x00000016	[146] literal string: Sxs XML e badchardata
0x002B5F3C	0x0000001C	[146] literal string: Sxs XML e missingwhitespace
0x002B5F58	0x0000001A	[146] literal string: Sxs XML e expectingtagend
0x002B5F72	0x0000001B	[146] literal string: Sxs XML e missingsemicolon
0x002B5F8D	0x0000001A	[146] literal string: Sxs XML e unbalancedparen
0x002B5FA7	0x00000018	[146] literal string: Sxs XML e internalerror
0x002B5FBF	0x00000020	[146] literal string: Sxs XML e unexpected whitespace
0x002B5FDF	0x0000001E	[146] literal string: Sxs XML e incomplete encoding
0x002B5FFD	0x00000018	[146] literal string: Sxs XML e missing paren
0x002B6015	0x0000001E	[146] literal string: Sxs XML e expectingclosequote
0x002B6033	0x0000001A	[146] literal string: Sxs XML e multiple colons
0x002B604D	0x0000001A	[146] literal string: Sxs XML e invalid decimal
0x002B6067	0x0000001E	[146] literal string: Sxs XML e invalid hexidecimal
0x002B6085	0x0000001A	[146] literal string: Sxs XML e invalid unicode
0x002B609F	0x00000023	[146] literal string: Sxs XML e whitespaceorquestionmark
0x002B60C2	0x0000001B	[146] literal string: Sxs XML e unexpectedendtag
0x002B60DD	0x00000016	[146] literal string: Sxs XML e unclosedtag
0x002B60F3	0x0000001D	[146] literal string: Sxs XML e duplicateattribute
0x002B6110	0x00000018	[146] literal string: Sxs XML e multipleroots
0x002B6128	0x0000001D	[146] literal string: Sxs XML e invalidatrootlevel
0x002B6145	0x00000015	[146] literal string: Sxs XML e badxmldecl
0x002B615A	0x00000016	[146] literal string: Sxs XML e missingroot
0x002B6170	0x00000018	[146] literal string: Sxs XML e unexpectedeof
0x002B6188	0x0000001B	[146] literal string: Sxs XML e badperefinsubset
0x002B61A3	0x0000001B	[146] literal string: Sxs XML e unclosedstarttag
0x002B61BE	0x00000019	[146] literal string: Sxs XML e unclosedendtag
0x002B61D7	0x00000019	[146] literal string: Sxs XML e unclosedstring
0x002B61F0	0x0000001A	[146] literal string: Sxs XML e unclosedcomment
0x002B620A	0x00000017	[146] literal string: Sxs XML e uncloseddecl
0x002B6221	0x00000018	[146] literal string: Sxs XML e unclosedcdata
0x002B6239	0x0000001C	[146] literal string: Sxs XML e reservednamespace
0x002B6255	0x0000001A	[146] literal string: Sxs XML e invalidencoding
0x002B626F	0x00000018	[146] literal string: Sxs XML e invalidswitch
0x002B6287	0x00000015	[146] literal string: Sxs XML e badxmlcase
0x002B629C	0x0000001D	[146] literal string: Sxs XML e invalid standalone
0x002B62B9	0x00000020	[146] literal string: Sxs XML e unexpected standalone
0x002B62D9	0x0000001A	[146] literal string: Sxs XML e invalid version
0x002B62F3	0x00000018	[146] literal string: Sxs XML e missingequals
0x002B630B	0x0000001F	[146] literal string: Sxs protection recovery failed
0x002B632A	0x00000024	[146] literal string: Sxs protection public key too short
0x002B634E	0x00000021	[146] literal string: Sxs protection catalog not valid
0x002B636F	0x0000001B	[146] literal string: Sxs untranslatable hresult
0x002B638A	0x00000024	[146] literal string: Sxs protection catalog file missing
0x002B63AE	0x00000028	[146] literal string: Sxs missing assembly identity attribute
0x002B63D6	0x0000002D	[146] literal string: Sxs invalid assembly identity attribute name
0x002B6403	0x00000008	[146] literal string: Success
0x002B640B	0x0000001F	[146] literal string: Cannot find the specified file
0x002B642A	0x00000014	[146] literal string: Too many open files
0x002B643E	0x0000000E	[146] literal string: Access denied
0x002B644C	0x0000000F	[146] literal string: Invalid handle
0x002B645B	0x0000000D	[146] literal string: Invalid data
0x002B6468	0x00000010	[146] literal string: Not same device
0x002B6478	0x0000000E	[146] literal string: No more files
0x002B6486	0x0000000B	[146] literal string: Bad length
0x002B6491	0x00000010	[146] literal string: General failure
0x002B64A1	0x00000012	[146] literal string: Sharing violation
0x002B64B3	0x0000000F	[146] literal string: Lock violation
0x002B64C2	0x00000018	[146] literal string: Operation not supported
0x002B64DA	0x00000012	[146] literal string: Invalid parameter
0x002B64EC	0x00000015	[146] literal string: Call not implemented
0x002B6501	0x0000000D	[146] literal string: Invalid name
0x002B650E	0x00000012	[146] literal string: Process not found
0x002B6520	0x0000000F	[146] literal string: Already exists
0x002B652F	0x0000000F	[146] literal string: Is a directory
0x002B653E	0x00000012	[146] literal string: Operation aborted
0x002B6550	0x00000012	[146] literal string: Encryption failed
0x002B6562	0x0000000C	[146] literal string: interrupted
0x002B656E	0x00000010	[146] literal string: Bad file number
0x002B657E	0x0000000C	[146] literal string: Bad address
0x002B658A	0x00000012	[146] literal string: Invalid arguments
0x002B659C	0x0000002D	[146] literal string: Operation on non-blocking socket would block
0x002B65C9	0x00000016	[146] literal string: Operation in progress
0x002B65DF	0x0000001E	[146] literal string: Operation already in progress
0x002B65FD	0x0000001F	[146] literal string: The descriptor is not a socket
0x002B661C	0x0000001D	[146] literal string: Destination address required
0x002B6639	0x00000011	[146] literal string: Message too long
0x002B664A	0x0000001F	[146] literal string: Protocol wrong type for socket
0x002B6669	0x0000001E	[146] literal string: Protocol option not supported
0x002B6687	0x00000017	[146] literal string: Protocol not supported
0x002B669E	0x00000015	[146] literal string: Socket not supported
0x002B66B3	0x0000001E	[146] literal string: Protocol family not supported
0x002B66D1	0x0000003D	[146] literal string: An address incompatible with the requested protocol was used
0x002B670E	0x00000017	[146] literal string: Address already in use
0x002B6725	0x00000033	[146] literal string: The requested address is not valid in this context
0x002B6758	0x0000001A	[146] literal string: Network subsystem is down
0x002B6772	0x00000017	[146] literal string: Network is unreachable
0x002B6789	0x00000031	[146] literal string: Connection broken, keep-alive detected a problem
0x002B67BA	0x0000003C	[146] literal string: An established connection was aborted in your host machine.
0x002B67F6	0x00000019	[146] literal string: Connection reset by peer
0x002B680F	0x00000025	[146] literal string: Not enough buffer space is available
0x002B6834	0x0000001C	[146] literal string: Socket is already connected
0x002B6850	0x0000001C	[146] literal string: The socket is not connected
0x002B686C	0x0000001E	[146] literal string: The socket has been shut down
0x002B688A	0x00000023	[146] literal string: Too many references: cannot splice
0x002B68AD	0x00000015	[146] literal string: Connection timed out
0x002B68C2	0x00000024	[146] literal string: Too many symbolic links encountered
0x002B68E6	0x00000013	[146] literal string: File name too long
0x002B68F9	0x0000000D	[146] literal string: Host is down
0x002B6906	0x00000011	[146] literal string: No route to host
0x002B6917	0x00000009	[146] literal string: EPROCLIM
0x002B6920	0x0000000F	[146] literal string: Too many users
0x002B692F	0x0000000F	[146] literal string: Quota exceeded
0x002B693E	0x00000016	[146] literal string: Stale NFS file handle
0x002B6954	0x00000011	[146] literal string: Object is remote
0x002B6965	0x0000000C	[146] literal string: SYSNOTREADY
0x002B6971	0x00000010	[146] literal string: VERNOTSUPPORTED
0x002B6981	0x00000018	[146] literal string: Winsock not initialised
0x002B6999	0x00000008	[146] literal string: EDISCON
0x002B69A1	0x00000008	[146] literal string: ENOMORE
0x002B69A9	0x00000013	[146] literal string: Operation canceled
0x002B69BC	0x00000012	[146] literal string: EINVALIDPROCTABLE
0x002B69CE	0x00000011	[146] literal string: EINVALIDPROVIDER
0x002B69DF	0x00000014	[146] literal string: EPROVIDERFAILEDINIT
0x002B69F3	0x00000013	[146] literal string: System call failed
0x002B6A06	0x00000012	[146] literal string: SERVICE_NOT_FOUND
0x002B6A18	0x0000000F	[146] literal string: TYPE_NOT_FOUND
0x002B6A27	0x0000000A	[146] literal string: E_NO_MORE
0x002B6A31	0x0000000C	[146] literal string: E_CANCELLED
0x002B6A3D	0x00000009	[146] literal string: EREFUSED
0x002B6A46	0x00000016	[146] literal string: No such host is known
0x002B6A5C	0x0000004E	[146] literal string: A temporary error occurred on an authoritative name server.  Try again later.
0x002B6AAA	0x0000000C	[146] literal string: No recovery
0x002B6AB6	0x00000019	[148] literal string: own: %5d:%5p, count: %5u
0x002B6ACF	0x0000002C	[148] literal string: ../../../../../mono/mono/io-layer/mutexes.c
0x002B6AFB	0x00000025	[148] literal string: %s: error opening named mutex handle
0x002B6B20	0x0000000F	[148] literal string: wapi_OpenMutex
0x002B6B2F	0x0000002B	[148] literal string: %s: error looking up named mutex handle %p
0x002B6B5A	0x00000013	[148] literal string: namedmutex_release
0x002B6B6D	0x00000025	[148] literal string: %s: error looking up mutex handle %p
0x002B6B92	0x0000000E	[148] literal string: mutex_release
0x002B6BA0	0x00000020	[148] literal string: %s: error creating mutex handle
0x002B6BC0	0x00000012	[148] literal string: namedmutex_create
0x002B6BD2	0x0000000D	[148] literal string: mutex_create
0x002B6BDF	0x00000013	[148] literal string: namedmutex_abandon
0x002B6BF2	0x0000000E	[148] literal string: mutex_abandon
0x002B6C00	0x00000013	[148] literal string: namedmutex_prewait
0x002B6C13	0x00000014	[148] literal string: namedmutex_is_owned
0x002B6C27	0x0000000F	[148] literal string: namedmutex_own
0x002B6C36	0x0000000F	[148] literal string: mutex_is_owned
0x002B6C45	0x0000000A	[148] literal string: mutex_own
0x002B6C4F	0x00000017	[149] literal string: _wapi_stdhandle_create
0x002B6C66	0x0000000E	[150] literal string: /usr/bin/open
0x002B6C74	0x00000013	[150] literal string: CreateProcess: %s

0x002B6C87	0x00000022	[150] literal string: %s: error creating process handle
0x002B6CA9	0x00000013	[150] literal string: wapi_CreateProcess
0x002B6CBC	0x0000002E	[150] literal string: ../../../../../mono/mono/io-layer/processes.c
0x002B6CEA	0x00000027	[150] literal string: %s: error looking up process handle %p
0x002B6D11	0x00000031	[150] literal string: %s: could not create exit semaphore for process.
0x002B6D42	0x00000010	[150] literal string: current_process
0x002B6D52	0x00000051	[150] literal string: (GPOINTER_TO_UINT (handle) & _WAPI_PROCESS_UNHANDLED) != _WAPI_PROCESS_UNHANDLED
0x002B6DA3	0x0000000D	[150] literal string: process_wait
0x002B6DB0	0x00000032	[150] literal string: sigaction (SIGCHLD, &sa, &previous_chld_sa) != -1
0x002B6DE2	0x00000007	[150] literal string: __DATA
0x002B6DE9	0x00000007	[150] literal string: __data
0x002B6DF0	0x00000005	[150] literal string: r--p
0x002B6DF5	0x00000028	[150] literal string: !WAPI_IS_PSEUDO_PROCESS_HANDLE (handle)
0x002B6E1D	0x0000000F	[150] literal string: process_handle
0x002B6E2C	0x00000013	[152] literal string: val: %5u, max: %5d
0x002B6E3F	0x0000002F	[152] literal string: ../../../../../mono/mono/io-layer/semaphores.c
0x002B6E6E	0x00000023	[152] literal string: %s: error opening named sem handle
0x002B6E91	0x00000013	[152] literal string: wapi_OpenSemaphore
0x002B6EA4	0x00000023	[152] literal string: %s: error looking up sem handle %p
0x002B6EC7	0x00000011	[152] literal string: namedsem_release
0x002B6ED8	0x0000000C	[152] literal string: sem_release
0x002B6EE4	0x00000024	[152] literal string: %s: error creating named sem handle
0x002B6F08	0x00000010	[152] literal string: namedsem_create
0x002B6F18	0x00000024	[152] literal string: %s: error creating semaphore handle
0x002B6F3C	0x0000000B	[152] literal string: sem_create
0x002B6F47	0x00000029	[152] literal string: %s: error looking up named sem handle %p
0x002B6F70	0x0000000E	[152] literal string: namedsema_own
0x002B6F7E	0x00000009	[152] literal string: sema_own
0x002B6F87	0x00000024	[153] literal string: Invalid type in _wapi_shm_attach ()
0x002B6FAB	0x00000026	[154] literal string: %s: error looking up socket handle %p
0x002B6FD1	0x0000000D	[154] literal string: _wapi_accept
0x002B6FDE	0x00000021	[154] literal string: %s: error creating socket handle
0x002B6FFF	0x0000000B	[154] literal string: _wapi_bind
0x002B700A	0x0000000E	[154] literal string: _wapi_connect
0x002B7018	0x00000031	[154] literal string: %s: error looking up socket handle %p (error %d)
0x002B7049	0x00000012	[154] literal string: _wapi_getpeername
0x002B705B	0x00000012	[154] literal string: _wapi_getsockname
0x002B706D	0x00000011	[154] literal string: _wapi_getsockopt
0x002B707E	0x0000000D	[154] literal string: _wapi_listen
0x002B708B	0x0000000F	[154] literal string: _wapi_recvfrom
0x002B709A	0x0000000B	[154] literal string: _wapi_send
0x002B70A5	0x0000000D	[154] literal string: _wapi_sendto
0x002B70B2	0x00000011	[154] literal string: _wapi_setsockopt
0x002B70C3	0x0000000F	[154] literal string: _wapi_shutdown
0x002B70D2	0x0000000D	[154] literal string: _wapi_socket
0x002B70DF	0x0000000E	[154] literal string: wapi_WSAIoctl
0x002B70ED	0x0000000C	[154] literal string: ioctlsocket
0x002B70F9	0x0000000D	[154] literal string: _wapi_select
0x002B7106	0x0000002C	[154] literal string: ../../../../../mono/mono/io-layer/sockets.c
0x002B7132	0x00000013	[154] literal string: overlapped == NULL
0x002B7145	0x00000011	[154] literal string: complete == NULL
0x002B7156	0x0000000E	[154] literal string: _wapi_sendmsg
0x002B7164	0x0000000E	[154] literal string: _wapi_recvmsg
0x002B7172	0x00000012	[154] literal string: socket_disconnect
0x002B7184	0x0000000E	[154] literal string: wapi_sendfile
0x002B7192	0x0000000D	[154] literal string: socket_close
0x002B719F	0x00000011	[156] literal string: \StringFileInfo\
0x002B71B0	0x0000000C	[156] literal string: VarFileInfo
0x002B71BC	0x0000000F	[156] literal string: StringFileInfo
0x002B71CB	0x00000019	[156] literal string: Process Default Language
0x002B71E4	0x00000016	[156] literal string: Arabic (Saudi Arabia)
0x002B71FA	0x0000000E	[156] literal string: Arabic (Iraq)
0x002B7208	0x0000000F	[156] literal string: Arabic (Egypt)
0x002B7217	0x0000000F	[156] literal string: Arabic (Libya)
0x002B7226	0x00000011	[156] literal string: Arabic (Algeria)
0x002B7237	0x00000011	[156] literal string: Arabic (Morocco)
0x002B7248	0x00000011	[156] literal string: Arabic (Tunisia)
0x002B7259	0x0000000E	[156] literal string: Arabic (Oman)
0x002B7267	0x0000000F	[156] literal string: Arabic (Yemen)
0x002B7276	0x0000000F	[156] literal string: Arabic (Syria)
0x002B7285	0x00000010	[156] literal string: Arabic (Jordan)
0x002B7295	0x00000011	[156] literal string: Arabic (Lebanon)
0x002B72A6	0x00000010	[156] literal string: Arabic (Kuwait)
0x002B72B6	0x00000010	[156] literal string: Arabic (U.A.E.)
0x002B72C6	0x00000011	[156] literal string: Arabic (Bahrain)
0x002B72D7	0x0000000F	[156] literal string: Arabic (Qatar)
0x002B72E6	0x00000015	[156] literal string: Bulgarian (Bulgaria)
0x002B72FB	0x0000000A	[156] literal string: Bulgarian
0x002B7305	0x00000010	[156] literal string: Catalan (Spain)
0x002B7315	0x00000008	[156] literal string: Catalan
0x002B731D	0x00000011	[156] literal string: Chinese (Taiwan)
0x002B732E	0x0000000E	[156] literal string: Chinese (PRC)
0x002B733C	0x0000001B	[156] literal string: Chinese (Hong Kong S.A.R.)
0x002B7357	0x00000014	[156] literal string: Chinese (Singapore)
0x002B736B	0x00000017	[156] literal string: Chinese (Macau S.A.R.)
0x002B7382	0x00000017	[156] literal string: Czech (Czech Republic)
0x002B7399	0x00000006	[156] literal string: Czech
0x002B739F	0x00000011	[156] literal string: Danish (Denmark)
0x002B73B0	0x00000007	[156] literal string: Danish
0x002B73B7	0x00000011	[156] literal string: German (Germany)
0x002B73C8	0x00000015	[156] literal string: German (Switzerland)
0x002B73DD	0x00000011	[156] literal string: German (Austria)
0x002B73EE	0x00000014	[156] literal string: German (Luxembourg)
0x002B7402	0x00000017	[156] literal string: German (Liechtenstein)
0x002B7419	0x0000000F	[156] literal string: Greek (Greece)
0x002B7428	0x00000006	[156] literal string: Greek
0x002B742E	0x00000018	[156] literal string: English (United States)
0x002B7446	0x00000019	[156] literal string: English (United Kingdom)
0x002B745F	0x00000014	[156] literal string: English (Australia)
0x002B7473	0x00000011	[156] literal string: English (Canada)
0x002B7484	0x00000016	[156] literal string: English (New Zealand)
0x002B749A	0x00000012	[156] literal string: English (Ireland)
0x002B74AC	0x00000017	[156] literal string: English (South Africa)
0x002B74C3	0x00000012	[156] literal string: English (Jamaica)
0x002B74D5	0x00000014	[156] literal string: English (Caribbean)
0x002B74E9	0x00000011	[156] literal string: English (Belize)
0x002B74FA	0x0000001E	[156] literal string: English (Trinidad and Tobago)
0x002B7518	0x00000013	[156] literal string: English (Zimbabwe)
0x002B752B	0x00000016	[156] literal string: English (Philippines)
0x002B7541	0x00000010	[156] literal string: English (India)
0x002B7551	0x00000013	[156] literal string: English (Malaysia)
0x002B7564	0x00000014	[156] literal string: English (Singapore)
0x002B7578	0x00000010	[156] literal string: Spanish (Spain)
0x002B7588	0x0000001B	[156] literal string: Spanish (Traditional Sort)
0x002B75A3	0x00000011	[156] literal string: Spanish (Mexico)
0x002B75B4	0x0000001D	[156] literal string: Spanish (International Sort)
0x002B75D1	0x00000014	[156] literal string: Spanish (Guatemala)
0x002B75E5	0x00000015	[156] literal string: Spanish (Costa Rica)
0x002B75FA	0x00000011	[156] literal string: Spanish (Panama)
0x002B760B	0x0000001D	[156] literal string: Spanish (Dominican Republic)
0x002B7628	0x00000014	[156] literal string: Spanish (Venezuela)
0x002B763C	0x00000013	[156] literal string: Spanish (Colombia)
0x002B764F	0x0000000F	[156] literal string: Spanish (Peru)
0x002B765E	0x00000014	[156] literal string: Spanish (Argentina)
0x002B7672	0x00000012	[156] literal string: Spanish (Ecuador)
0x002B7684	0x00000010	[156] literal string: Spanish (Chile)
0x002B7694	0x00000012	[156] literal string: Spanish (Uruguay)
0x002B76A6	0x00000013	[156] literal string: Spanish (Paraguay)
0x002B76B9	0x00000012	[156] literal string: Spanish (Bolivia)
0x002B76CB	0x00000016	[156] literal string: Spanish (El Salvador)
0x002B76E1	0x00000013	[156] literal string: Spanish (Honduras)
0x002B76F4	0x00000014	[156] literal string: Spanish (Nicaragua)
0x002B7708	0x00000016	[156] literal string: Spanish (Puerto Rico)
0x002B771E	0x00000018	[156] literal string: Spanish (United States)
0x002B7736	0x00000012	[156] literal string: Finnish (Finland)
0x002B7748	0x00000008	[156] literal string: Finnish
0x002B7750	0x00000010	[156] literal string: French (France)
0x002B7760	0x00000011	[156] literal string: French (Belgium)
0x002B7771	0x00000010	[156] literal string: French (Canada)
0x002B7781	0x00000015	[156] literal string: French (Switzerland)
0x002B7796	0x00000014	[156] literal string: French (Luxembourg)
0x002B77AA	0x00000010	[156] literal string: French (Monaco)
0x002B77BA	0x00000010	[156] literal string: Hebrew (Israel)
0x002B77CA	0x00000007	[156] literal string: Hebrew
0x002B77D1	0x00000014	[156] literal string: Hungarian (Hungary)
0x002B77E5	0x0000000A	[156] literal string: Hungarian
0x002B77EF	0x00000014	[156] literal string: Icelandic (Iceland)
0x002B7803	0x0000000A	[156] literal string: Icelandic
0x002B780D	0x00000010	[156] literal string: Italian (Italy)
0x002B781D	0x00000016	[156] literal string: Italian (Switzerland)
0x002B7833	0x00000011	[156] literal string: Japanese (Japan)
0x002B7844	0x00000009	[156] literal string: Japanese
0x002B784D	0x0000000F	[156] literal string: Korean (Korea)
0x002B785C	0x00000007	[156] literal string: Korean
0x002B7863	0x00000014	[156] literal string: Dutch (Netherlands)
0x002B7877	0x00000010	[156] literal string: Dutch (Belgium)
0x002B7887	0x00000013	[156] literal string: Norwegian (Bokmal)
0x002B789A	0x00000014	[156] literal string: Norwegian (Nynorsk)
0x002B78AE	0x00000010	[156] literal string: Polish (Poland)
0x002B78BE	0x00000007	[156] literal string: Polish
0x002B78C5	0x00000014	[156] literal string: Portuguese (Brazil)
0x002B78D9	0x00000016	[156] literal string: Portuguese (Portugal)
0x002B78EF	0x00000016	[156] literal string: Romansh (Switzerland)
0x002B7905	0x00000013	[156] literal string: Romanian (Romania)
0x002B7918	0x00000009	[156] literal string: Romanian
0x002B7921	0x00000011	[156] literal string: Russian (Russia)
0x002B7932	0x00000008	[156] literal string: Russian
0x002B793A	0x00000013	[156] literal string: Croatian (Croatia)
0x002B794D	0x00000009	[156] literal string: Croatian
0x002B7956	0x00000010	[156] literal string: Serbian (Latin)
0x002B7966	0x00000013	[156] literal string: Serbian (Cyrillic)
0x002B7979	0x00000022	[156] literal string: Croatian (Bosnia and Herzegovina)
0x002B799B	0x00000028	[156] literal string: Bosnian (Latin, Bosnia and Herzegovina)
0x002B79C3	0x00000028	[156] literal string: Serbian (Latin, Bosnia and Herzegovina)
0x002B79EB	0x0000002B	[156] literal string: Serbian (Cyrillic, Bosnia and Herzegovina)
0x002B7A16	0x0000002B	[156] literal string: Bosnian (Cyrillic, Bosnia and Herzegovina)
0x002B7A41	0x00000012	[156] literal string: Slovak (Slovakia)
0x002B7A53	0x00000007	[156] literal string: Slovak
0x002B7A5A	0x00000013	[156] literal string: Albanian (Albania)
0x002B7A6D	0x00000009	[156] literal string: Albanian
0x002B7A76	0x00000011	[156] literal string: Swedish (Sweden)
0x002B7A87	0x00000008	[156] literal string: Swedish
0x002B7A8F	0x00000012	[156] literal string: Swedish (Finland)
0x002B7AA1	0x00000010	[156] literal string: Thai (Thailand)
0x002B7AB1	0x00000005	[156] literal string: Thai
0x002B7AB6	0x00000011	[156] literal string: Turkish (Turkey)
0x002B7AC7	0x00000008	[156] literal string: Turkish
0x002B7ACF	0x00000024	[156] literal string: Urdu (Islamic Republic of Pakistan)
0x002B7AF3	0x00000005	[156] literal string: Urdu
0x002B7AF8	0x00000017	[156] literal string: Indonesian (Indonesia)
0x002B7B0F	0x0000000B	[156] literal string: Indonesian
0x002B7B1A	0x00000014	[156] literal string: Ukrainian (Ukraine)
0x002B7B2E	0x0000000A	[156] literal string: Ukrainian
0x002B7B38	0x00000015	[156] literal string: Belarusian (Belarus)
0x002B7B4D	0x0000000B	[156] literal string: Belarusian
0x002B7B58	0x00000015	[156] literal string: Slovenian (Slovenia)
0x002B7B6D	0x0000000A	[156] literal string: Slovenian
0x002B7B77	0x00000013	[156] literal string: Estonian (Estonia)
0x002B7B8A	0x00000009	[156] literal string: Estonian
0x002B7B93	0x00000011	[156] literal string: Latvian (Latvia)
0x002B7BA4	0x00000008	[156] literal string: Latvian
0x002B7BAC	0x00000017	[156] literal string: Lithuanian (Lithuania)
0x002B7BC3	0x0000000B	[156] literal string: Lithuanian
0x002B7BCE	0x00000013	[156] literal string: Tajik (Tajikistan)
0x002B7BE1	0x0000000D	[156] literal string: Farsi (Iran)
0x002B7BEE	0x00000006	[156] literal string: Farsi
0x002B7BF4	0x00000016	[156] literal string: Vietnamese (Viet Nam)
0x002B7C0A	0x0000000B	[156] literal string: Vietnamese
0x002B7C15	0x00000013	[156] literal string: Armenian (Armenia)
0x002B7C28	0x00000009	[156] literal string: Armenian
0x002B7C31	0x0000001B	[156] literal string: Azeri (Latin) (Azerbaijan)
0x002B7C4C	0x0000000E	[156] literal string: Azeri (Latin)
0x002B7C5A	0x00000011	[156] literal string: Azeri (Cyrillic)
0x002B7C6B	0x0000000F	[156] literal string: Basque (Spain)
0x002B7C7A	0x00000007	[156] literal string: Basque
0x002B7C81	0x00000018	[156] literal string: Upper Sorbian (Germany)
0x002B7C99	0x00000018	[156] literal string: Lower Sorbian (Germany)
0x002B7CB1	0x00000038	[156] literal string: FYRO Macedonian (Former Yugoslav Republic of Macedonia)
0x002B7CE9	0x00000010	[156] literal string: FYRO Macedonian
0x002B7CF9	0x00000016	[156] literal string: Tswana (South Africa)
0x002B7D0F	0x00000007	[156] literal string: Tswana
0x002B7D16	0x00000015	[156] literal string: Xhosa (South Africa)
0x002B7D2B	0x00000006	[156] literal string: Xhosa
0x002B7D31	0x00000014	[156] literal string: Zulu (South Africa)
0x002B7D45	0x00000005	[156] literal string: Zulu
0x002B7D4A	0x00000019	[156] literal string: Afrikaans (South Africa)
0x002B7D63	0x0000000A	[156] literal string: Afrikaans
0x002B7D6D	0x00000013	[156] literal string: Georgian (Georgia)
0x002B7D80	0x00000009	[156] literal string: Georgian
0x002B7D89	0x00000018	[156] literal string: Faroese (Faroe Islands)
0x002B7DA1	0x00000008	[156] literal string: Faroese
0x002B7DA9	0x0000000E	[156] literal string: Hindi (India)
0x002B7DB7	0x00000006	[156] literal string: Hindi
0x002B7DBD	0x00000010	[156] literal string: Maltese (Malta)
0x002B7DCD	0x00000008	[156] literal string: Maltese
0x002B7DD5	0x00000019	[156] literal string: Sami (Northern) (Norway)
0x002B7DEE	0x00000018	[156] literal string: Sami, Northern (Norway)
0x002B7E06	0x00000018	[156] literal string: Sami, Northern (Sweden)
0x002B7E1E	0x00000019	[156] literal string: Sami, Northern (Finland)
0x002B7E37	0x00000014	[156] literal string: Sami, Lule (Norway)
0x002B7E4B	0x00000014	[156] literal string: Sami, Lule (Sweden)
0x002B7E5F	0x00000018	[156] literal string: Sami, Southern (Norway)
0x002B7E77	0x00000018	[156] literal string: Sami, Southern (Sweden)
0x002B7E8F	0x00000016	[156] literal string: Sami, Skolt (Finland)
0x002B7EA5	0x00000016	[156] literal string: Sami, Inari (Finland)
0x002B7EBB	0x00000010	[156] literal string: Irish (Ireland)
0x002B7ECB	0x00000011	[156] literal string: Malay (Malaysia)
0x002B7EDC	0x0000001A	[156] literal string: Malay (Brunei Darussalam)
0x002B7EF6	0x00000014	[156] literal string: Kazakh (Kazakhstan)
0x002B7F0A	0x00000007	[156] literal string: Kazakh
0x002B7F11	0x00000014	[156] literal string: Kyrgyz (Kyrgyzstan)
0x002B7F25	0x00000012	[156] literal string: Kyrgyz (Cyrillic)
0x002B7F37	0x00000010	[156] literal string: Swahili (Kenya)
0x002B7F47	0x00000008	[156] literal string: Swahili
0x002B7F4F	0x00000017	[156] literal string: Turkmen (Turkmenistan)
0x002B7F66	0x0000001B	[156] literal string: Uzbek (Latin) (Uzbekistan)
0x002B7F81	0x0000000E	[156] literal string: Uzbek (Latin)
0x002B7F8F	0x00000011	[156] literal string: Uzbek (Cyrillic)
0x002B7FA0	0x0000000F	[156] literal string: Tatar (Russia)
0x002B7FAF	0x00000006	[156] literal string: Tatar
0x002B7FB5	0x00000010	[156] literal string: Bengali (India)
0x002B7FC5	0x00000010	[156] literal string: Punjabi (India)
0x002B7FD5	0x00000008	[156] literal string: Punjabi
0x002B7FDD	0x00000011	[156] literal string: Gujarati (India)
0x002B7FEE	0x00000009	[156] literal string: Gujarati
0x002B7FF7	0x0000000E	[156] literal string: Tamil (India)
0x002B8005	0x00000006	[156] literal string: Tamil
0x002B800B	0x0000000F	[156] literal string: Telugu (India)
0x002B801A	0x00000007	[156] literal string: Telugu
0x002B8021	0x00000010	[156] literal string: Kannada (India)
0x002B8031	0x00000008	[156] literal string: Kannada
0x002B8039	0x00000012	[156] literal string: Malayalam (India)
0x002B804B	0x00000011	[156] literal string: Assamese (India)
0x002B805C	0x00000010	[156] literal string: Marathi (India)
0x002B806C	0x00000008	[156] literal string: Marathi
0x002B8074	0x00000011	[156] literal string: Sanskrit (India)
0x002B8085	0x00000009	[156] literal string: Sanskrit
0x002B808E	0x00000015	[156] literal string: Mongolian (Mongolia)
0x002B80A3	0x00000015	[156] literal string: Mongolian (Cyrillic)
0x002B80B8	0x00000010	[156] literal string: Mongolian (PRC)
0x002B80C8	0x0000000E	[156] literal string: Tibetan (PRC)
0x002B80D6	0x00000011	[156] literal string: Tibetan (Bhutan)
0x002B80E7	0x00000017	[156] literal string: Welsh (United Kingdom)
0x002B80FE	0x00000006	[156] literal string: Welsh
0x002B8104	0x00000011	[156] literal string: Khmer (Cambodia)
0x002B8115	0x0000000E	[156] literal string: Lao (Lao PDR)
0x002B8123	0x00000011	[156] literal string: Galician (Spain)
0x002B8134	0x00000009	[156] literal string: Galician
0x002B813D	0x00000010	[156] literal string: Konkani (India)
0x002B814D	0x00000008	[156] literal string: Konkani
0x002B8155	0x0000000F	[156] literal string: Syriac (Syria)
0x002B8164	0x00000007	[156] literal string: Syriac
0x002B816B	0x00000014	[156] literal string: Sinhala (Sri Lanka)
0x002B817F	0x0000001E	[156] literal string: Inuktitut (Syllabics, Canada)
0x002B819D	0x0000001A	[156] literal string: Inuktitut (Latin, Canada)
0x002B81B7	0x00000013	[156] literal string: Amharic (Ethiopia)
0x002B81CA	0x0000001B	[156] literal string: Tamazight (Algeria, Latin)
0x002B81E5	0x0000000F	[156] literal string: Nepali (Nepal)
0x002B81F4	0x00000016	[156] literal string: Frisian (Netherlands)
0x002B820A	0x00000015	[156] literal string: Pashto (Afghanistan)
0x002B821F	0x00000017	[156] literal string: Filipino (Philippines)
0x002B8236	0x00000012	[156] literal string: Divehi (Maldives)
0x002B8248	0x00000007	[156] literal string: Divehi
0x002B824F	0x00000017	[156] literal string: Hausa (Nigeria, Latin)
0x002B8266	0x00000011	[156] literal string: Yoruba (Nigeria)
0x002B8277	0x00000012	[156] literal string: Quechua (Bolivia)
0x002B8289	0x00000012	[156] literal string: Quechua (Ecuador)
0x002B829B	0x0000000F	[156] literal string: Quechua (Peru)
0x002B82AA	0x0000001E	[156] literal string: Northern Sotho (South Africa)
0x002B82C8	0x0000000F	[156] literal string: Northern Sotho
0x002B82D7	0x00000011	[156] literal string: Bashkir (Russia)
0x002B82E8	0x0000001B	[156] literal string: Luxembourgish (Luxembourg)
0x002B8303	0x00000018	[156] literal string: Greenlandic (Greenland)
0x002B831B	0x00000009	[156] literal string: Yi (PRC)
0x002B8324	0x00000013	[156] literal string: Mapudungun (Chile)
0x002B8337	0x00000010	[156] literal string: Mohawk (Mohawk)
0x002B8347	0x00000010	[156] literal string: Breton (France)
0x002B8357	0x00000027	[156] literal string: Invariant Language (Invariant Country)
0x002B837E	0x0000000D	[156] literal string: Uighur (PRC)
0x002B838B	0x00000014	[156] literal string: Maori (New Zealand)
0x002B839F	0x00000006	[156] literal string: Maori
0x002B83A5	0x00000012	[156] literal string: Corsican (France)
0x002B83B7	0x00000012	[156] literal string: Alsatian (France)
0x002B83C9	0x0000000F	[156] literal string: Yakut (Russia)
0x002B83D8	0x00000013	[156] literal string: K'iche (Guatemala)
0x002B83EB	0x00000015	[156] literal string: Kinyarwanda (Rwanda)
0x002B8400	0x00000010	[156] literal string: Wolof (Senegal)
0x002B8410	0x00000013	[156] literal string: Dari (Afghanistan)
0x002B8423	0x00000011	[156] literal string: Language Neutral
0x002B8434	0x00000030	[156] literal string: ../../../../../mono/mono/io-layer/versioninfo.c
0x002B8464	0x00000010	[156] literal string: unitext != NULL
0x002B8474	0x00000010	[156] literal string: VS_VERSION_INFO
0x002B8484	0x00000029	[157] literal string: ../../../../../mono/mono/io-layer/wait.c
0x002B84AD	0x0000002F	[157] literal string: %s: handle %p has special wait, implement me!!
0x002B84DC	0x00000019	[157] literal string: wapi_SignalObjectAndWait
0x002B84F5	0x0000002D	[159] literal string: ../../../../../mono/mono/io-layer/wthreads.c
0x002B8522	0x00000021	[159] literal string: %s: error creating thread handle
0x002B8543	0x0000001A	[159] literal string: wapi_create_thread_handle
0x002B855D	0x0000002D	[159] literal string: prev_handle == INTERRUPTION_REQUESTED_HANDLE
0x002B858A	0x00000044	[159] literal string: prev_handle == INTERRUPTION_REQUESTED_HANDLE || prev_handle == NULL
0x002B85CE	0x0000001A	[159] literal string: thread handle %p state : 
0x002B85E8	0x0000000C	[159] literal string: not waiting
0x002B85F4	0x00000012	[159] literal string: interrupted state
0x002B8606	0x00000014	[159] literal string: waiting on %p : %s 
0x002B861A	0x00000008	[159] literal string:  owns (
0x002B8622	0x00000005	[159] literal string: , %p
0x002B8627	0x00000003	[159] literal string: %p
0x002B862A	0x0000000D	[159] literal string: info->handle
0x002B8637	0x00000003	[159] literal string: ok
0x002B863A	0x00000030	[162] literal string: ../../../../../mono/mono/utils/hazard-pointer.c
0x002B866A	0x0000002C	[162] literal string: !mono_bitset_test_fast (small_id_table, id)
0x002B8696	0x0000001B	[162] literal string: id < HAZARD_TABLE_MAX_SIZE
0x002B86B1	0x00000015	[162] literal string: hazard_table != NULL
0x002B86C6	0x00000017	[162] literal string: id < hazard_table_size
0x002B86DD	0x00000025	[162] literal string: id >= 0 && id < small_id_table->size
0x002B8702	0x0000002B	[162] literal string: mono_bitset_test_fast (small_id_table, id)
0x002B872D	0x0000002E	[162] literal string: Thread %p may have been prematurely finalized
0x002B875B	0x0000003D	[162] literal string: (hazard_index) >= 0 && (hazard_index) < HAZARD_POINTER_COUNT
0x002B8798	0x00000021	[162] literal string: small_id < HAZARD_TABLE_OVERFLOW
0x002B87B9	0x00000022	[162] literal string: !hp_overflow->hazard_pointers [i]
0x002B87DB	0x00000019	[162] literal string: overflow_busy [small_id]
0x002B87F4	0x00000019	[162] literal string: !hp->hazard_pointers [i]
0x002B880D	0x00000016	[162] literal string: !free_func_might_lock
0x002B8823	0x00000013	[162] literal string: Hazardous pointers
0x002B8836	0x0000000E	[162] literal string: small_id == i
0x002B8844	0x0000001C	[162] literal string: highest < hazard_table_size
0x002B8860	0x00000026	[163] literal string: ../../../../../mono/mono/utils/json.c
0x002B8886	0x00000032	[163] literal string: writer && "Expected a valid JSON writer instance"
0x002B88B8	0x00000003	[163] literal string: [

0x002B88BB	0x00000003	[163] literal string: {

0x002B88BE	0x00000005	[163] literal string: " : 
0x002B88C3	0x00000031	[164] literal string: ../../../../../mono/mono/utils/lock-free-alloc.c
0x002B88F4	0x0000001F	[164] literal string: block_size == desc->block_size
0x002B8913	0x00000056	[164] literal string: new_anchor.data.avail < LOCK_FREE_ALLOC_SB_USABLE_SIZE (block_size) / desc->slot_size
0x002B8969	0x00000025	[164] literal string: old_anchor.data.state != STATE_EMPTY
0x002B898E	0x00000027	[164] literal string: new_anchor.data.state == STATE_PARTIAL
0x002B89B5	0x0000002B	[164] literal string: active->anchor.data.state == STATE_PARTIAL
0x002B89E0	0x00000053	[164] literal string: desc->anchor.data.state == STATE_PARTIAL || desc->anchor.data.state == STATE_EMPTY
0x002B8A33	0x0000000F	[164] literal string: block_size > 0
0x002B8A42	0x00000025	[164] literal string: (block_size & (block_size - 1)) == 0
0x002B8A67	0x0000003D	[164] literal string: slot_size * 2 <= LOCK_FREE_ALLOC_SB_USABLE_SIZE (block_size)
0x002B8AA4	0x00000026	[164] literal string: desc->anchor.data.state != STATE_FULL
0x002B8ACA	0x00000015	[164] literal string: desc->heap->sc == sc
0x002B8ADF	0x00000027	[164] literal string: desc->anchor.data.state == STATE_EMPTY
0x002B8B06	0x0000000D	[164] literal string: desc->in_use
0x002B8B13	0x0000000E	[164] literal string: !desc->in_use
0x002B8B21	0x00000038	[164] literal string: (char*)sb_header + LOCK_FREE_ALLOC_SB_HEADER_SIZE == sb
0x002B8B59	0x00000025	[164] literal string: new_anchor.data.state == STATE_EMPTY
0x002B8B7E	0x0000003E	[164] literal string: sb_header == sb_header_for_addr (sb_header, desc->block_size)
0x002B8BBC	0x00000027	[164] literal string: old_anchor.data.state == STATE_PARTIAL
0x002B8BE3	0x0000001A	[164] literal string: old_anchor.data.count > 0
0x002B8BFD	0x0000004B	[164] literal string: next < LOCK_FREE_ALLOC_SB_USABLE_SIZE (desc->block_size) / desc->slot_size
0x002B8C48	0x00000037	[165] literal string: ../../../../../mono/mono/utils/lock-free-array-queue.c
0x002B8C7F	0x0000000B	[165] literal string: index >= 0
0x002B8C8A	0x00000031	[166] literal string: ../../../../../mono/mono/utils/lock-free-queue.c
0x002B8CBB	0x0000001B	[166] literal string: node->next == INVALID_NEXT
0x002B8CD6	0x00000018	[166] literal string: node->next == FREE_NEXT
0x002B8CEE	0x0000002A	[166] literal string: next != INVALID_NEXT && next != FREE_NEXT
0x002B8D18	0x0000000D	[166] literal string: next != tail
0x002B8D25	0x0000000D	[166] literal string: next != head
0x002B8D32	0x00000013	[166] literal string: next != END_MARKER
0x002B8D45	0x0000000B	[166] literal string: head->next
0x002B8D50	0x0000000D	[166] literal string: q->has_dummy
0x002B8D5D	0x0000000E	[166] literal string: dummy->in_use
0x002B8D6B	0x00000032	[167] literal string: ../../../../../mono/mono/utils/mach-support-x86.c
0x002B8D9D	0x00000014	[167] literal string: old_value != canary
0x002B8DB1	0x00000027	[167] literal string: could not discover the mach TLS offset
0x002B8DD8	0x00000014	[168] literal string: Dynamic code allocs
0x002B8DEC	0x00000013	[168] literal string: Dynamic code bytes
0x002B8DFF	0x00000013	[168] literal string: Dynamic code frees
0x002B8E12	0x0000002E	[168] literal string: ../../../../../mono/mono/utils/mono-codeman.c
0x002B8E40	0x00000011	[168] literal string: !cman->read_only
0x002B8E51	0x00000017	[168] literal string: alignment <= MIN_ALIGN
0x002B8E68	0x00000010	[168] literal string: newsize <= size
0x002B8E78	0x00000035	[169] literal string: ../../../../../mono/mono/utils/mono-conc-hashtable.c
0x002B8EAD	0x00000020	[169] literal string: key != NULL && key != TOMBSTONE
0x002B8ECD	0x0000000E	[169] literal string: value != NULL
0x002B8EDB	0x0000002F	[171] literal string: ../../../../../mono/mono/utils/mono-counters.c
0x002B8F0A	0x00000015	[171] literal string: counters not enabled
0x002B8F1F	0x00000010	[171] literal string: 
%s statistics

0x002B8F2F	0x0000000B	[171] literal string: %-36s: %d

0x002B8F3A	0x0000000B	[171] literal string: %-36s: %u

0x002B8F45	0x00000010	[171] literal string: %-36s: %.2f ms

0x002B8F55	0x0000000D	[171] literal string: %-36s: %lld

0x002B8F62	0x0000000D	[171] literal string: %-36s: %llu

0x002B8F6F	0x0000000C	[171] literal string: %-36s: %zd

0x002B8F7B	0x0000000D	[171] literal string: %-36s: %.4f

0x002B8F88	0x0000000B	[171] literal string: %-36s: %s

0x002B8F93	0x0000000A	[171] literal string: User Time
0x002B8F9D	0x0000000C	[171] literal string: System Time
0x002B8FA9	0x0000000B	[171] literal string: Total Time
0x002B8FB4	0x0000000C	[171] literal string: Working Set
0x002B8FC0	0x0000000E	[171] literal string: Private Bytes
0x002B8FCE	0x0000000E	[171] literal string: Virtual Bytes
0x002B8FDC	0x0000000C	[171] literal string: Page Faults
0x002B8FE8	0x00000018	[171] literal string: CPU Load Average - 1min
0x002B9000	0x00000018	[171] literal string: CPU Load Average - 5min
0x002B9018	0x00000019	[171] literal string: CPU Load Average - 15min
0x002B9031	0x0000000A	[171] literal string: size >= 0
0x002B903B	0x00000033	[171] literal string: you are registering twice the same counter address
0x002B906E	0x00000004	[172] literal string: .so
0x002B9072	0x00000008	[172] literal string: .bundle
0x002B907A	0x00000009	[172] literal string: /usr/lib
0x002B9083	0x00000004	[174] literal string: .la
0x002B9087	0x00000029	[174] literal string: ../../../../../mono/mono/utils/mono-dl.c
0x002B90B0	0x00000012	[174] literal string: load_func != NULL
0x002B90C2	0x00000014	[174] literal string: symbol_func != NULL
0x002B90D6	0x00000009	[174] literal string: %s/.libs
0x002B90DF	0x00000007	[174] literal string: %s/lib
0x002B90E6	0x0000000D	[174] literal string: %s/Libraries
0x002B90F3	0x00000007	[174] literal string: dlname
0x002B90FA	0x00000007	[174] literal string: libdir
0x002B9101	0x0000000A	[174] literal string: installed
0x002B910B	0x00000008	[174] literal string: /.libs/
0x002B9113	0x000000DA	[175] literal string: Cannot resolve dependency to assembly because it has not been preloaded. When using the ReflectionOnly APIs, dependent assemblies must be pre-loaded or loaded on demand through the ReflectionOnlyAssemblyResolve event.
0x002B91ED	0x0000003C	[175] literal string: Could not load file or assembly or one of its dependencies.
0x002B9229	0x0000000B	[175] literal string: <no_image>
0x002B9234	0x00000041	[175] literal string: Runtime tried to produce a mono-error from an empty loader-error
0x002B9275	0x00000044	[175] literal string: Runtime tried to produce a mono-error from a non-error loader-error
0x002B92B9	0x00000012	[175] literal string: SecurityException
0x002B92CB	0x0000001C	[175] literal string: Failed for unknown reasons.
0x002B92E7	0x00000041	[175] literal string: Runtime tried to produce a mono-error from JIT internal error %d
0x002B9328	0x00000034	[175] literal string: Runtime tried to produce an unknown loader-error %d
0x002B935C	0x0000001B	[175] literal string: Non translatable error: %s
0x002B9377	0x0000001F	[175] literal string: Could not allocate method name
0x002B9396	0x0000001E	[175] literal string: Could not allocate field name
0x002B93B4	0x00000021	[175] literal string: Could not allocate assembly name
0x002B93D5	0x0000001B	[175] literal string: Could not allocate message
0x002B93F0	0x00000018	[175] literal string: BadImageFormatException
0x002B9408	0x00000012	[175] literal string: Error in %s:%s %s
0x002B941A	0x00000040	[175] literal string: MonoError with generic error but no exception name was supplied
0x002B945A	0x00000016	[175] literal string: Invalid error-code %d
0x002B9470	0x00000024	[175] literal string: Could not allocate exception object
0x002B9494	0x0000002C	[175] literal string: ../../../../../mono/mono/utils/mono-error.c
0x002B94C0	0x0000001F	[175] literal string: mono_error_ok (&second_chance)
0x002B94DF	0x0000001D	[175] literal string: Could not allocate type name
0x002B94FC	0x00000013	[175] literal string: <unknown assembly>
0x002B950F	0x0000000F	[175] literal string: <unknown type>
0x002B951E	0x00000003	[176] literal string: rb
0x002B9521	0x0000000A	[177] literal string: /proc/xen
0x002B952B	0x0000001C	[177] literal string: mono_hwcap_x86_is_xen = %i

0x002B9547	0x0000001E	[177] literal string: mono_hwcap_x86_has_cmov = %i

0x002B9565	0x0000001F	[177] literal string: mono_hwcap_x86_has_fcmov = %i

0x002B9584	0x0000001E	[177] literal string: mono_hwcap_x86_has_sse1 = %i

0x002B95A2	0x0000001E	[177] literal string: mono_hwcap_x86_has_sse2 = %i

0x002B95C0	0x0000001E	[177] literal string: mono_hwcap_x86_has_sse3 = %i

0x002B95DE	0x0000001F	[177] literal string: mono_hwcap_x86_has_ssse3 = %i

0x002B95FD	0x0000001F	[177] literal string: mono_hwcap_x86_has_sse41 = %i

0x002B961C	0x0000001F	[177] literal string: mono_hwcap_x86_has_sse42 = %i

0x002B963B	0x0000001F	[177] literal string: mono_hwcap_x86_has_sse4a = %i

0x002B965A	0x00000013	[178] literal string: MONO_VERBOSE_HWCAP
0x002B966D	0x00000018	[178] literal string: MONO_CONSERVATIVE_HWCAP
0x002B9685	0x00000034	[179] literal string: ../../../../../mono/mono/utils/mono-internal-hash.c
0x002B96B9	0x00000015	[179] literal string: table->table != NULL
0x002B96CE	0x00000021	[179] literal string: table->key_extract(value) == key
0x002B96EF	0x00000025	[179] literal string: *(table->next_value (value)) == NULL
0x002B9714	0x00000035	[179] literal string: mono_internal_hash_table_lookup (table, key) == NULL
0x002B9749	0x0000000B	[180] literal string: MONO_IOMAP
0x002B9754	0x00000006	[180] literal string: drive
0x002B975A	0x00000005	[180] literal string: case
0x002B975F	0x0000001E	[180] literal string:  - Requested file path: '%s'

0x002B977D	0x00000002	[180] literal string: \
0x002B977F	0x0000001B	[180] literal string:  - Stripped drive letter.

0x002B979A	0x00000036	[181] literal string: ../../../../../mono/mono/utils/mono-linked-list-set.c
0x002B97D0	0x0000000D	[181] literal string: cur == value
0x002B97DD	0x00000046	[182] literal string: %s: cannot use mono_trace_push without calling mono_trace_init first.
0x002B9823	0x00000010	[182] literal string: mono_trace_push
0x002B9833	0x00000045	[182] literal string: %s: cannot use mono_trace_pop without calling mono_trace_init first.
0x002B9878	0x0000000F	[182] literal string: mono_trace_pop
0x002B9887	0x00000006	[182] literal string: error
0x002B988D	0x00000009	[182] literal string: critical
0x002B9896	0x00000008	[182] literal string: warning
0x002B989E	0x00000008	[182] literal string: message
0x002B98A6	0x00000006	[182] literal string: debug
0x002B98AC	0x0000001C	[182] literal string: Unknown trace loglevel: %s

0x002B98C8	0x00000004	[182] literal string: asm
0x002B98CC	0x00000003	[182] literal string: gc
0x002B98CF	0x00000004	[182] literal string: cfg
0x002B98D3	0x00000009	[182] literal string: security
0x002B98DC	0x00000018	[182] literal string: Unknown trace flag: %s

0x002B98F4	0x0000002D	[182] literal string: ../../../../../mono/mono/utils/mono-logger.c
0x002B9921	0x00000009	[182] literal string: callback
0x002B992A	0x00000005	[182] literal string: Mono
0x002B992F	0x0000000E	[182] literal string: MONO_LOG_MASK
0x002B993D	0x0000000F	[182] literal string: MONO_LOG_LEVEL
0x002B994C	0x0000000A	[183] literal string: /dev/zero
0x002B9956	0x00000009	[183] literal string: /mono.%d
0x002B995F	0x0000002B	[183] literal string: ../../../../../mono/mono/utils/mono-mmap.c
0x002B998A	0x00000063	[183] literal string: aligned >= mem && aligned + size <= mem + size + alignment && !((size_t)aligned & (alignment - 1))
0x002B99ED	0x0000000A	[183] literal string: /dev/shm/
0x002B99F7	0x00000006	[183] literal string: mono.
0x002B99FD	0x00000019	[183] literal string: MONO_DISABLE_SHARED_AREA
0x002B9A16	0x0000002C	[184] literal string: ../../../../../mono/mono/utils/mono-mutex.c
0x002B9A42	0x0000001F	[184] literal string: pthread_mutexattr_setpolicy_np
0x002B9A61	0x0000000E	[185] literal string: /proc/net/dev
0x002B9A6F	0x0000002E	[185] literal string: %ld%ld%ld%ld%ld%ld%ld%*d%ld%ld%ld%ld%ld%ld%ld
0x002B9A9D	0x00000008	[188] literal string: Threads
0x002B9AA5	0x00000006	[188] literal string: VmRSS
0x002B9AAB	0x00000006	[188] literal string: VmHWM
0x002B9AB1	0x00000007	[188] literal string: VmData
0x002B9AB8	0x00000007	[188] literal string: VmSize
0x002B9ABF	0x00000007	[188] literal string: VmPeak
0x002B9AC6	0x00000007	[188] literal string: VmSwap
0x002B9ACD	0x0000000B	[188] literal string: /proc/stat
0x002B9AD8	0x0000002B	[192] literal string: ../../../../../mono/mono/utils/mono-sha1.c
0x002B9B03	0x0000000E	[192] literal string: token != NULL
0x002B9B11	0x00000009	[193] literal string: NSString
0x002B9B1A	0x00000012	[193] literal string: NSAutoreleasePool
0x002B9B2C	0x00000016	[193] literal string: stringWithUTF8String:
0x002B9B42	0x00000007	[193] literal string: retain
0x002B9B49	0x00000009	[193] literal string: NSThread
0x002B9B52	0x00000005	[193] literal string: init
0x002B9B57	0x00000008	[193] literal string: release
0x002B9B5F	0x00000008	[193] literal string: dealloc
0x002B9B67	0x0000000E	[193] literal string: currentThread
0x002B9B75	0x00000011	[193] literal string: threadDictionary
0x002B9B86	0x00000012	[193] literal string: setObject:forKey:
0x002B9B98	0x0000000E	[193] literal string: objectForKey:
0x002B9BA6	0x0000000F	[193] literal string: MonoDeadLetter
0x002B9BB5	0x00000004	[193] literal string: v@:
0x002B9BB9	0x00000011	[193] literal string: mono-dead-letter
0x002B9BCA	0x00000033	[194] literal string: ../../../../../mono/mono/utils/mono-threads-mach.c
0x002B9BFD	0x00000034	[195] literal string: ../../../../../mono/mono/utils/mono-threads-posix.c
0x002B9C31	0x00000005	[195] literal string: !res
0x002B9C36	0x0000002B	[195] literal string: mono_threads_get_callbacks ()->thread_exit
0x002B9C61	0x0000002E	[196] literal string: ../../../../../mono/mono/utils/mono-threads.c
0x002B9C8F	0x00000019	[196] literal string: info->suspend_count == 0
0x002B9CA8	0x00000004	[196] literal string: ret
0x002B9CAC	0x00000014	[196] literal string: !info->async_target
0x002B9CC0	0x00000023	[196] literal string: id != mono_native_thread_id_get ()
0x002B9CE3	0x00000014	[196] literal string: info->suspend_count
0x002B9CF7	0x00000035	[196] literal string: (current > *staddr) && (current < *staddr + *stsize)
0x002B9D2C	0x00000020	[196] literal string: mono_thread_info_get_tid (info)
0x002B9D4C	0x00000040	[196] literal string: mono_thread_info_get_tid (info) == mono_native_thread_id_get ()
0x002B9D8C	0x0000002A	[198] literal string: ../../../../../mono/mono/utils/mono-tls.c
0x002B9DB6	0x00000015	[198] literal string: tls_offset_set [key]
0x002B9DCB	0x00000011	[199] literal string: 0123456789ABCDEF
0x002B9DDC	0x0000002C	[200] literal string: ../../../../../mono/mono/utils/monobitset.c
0x002B9E08	0x00000010	[200] literal string: pos < set->size
0x002B9E18	0x00000018	[200] literal string: dest->size <= src->size
0x002B9E30	0x00000018	[200] literal string: src->size <= dest->size
0x002B9E48	0x00000019	[200] literal string: src1->size <= dest->size
0x002B9E61	0x00000019	[200] literal string: src2->size <= dest->size
0x002B9E7A	0x00000004	[201] literal string: tcp
0x002B9E7E	0x00000003	[201] literal string: ip
0x002B9E81	0x00000005	[201] literal string: ipv6
0x002B9E86	0x00000032	[201] literal string: ../../../../../mono/mono/utils/networking-posix.c
0x002B9EB8	0x0000004F	[201] literal string: result_ptr <= (char*)result + if_count * mono_address_size_for_family (family)
0x002B9F07	0x00000020	[202] literal string: Cannot handle address family %d
0x002B9F27	0x00000018	[203] literal string: MONO_EXTERNAL_ENCODINGS
0x002B9F3F	0x0000000F	[203] literal string: default_locale
0x002B9F4E	0x00000028	[203] literal string: ../../../../../mono/mono/utils/strenc.c
0x002B9F76	0x0000000B	[203] literal string: utf8!=NULL
0x002B9F81	0x00000027	[205] literal string: ../../../../../mono/eglib/src/garray.c
0x002B9FA8	0x0000000C	[205] literal string: length >= 0
0x002B9FB4	0x0000002B	[207] literal string: ../../../../../mono/eglib/src/gdate-unix.c
0x002B9FDF	0x0000000F	[207] literal string: result != NULL
0x002B9FEE	0x0000002A	[208] literal string: ../../../../../mono/eglib/src/gdir-unix.c
0x002BA018	0x0000000D	[208] literal string: path != NULL
0x002BA025	0x00000020	[208] literal string: error == NULL || *error == NULL
0x002BA045	0x00000020	[208] literal string: dir != NULL && dir->dir != NULL
0x002BA065	0x0000001D	[208] literal string: dir != NULL && dir->dir != 0
0x002BA082	0x00000023	[209] literal string: internal: invalid format string %s
0x002BA0A5	0x00000027	[209] literal string: ../../../../../mono/eglib/src/gerror.c
0x002BA0CC	0x0000000E	[209] literal string: error != NULL
0x002BA0DA	0x0000002C	[210] literal string: ../../../../../mono/eglib/src/gfile-posix.c
0x002BA106	0x00000011	[210] literal string: contents != NULL
0x002BA117	0x00000013	[210] literal string: Error opening file
0x002BA12A	0x00000011	[210] literal string: Error in fstat()
0x002BA13B	0x00000008	[210] literal string: .XXXXXX
0x002BA143	0x0000001F	[210] literal string: Template should not have any /
0x002BA162	0x00000007	[210] literal string: XXXXXX
0x002BA169	0x00000020	[210] literal string: Template should end with XXXXXX
0x002BA189	0x00000013	[210] literal string: Error in mkstemp()
0x002BA19C	0x00000009	[212] literal string: %.*s.%s~
0x002BA1A5	0x0000000A	[212] literal string: FileError
0x002BA1AF	0x0000002B	[213] literal string: ../../../../../mono/eglib/src/ghashtable.c
0x002BA1DA	0x00000034	[213] literal string: Size: %d Table Size: %d Max Chain Length: %d at %d

0x002BA20E	0x00000017	[213] literal string: iter->slot_index != -2
0x002BA225	0x00000027	[214] literal string: ../../../../../mono/eglib/src/giconv.c
0x002BA24C	0x00000013	[214] literal string: to_charset != NULL
0x002BA25F	0x00000015	[214] literal string: from_charset != NULL
0x002BA274	0x00000028	[214] literal string: Conversion from %s to %s not supported.
0x002BA29C	0x0000002E	[214] literal string: Illegal byte sequence encounted in the input.
0x002BA2CA	0x00000030	[214] literal string: Partial byte sequence encountered in the input.
0x002BA2FA	0x0000003C	[214] literal string: Conversions with embedded nulls must pass the string length
0x002BA336	0x0000000D	[214] literal string: ConvertError
0x002BA343	0x0000000B	[214] literal string: ISO-8859-1
0x002BA34E	0x0000000A	[214] literal string: ISO8859-1
0x002BA358	0x00000009	[214] literal string: UTF-32BE
0x002BA361	0x00000009	[214] literal string: UTF-32LE
0x002BA36A	0x00000009	[214] literal string: UTF-16BE
0x002BA373	0x00000007	[214] literal string: UTF-32
0x002BA37A	0x00000007	[214] literal string: UTF-16
0x002BA381	0x00000009	[214] literal string: US-ASCII
0x002BA38A	0x00000007	[214] literal string: Latin1
0x002BA391	0x00000006	[214] literal string: ASCII
0x002BA397	0x00000006	[214] literal string: UTF32
0x002BA39D	0x00000006	[214] literal string: UTF16
0x002BA3A3	0x00000005	[214] literal string: UTF8
0x002BA3A8	0x00000028	[216] literal string: ../../../../../mono/eglib/src/gmarkup.c
0x002BA3D0	0x00000010	[216] literal string: context != NULL
0x002BA3E0	0x0000000D	[216] literal string: text != NULL
0x002BA3ED	0x0000000E	[216] literal string: text_len >= 0
0x002BA3FB	0x00000021	[216] literal string: Expected < to start the document
0x002BA41C	0x00000013	[216] literal string: Unfinished element
0x002BA42F	0x00000019	[216] literal string: Expected an element name
0x002BA448	0x00000014	[216] literal string: Expected an element
0x002BA45C	0x00000014	[216] literal string: Unfinished sequence
0x002BA470	0x0000002C	[216] literal string: Too many closing tags, not enough open tags
0x002BA49C	0x0000002C	[216] literal string: Expected an = after the attribute name `%s'
0x002BA4C8	0x00000033	[216] literal string: Expected the attribute value to start with a quote
0x002BA4FB	0x0000001C	[217] literal string: Could not allocate %i bytes
0x002BA517	0x0000002B	[218] literal string: ../../../../../mono/eglib/src/gmisc-unix.c
0x002BA542	0x00000007	[218] literal string: TMPDIR
0x002BA549	0x00000004	[218] literal string: TMP
0x002BA54D	0x00000005	[218] literal string: TEMP
0x002BA552	0x00000005	[218] literal string: /tmp
0x002BA557	0x00000005	[218] literal string: HOME
0x002BA55C	0x00000005	[218] literal string: USER
0x002BA561	0x00000009	[218] literal string: somebody
0x002BA56A	0x00000026	[220] literal string: ../../../../../mono/eglib/src/gpath.c
0x002BA590	0x00000012	[220] literal string: separator != NULL
0x002BA5A2	0x00000010	[220] literal string: program != NULL
0x002BA5B2	0x00000005	[220] literal string: PATH
0x002BA5B7	0x0000002A	[221] literal string: ../../../../../mono/eglib/src/gptrarray.c
0x002BA5E1	0x0000000E	[221] literal string: array != NULL
0x002BA5EF	0x00000013	[221] literal string: index < array->len
0x002BA602	0x00000027	[224] literal string: ../../../../../mono/eglib/src/gshell.c
0x002BA629	0x0000000D	[224] literal string: command_line
0x002BA636	0x00000002	[224] literal string: '
0x002BA638	0x00000004	[224] literal string: '\'
0x002BA63C	0x0000000B	[224] literal string: Open quote
0x002BA647	0x00000013	[224] literal string: Unfinished escape.
0x002BA65A	0x00000012	[224] literal string: Unfinished quote.
0x002BA66C	0x00000027	[226] literal string: ../../../../../mono/eglib/src/gspawn.c
0x002BA693	0x0000000D	[226] literal string: argv != NULL
0x002BA6A0	0x00000011	[226] literal string: Error in fork ()
0x002BA6B1	0x00000015	[226] literal string: Error in fork (): %d
0x002BA6C6	0x00000019	[226] literal string: Error in exec (%d -> %s)
0x002BA6DF	0x00000019	[226] literal string: Error reading from pipe.
0x002BA6F8	0x00000015	[226] literal string: Error creating pipe.
0x002BA70D	0x00000025	[227] literal string: ../../../../../mono/eglib/src/gstr.c
0x002BA732	0x00000012	[227] literal string: str_array != NULL
0x002BA744	0x0000000C	[227] literal string: str != NULL
0x002BA750	0x0000000F	[227] literal string: suffix != NULL
0x002BA75F	0x0000000F	[227] literal string: prefix != NULL
0x002BA76E	0x0000000E	[227] literal string: first != NULL
0x002BA77C	0x0000000F	[227] literal string: string != NULL
0x002BA78B	0x00000012	[227] literal string: delimiter != NULL
0x002BA79D	0x00000012	[227] literal string: delimiter[0] != 0
0x002BA7AF	0x0000002F	[227] literal string: eglib: g_filename_to_uri: hostname not handled
0x002BA7DE	0x00000019	[227] literal string: Not an absolute filename
0x002BA7F7	0x0000000C	[227] literal string: uri != NULL
0x002BA803	0x00000031	[227] literal string: eglib: g_filename_from_uri: hostname not handled
0x002BA834	0x00000009	[227] literal string: file:///
0x002BA83D	0x00000029	[227] literal string: URI does not start with the file: scheme
0x002BA866	0x00000028	[227] literal string: URI contains an invalid escape sequence
0x002BA88E	0x0000000B	[227] literal string: s1 != NULL
0x002BA899	0x0000000B	[227] literal string: s2 != NULL
0x002BA8A4	0x00000008	[227] literal string: _-|> <.
0x002BA8AC	0x0000000D	[227] literal string: dest != NULL
0x002BA8B9	0x0000000C	[227] literal string: src != NULL
0x002BA8C5	0x0000000F	[227] literal string: source != NULL
0x002BA8D4	0x00000028	[228] literal string: ../../../../../mono/eglib/src/gstring.c
0x002BA8FC	0x0000000C	[228] literal string: val != NULL
0x002BA908	0x00000013	[228] literal string: pos <= string->len
0x002BA91B	0x0000000F	[228] literal string: format != NULL
0x002BA92A	0x0000002C	[229] literal string: ../../../../../mono/eglib/src/gtimer-unix.c
0x002BA956	0x0000000E	[229] literal string: timer != NULL
0x002BA964	0x00000043	[233] literal string: MonoTouch: Not connecting to MonoDevelop, debug has been disabled

0x002BA9A7	0x0000000B	[233] literal string: MONO_TRACE
0x002BA9B2	0x00000010	[233] literal string: Settings.bundle
0x002BA9C2	0x0000000B	[233] literal string: Root.plist
0x002BA9CD	0x00000015	[233] literal string: PreferenceSpecifiers
0x002BA9E2	0x0000001A	[233] literal string: __monotouch_debug_enabled
0x002BA9FC	0x00000013	[233] literal string: __monodevelop_host
0x002BAA0F	0x0000000A	[233] literal string: automatic
0x002BAA19	0x00000041	[233] literal string: MonoTouch: Added host from settings to look for MonoDevelop: %s

0x002BAA5A	0x00000017	[233] literal string: __XAMARIN_DEBUG_PORT__
0x002BAA71	0x00000033	[233] literal string: MonoTouch: Found port %i in environment variables

0x002BAAA4	0x00000018	[233] literal string: __XAMARIN_DEBUG_HOSTS__
0x002BAABC	0x00000033	[233] literal string: MonoTouch: Found host %s in environment variables

0x002BAAEF	0x00000046	[233] literal string: /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch
0x002BAB35	0x00000033	[233] literal string: MonoTouch: Could not create shared memory key: %s

0x002BAB68	0x0000002F	[233] literal string: MonoTouch: Could not get shared memory id: %s

0x002BAB97	0x0000002C	[233] literal string: MonoTouch: Could not map shared memory: %s

0x002BABC3	0x00000047	[233] literal string: MonoTouch: Read %i bytes from shared memory: %p with key %i and id %i

0x002BAC0A	0x00000018	[233] literal string: __XAMARIN_DEBUG_PORT__=
0x002BAC22	0x0000002B	[233] literal string: MonoTouch: Found port %i in shared memory

0x002BAC4D	0x00000050	[233] literal string: MonoTouch: Found port %i in shared memory, but not overriding existing port %i

0x002BAC9D	0x00000034	[233] literal string: MonoTouch: Unknown data found in shared memory: %s

0x002BACD1	0x00000020	[233] literal string: MonoTouchDebugConfiguration.txt
0x002BACF1	0x00000005	[233] literal string: IP: 
0x002BACF6	0x00000031	[233] literal string: MonoTouch: Added IP to look for MonoDevelop: %s

0x002BAD27	0x00000010	[233] literal string: USB Debugging: 
0x002BAD37	0x00000007	[233] literal string: Port: 
0x002BAD3E	0x00000004	[233] literal string: usb
0x002BAD42	0x00000005	[233] literal string: wifi
0x002BAD47	0x00000029	[233] literal string: MonoTouch: Invalid MonoDevelop Port: %i

0x002BAD70	0x0000002F	[233] literal string: MonoTouch: MonoDevelop Port: %i Transport: %s

0x002BAD9F	0x00000004	[233] literal string: USB
0x002BADA3	0x00000005	[233] literal string: WiFi
0x002BADA8	0x0000002D	[233] literal string: MonoTouch: Handshake error with MonoDevelop.
0x002BADD5	0x00000021	[233] literal string: MonoTouch: No IPs to connect to.
0x002BADF6	0x00000005	[233] literal string: IPv4
0x002BADFB	0x00000005	[233] literal string: IPv6
0x002BAE00	0x00000022	[233] literal string: MonoTouch: Error parsing '%s': %s
0x002BAE22	0x00000019	[233] literal string: unsupported address type
0x002BAE3B	0x0000002A	[233] literal string: MonoTouch: Failed to create %s socket: %s
0x002BAE65	0x00000032	[233] literal string: MonoTouch: Failed to connect to %s on port %d: %s
0x002BAE97	0x00000033	[233] literal string: MonoTouch: Error while waiting for connections: %s
0x002BAECA	0x0000003F	[233] literal string: MonoTouch: Error while trying to get socket options for %s: %s
0x002BAF09	0x00000045	[233] literal string: MonoTouch: Socket error while connecting to MonoDevelop on %s:%d: %s
0x002BAF4E	0x0000003D	[233] literal string: MonoTouch: Established connection with MonoDevelop (fd: %i)

0x002BAF8B	0x00000045	[233] literal string: MonoTouch: Could not create socket for MonoDevelop to connect to: %s
0x002BAFD0	0x00000043	[233] literal string: MonoTouch: Could not set SO_REUSEADDR on the listening socket (%s)
0x002BB013	0x00000029	[233] literal string: MonoTouch: Could not bind to address: %s
0x002BB03C	0x00000030	[233] literal string: MonoTouch: Could not listen for MonoDevelop: %s
0x002BB06C	0x00000057	[233] literal string: MonoTouch: Listened for connections from MonoDevelop for 2 seconds, nobody connected.

0x002BB0C3	0x0000003F	[233] literal string: MonoTouch: Failed while waiting for MonoDevelop to connect: %s
0x002BB102	0x0000003C	[233] literal string: MonoTouch: Failed to accept connection from MonoDevelop: %s
0x002BB13E	0x00000034	[233] literal string: MonoTouch: Could not set TCP_NODELAY on socket (%s)
0x002BB172	0x00000055	[233] literal string: MonoTouch: Successfully received USB connection from MonoDevelop on port %i, fd: %i

0x002BB1C7	0x0000004B	[233] literal string: MonoTouch: Successfully talked to MonoDevelop. Will continue startup now.

0x002BB212	0x00000017	[233] literal string: Dumping class %p = %s

0x002BB229	0x00000019	[233] literal string: 	%i instance variables:

0x002BB242	0x0000000B	[233] literal string: 		#%i: %s

0x002BB24D	0x00000017	[233] literal string: 	%i instance methods:

0x002BB264	0x0000001A	[233] literal string: 	%i instance properties:

0x002BB27E	0x00000011	[233] literal string: custom_transport
0x002BB28F	0x00000035	[233] literal string: transport=custom_transport,address=dummy,embedding=1
0x002BB2C4	0x0000003B	[233] literal string: MonoTouch: Debugger loaded with custom transport (fd: %i)

0x002BB2FF	0x0000002C	[233] literal string: MonoTouch: Debugger not loaded (disabled).

0x002BB32B	0x00000020	[233] literal string: MonoTouch: Profiler loaded: %s

0x002BB34B	0x0000002B	[233] literal string: MonoTouch: Profiler not loaded (disabled)

0x002BB376	0x00000040	[233] literal string: MonoTouch: Error while receiving command from MonoDevelop (%s)

0x002BB3B6	0x0000001D	[233] literal string: MonoTouch: Processing: '%s'

0x002BB3D3	0x0000000F	[233] literal string: connect output
0x002BB3E2	0x0000000F	[233] literal string: connect stdout
0x002BB3F1	0x0000000F	[233] literal string: connect stderr
0x002BB400	0x00000008	[233] literal string: discard
0x002BB408	0x00000005	[233] literal string: ping
0x002BB40D	0x00000005	[233] literal string: pong
0x002BB412	0x0000005A	[233] literal string: MonoTouch: Got keepalive request from MonoDevelop, but could not send response back (%s)

0x002BB46C	0x0000000D	[233] literal string: exit process
0x002BB479	0x00000042	[233] literal string: MonoTouch: MonoDevelop requested an exit, will exit immediately.

0x002BB4BB	0x00000011	[233] literal string: start debugger: 
0x002BB4CC	0x00000004	[233] literal string: sdb
0x002BB4D0	0x00000011	[233] literal string: start profiler: 
0x002BB4E1	0x00000005	[233] literal string: log:
0x002BB4E6	0x0000003E	[233] literal string: MonoTouch: Unknown profiler, expect unexpected behavior (%s)

0x002BB524	0x00000014	[233] literal string: set heapshot port: 
0x002BB538	0x00000025	[233] literal string: MonoTouch: HeapShot port is now: %i

0x002BB55D	0x00000009	[233] literal string: heapshot
0x002BB566	0x0000003F	[233] literal string: MonoTouch: Failed to create socket to connect to profiler: %s

0x002BB5A5	0x00000044	[233] literal string: MonoTouch: Failed to connect to profiler to request a heapshot: %s

0x002BB5E9	0x0000000A	[233] literal string: heapshot

0x002BB5F3	0x0000002B	[233] literal string: MonoTouch: Failed to request heapshot: %s

0x002BB61E	0x0000003C	[233] literal string: MonoTouch: Unknown command received from MonoDevelop: '%s'

0x002BB65A	0x00000056	[233] literal string: MonoTouch: Listened for connections from MonoDevelop for 2 seconds, nobody connected.
0x002BB6B0	0x0000004E	[233] literal string: MonoTouch: Successfully received USB connection from MonoDevelop on port %i.

0x002BB6FE	0x00000035	[233] literal string: MonoTouch: Connected output to MonoDevelop on %s:%d

0x002BB733	0x00000004	[233] literal string: Key
0x002BB737	0x0000000D	[233] literal string: DefaultValue
0x002BB744	0x00000004	[234] literal string: exe
0x002BB748	0x00000004	[234] literal string: dll
0x002BB74C	0x00000005	[234] literal string: .exe
0x002BB751	0x00000005	[234] literal string: .dll
0x002BB756	0x00000017	[234] literal string: %s/.monotouch-32/%s/%s
0x002BB76D	0x00000009	[234] literal string: %s/%s/%s
0x002BB776	0x0000000A	[234] literal string: monotouch
0x002BB780	0x0000000A	[234] literal string: MONO_PATH
0x002BB78A	0x00000017	[234] literal string: MONO_XMLSERIALIZER_THS
0x002BB7A1	0x00000003	[234] literal string: no
0x002BB7A4	0x00000014	[234] literal string: DYLD_BIND_AT_LAUNCH
0x002BB7B8	0x00000002	[234] literal string: 1
0x002BB7BA	0x0000001B	[234] literal string: MONO_REFLECTION_SERIALIZER
0x002BB7D5	0x00000004	[234] literal string: yes
0x002BB7D9	0x0000000B	[234] literal string: debugtrack
0x002BB7E4	0x00000011	[234] literal string: monodevelop-port
0x002BB7F5	0x00000026	[234] literal string: MonoTouch: --%s requires an argument.
0x002BB81B	0x00000010	[234] literal string: connection-mode
0x002BB82B	0x00000008	[234] literal string: app-arg
0x002BB833	0x00000007	[234] literal string: setenv
0x002BB83A	0x00000019	[234] literal string: MonoTouch: Setting %s=%s
0x002BB853	0x0000000A	[234] literal string: MonoTouch
0x002BB85D	0x0000000B	[234] literal string: v2.0.50727
0x002BB868	0x00000007	[234] literal string: %s.exe
0x002BB86F	0x00000003	[235] literal string: %S
0x002BB872	0x00000006	[237] literal string: v4@?0
0x002BB878	0x00000099	[238] literal string: Internal consistency error, please file a bug (http://bugzilla.xamarin.com). Additional data: found managed object %p=%p (%s) in native object %p (%s).

0x002BB911	0x0000000A	[238] literal string: Exception
0x002BB91B	0x00000087	[238] literal string: Unable to marshal from %s.%s to an Objective-C object. The managed class must either inherit from NSObject or implement INativeObject.
0x002BB9A2	0x00000131	[238] literal string: Failed to marshal the Objective-C object %p (type: %s). Could not find an existing managed instance for this object, nor was it possible to create a new managed instance (because the type '%s' does not have a constructor that takes one IntPtr argument).
Additional information:
	Selector: %s
	Method: %s

0x002BBAD3	0x00000010	[238] literal string: inner_exception
0x002BBAE3	0x0000003E	[238] literal string: Could not find the field inner_exception in System.Exception

0x002BBB21	0x00000003	[238] literal string: %@
0x002BBB24	0x0000000E	[238] literal string: monotouch.dll
0x002BBB32	0x00000013	[238] literal string: Failed to load %s.
0x002BBB45	0x0000000C	[238] literal string: ObjCRuntime
0x002BBB51	0x00000016	[238] literal string: MonoTouch.ObjCRuntime
0x002BBB67	0x0000000B	[238] literal string: Foundation
0x002BBB72	0x00000015	[238] literal string: MonoTouch.Foundation
0x002BBB87	0x00000008	[238] literal string: Runtime
0x002BBB8F	0x0000000E	[238] literal string: INativeObject
0x002BBB9D	0x00000009	[238] literal string: NSObject
0x002BBBA6	0x0000000B	[238] literal string: Initialize
0x002BBBB1	0x0000004F	[238] literal string: Could not find the main bundle in the app ([NSBundle mainBundle] returned nil)
0x002BBC00	0x00000010	[238] literal string: Xamarin.iOS: %s
0x002BBC10	0x00000017	[238] literal string: xamarin_objc_type_size
0x002BBC27	0x0000000A	[238] literal string: runtime.m
0x002BBC31	0x00000002	[238] literal string: 0
0x002BBC33	0x0000001E	[238] literal string: Unsupported type encoding: %s
0x002BBC51	0x00000018	[238] literal string: xamarin_create_gchandle
0x002BBC69	0x00000020	[238] literal string: (gchandle & GCHANDLE_MASK) == 0
0x002BBC89	0x00000015	[238] literal string: __monoObjectGCHandle
0x002BBC9E	0x00000044	[238] literal string: Fatal error: xamarin_set_use_sgen called after xamarin_initialize.

0x002BBCE2	0x00000046	[238] literal string: Fatal error: xamarin_set_is_unified called after xamarin_initialize.

0x002BBD28	0x0000000F	[238] literal string: objc_skip_type
0x002BBD37	0x00000027	[238] literal string: Foundation.NSObject::RegisterToggleRef
0x002BBD5E	0x00000031	[238] literal string: MonoTouch.Foundation.NSObject::RegisterToggleRef
0x002BBD8F	0x00000030	[238] literal string: Fatal error: failed to load the class '%s.%s'
.
0x002BBDBF	0x0000003C	[238] literal string: Xamarin.iOS: Received unhandled ObjectiveC exception: %@ %@
0x002BBDFB	0x00000014	[238] literal string: %s/.monotouch-32/%s
0x002BBE0F	0x00000051	[238] literal string: Found both monotouch.dll and Xamarin.iOS.dll in the app. Only one can be present
0x002BBE60	0x0000003C	[238] literal string: Found neither monotouch.dll nor Xamarin.iOS.dll in the app.
0x002BBE9C	0x00000007	[238] literal string: %s: %s
0x002BBEA3	0x0000000F	[238] literal string: get_StackTrace
0x002BBEB2	0x0000000C	[238] literal string: get_Message
0x002BBEBE	0x0000001E	[238] literal string: Unhandled managed exception:

0x002BBEDC	0x0000001A	[238] literal string:  --- inner exception ---

0x002BBEF6	0x0000000C	[238] literal string: %s (%s)
%s

0x002BBF02	0x00000030	[238] literal string: Could not find the property System.Exception.%s
0x002BBF32	0x00000006	[238] literal string: %s/%s
0x002BBF38	0x000000C5	[238] literal string: Xamarin.iOS: Could not find the assembly '%s' in the app. This is usually fixed by cleaning and rebuilding your project; if that doesn't work, please file a bug report: http://bugzilla.xamarin.com
0x002BBFFD	0x000000CE	[238] literal string: Xamarin.iOS: Could not find the required assembly '%s' in the app. This is usually fixed by cleaning and rebuilding your project; if that doesn't work, please file a bug report: http://bugzilla.xamarin.com
0x002BC0CB	0x0000007D	[238] literal string: Unable to cast object of type '%s' (Objective-C type: '%s') to type '%s'.
Additional information:
	Selector: %s
	Method: %s

0x002BC148	0x00000015	[238] literal string: InvalidCastException
0x002BC15D	0x0000007D	[239] literal string: Don't know how to marshal a return value of type '%s.%s'. Please file a bug with a test case at http://bugzilla.xamarin.com

0x002BC1DA	0x00000024	[239] literal string: Invalid type encoding for parameter
0x002BC1FE	0x00000027	[239] literal string: Unable to marshal byref parameter type
0x002BC225	0x0000008A	[239] literal string: Unable to marshal the out/ref parameter #%i whose managed type is '%s' to Objective-C.
Additional information:
	Selector: %s
	Method: %s

0x002BC2AF	0x00000019	[239] literal string: _original_setCoordinate:
0x002BC2C8	0x0000000F	[239] literal string: setCoordinate:
0x002BC2D7	0x0000001A	[239] literal string: _original_setBoundingBox:
0x002BC2F1	0x00000010	[239] literal string: setBoundingBox:
0x002BC301	0x00000044	[239] literal string: The selector %s does not have a proper signature for dynamic invoke
0x002BC345	0x00000006	[240] literal string: 1.2.5
0x002BC34B	0x00000015	[  4] literal string: MonoTouchAppDelegate
0x002BC360	0x00000016	[  4] literal string: UIApplicationDelegate
0x002BC376	0x00000009	[  4] literal string: NSObject
0x002BC37F	0x00000011	[234] literal string: XamarinGCSupport
0x002BC390	0x00000001	[237] literal string: 
0x002BC391	0x00000016	[237] literal string: XamarinNSThreadObject
0x002BC3A7	0x00000017	[237] literal string: CocoaThreadInitializer
0x002BC3BE	0x0000000A	[  4] literal string: v12@0:4@8
0x002BC3C8	0x00000019	[  4] literal string: v12@0:4@"UIApplication"8
0x002BC3E1	0x0000000D	[  4] literal string: c16@0:4@8@12
0x002BC3EE	0x0000002A	[  4] literal string: c16@0:4@"UIApplication"8@"NSDictionary"12
0x002BC418	0x00000023	[  4] literal string: c16@0:4@"UIApplication"8@"NSURL"12
0x002BC43B	0x00000013	[  4] literal string: c24@0:4@8@12@16@20
0x002BC44E	0x00000033	[  4] literal string: c24@0:4@"UIApplication"8@"NSURL"12@"NSString"16@20
0x002BC481	0x00000010	[  4] literal string: v24@0:4@8i12d16
0x002BC491	0x0000001F	[  4] literal string: v24@0:4@"UIApplication"8i12d16
0x002BC4B0	0x0000000D	[  4] literal string: v16@0:4@8i12
0x002BC4BD	0x0000001C	[  4] literal string: v16@0:4@"UIApplication"8i12
0x002BC4D9	0x0000002C	[  4] literal string: v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12
0x002BC505	0x0000003B	[  4] literal string: v28@0:4@"UIApplication"8{CGRect={CGPoint=ff}{CGSize=ff}}12
0x002BC540	0x0000000D	[  4] literal string: v16@0:4@8@12
0x002BC54D	0x00000038	[  4] literal string: v16@0:4@"UIApplication"8@"UIUserNotificationSettings"12
0x002BC585	0x00000024	[  4] literal string: v16@0:4@"UIApplication"8@"NSData"12
0x002BC5A9	0x00000025	[  4] literal string: v16@0:4@"UIApplication"8@"NSError"12
0x002BC5CE	0x0000002A	[  4] literal string: v16@0:4@"UIApplication"8@"NSDictionary"12
0x002BC5F8	0x00000031	[  4] literal string: v16@0:4@"UIApplication"8@"UILocalNotification"12
0x002BC629	0x00000014	[  4] literal string: v24@0:4@8@12@16@?20
0x002BC63D	0x00000047	[  4] literal string: v24@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@?<v@?>20
0x002BC684	0x00000040	[  4] literal string: v24@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@?<v@?>20
0x002BC6C4	0x00000011	[  4] literal string: v20@0:4@8@12@?16
0x002BC6D5	0x00000034	[  4] literal string: v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?I>16
0x002BC709	0x0000000E	[  4] literal string: v16@0:4@8@?12
0x002BC717	0x00000023	[  4] literal string: v16@0:4@"UIApplication"8@?<v@?I>12
0x002BC73A	0x0000002F	[  4] literal string: v20@0:4@"UIApplication"8@"NSString"12@?<v@?>16
0x002BC769	0x00000042	[  4] literal string: v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?@"NSDictionary">16
0x002BC7AB	0x0000000D	[  4] literal string: I16@0:4@8@12
0x002BC7B8	0x00000026	[  4] literal string: I16@0:4@"UIApplication"8@"UIWindow"12
0x002BC7DE	0x00000026	[  4] literal string: c16@0:4@"UIApplication"8@"NSString"12
0x002BC804	0x00000010	[  4] literal string: @20@0:4@8@12@16
0x002BC814	0x00000043	[  4] literal string: @"UIViewController"20@0:4@"UIApplication"8@"NSArray"12@"NSCoder"16
0x002BC857	0x00000025	[  4] literal string: c16@0:4@"UIApplication"8@"NSCoder"12
0x002BC87C	0x00000025	[  4] literal string: v16@0:4@"UIApplication"8@"NSCoder"12
0x002BC8A1	0x00000011	[  4] literal string: c20@0:4@8@12@?16
0x002BC8B2	0x0000003F	[  4] literal string: c20@0:4@"UIApplication"8@"NSUserActivity"12@?<v@?@"NSArray">16
0x002BC8F1	0x00000010	[  4] literal string: v20@0:4@8@12@16
0x002BC901	0x00000032	[  4] literal string: v20@0:4@"UIApplication"8@"NSString"12@"NSError"16
0x002BC933	0x0000002C	[  4] literal string: v16@0:4@"UIApplication"8@"NSUserActivity"12
0x002BC95F	0x00000007	[  4] literal string: @8@0:4
0x002BC966	0x00000011	[  4] literal string: @"UIWindow"8@0:4
0x002BC977	0x00000014	[  4] literal string: v12@0:4@"UIWindow"8
0x002BC98B	0x0000000A	[  4] literal string: c12@0:4@8
0x002BC995	0x00000007	[  4] literal string: #8@0:4
0x002BC99C	0x0000000A	[  4] literal string: @12@0:4:8
0x002BC9A6	0x0000000D	[  4] literal string: @16@0:4:8@12
0x002BC9B3	0x00000010	[  4] literal string: @20@0:4:8@12@16
0x002BC9C3	0x00000007	[  4] literal string: c8@0:4
0x002BC9CA	0x0000000A	[  4] literal string: c12@0:4#8
0x002BC9D4	0x00000014	[  4] literal string: c12@0:4@"Protocol"8
0x002BC9E8	0x0000000A	[  4] literal string: c12@0:4:8
0x002BC9F2	0x00000008	[  4] literal string: Vv8@0:4
0x002BC9FA	0x00000007	[  4] literal string: I8@0:4
0x002BCA01	0x00000011	[  4] literal string: ^{_NSZone=}8@0:4
0x002BCA12	0x00000011	[  4] literal string: @"NSString"8@0:4
0x002BCA23	0x00000014	[237] literal string: @24@0:4^v8:12@16B20
0x002BCA37	0x00000007	[237] literal string: v8@0:4
0x002BCA3E	0x00000003	[237] literal string: ^v
0x002BCA41	0x00000002	[237] literal string: :
0x002BCA43	0x00000002	[237] literal string: @
0x002BCA45	0x00000002	[237] literal string: B
0x002BCA47	0x0000000B	[237] literal string: @12@0:4^?8
0x002BCA52	0x00000003	[237] literal string: ^?
0x002BCA60	0x00000060	[  9] l_switch.table
0x002BCAC0	0x00000028	[  9] l_switch.table65
0x002BCAE8	0x00000008	[ 11] 8-byte-literal
0x002BCAF0	0x0000024E	[ 11] _opstr
0x002BCD3E	0x0000006C	[ 11] _opidx
0x002BCDAC	0x00000028	[ 13] _int_cmov_opcodes
0x002BCDD4	0x00000028	[ 13] _long_cmov_opcodes
0x002BCE00	0x0000001C	[ 16] l_switch.table339
0x002BCE1C	0x00000050	[ 18] _lbr_decomp
0x002BCE6C	0x00000028	[ 18] _lcset_decomp
0x002BCE94	0x000000BC	[ 20] _info
0x002BCF50	0x0000006C	[ 20] _opt_sets
0x002BCFBC	0x000003E0	[ 20] _opstr
0x002BD39C	0x0000003C	[ 20] _opt_names
0x002BD3D8	0x0000008C	[ 20] _graph_names
0x002BD464	0x00000080	[ 20] _opt_funcs
0x002BD4F0	0x00000010	[ 23] 16-byte-literal
0x002BD500	0x00000010	[ 23] 16-byte-literal
0x002BD510	0x00002836	[ 24] _opstr
0x002BFD46	0x0000067A	[ 24] _opidx
0x002C03C0	0x00000010	[ 26] 16-byte-literal
0x002C03D0	0x00000008	[ 26] 8-byte-literal
0x002C03E0	0x00000010	[ 27] _.memset_pattern
0x002C03F0	0x00000CF4	[ 30] _ins_info
0x002C10E4	0x0000033D	[ 30] _ins_sreg_counts
0x002C1421	0x0000000B	[ 30] _ldind_type
0x002C142C	0x00000024	[ 30] _mini_emit_ldelema_1_ins.fast_log2
0x002C1450	0x00000052	[ 30] _bin_num_table
0x002C14A2	0x00000012	[ 30] _binops_op_map
0x002C14B4	0x00000051	[ 30] _bin_int_table
0x002C1505	0x00000051	[ 30] _shift_table
0x002C1556	0x00000052	[ 30] _bin_comp_table
0x002C15A8	0x00000012	[ 30] _beqops_op_map
0x002C15BA	0x00000012	[ 30] _ceqops_op_map
0x002C15CC	0x0000000A	[ 30] _neg_table
0x002C15D6	0x00000012	[ 30] _unops_op_map
0x002C15E8	0x00000012	[ 30] _ovf3ops_op_map
0x002C15FA	0x00000012	[ 30] _ovf2ops_op_map
0x002C160C	0x00000014	[ 30] _ovfops_op_map
0x002C1620	0x00000010	[ 30] l_switch.table
0x002C1630	0x00000020	[ 30] l_switch.table512
0x002C1650	0x00000030	[ 30] l_switch.table513
0x002C1680	0x00000030	[ 30] l_switch.table514
0x002C16B0	0x00000060	[ 30] l_switch.table515
0x002C1710	0x00000060	[ 30] l_switch.table516
0x002C1770	0x00000030	[ 30] l_switch.table518
0x002C17A0	0x00000030	[ 30] l_switch.table519
0x002C17D0	0x00000020	[ 30] l_switch.table521
0x002C17F0	0x00000014	[ 30] l_switch.table522
0x002C1810	0x00000010	[ 30] 16-byte-literal
0x002C1820	0x00000010	[ 31] 16-byte-literal
0x002C1830	0x00000014	[ 31] _regbank_size
0x002C1844	0x00000014	[ 31] _regbank_callee_regs
0x002C1858	0x00000014	[ 31] _regbank_load_ops
0x002C186C	0x00000014	[ 31] _regbank_spill_var_size
0x002C1880	0x00000014	[ 31] _regbank_store_ops
0x002C1894	0x0000001C	[ 31] _regbank_move_ops
0x002C18B0	0x00000028	[ 31] l_switch.table
0x002C18E0	0x00000070	[ 36] l_switch.table100
0x002C1950	0x00000020	[ 36] l_switch.table101
0x002C1970	0x00000042	[ 37] _type_info
0x002C19B4	0x00000004	[ 40] 4-byte-literal
0x002C19B8	0x00000008	[ 40] 8-byte-literal
0x002C19C0	0x00000C02	[ 40] _x86_desc
0x002C25C2	0x0000067A	[ 40] _x86_desc_idx
0x002C2C3C	0x0000000C	[ 40] _x86_cc_signed_map
0x002C2C48	0x0000000C	[ 40] _x86_cc_unsigned_map
0x002C2C54	0x00000028	[ 40] _cc_table
0x002C2C7C	0x00000038	[ 40] _branch_cc_table
0x002C2CB4	0x0000000C	[ 40] _thiscall_param_regs
0x002C2CC0	0x00000020	[ 40] l_switch.table112
0x002C2CE0	0x00000064	[ 40] l_switch.table113
0x002C2D48	0x00000008	[ 41] 8-byte-literal
0x002C2D50	0x00000028	[ 41] _mono_reverse_branch_op.reverse_map
0x002C2D78	0x00000028	[ 41] _mono_reverse_branch_op.reverse_fmap
0x002C2DA0	0x00000028	[ 41] _mono_reverse_branch_op.reverse_lmap
0x002C2DC8	0x00000028	[ 41] _mono_reverse_branch_op.reverse_imap
0x002C2DF0	0x000000F6	[ 45] _vector2d_intrinsics
0x002C2EE6	0x00000132	[ 45] _vector4f_intrinsics
0x002C3018	0x00000090	[ 45] _vector2ul_intrinsics
0x002C30A8	0x00000096	[ 45] _vector2l_intrinsics
0x002C313E	0x000000D2	[ 45] _vector4ui_intrinsics
0x002C3210	0x000000E4	[ 45] _vector4i_intrinsics
0x002C32F4	0x00000120	[ 45] _vector8us_intrinsics
0x002C3414	0x00000120	[ 45] _vector8s_intrinsics
0x002C3534	0x00000156	[ 45] _vector16b_intrinsics
0x002C368A	0x00000150	[ 45] _vector16sb_intrinsics
0x002C37DA	0x00000506	[ 45] _method_names
0x002C3CE0	0x00000030	[ 45] l_switch.table
0x002C3D10	0x00000030	[ 45] l_switch.table61
0x002C3D40	0x00000030	[ 45] l_switch.table62
0x002C3D70	0x00000028	[ 45] l_switch.table63
0x002C3D98	0x00000008	[ 48] 8-byte-literal
0x002C3DA0	0x00000008	[ 48] 8-byte-literal
0x002C3DA8	0x00000008	[ 49] 8-byte-literal
0x002C3DB0	0x00000024	[ 51] _map_hw_reg_to_dwarf_reg
0x002C3DD4	0x00000010	[ 55] _encode_public_tok.allowed
0x002C3DE4	0x00000010	[ 57] _sigma
0x002C3DF4	0x00000010	[ 57] _tau
0x002C3E10	0x00000060	[ 58] l_switch.table
0x002C3E70	0x00000180	[ 61] _opstr
0x002C3FF0	0x0000003A	[ 61] _opidx
0x002C4030	0x00000010	[ 63] 16-byte-literal
0x002C4040	0x00000010	[ 63] 16-byte-literal
0x002C4050	0x00000004	[ 63] 4-byte-literal
0x002C4058	0x00000008	[ 63] 8-byte-literal
0x002C4060	0x00000008	[ 63] 8-byte-literal
0x002C4068	0x00000008	[ 63] 8-byte-literal
0x002C4070	0x00000008	[ 63] 8-byte-literal
0x002C4078	0x00000008	[ 63] 8-byte-literal
0x002C4080	0x00000008	[ 63] _ds2to64
0x002C4088	0x00000028	[ 63] _sdl_power10
0x002C40B0	0x0000006C	[ 63] _power_overflow
0x002C411C	0x0000002C	[ 63] _power10
0x002C4148	0x00000288	[ 63] _double_power10
0x002C43D0	0x000000A0	[ 63] _long_power10
0x002C4470	0x000000F0	[ 64] _supported_runtimes
0x002C4560	0x00000010	[ 67] l_switch.table
0x002C4570	0x00000018	[ 67] l_switch.table9
0x002C4588	0x0000000C	[ 67] l_switch.table10
0x002C45A0	0x00000020	[ 68] l_switch.table
0x002C45C0	0x00000020	[ 68] l_switch.table7
0x002C45E0	0x00000018	[ 68] l_switch.table8
0x002C45F8	0x00000008	[ 72] 8-byte-literal
0x002C4600	0x00000010	[ 72] 16-byte-literal
0x002C4610	0x00000010	[ 72] 16-byte-literal
0x002C4620	0x00000010	[ 72] 16-byte-literal
0x002C4630	0x00000CAA	[ 72] _icall_type_names_str
0x002C52DA	0x000000DA	[ 72] _icall_type_names_idx
0x002C53B4	0x000000DC	[ 72] _icall_type_descs
0x002C5490	0x00003D80	[ 72] _icall_names_str
0x002C9210	0x00000550	[ 72] _icall_names_idx
0x002C9760	0x00004000	[ 72] _Formatter_MantissaBitsTable
0x002CD760	0x00002000	[ 72] _Formatter_TensExponentTable
0x002CF760	0x00000020	[ 72] _Formatter_DigitLowerTable
0x002CF780	0x00000020	[ 72] _Formatter_DigitUpperTable
0x002CF7A0	0x00000098	[ 72] _Formatter_TenPowersList
0x002CF838	0x00000190	[ 72] _Formatter_DecHexDigits
0x002CF9C8	0x000049A0	[ 72] _ToLowerDataLow
0x002D4368	0x000001BE	[ 72] _ToLowerDataHigh
0x002D4526	0x000049D4	[ 72] _ToUpperDataLow
0x002D8EFA	0x000001BE	[ 72] _ToUpperDataHigh
0x002D90C0	0x00000010	[ 76] 16-byte-literal
0x002D90D0	0x00000010	[ 76] 16-byte-literal
0x002D90E0	0x00000464	[ 76] _culture_name_entries
0x002D9544	0x000121C8	[ 76] _datetime_format_entries
0x002EB70C	0x0000ECA8	[ 76] _locale_strings
0x002FA3B4	0x000041DC	[ 76] _number_format_entries
0x002FE590	0x000001D4	[ 76] _region_name_entries
0x002FE764	0x00000924	[ 76] _region_entries
0x002FF088	0x000027A4	[ 76] _props
0x0030182C	0x000086B0	[ 76] _mappedChars
0x00309EDC	0x00004462	[ 76] _charMapIndex
0x0030E33E	0x0000D542	[ 76] _helperIndex
0x0031B880	0x00003162	[ 76] _mapIdxToComposite
0x0031E9E2	0x00000582	[ 76] _combiningClass
0x0031EF64	0x00003D78	[ 76] _culture_entries
0x00322CE0	0x00000014	[ 77] l_switch.table
0x00322CF4	0x0000000C	[ 77] l_switch.table311
0x00322D00	0x0000000C	[ 77] l_switch.table313
0x00322D0C	0x00000052	[ 80] _coded_index_desc
0x00322D60	0x000001E6	[ 81] _tablestr
0x00322F46	0x0000005A	[ 81] _tableidx
0x00322FA0	0x000000AC	[ 81] _TableSchemas
0x0032304C	0x00000030	[ 81] _table_description
0x0032307C	0x00000110	[ 81] _builtin_types
0x00323190	0x00000008	[ 88] 8-byte-literal
0x003231A0	0x00000010	[ 90] 16-byte-literal
0x003231B0	0x00000010	[ 90] 16-byte-literal
0x003231C0	0x00000010	[ 90] 16-byte-literal
0x003231D0	0x00000070	[ 90] _simple_type_to_type
0x00323240	0x000004E8	[ 95] _mono_opcodes
0x00323728	0x00000AA2	[ 95] _opstr
0x003241CA	0x00000272	[ 95] _opidx
0x0032443C	0x00000003	[ 96] l_.str22
0x00324440	0x0000002D	[ 99] _table_sizes
0x0032446D	0x00000080	[ 99] _mono_image_create_pefile.msheader
0x003244ED	0x00000017	[ 99] _mono_image_create_pefile.section_names
0x00324504	0x0000004C	[ 99] _declsec_flags_map
0x00324550	0x00000010	[ 99] _create_dynamic_mono_image.entrycode
0x00324560	0x0000000C	[ 99] l_switch.table221
0x0032456C	0x0000000C	[ 99] l_switch.table222
0x00324578	0x00000008	[110] 8-byte-literal
0x00324580	0x00000008	[110] 8-byte-literal
0x00324588	0x0000000C	[110] l_switch.table
0x00324594	0x00000080	[113] _allocator_sizes
0x00324620	0x00000010	[114] 16-byte-literal
0x00324630	0x00000010	[114] 16-byte-literal
0x00324640	0x00000008	[115] 8-byte-literal
0x00324648	0x00000008	[115] 8-byte-literal
0x00324650	0x00000008	[115] 8-byte-literal
0x00324658	0x00000004	[115] 4-byte-literal
0x0032465C	0x00000004	[115] 4-byte-literal
0x00324660	0x00000004	[116] 4-byte-literal
0x00324670	0x00000010	[128] 16-byte-literal
0x00324680	0x00000010	[129] 16-byte-literal
0x00324690	0x00000010	[129] 16-byte-literal
0x003246A0	0x00000010	[132] 16-byte-literal
0x003246B0	0x00000010	[132] 16-byte-literal
0x003246C0	0x0000000C	[132] l_switch.table
0x003246D0	0x00000008	[134] 8-byte-literal
0x003246D8	0x00000008	[134] 8-byte-literal
0x003246E0	0x00000008	[134] 8-byte-literal
0x003246E8	0x00000008	[134] 8-byte-literal
0x003246F0	0x00000004	[134] 4-byte-literal
0x00324700	0x00000038	[135] l_switch.table
0x00324738	0x00000020	[136] _static_data_size
0x00324758	0x00000024	[138] _add_ovf_un_table
0x0032477C	0x00000024	[138] _sub_ovf_un_table
0x003247A0	0x00000024	[138] _bin_ovf_table
0x003247C4	0x00000024	[138] _add_table
0x003247E8	0x00000024	[138] _sub_table
0x0032480C	0x00000024	[138] _bin_op_table
0x00324830	0x00000024	[138] _int_bin_op_table
0x00324854	0x00000024	[138] _shift_op_table
0x00324878	0x00000024	[138] _cmp_br_eq_op
0x0032489C	0x00000024	[138] _cmp_br_op
0x003248C0	0x00000034	[142] l_switch.table
0x00324900	0x00000058	[143] l_switch.table
0x00324958	0x00000034	[144] _mon_yday
0x0032498C	0x0000000C	[144] l_switch.table
0x00324998	0x0000000C	[144] l_switch.table42
0x003249A4	0x00000004	[150] _utf16_space_bytes
0x003249A8	0x00000004	[150] _utf16_quote_bytes
0x003249AC	0x00000004	[169] 4-byte-literal
0x003249B0	0x00000008	[171] 8-byte-literal
0x003249B8	0x00000008	[171] 8-byte-literal
0x003249C0	0x00000050	[171] _section_names
0x00324A10	0x00000020	[171] l_switch.table
0x00324A30	0x00000018	[182] _mono_trace_set_level_string.valid_ids
0x00324A48	0x00000020	[182] _mono_trace_set_mask_string.valid_masks
0x00324A68	0x00000100	[203] _trailingBytesForUTF8
0x00324B68	0x00000008	[204] 8-byte-literal
0x00324B70	0x00000008	[204] 8-byte-literal
0x00324B78	0x00000008	[204] 8-byte-literal
0x00324B80	0x00000008	[204] 8-byte-literal
0x00324B88	0x00000008	[204] 8-byte-literal
0x00324B90	0x00000008	[204] 8-byte-literal
0x00324B98	0x00000008	[204] 8-byte-literal
0x00324BA0	0x00000008	[204] 8-byte-literal
0x00324BA8	0x000000B8	[204] _tens
0x00324C60	0x00000028	[204] _bigtens
0x00324C88	0x00000028	[204] _tinytens
0x00324CB0	0x0000000C	[204] _pow5mult.p05
0x00324CBC	0x00000088	[213] _prime_tbl
0x00324D50	0x00000010	[227] 16-byte-literal
0x00324D60	0x00000010	[227] 16-byte-literal
0x00324D70	0x00000010	[227] 16-byte-literal
0x00324D80	0x00000010	[227] 16-byte-literal
0x00324D90	0x00000010	[227] 16-byte-literal
0x00324DA0	0x00000010	[227] _hx
0x00324DB0	0x00000100	[227] _escaped_dflt
0x00324EB0	0x00000008	[229] 8-byte-literal
0x00324EB8	0x00000060	[230] _unicode_category_ranges
0x00324F18	0x00000050	[230] _simple_case_map_ranges
0x00324F68	0x00000090	[230] _simple_titlecase_mapping
0x00324FF8	0x00000204	[230] _simple_lower_case_mapping_higharea_table0
0x003251FC	0x00000204	[230] _simple_upper_case_mapping_higharea_table0
0x00325400	0x00000B6C	[230] _simple_lower_case_mapping_lowarea_table0
0x00325F6C	0x0000018E	[230] _simple_lower_case_mapping_lowarea_table1
0x003260FA	0x00000600	[230] _simple_lower_case_mapping_lowarea_table2
0x003266FA	0x00000182	[230] _simple_lower_case_mapping_lowarea_table3
0x0032687C	0x00000102	[230] _simple_lower_case_mapping_lowarea_table4
0x0032697E	0x000002E2	[230] _simple_lower_case_mapping_lowarea_table5
0x00326C60	0x0000029C	[230] _simple_lower_case_mapping_lowarea_table6
0x00326EFC	0x000000C2	[230] _simple_lower_case_mapping_lowarea_table7
0x00326FBE	0x00000B6C	[230] _simple_upper_case_mapping_lowarea_table0
0x00327B2A	0x0000018E	[230] _simple_upper_case_mapping_lowarea_table1
0x00327CB8	0x00000600	[230] _simple_upper_case_mapping_lowarea_table2
0x003282B8	0x00000182	[230] _simple_upper_case_mapping_lowarea_table3
0x0032843A	0x00000102	[230] _simple_upper_case_mapping_lowarea_table4
0x0032853C	0x000002E2	[230] _simple_upper_case_mapping_lowarea_table5
0x0032881E	0x0000029C	[230] _simple_upper_case_mapping_lowarea_table6
0x00328ABA	0x000000C2	[230] _simple_upper_case_mapping_lowarea_table7
0x00328B7C	0x00003401	[230] _unicode_category_table0
0x0032BF7D	0x00000041	[230] _unicode_category_table1
0x0032BFBE	0x00000A61	[230] _unicode_category_table2
0x0032CA1F	0x000006FF	[230] _unicode_category_table3
0x0032D11E	0x000004AB	[230] _unicode_category_table4
0x0032D5C9	0x0000025A	[230] _unicode_category_table5
0x0032D823	0x00000475	[230] _unicode_category_table6
0x0032DC98	0x00000801	[230] _unicode_category_table7
0x0032E499	0x00000095	[230] _unicode_category_table8
0x0032E52E	0x0000021F	[230] _unicode_category_table9
0x0032E74D	0x000001F1	[230] _unicode_category_table10
0x0032E93E	0x00000100	[231] _g_utf8_jump_table
0x0032EA3E	0x0000313F	[  1] __dtrace_dof_for_provider_mono
0x00331B80	0x00000344	[  0] compact unwind info
0x00331EC8	0x00000020	[  3] CIE
0x00331EE8	0x00000018	[  3] CIE
0x00331F00	0x00000018	[  4] CIE
0x00331F18	0x00000018	[233] CIE
0x00331F30	0x00000018	[234] CIE
0x00331F48	0x00000018	[235] CIE
0x00331F60	0x00000020	[236] CIE
0x00331F80	0x00000018	[236] CIE
0x00331F98	0x00000018	[237] CIE
0x00331FB0	0x00000018	[238] CIE
0x00331FC8	0x00000018	[239] CIE
0x00331FE0	0x00000018	[242] CIE
0x00332000	0x00000004	[  0] non-lazy-pointer-to-local: dyld_stub_binder
0x00332004	0x00000004	[  0] non-lazy-pointer
0x00332008	0x00000004	[  3] non-lazy-pointer-to: ___gxx_personality_v0
0x0033200C	0x00000004	[  4] non-lazy-pointer-to: _mono_use_llvm
0x00332010	0x00000004	[  4] non-lazy-pointer-to: _xamarin_debug_mode
0x00332014	0x00000004	[  4] non-lazy-pointer-to: _xamarin_enable_debug_tracking
0x00332018	0x00000004	[  4] non-lazy-pointer-to: _xamarin_executable_name
0x0033201C	0x00000004	[  4] non-lazy-pointer-to: _xamarin_init_mono_debug
0x00332020	0x00000004	[  4] non-lazy-pointer-to: _xamarin_log_level
0x00332024	0x00000004	[  4] non-lazy-pointer-to: _xamarin_new_refcount
0x00332028	0x00000004	[  4] non-lazy-pointer-to: _xamarin_use_new_assemblies
0x0033202C	0x00000004	[  4] non-lazy-pointer-to: _xamarin_use_old_dynamic_registrar
0x00332030	0x00000004	[ 11] non-lazy-pointer-to: _mono_patch_info_equal
0x00332034	0x00000004	[ 11] non-lazy-pointer-to: _mono_patch_info_hash
0x00332038	0x00000004	[ 12] non-lazy-pointer-to: _mach_task_self_
0x0033203C	0x00000004	[ 12] non-lazy-pointer-to: _mono_compile_aot
0x00332040	0x00000004	[ 12] non-lazy-pointer-to: _mono_exception_from_token
0x00332044	0x00000004	[ 12] non-lazy-pointer-to: _mono_get_lmf_addr
0x00332048	0x00000004	[ 12] non-lazy-pointer-to: _mono_thread_get_and_clear_pending_exception
0x0033204C	0x00000004	[ 16] non-lazy-pointer-to: _nreply_packets
0x00332050	0x00000004	[ 20] non-lazy-pointer-to: _mono_do_single_method_regression
0x00332054	0x00000004	[ 20] non-lazy-pointer-to: _mono_inject_async_exc_pos
0x00332058	0x00000004	[ 20] non-lazy-pointer-to: _mono_print_vtable
0x0033205C	0x00000004	[ 20] non-lazy-pointer-to: _mono_security_core_clr_test
0x00332060	0x00000004	[ 20] non-lazy-pointer-to: _mono_single_method_regression_opt
0x00332064	0x00000004	[ 28] non-lazy-pointer-to: _ins_info
0x00332068	0x00000004	[ 28] non-lazy-pointer-to: _ins_sreg_counts
0x0033206C	0x00000004	[ 30] non-lazy-pointer-to: _check_for_pending_exc
0x00332070	0x00000004	[ 30] non-lazy-pointer-to: _mono_jit_set_domain
0x00332074	0x00000004	[ 30] non-lazy-pointer-to: _mono_jit_thread_attach
0x00332078	0x00000004	[ 30] non-lazy-pointer-to: _mono_opcodes
0x0033207C	0x00000004	[ 30] non-lazy-pointer-to: _mono_profiler_events
0x00332080	0x00000004	[ 30] non-lazy-pointer-to: _mono_string_new_wrapper
0x00332084	0x00000004	[ 30] non-lazy-pointer-to: _mono_use_imt
0x00332088	0x00000004	[ 31] non-lazy-pointer-to: _x86_desc
0x0033208C	0x00000004	[ 31] non-lazy-pointer-to: _x86_desc_idx
0x00332090	0x00000004	[ 38] non-lazy-pointer-to: _mono_do_signal_chaining
0x00332094	0x00000004	[ 38] non-lazy-pointer-to: _mono_sigfpe_signal_handler
0x00332098	0x00000004	[ 38] non-lazy-pointer-to: _mono_sigill_signal_handler
0x0033209C	0x00000004	[ 38] non-lazy-pointer-to: _mono_sigint_signal_handler
0x003320A0	0x00000004	[ 38] non-lazy-pointer-to: _mono_sigsegv_signal_handler
0x003320A4	0x00000004	[ 39] non-lazy-pointer-to: _mono_altstack_restore_prot
0x003320A8	0x00000004	[ 39] non-lazy-pointer-to: _mono_aot_only
0x003320AC	0x00000004	[ 39] non-lazy-pointer-to: _mono_trampoline_code
0x003320B0	0x00000004	[ 40] non-lazy-pointer-to: _mono_break_at_bb_bb_num
0x003320B4	0x00000004	[ 40] non-lazy-pointer-to: _mono_break_at_bb_method
0x003320B8	0x00000004	[ 40] non-lazy-pointer-to: _mono_breakpoint_info
0x003320BC	0x00000004	[ 40] non-lazy-pointer-to: _mono_breakpoint_info_index
0x003320C0	0x00000004	[ 40] non-lazy-pointer-to: _mono_do_x86_stack_align
0x003320C4	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_cmov
0x003320C8	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_fcmov
0x003320CC	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_sse1
0x003320D0	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_sse2
0x003320D4	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_sse3
0x003320D8	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_sse41
0x003320DC	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_sse42
0x003320E0	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_sse4a
0x003320E4	0x00000004	[ 40] non-lazy-pointer-to: _mono_hwcap_x86_has_ssse3
0x003320E8	0x00000004	[ 40] non-lazy-pointer-to: _mono_jit_trace_calls
0x003320EC	0x00000004	[ 40] non-lazy-pointer-to: _mono_x86_throw_corlib_exception
0x003320F0	0x00000004	[ 40] non-lazy-pointer-to: _mono_x86_throw_exception
0x003320F4	0x00000004	[ 41] non-lazy-pointer-to: ___stack_chk_guard
0x003320F8	0x00000004	[ 41] non-lazy-pointer-to: ___stderrp
0x003320FC	0x00000004	[ 41] non-lazy-pointer-to: ___stdoutp
0x00332100	0x00000004	[ 41] non-lazy-pointer-to: _mono_aligned_addr_hash
0x00332104	0x00000004	[ 41] non-lazy-pointer-to: _mono_aot_find_jit_info
0x00332108	0x00000004	[ 41] non-lazy-pointer-to: _mono_aot_get_cached_class_info
0x0033210C	0x00000004	[ 41] non-lazy-pointer-to: _mono_aot_get_class_from_name
0x00332110	0x00000004	[ 41] non-lazy-pointer-to: _mono_aot_get_imt_thunk
0x00332114	0x00000004	[ 41] non-lazy-pointer-to: _mono_arch_build_imt_thunk
0x00332118	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new
0x0033211C	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new_1
0x00332120	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new_2
0x00332124	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new_3
0x00332128	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new_4
0x0033212C	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new_specific
0x00332130	0x00000004	[ 41] non-lazy-pointer-to: _mono_array_new_va
0x00332134	0x00000004	[ 41] non-lazy-pointer-to: _mono_break
0x00332138	0x00000004	[ 41] non-lazy-pointer-to: _mono_build_date
0x0033213C	0x00000004	[ 41] non-lazy-pointer-to: _mono_class_static_field_address
0x00332140	0x00000004	[ 41] non-lazy-pointer-to: _mono_create_corlib_exception_0
0x00332144	0x00000004	[ 41] non-lazy-pointer-to: _mono_create_corlib_exception_1
0x00332148	0x00000004	[ 41] non-lazy-pointer-to: _mono_create_corlib_exception_2
0x0033214C	0x00000004	[ 41] non-lazy-pointer-to: _mono_create_delegate_trampoline
0x00332150	0x00000004	[ 41] non-lazy-pointer-to: _mono_create_jit_trampoline
0x00332154	0x00000004	[ 41] non-lazy-pointer-to: _mono_create_jump_trampoline
0x00332158	0x00000004	[ 41] non-lazy-pointer-to: _mono_current_single_method
0x0033215C	0x00000004	[ 41] non-lazy-pointer-to: _mono_debugger_agent_debug_log
0x00332160	0x00000004	[ 41] non-lazy-pointer-to: _mono_debugger_agent_debug_log_is_enabled
0x00332164	0x00000004	[ 41] non-lazy-pointer-to: _mono_debugger_agent_user_break
0x00332168	0x00000004	[ 41] non-lazy-pointer-to: _mono_defaults
0x0033216C	0x00000004	[ 41] non-lazy-pointer-to: _mono_delegate_ctor
0x00332170	0x00000004	[ 41] non-lazy-pointer-to: _mono_delegate_section
0x00332174	0x00000004	[ 41] non-lazy-pointer-to: _mono_do_crash_chaining
0x00332178	0x00000004	[ 41] non-lazy-pointer-to: _mono_domain_get
0x0033217C	0x00000004	[ 41] non-lazy-pointer-to: _mono_dont_free_domains
0x00332180	0x00000004	[ 41] non-lazy-pointer-to: _mono_fconv_ovf_i8
0x00332184	0x00000004	[ 41] non-lazy-pointer-to: _mono_fconv_ovf_u8
0x00332188	0x00000004	[ 41] non-lazy-pointer-to: _mono_fconv_u4
0x0033218C	0x00000004	[ 41] non-lazy-pointer-to: _mono_fconv_u8
0x00332190	0x00000004	[ 41] non-lazy-pointer-to: _mono_gc_wbarrier_value_copy_bitmap
0x00332194	0x00000004	[ 41] non-lazy-pointer-to: _mono_get_native_calli_wrapper
0x00332198	0x00000004	[ 41] non-lazy-pointer-to: _mono_get_special_static_data
0x0033219C	0x00000004	[ 41] non-lazy-pointer-to: _mono_gsharedvt_constrained_call
0x003321A0	0x00000004	[ 41] non-lazy-pointer-to: _mono_gsharedvt_value_copy
0x003321A4	0x00000004	[ 41] non-lazy-pointer-to: _mono_helper_compile_generic_method
0x003321A8	0x00000004	[ 41] non-lazy-pointer-to: _mono_helper_ldstr
0x003321AC	0x00000004	[ 41] non-lazy-pointer-to: _mono_helper_ldstr_mscorlib
0x003321B0	0x00000004	[ 41] non-lazy-pointer-to: _mono_helper_newobj_mscorlib
0x003321B4	0x00000004	[ 41] non-lazy-pointer-to: _mono_helper_stelem_ref_check
0x003321B8	0x00000004	[ 41] non-lazy-pointer-to: _mono_inject_async_exc_method
0x003321BC	0x00000004	[ 41] non-lazy-pointer-to: _mono_jit_tls_id
0x003321C0	0x00000004	[ 41] non-lazy-pointer-to: _mono_ldftn
0x003321C4	0x00000004	[ 41] non-lazy-pointer-to: _mono_ldstr
0x003321C8	0x00000004	[ 41] non-lazy-pointer-to: _mono_ldtoken_wrapper
0x003321CC	0x00000004	[ 41] non-lazy-pointer-to: _mono_ldtoken_wrapper_generic_shared
0x003321D0	0x00000004	[ 41] non-lazy-pointer-to: _mono_ldvirtfn
0x003321D4	0x00000004	[ 41] non-lazy-pointer-to: _mono_ldvirtfn_gshared
0x003321D8	0x00000004	[ 41] non-lazy-pointer-to: _mono_lldiv
0x003321DC	0x00000004	[ 41] non-lazy-pointer-to: _mono_lldiv_un
0x003321E0	0x00000004	[ 41] non-lazy-pointer-to: _mono_llmult
0x003321E4	0x00000004	[ 41] non-lazy-pointer-to: _mono_llmult_ovf
0x003321E8	0x00000004	[ 41] non-lazy-pointer-to: _mono_llmult_ovf_un
0x003321EC	0x00000004	[ 41] non-lazy-pointer-to: _mono_llrem
0x003321F0	0x00000004	[ 41] non-lazy-pointer-to: _mono_llrem_un
0x003321F4	0x00000004	[ 41] non-lazy-pointer-to: _mono_object_castclass_unbox
0x003321F8	0x00000004	[ 41] non-lazy-pointer-to: _mono_object_castclass_with_cache
0x003321FC	0x00000004	[ 41] non-lazy-pointer-to: _mono_object_isinst_with_cache
0x00332200	0x00000004	[ 41] non-lazy-pointer-to: _mono_object_new
0x00332204	0x00000004	[ 41] non-lazy-pointer-to: _mono_object_new_specific
0x00332208	0x00000004	[ 41] non-lazy-pointer-to: _mono_perfcounters
0x0033220C	0x00000004	[ 41] non-lazy-pointer-to: _mono_profiler_method_enter
0x00332210	0x00000004	[ 41] non-lazy-pointer-to: _mono_profiler_method_leave
0x00332214	0x00000004	[ 41] non-lazy-pointer-to: _mono_rconv_ovf_i8
0x00332218	0x00000004	[ 41] non-lazy-pointer-to: _mono_rconv_ovf_u8
0x0033221C	0x00000004	[ 41] non-lazy-pointer-to: _mono_resume_unwind
0x00332220	0x00000004	[ 41] non-lazy-pointer-to: _mono_runtime_class_init
0x00332224	0x00000004	[ 41] non-lazy-pointer-to: _mono_runtime_install_handlers
0x00332228	0x00000004	[ 41] non-lazy-pointer-to: _mono_set_cast_details
0x0033222C	0x00000004	[ 41] non-lazy-pointer-to: _mono_setup_async_callback
0x00332230	0x00000004	[ 41] non-lazy-pointer-to: _mono_single_method_hash
0x00332234	0x00000004	[ 41] non-lazy-pointer-to: _mono_single_method_list
0x00332238	0x00000004	[ 41] non-lazy-pointer-to: _mono_stats
0x0033223C	0x00000004	[ 41] non-lazy-pointer-to: _mono_thread_force_interruption_checkpoint
0x00332240	0x00000004	[ 41] non-lazy-pointer-to: _mono_thread_force_interruption_checkpoint_noraise
0x00332244	0x00000004	[ 41] non-lazy-pointer-to: _mono_thread_get_undeniable_exception
0x00332248	0x00000004	[ 41] non-lazy-pointer-to: _mono_thread_interruption_checkpoint
0x0033224C	0x00000004	[ 41] non-lazy-pointer-to: _mono_thread_state_init_from_handle
0x00332250	0x00000004	[ 41] non-lazy-pointer-to: _mono_thread_state_init_from_sigctx
0x00332254	0x00000004	[ 41] non-lazy-pointer-to: _mono_trace_enter_method
0x00332258	0x00000004	[ 41] non-lazy-pointer-to: _mono_trace_leave_method
0x0033225C	0x00000004	[ 41] non-lazy-pointer-to: _mono_value_copy
0x00332260	0x00000004	[ 41] non-lazy-pointer-to: _monoeg_g_direct_equal
0x00332264	0x00000004	[ 41] non-lazy-pointer-to: _monoeg_g_direct_hash
0x00332268	0x00000004	[ 41] non-lazy-pointer-to: _monoeg_g_free
0x0033226C	0x00000004	[ 41] non-lazy-pointer-to: _monoeg_g_str_equal
0x00332270	0x00000004	[ 41] non-lazy-pointer-to: _monoeg_g_str_hash
0x00332274	0x00000004	[ 41] non-lazy-pointer-to: _pthread_getspecific
0x00332278	0x00000004	[ 41] non-lazy-pointer-to: _seq_point_info_free
0x0033227C	0x00000004	[ 41] non-lazy-pointer-to: _ves_icall_System_Exception_get_trace
0x00332280	0x00000004	[ 41] non-lazy-pointer-to: _ves_icall_System_Security_SecurityFrame_GetSecurityFrame
0x00332284	0x00000004	[ 41] non-lazy-pointer-to: _ves_icall_System_Security_SecurityFrame_GetSecurityStack
0x00332288	0x00000004	[ 41] non-lazy-pointer-to: _ves_icall_get_frame_info
0x0033228C	0x00000004	[ 41] non-lazy-pointer-to: _ves_icall_get_trace
0x00332290	0x00000004	[ 44] non-lazy-pointer-to: _mono_jit_stats
0x00332294	0x00000004	[ 54] non-lazy-pointer-to: ___mono_io_portability_helpers
0x00332298	0x00000004	[ 54] non-lazy-pointer-to: _mono_reflection_lookup_dynamic_token
0x0033229C	0x00000004	[ 55] non-lazy-pointer-to: _bundles
0x003322A0	0x00000004	[ 55] non-lazy-pointer-to: _mono_domain_assembly_postload_search
0x003322A4	0x00000004	[ 58] non-lazy-pointer-to: _class_ext_size
0x003322A8	0x00000004	[ 58] non-lazy-pointer-to: _classes_size
0x003322AC	0x00000004	[ 58] non-lazy-pointer-to: _inflated_classes
0x003322B0	0x00000004	[ 58] non-lazy-pointer-to: _inflated_classes_size
0x003322B4	0x00000004	[ 58] non-lazy-pointer-to: _inflated_methods_size
0x003322B8	0x00000004	[ 71] non-lazy-pointer-to: _gc_stats
0x003322BC	0x00000004	[ 72] non-lazy-pointer-to: __DefaultRuneLocale
0x003322C0	0x00000004	[ 72] non-lazy-pointer-to: _mono_strtod_mutex
0x003322C4	0x00000004	[ 72] non-lazy-pointer-to: _monoeg_ascii_strcasecmp
0x003322C8	0x00000004	[ 72] non-lazy-pointer-to: _strcmp
0x003322CC	0x00000004	[ 73] non-lazy-pointer-to: _image_unload_hooks
0x003322D0	0x00000004	[ 75] non-lazy-pointer-to: _loader_error_thread_id
0x003322D4	0x00000004	[ 75] non-lazy-pointer-to: _loader_lock_nest_id
0x003322D8	0x00000004	[ 76] non-lazy-pointer-to: _kCFLocaleCountryCode
0x003322DC	0x00000004	[ 76] non-lazy-pointer-to: _kCFLocaleLanguageCode
0x003322E0	0x00000004	[ 76] non-lazy-pointer-to: _kCFLocaleScriptCode
0x003322E4	0x00000004	[ 77] non-lazy-pointer-to: _mono_compile_method
0x003322E8	0x00000004	[ 77] non-lazy-pointer-to: _mono_context_get
0x003322EC	0x00000004	[ 77] non-lazy-pointer-to: _mono_context_set
0x003322F0	0x00000004	[ 77] non-lazy-pointer-to: _mono_free_bstr
0x003322F4	0x00000004	[ 77] non-lazy-pointer-to: _mono_gc_wbarrier_generic_nostore
0x003322F8	0x00000004	[ 77] non-lazy-pointer-to: _mono_gchandle_get_target
0x003322FC	0x00000004	[ 77] non-lazy-pointer-to: _mono_metadata_signature_equal
0x00332300	0x00000004	[ 77] non-lazy-pointer-to: _mono_object_isinst
0x00332304	0x00000004	[ 77] non-lazy-pointer-to: _mono_signature_hash
0x00332308	0x00000004	[ 77] non-lazy-pointer-to: _mono_string_from_bstr
0x0033230C	0x00000004	[ 77] non-lazy-pointer-to: _mono_string_from_utf16
0x00332310	0x00000004	[ 77] non-lazy-pointer-to: _mono_string_to_bstr
0x00332314	0x00000004	[ 77] non-lazy-pointer-to: _mono_string_to_utf16
0x00332318	0x00000004	[ 77] non-lazy-pointer-to: _mono_string_to_utf8
0x0033231C	0x00000004	[ 77] non-lazy-pointer-to: _ves_icall_System_String_ctor_RedirectToCreateString
0x00332320	0x00000004	[ 77] non-lazy-pointer-to: _ves_icall_System_Threading_Thread_ResetAbort
0x00332324	0x00000004	[ 99] non-lazy-pointer-to: _mono_metadata_type_equal
0x00332328	0x00000004	[ 99] non-lazy-pointer-to: _mono_metadata_type_hash
0x0033232C	0x00000004	[ 99] non-lazy-pointer-to: _mono_object_hash
0x00332330	0x00000004	[104] non-lazy-pointer-to: _collect_before_allocs
0x00332334	0x00000004	[104] non-lazy-pointer-to: _degraded_mode
0x00332338	0x00000004	[104] non-lazy-pointer-to: _nursery_clear_policy
0x0033233C	0x00000004	[104] non-lazy-pointer-to: _nursery_section
0x00332340	0x00000004	[104] non-lazy-pointer-to: _tlab_size
0x00332344	0x00000004	[104] non-lazy-pointer-to: _verify_before_allocs
0x00332348	0x00000004	[105] non-lazy-pointer-to: _bridge_callbacks
0x0033234C	0x00000004	[107] non-lazy-pointer-to: _roots_hash
0x00332350	0x00000004	[109] non-lazy-pointer-to: _mono_gc_run_finalize
0x00332354	0x00000004	[110] non-lazy-pointer-to: _bridge_processing_in_progress
0x00332358	0x00000004	[110] non-lazy-pointer-to: _current_object_ops
0x0033235C	0x00000004	[110] non-lazy-pointer-to: _gc_debug_file
0x00332360	0x00000004	[110] non-lazy-pointer-to: _gc_mutex
0x00332364	0x00000004	[110] non-lazy-pointer-to: _has_per_allocation_action
0x00332368	0x00000004	[110] non-lazy-pointer-to: _los_memory_usage
0x0033236C	0x00000004	[110] non-lazy-pointer-to: _los_object_list
0x00332370	0x00000004	[110] non-lazy-pointer-to: _major_collector
0x00332374	0x00000004	[110] non-lazy-pointer-to: _num_ready_finalizers
0x00332378	0x00000004	[110] non-lazy-pointer-to: _sgen_cardtable
0x0033237C	0x00000004	[110] non-lazy-pointer-to: _sgen_init_timestamp
0x00332380	0x00000004	[110] non-lazy-pointer-to: _sgen_interruption_mutex
0x00332384	0x00000004	[110] non-lazy-pointer-to: _sgen_minor_collector
0x00332388	0x00000004	[110] non-lazy-pointer-to: _sgen_nursery_bits
0x0033238C	0x00000004	[110] non-lazy-pointer-to: _sgen_nursery_end
0x00332390	0x00000004	[110] non-lazy-pointer-to: _sgen_nursery_size
0x00332394	0x00000004	[110] non-lazy-pointer-to: _sgen_nursery_start
0x00332398	0x00000004	[110] non-lazy-pointer-to: _sgen_space_bitmap
0x0033239C	0x00000004	[110] non-lazy-pointer-to: _sgen_space_bitmap_size
0x003323A0	0x00000004	[110] non-lazy-pointer-to: _sgen_try_free_some_memory
0x003323A4	0x00000004	[110] non-lazy-pointer-to: _thread_info_key
0x003323A8	0x00000004	[114] non-lazy-pointer-to: _gc_debug_level
0x003323AC	0x00000004	[118] non-lazy-pointer-to: _mutator_allocator
0x003323B0	0x00000004	[128] non-lazy-pointer-to: _sgen_global_stop_count
0x003323B4	0x00000004	[135] non-lazy-pointer-to: _threads_lock
0x003323B8	0x00000004	[135] non-lazy-pointer-to: _wsqs_lock
0x003323BC	0x00000004	[140] non-lazy-pointer-to: __wapi_has_shut_down
0x003323C0	0x00000004	[141] non-lazy-pointer-to: __wapi_shared_layout
0x003323C4	0x00000004	[142] non-lazy-pointer-to: __wapi_fd_reserve
0x003323C8	0x00000004	[142] non-lazy-pointer-to: __wapi_global_signal_cond
0x003323CC	0x00000004	[142] non-lazy-pointer-to: __wapi_global_signal_mutex
0x003323D0	0x00000004	[142] non-lazy-pointer-to: __wapi_private_handles
0x003323D4	0x00000004	[159] non-lazy-pointer-to: __wapi_handle_typename
0x003323D8	0x00000004	[176] non-lazy-pointer-to: _free
0x003323DC	0x00000004	[176] non-lazy-pointer-to: _malloc
0x003323E0	0x00000004	[184] non-lazy-pointer-to: _pthread_mutex_unlock
0x003323E4	0x00000004	[214] non-lazy-pointer-to: _g_utf8_jump_table
0x003323E8	0x00000004	[234] non-lazy-pointer-to: _UIApplicationDidReceiveMemoryWarningNotification
0x003323EC	0x00000004	[234] non-lazy-pointer-to: _monotouch_configure_debugging
0x003323F0	0x00000004	[234] non-lazy-pointer-to: _xamarin_unhandled_exception_handler
0x003323F4	0x00000004	[235] non-lazy-pointer-to: _NSLocaleCountryCode
0x003323F8	0x00000004	[236] non-lazy-pointer-to: _OBJC_EHTYPE_$_NSException
0x003323FC	0x00000004	[236] non-lazy-pointer-to: ___objc_personality_v0
0x00332400	0x00000004	[237] non-lazy-pointer-to: __NSConcreteStackBlock
0x00332404	0x00000004	[237] non-lazy-pointer-to: __dispatch_main_q
0x00332408	0x00000004	[237] non-lazy-pointer-to: _kCFAllocatorDefault
0x0033240C	0x00000004	[237] non-lazy-pointer-to: _objc_msgSend
0x00332410	0x00000004	[237] non-lazy-pointer-to: _objc_msgSendSuper
0x00332414	0x00000004	[238] non-lazy-pointer-to: __Block_release
0x00332418	0x00000004	[238] non-lazy-pointer-to: _xamarin_retain_trampoline
0x0033241C	0x00000004	[  5] _NSLog
0x00332420	0x00000004	[  5] _NSSetUncaughtExceptionHandler
0x00332424	0x00000004	[  5] _NSStringFromClass
0x00332428	0x00000004	[  6] _UIApplicationMain
0x0033242C	0x00000004	[  7] _deflate
0x00332430	0x00000004	[  7] _deflateEnd
0x00332434	0x00000004	[  7] _deflateInit2_
0x00332438	0x00000004	[  7] _inflate
0x0033243C	0x00000004	[  7] _inflateEnd
0x00332440	0x00000004	[  7] _inflateInit2_
0x00332444	0x00000004	[  8] _iconv
0x00332448	0x00000004	[  8] _iconv_close
0x0033244C	0x00000004	[  8] _iconv_open
0x00332450	0x00000004	[  8] _locale_charset
0x00332454	0x00000004	[243] __ZdlPv
0x00332458	0x00000004	[243] __Znwm
0x0033245C	0x00000004	[244] _CC_SHA1_Final
0x00332460	0x00000004	[244] _CC_SHA1_Init
0x00332464	0x00000004	[244] _CC_SHA1_Update
0x00332468	0x00000004	[244] __Block_copy
0x0033246C	0x00000004	[244] __NSGetEnviron
0x00332470	0x00000004	[244] __NSGetExecutablePath
0x00332474	0x00000004	[244] __Unwind_Resume
0x00332478	0x00000004	[244] ___assert_rtn
0x0033247C	0x00000004	[244] ___divdi3
0x00332480	0x00000004	[244] ___error
0x00332484	0x00000004	[244] ___fixunsdfdi
0x00332488	0x00000004	[244] ___fixunssfdi
0x0033248C	0x00000004	[244] ___maskrune
0x00332490	0x00000004	[244] ___memcpy_chk
0x00332494	0x00000004	[244] ___memset_chk
0x00332498	0x00000004	[244] ___moddi3
0x0033249C	0x00000004	[244] ___snprintf_chk
0x003324A0	0x00000004	[244] ___sprintf_chk
0x003324A4	0x00000004	[244] ___stack_chk_fail
0x003324A8	0x00000004	[244] ___strcat_chk
0x003324AC	0x00000004	[244] ___strcpy_chk
0x003324B0	0x00000004	[244] ___strncpy_chk
0x003324B4	0x00000004	[244] ___tolower
0x003324B8	0x00000004	[244] ___udivdi3
0x003324BC	0x00000004	[244] ___umoddi3
0x003324C0	0x00000004	[244] ___vsnprintf_chk
0x003324C4	0x00000004	[244] ___vsprintf_chk
0x003324C8	0x00000004	[244] __dyld_get_image_header
0x003324CC	0x00000004	[244] __dyld_get_image_name
0x003324D0	0x00000004	[244] __dyld_image_count
0x003324D4	0x00000004	[244] __exit
0x003324D8	0x00000004	[244] _abort
0x003324DC	0x00000004	[244] _accept
0x003324E0	0x00000004	[244] _access
0x003324E4	0x00000004	[244] _acos
0x003324E8	0x00000004	[244] _asin
0x003324EC	0x00000004	[244] _asl_log
0x003324F0	0x00000004	[244] _atan
0x003324F4	0x00000004	[244] _atan2
0x003324F8	0x00000004	[244] _atexit
0x003324FC	0x00000004	[244] _atoi
0x00332500	0x00000004	[244] _backtrace
0x00332504	0x00000004	[244] _backtrace_symbols
0x00332508	0x00000004	[244] _bind
0x0033250C	0x00000004	[244] _calloc
0x00332510	0x00000004	[244] _ceil
0x00332514	0x00000004	[244] _chdir
0x00332518	0x00000004	[244] _chmod
0x0033251C	0x00000004	[244] _close
0x00332520	0x00000004	[244] _closedir
0x00332524	0x00000004	[244] _connect
0x00332528	0x00000004	[244] _cos
0x0033252C	0x00000004	[244] _cosh
0x00332530	0x00000004	[244] _dispatch_async
0x00332534	0x00000004	[244] _div
0x00332538	0x00000004	[244] _dlclose
0x0033253C	0x00000004	[244] _dlerror
0x00332540	0x00000004	[244] _dlopen
0x00332544	0x00000004	[244] _dlsym
0x00332548	0x00000004	[244] _dup
0x0033254C	0x00000004	[244] _dup2
0x00332550	0x00000004	[244] _execv
0x00332554	0x00000004	[244] _execve
0x00332558	0x00000004	[244] _execvp
0x0033255C	0x00000004	[244] _exit
0x00332560	0x00000004	[244] _exp
0x00332564	0x00000004	[244] _fclose
0x00332568	0x00000004	[244] _fcntl
0x0033256C	0x00000004	[244] _fdopen
0x00332570	0x00000004	[244] _feof
0x00332574	0x00000004	[244] _ferror
0x00332578	0x00000004	[244] _fflush
0x0033257C	0x00000004	[244] _fgets
0x00332580	0x00000004	[244] _fileno
0x00332584	0x00000004	[244] _floor
0x00332588	0x00000004	[244] _fopen
0x0033258C	0x00000004	[244] _fopen$DARWIN_EXTSN
0x00332590	0x00000004	[244] _fork
0x00332594	0x00000004	[244] _fprintf
0x00332598	0x00000004	[244] _fputc
0x0033259C	0x00000004	[244] _fputs
0x003325A0	0x00000004	[244] _fread
0x003325A4	0x00000004	[244] _free
0x003325A8	0x00000004	[244] _freeaddrinfo
0x003325AC	0x00000004	[244] _freeifaddrs
0x003325B0	0x00000004	[244] _fscanf
0x003325B4	0x00000004	[244] _fstat
0x003325B8	0x00000004	[244] _fsync
0x003325BC	0x00000004	[244] _ftok
0x003325C0	0x00000004	[244] _ftruncate
0x003325C4	0x00000004	[244] _fwrite
0x003325C8	0x00000004	[244] _getaddrinfo
0x003325CC	0x00000004	[244] _getcwd
0x003325D0	0x00000004	[244] _getegid
0x003325D4	0x00000004	[244] _getenv
0x003325D8	0x00000004	[244] _geteuid
0x003325DC	0x00000004	[244] _getfsstat
0x003325E0	0x00000004	[244] _getgrgid_r
0x003325E4	0x00000004	[244] _getgrnam_r
0x003325E8	0x00000004	[244] _gethostname
0x003325EC	0x00000004	[244] _getifaddrs
0x003325F0	0x00000004	[244] _getloadavg
0x003325F4	0x00000004	[244] _getnameinfo
0x003325F8	0x00000004	[244] _getpagesize
0x003325FC	0x00000004	[244] _getpeername
0x00332600	0x00000004	[244] _getpid
0x00332604	0x00000004	[244] _getpriority
0x00332608	0x00000004	[244] _getprotobyname
0x0033260C	0x00000004	[244] _getpwnam_r
0x00332610	0x00000004	[244] _getpwuid_r
0x00332614	0x00000004	[244] _getrlimit
0x00332618	0x00000004	[244] _getrusage
0x0033261C	0x00000004	[244] _getsectbynamefromheader
0x00332620	0x00000004	[244] _getsockname
0x00332624	0x00000004	[244] _getsockopt
0x00332628	0x00000004	[244] _gettimeofday
0x0033262C	0x00000004	[244] _getuid
0x00332630	0x00000004	[244] _host_statistics
0x00332634	0x00000004	[244] _if_nametoindex
0x00332638	0x00000004	[244] _inet_pton
0x0033263C	0x00000004	[244] _ioctl
0x00332640	0x00000004	[244] _isatty
0x00332644	0x00000004	[244] _isdigit
0x00332648	0x00000004	[244] _kill
0x0033264C	0x00000004	[244] _listen
0x00332650	0x00000004	[244] _localtime
0x00332654	0x00000004	[244] _log
0x00332658	0x00000004	[244] _log10
0x0033265C	0x00000004	[244] _lseek
0x00332660	0x00000004	[244] _lstat
0x00332664	0x00000004	[244] _mach_absolute_time
0x00332668	0x00000004	[244] _mach_host_self
0x0033266C	0x00000004	[244] _mach_port_deallocate
0x00332670	0x00000004	[244] _mach_thread_self
0x00332674	0x00000004	[244] _mach_timebase_info
0x00332678	0x00000004	[244] _madvise
0x0033267C	0x00000004	[244] _malloc
0x00332680	0x00000004	[244] _memchr
0x00332684	0x00000004	[244] _memcmp
0x00332688	0x00000004	[244] _memcpy
0x0033268C	0x00000004	[244] _memmove
0x00332690	0x00000004	[244] _memset
0x00332694	0x00000004	[244] _memset_pattern16
0x00332698	0x00000004	[244] _mincore
0x0033269C	0x00000004	[244] _mkdir
0x003326A0	0x00000004	[244] _mkstemp
0x003326A4	0x00000004	[244] _mktime
0x003326A8	0x00000004	[244] _mmap
0x003326AC	0x00000004	[244] _mprotect
0x003326B0	0x00000004	[244] _msync
0x003326B4	0x00000004	[244] _munmap
0x003326B8	0x00000004	[244] _nanosleep
0x003326BC	0x00000004	[244] _open
0x003326C0	0x00000004	[244] _opendir
0x003326C4	0x00000004	[244] _perror
0x003326C8	0x00000004	[244] _pipe
0x003326CC	0x00000004	[244] _pow
0x003326D0	0x00000004	[244] _printf
0x003326D4	0x00000004	[244] _pthread_attr_init
0x003326D8	0x00000004	[244] _pthread_attr_setstacksize
0x003326DC	0x00000004	[244] _pthread_cond_broadcast
0x003326E0	0x00000004	[244] _pthread_cond_destroy
0x003326E4	0x00000004	[244] _pthread_cond_init
0x003326E8	0x00000004	[244] _pthread_cond_signal
0x003326EC	0x00000004	[244] _pthread_cond_timedwait
0x003326F0	0x00000004	[244] _pthread_cond_wait
0x003326F4	0x00000004	[244] _pthread_create
0x003326F8	0x00000004	[244] _pthread_detach
0x003326FC	0x00000004	[244] _pthread_equal
0x00332700	0x00000004	[244] _pthread_exit
0x00332704	0x00000004	[244] _pthread_get_stackaddr_np
0x00332708	0x00000004	[244] _pthread_get_stacksize_np
0x0033270C	0x00000004	[244] _pthread_getspecific
0x00332710	0x00000004	[244] _pthread_join
0x00332714	0x00000004	[244] _pthread_key_create
0x00332718	0x00000004	[244] _pthread_key_delete
0x0033271C	0x00000004	[244] _pthread_kill
0x00332720	0x00000004	[244] _pthread_mutex_destroy
0x00332724	0x00000004	[244] _pthread_mutex_init
0x00332728	0x00000004	[244] _pthread_mutex_lock
0x0033272C	0x00000004	[244] _pthread_mutex_trylock
0x00332730	0x00000004	[244] _pthread_mutex_unlock
0x00332734	0x00000004	[244] _pthread_mutexattr_destroy
0x00332738	0x00000004	[244] _pthread_mutexattr_init
0x0033273C	0x00000004	[244] _pthread_mutexattr_settype
0x00332740	0x00000004	[244] _pthread_self
0x00332744	0x00000004	[244] _pthread_setspecific
0x00332748	0x00000004	[244] _putchar
0x0033274C	0x00000004	[244] _puts
0x00332750	0x00000004	[244] _qsort
0x00332754	0x00000004	[244] _read
0x00332758	0x00000004	[244] _readdir
0x0033275C	0x00000004	[244] _readlink
0x00332760	0x00000004	[244] _realloc
0x00332764	0x00000004	[244] _recv
0x00332768	0x00000004	[244] _recvfrom
0x0033276C	0x00000004	[244] _recvmsg
0x00332770	0x00000004	[244] _rename
0x00332774	0x00000004	[244] _rint
0x00332778	0x00000004	[244] _rmdir
0x0033277C	0x00000004	[244] _round
0x00332780	0x00000004	[244] _sched_yield
0x00332784	0x00000004	[244] _select
0x00332788	0x00000004	[244] _semaphore_create
0x0033278C	0x00000004	[244] _semaphore_destroy
0x00332790	0x00000004	[244] _semaphore_signal
0x00332794	0x00000004	[244] _semaphore_timedwait
0x00332798	0x00000004	[244] _semaphore_wait
0x0033279C	0x00000004	[244] _send
0x003327A0	0x00000004	[244] _sendmsg
0x003327A4	0x00000004	[244] _sendto
0x003327A8	0x00000004	[244] _setenv
0x003327AC	0x00000004	[244] _setitimer
0x003327B0	0x00000004	[244] _setlocale
0x003327B4	0x00000004	[244] _setpgid
0x003327B8	0x00000004	[244] _setpriority
0x003327BC	0x00000004	[244] _setsockopt
0x003327C0	0x00000004	[244] _shm_open
0x003327C4	0x00000004	[244] _shm_unlink
0x003327C8	0x00000004	[244] _shmat
0x003327CC	0x00000004	[244] _shmdt
0x003327D0	0x00000004	[244] _shmget
0x003327D4	0x00000004	[244] _shutdown
0x003327D8	0x00000004	[244] _sigaction
0x003327DC	0x00000004	[244] _sigaltstack
0x003327E0	0x00000004	[244] _signal
0x003327E4	0x00000004	[244] _sigprocmask
0x003327E8	0x00000004	[244] _sin
0x003327EC	0x00000004	[244] _sinh
0x003327F0	0x00000004	[244] _sleep
0x003327F4	0x00000004	[244] _socket
0x003327F8	0x00000004	[244] _sscanf
0x003327FC	0x00000004	[244] _stat
0x00332800	0x00000004	[244] _statfs
0x00332804	0x00000004	[244] _statvfs
0x00332808	0x00000004	[244] _stpcpy
0x0033280C	0x00000004	[244] _strchr
0x00332810	0x00000004	[244] _strcmp
0x00332814	0x00000004	[244] _strcpy
0x00332818	0x00000004	[244] _strdup
0x0033281C	0x00000004	[244] _strerror
0x00332820	0x00000004	[244] _strftime
0x00332824	0x00000004	[244] _strlcpy
0x00332828	0x00000004	[244] _strlen
0x0033282C	0x00000004	[244] _strncasecmp
0x00332830	0x00000004	[244] _strncmp
0x00332834	0x00000004	[244] _strncpy
0x00332838	0x00000004	[244] _strndup
0x0033283C	0x00000004	[244] _strrchr
0x00332840	0x00000004	[244] _strstr
0x00332844	0x00000004	[244] _strtod
0x00332848	0x00000004	[244] _strtok_r
0x0033284C	0x00000004	[244] _strtol
0x00332850	0x00000004	[244] _strtoul
0x00332854	0x00000004	[244] _strtoull
0x00332858	0x00000004	[244] _sysconf
0x0033285C	0x00000004	[244] _sysctl
0x00332860	0x00000004	[244] _system
0x00332864	0x00000004	[244] _tan
0x00332868	0x00000004	[244] _tanh
0x0033286C	0x00000004	[244] _task_for_pid
0x00332870	0x00000004	[244] _task_info
0x00332874	0x00000004	[244] _task_threads
0x00332878	0x00000004	[244] _tcflush
0x0033287C	0x00000004	[244] _tcgetattr
0x00332880	0x00000004	[244] _tcsetattr
0x00332884	0x00000004	[244] _thread_abort
0x00332888	0x00000004	[244] _thread_get_state
0x0033288C	0x00000004	[244] _thread_info
0x00332890	0x00000004	[244] _thread_resume
0x00332894	0x00000004	[244] _thread_set_state
0x00332898	0x00000004	[244] _thread_suspend
0x0033289C	0x00000004	[244] _time
0x003328A0	0x00000004	[244] _trunc
0x003328A4	0x00000004	[244] _truncf
0x003328A8	0x00000004	[244] _uname
0x003328AC	0x00000004	[244] _unlink
0x003328B0	0x00000004	[244] _unsetenv
0x003328B4	0x00000004	[244] _usleep
0x003328B8	0x00000004	[244] _utime
0x003328BC	0x00000004	[244] _vfprintf
0x003328C0	0x00000004	[244] _vm_allocate
0x003328C4	0x00000004	[244] _vm_deallocate
0x003328C8	0x00000004	[244] _vm_remap
0x003328CC	0x00000004	[244] _vprintf
0x003328D0	0x00000004	[244] _waitpid
0x003328D4	0x00000004	[244] _write
0x003328D8	0x00000004	[245] _class_addMethod
0x003328DC	0x00000004	[245] _class_copyIvarList
0x003328E0	0x00000004	[245] _class_copyMethodList
0x003328E4	0x00000004	[245] _class_copyPropertyList
0x003328E8	0x00000004	[245] _class_getClassMethod
0x003328EC	0x00000004	[245] _class_getInstanceVariable
0x003328F0	0x00000004	[245] _class_getMethodImplementation
0x003328F4	0x00000004	[245] _class_getName
0x003328F8	0x00000004	[245] _class_getSuperclass
0x003328FC	0x00000004	[245] _ivar_getName
0x00332900	0x00000004	[245] _method_getName
0x00332904	0x00000004	[245] _method_getTypeEncoding
0x00332908	0x00000004	[245] _objc_allocateClassPair
0x0033290C	0x00000004	[245] _objc_begin_catch
0x00332910	0x00000004	[245] _objc_end_catch
0x00332914	0x00000004	[245] _objc_enumerationMutation
0x00332918	0x00000004	[245] _objc_getClass
0x0033291C	0x00000004	[245] _objc_msgSend
0x00332920	0x00000004	[245] _objc_msgSendSuper
0x00332924	0x00000004	[245] _objc_msgSendSuper2
0x00332928	0x00000004	[245] _objc_msgSend_fpret
0x0033292C	0x00000004	[245] _objc_registerClassPair
0x00332930	0x00000004	[245] _object_getClass
0x00332934	0x00000004	[245] _object_getClassName
0x00332938	0x00000004	[245] _object_getInstanceVariable
0x0033293C	0x00000004	[245] _object_setInstanceVariable
0x00332940	0x00000004	[245] _property_getName
0x00332944	0x00000004	[245] _sel_getName
0x00332948	0x00000004	[245] _sel_registerName
0x0033294C	0x00000004	[246] _CFDictionaryCreateMutable
0x00332950	0x00000004	[246] _CFDictionaryGetValue
0x00332954	0x00000004	[246] _CFDictionaryRemoveValue
0x00332958	0x00000004	[246] _CFDictionarySetValue
0x0033295C	0x00000004	[246] _CFLocaleCopyCurrent
0x00332960	0x00000004	[246] _CFLocaleGetIdentifier
0x00332964	0x00000004	[246] _CFLocaleGetValue
0x00332968	0x00000004	[246] _CFRelease
0x0033296C	0x00000004	[246] _CFStringGetBytes
0x00332970	0x00000004	[246] _CFStringGetCString
0x00332974	0x00000004	[246] _CFStringGetLength
0x00332978	0x00000004	[246] _CFStringGetMaximumSizeForEncoding
0x0033297C	0x00000004	[  4] anon
0x00332980	0x00000004	[239] anon
0x00332990	0x00000078	[ 11] _wrapper_type_names
0x00332A10	0x00000030	[ 16] _vm_cmds_str
0x00332A40	0x0000001C	[ 16] _object_cmds_str
0x00332A5C	0x0000000C	[ 16] _string_cmds_str
0x00332A68	0x0000001C	[ 16] _thread_cmds_str
0x00332A84	0x0000000C	[ 16] _array_cmds_str
0x00332A90	0x0000000C	[ 16] _event_cmds_str
0x00332A9C	0x00000010	[ 16] _stack_frame_cmds_str
0x00332AAC	0x0000001C	[ 16] _appdomain_cmds_str
0x00332AC8	0x00000018	[ 16] _assembly_cmds_str
0x00332AE0	0x00000028	[ 16] _method_cmds_str
0x00332B08	0x00000048	[ 16] _type_cmds_str
0x00332B50	0x00000004	[ 16] _field_cmds_str
0x00332B54	0x0000000C	[ 16] l_switch.table
0x00332B60	0x00000044	[ 16] l_switch.table338
0x00332BA4	0x00000154	[ 21] _basic_types
0x00332D00	0x0000004C	[ 30] l_switch.table520
0x00332D4C	0x000000D8	[ 31] _patch_info_str
0x00332E30	0x00000068	[ 36] l_switch.table
0x00332E98	0x00000048	[ 37] _int_cmpop
0x00332EE0	0x00000024	[ 37] _int_unnop
0x00332F04	0x00000078	[ 37] _int_binop
0x00332F7C	0x0000003C	[ 39] _tramp_names
0x00332FC0	0x00000020	[ 40] l_switch.table
0x00332FE0	0x00000020	[ 40] l_switch.table110
0x00333000	0x00000020	[ 40] l_switch.table111
0x00333020	0x00000014	[ 54] _mono_parser
0x00333034	0x00000218	[ 55] _framework_assemblies
0x0033324C	0x000000A8	[ 55] _key_remap_table
0x003332F4	0x00000014	[ 64] _mono_parser
0x00333308	0x00000A98	[ 72] _icall_functions
0x00333DA0	0x00000094	[ 72] _encodings
0x00333E34	0x0000000C	[ 73] _pe_loader
0x00333E40	0x0000000C	[ 73] _enc_loader
0x00333E4C	0x00000014	[ 77] _strelemref_wrapper_name
0x00333E60	0x00000014	[ 85] _mono_parser
0x00333E74	0x00000018	[ 85] _dllmap_handler
0x00333E8C	0x00000018	[ 85] _legacyUEP_handler
0x00333EA4	0x00000018	[ 85] _aot_cache_handler
0x00333EBC	0x000000B4	[ 90] _predef_categories
0x00333F70	0x00000620	[ 90] _predef_counters
0x00334590	0x00000070	[ 99] l_switch.table220
0x00334600	0x00000020	[105] l_null_weak_links_to_dead_objects.alive_hash
0x00334620	0x00000020	[107] l_sgen_compare_bridge_processor_results.obj_to_a_scc
0x00334640	0x00000020	[107] l_sgen_compare_bridge_processor_results.b_scc_to_a_scc
0x00334660	0x00000094	[113] l_switch.table
0x003346F4	0x00000020	[117] l_enable_accounting.table
0x00334714	0x00000020	[119] l_enable_accounting.table
0x00334734	0x0000001C	[138] _type_names
0x00334750	0x000000A8	[141] _event_ops
0x003347F8	0x00000038	[142] _handle_ops
0x00334830	0x00000038	[142] _handle_details
0x00334868	0x000001F8	[144] _io_ops
0x00334A60	0x00000080	[144] __wapi_drive_types
0x00334AE0	0x0000000C	[144] l_switch.table41
0x00334AEC	0x00000038	[148] _mutex_ops
0x00334B24	0x00000038	[152] _sem_ops
0x00334B60	0x00000050	[156] l_switch.table
0x00334BB0	0x00000020	[156] l_switch.table280
0x00334BD0	0x00000020	[156] l_switch.table281
0x00334BF0	0x00000050	[156] l_switch.table282
0x00334C40	0x00000060	[156] l_switch.table283
0x00334CA0	0x0000001C	[156] l_switch.table284
0x00334CBC	0x0000000C	[156] l_switch.table285
0x00334CC8	0x0000000C	[156] l_switch.table286
0x00334CD4	0x0000000C	[156] l_switch.table287
0x00334CE0	0x00000010	[156] l_switch.table288
0x00334CF0	0x00000024	[156] l_switch.table289
0x00334D14	0x0000000C	[156] l_switch.table290
0x00334D20	0x00000010	[156] l_switch.table291
0x00334D30	0x00000028	[156] l_switch.table292
0x00334D58	0x0000000C	[156] l_switch.table293
0x00334D64	0x0000000C	[156] l_switch.table294
0x00334D70	0x0000000C	[156] l_switch.table295
0x00334D7C	0x00000010	[156] l_switch.table296
0x00334D8C	0x0000001C	[182] l_mono_trace_set_level_string.valid_vals
0x00334DA8	0x00000024	[182] l_mono_trace_set_mask_string.valid_flags
0x00334DCC	0x000000B4	[214] _charsets
0x00334E80	0x0000002C	[230] _unicode_category
0x00334EAC	0x00000020	[230] _simple_upper_case_mapping_lowarea
0x00334ECC	0x00000020	[230] _simple_lower_case_mapping_lowarea
0x00334EEC	0x00000004	[230] _simple_upper_case_mapping_higharea
0x00334EF0	0x00000004	[230] _simple_lower_case_mapping_higharea
0x00334EF8	0x00000010	[237] ___block_descriptor_tmp
0x00334F08	0x00000010	[  4] CFString
0x00334F18	0x00000010	[  4] CFString
0x00334F28	0x00000010	[  4] CFString
0x00334F38	0x00000010	[233] CFString
0x00334F48	0x00000010	[233] CFString
0x00334F58	0x00000010	[233] CFString
0x00334F68	0x00000010	[233] CFString
0x00334F78	0x00000010	[233] CFString
0x00334F88	0x00000010	[233] CFString
0x00334F98	0x00000010	[233] CFString
0x00334FA8	0x00000010	[233] CFString
0x00334FB8	0x00000010	[233] CFString
0x00334FC8	0x00000010	[233] CFString
0x00334FD8	0x00000010	[233] CFString
0x00334FE8	0x00000010	[233] CFString
0x00334FF8	0x00000010	[233] CFString
0x00335008	0x00000010	[233] CFString
0x00335018	0x00000010	[233] CFString
0x00335028	0x00000010	[233] CFString
0x00335038	0x00000010	[233] CFString
0x00335048	0x00000010	[233] CFString
0x00335058	0x00000010	[233] CFString
0x00335068	0x00000010	[233] CFString
0x00335078	0x00000010	[233] CFString
0x00335088	0x00000010	[233] CFString
0x00335098	0x00000010	[233] CFString
0x003350A8	0x00000010	[233] CFString
0x003350B8	0x00000010	[233] CFString
0x003350C8	0x00000010	[233] CFString
0x003350D8	0x00000010	[233] CFString
0x003350E8	0x00000010	[233] CFString
0x003350F8	0x00000010	[233] CFString
0x00335108	0x00000010	[233] CFString
0x00335118	0x00000010	[233] CFString
0x00335128	0x00000010	[233] CFString
0x00335138	0x00000010	[233] CFString
0x00335148	0x00000010	[233] CFString
0x00335158	0x00000010	[233] CFString
0x00335168	0x00000010	[233] CFString
0x00335178	0x00000010	[233] CFString
0x00335188	0x00000010	[233] CFString
0x00335198	0x00000010	[233] CFString
0x003351A8	0x00000010	[233] CFString
0x003351B8	0x00000010	[233] CFString
0x003351C8	0x00000010	[233] CFString
0x003351D8	0x00000010	[233] CFString
0x003351E8	0x00000010	[233] CFString
0x003351F8	0x00000010	[233] CFString
0x00335208	0x00000010	[233] CFString
0x00335218	0x00000010	[233] CFString
0x00335228	0x00000010	[233] CFString
0x00335238	0x00000010	[233] CFString
0x00335248	0x00000010	[233] CFString
0x00335258	0x00000010	[233] CFString
0x00335268	0x00000010	[233] CFString
0x00335278	0x00000010	[233] CFString
0x00335288	0x00000010	[233] CFString
0x00335298	0x00000010	[233] CFString
0x003352A8	0x00000010	[233] CFString
0x003352B8	0x00000010	[233] CFString
0x003352C8	0x00000010	[233] CFString
0x003352D8	0x00000010	[233] CFString
0x003352E8	0x00000010	[233] CFString
0x003352F8	0x00000010	[234] CFString
0x00335308	0x00000010	[234] CFString
0x00335318	0x00000010	[235] CFString
0x00335328	0x00000010	[238] CFString
0x00335338	0x00000010	[238] CFString
0x00335348	0x00000010	[238] CFString
0x00335358	0x00000010	[238] CFString
0x00335368	0x00000010	[238] CFString
0x00335378	0x00000010	[238] CFString
0x00335388	0x00000010	[238] CFString
0x00335398	0x00000010	[238] CFString
0x003353A8	0x00000010	[238] CFString
0x003353B8	0x00000010	[238] CFString
0x003353C8	0x00000010	[238] CFString
0x003353D8	0x00000010	[238] CFString
0x003353E8	0x00000004	[  4] anon
0x003353EC	0x00000004	[234] anon
0x003353F0	0x00000008	[237] anon
0x003353F8	0x00000004	[  4] l_OBJC_LABEL_PROTOCOL_$_NSObject
0x003353FC	0x00000004	[  4] l_OBJC_LABEL_PROTOCOL_$_UIApplicationDelegate
0x00335400	0x00000008	[  0] objc image info
0x00335408	0x000000EC	[  4] l_OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject
0x003354F4	0x00000014	[  4] l_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject
0x00335508	0x00000028	[  4] l_OBJC_$_PROP_LIST_NSObject
0x00335530	0x00000050	[  4] l_OBJC_$_PROTOCOL_METHOD_TYPES_NSObject
0x00335580	0x0000000C	[  4] l_OBJC_$_PROTOCOL_REFS_UIApplicationDelegate
0x0033558C	0x00000204	[  4] l_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_UIApplicationDelegate
0x00335790	0x00000010	[  4] l_OBJC_$_PROP_LIST_UIApplicationDelegate
0x003357A0	0x000000A8	[  4] l_OBJC_$_PROTOCOL_METHOD_TYPES_UIApplicationDelegate
0x00335848	0x0000000C	[  4] l_OBJC_CLASS_PROTOCOLS_$_MonoTouchAppDelegate
0x00335854	0x00000028	[  4] l_OBJC_METACLASS_RO_$_MonoTouchAppDelegate
0x0033587C	0x00000014	[  4] l_OBJC_$_INSTANCE_METHODS_MonoTouchAppDelegate
0x00335890	0x00000030	[  4] l_OBJC_$_PROP_LIST_MonoTouchAppDelegate
0x003358C0	0x00000028	[  4] l_OBJC_CLASS_RO_$_MonoTouchAppDelegate
0x003358E8	0x00000028	[234] l_OBJC_METACLASS_RO_$_XamarinGCSupport
0x00335910	0x0000002C	[234] l_OBJC_$_INSTANCE_METHODS_XamarinGCSupport
0x0033593C	0x00000028	[234] l_OBJC_CLASS_RO_$_XamarinGCSupport
0x00335964	0x00000028	[237] l_OBJC_METACLASS_RO_$_XamarinNSThreadObject
0x0033598C	0x0000002C	[237] l_OBJC_$_INSTANCE_METHODS_XamarinNSThreadObject
0x003359B8	0x00000058	[237] l_OBJC_$_INSTANCE_VARIABLES_XamarinNSThreadObject
0x00335A10	0x00000028	[237] l_OBJC_CLASS_RO_$_XamarinNSThreadObject
0x00335A38	0x00000028	[237] l_OBJC_METACLASS_RO_$_CocoaThreadInitializer
0x00335A60	0x00000020	[237] l_OBJC_$_INSTANCE_METHODS_CocoaThreadInitializer
0x00335A80	0x0000001C	[237] l_OBJC_$_INSTANCE_VARIABLES_CocoaThreadInitializer
0x00335A9C	0x00000028	[237] l_OBJC_CLASS_RO_$_CocoaThreadInitializer
0x00335AC4	0x00000004	[  4] pointer-to-literal-cstring
0x00335AC8	0x00000004	[  4] pointer-to-literal-cstring
0x00335ACC	0x00000004	[  4] pointer-to-literal-cstring
0x00335AD0	0x00000004	[  4] pointer-to-literal-cstring
0x00335AD4	0x00000004	[  4] pointer-to-literal-cstring
0x00335AD8	0x00000004	[  4] pointer-to-literal-cstring
0x00335ADC	0x00000004	[  4] pointer-to-literal-cstring
0x00335AE0	0x00000004	[233] pointer-to-literal-cstring
0x00335AE4	0x00000004	[233] pointer-to-literal-cstring
0x00335AE8	0x00000004	[233] pointer-to-literal-cstring
0x00335AEC	0x00000004	[233] pointer-to-literal-cstring
0x00335AF0	0x00000004	[233] pointer-to-literal-cstring
0x00335AF4	0x00000004	[233] pointer-to-literal-cstring
0x00335AF8	0x00000004	[233] pointer-to-literal-cstring
0x00335AFC	0x00000004	[233] pointer-to-literal-cstring
0x00335B00	0x00000004	[233] pointer-to-literal-cstring
0x00335B04	0x00000004	[233] pointer-to-literal-cstring
0x00335B08	0x00000004	[233] pointer-to-literal-cstring
0x00335B0C	0x00000004	[233] pointer-to-literal-cstring
0x00335B10	0x00000004	[234] pointer-to-literal-cstring
0x00335B14	0x00000004	[234] pointer-to-literal-cstring
0x00335B18	0x00000004	[234] pointer-to-literal-cstring
0x00335B1C	0x00000004	[235] pointer-to-literal-cstring
0x00335B20	0x00000004	[235] pointer-to-literal-cstring
0x00335B24	0x00000004	[235] pointer-to-literal-cstring
0x00335B28	0x00000004	[235] pointer-to-literal-cstring
0x00335B2C	0x00000004	[235] pointer-to-literal-cstring
0x00335B30	0x00000004	[235] pointer-to-literal-cstring
0x00335B34	0x00000004	[235] pointer-to-literal-cstring
0x00335B38	0x00000004	[235] pointer-to-literal-cstring
0x00335B3C	0x00000004	[235] pointer-to-literal-cstring
0x00335B40	0x00000004	[235] pointer-to-literal-cstring
0x00335B44	0x00000004	[235] pointer-to-literal-cstring
0x00335B48	0x00000004	[235] pointer-to-literal-cstring
0x00335B4C	0x00000004	[235] pointer-to-literal-cstring
0x00335B50	0x00000004	[235] pointer-to-literal-cstring
0x00335B54	0x00000004	[235] pointer-to-literal-cstring
0x00335B58	0x00000004	[235] pointer-to-literal-cstring
0x00335B5C	0x00000004	[237] pointer-to-literal-cstring
0x00335B60	0x00000004	[237] pointer-to-literal-cstring
0x00335B64	0x00000004	[237] pointer-to-literal-cstring
0x00335B68	0x00000004	[237] pointer-to-literal-cstring
0x00335B6C	0x00000004	[237] pointer-to-literal-cstring
0x00335B70	0x00000004	[237] pointer-to-literal-cstring
0x00335B74	0x00000004	[237] pointer-to-literal-cstring
0x00335B78	0x00000004	[237] pointer-to-literal-cstring
0x00335B7C	0x00000004	[238] pointer-to-literal-cstring
0x00335B80	0x00000004	[238] pointer-to-literal-cstring
0x00335B84	0x00000004	[238] pointer-to-literal-cstring
0x00335B88	0x00000004	[238] pointer-to-literal-cstring
0x00335B8C	0x00000004	[238] pointer-to-literal-cstring
0x00335B90	0x00000004	[238] pointer-to-literal-cstring
0x00335B94	0x00000004	[238] pointer-to-literal-cstring
0x00335B98	0x00000004	[238] pointer-to-literal-cstring
0x00335B9C	0x00000004	[239] pointer-to-literal-cstring
0x00335BA0	0x00000004	[239] pointer-to-literal-cstring
0x00335BA4	0x00000004	[239] pointer-to-literal-cstring
0x00335BA8	0x00000004	[239] pointer-to-literal-cstring
0x00335BAC	0x00000004	[239] pointer-to-literal-cstring
0x00335BB0	0x00000004	[239] pointer-to-literal-cstring
0x00335BB4	0x00000004	[239] pointer-to-literal-cstring
0x00335BB8	0x00000004	[239] pointer-to-literal-cstring
0x00335BBC	0x00000004	[239] pointer-to-literal-cstring
0x00335BC0	0x00000004	[  4] objc-class-ref
0x00335BC4	0x00000004	[  4] objc-class-ref
0x00335BC8	0x00000004	[  4] objc-class-ref
0x00335BCC	0x00000004	[233] objc-class-ref
0x00335BD0	0x00000004	[233] objc-class-ref
0x00335BD4	0x00000004	[233] objc-class-ref
0x00335BD8	0x00000004	[234] objc-class-ref
0x00335BDC	0x00000004	[234] objc-class-ref
0x00335BE0	0x00000004	[235] objc-class-ref
0x00335BE4	0x00000004	[235] objc-class-ref
0x00335BE8	0x00000004	[235] objc-class-ref
0x00335BEC	0x00000004	[235] objc-class-ref
0x00335BF0	0x00000004	[237] objc-class-ref
0x00335BF4	0x00000004	[237] objc-class-ref
0x00335BF8	0x00000004	[237] objc-class-ref
0x00335BFC	0x00000004	[238] objc-class-ref
0x00335C00	0x00000004	[238] objc-class-ref
0x00335C04	0x00000004	[239] objc-class-ref
0x00335C08	0x00000004	[239] objc-class-ref
0x00335C0C	0x00000004	[234] anon
0x00335C10	0x00000008	[237] anon
0x00335C18	0x00000004	[237] _OBJC_IVAR_$_XamarinNSThreadObject.target
0x00335C1C	0x00000004	[237] _OBJC_IVAR_$_XamarinNSThreadObject.selector
0x00335C20	0x00000004	[237] _OBJC_IVAR_$_XamarinNSThreadObject.argument
0x00335C24	0x00000004	[237] _OBJC_IVAR_$_XamarinNSThreadObject.is_direct_binding
0x00335C28	0x00000004	[237] _OBJC_IVAR_$_CocoaThreadInitializer.the_func
0x00335C2C	0x00000014	[  4] _OBJC_METACLASS_$_MonoTouchAppDelegate
0x00335C40	0x00000014	[  4] _OBJC_CLASS_$_MonoTouchAppDelegate
0x00335C54	0x00000014	[234] _OBJC_CLASS_$_XamarinGCSupport
0x00335C68	0x00000014	[234] _OBJC_METACLASS_$_XamarinGCSupport
0x00335C7C	0x00000014	[237] _OBJC_CLASS_$_XamarinNSThreadObject
0x00335C90	0x00000014	[237] _OBJC_METACLASS_$_XamarinNSThreadObject
0x00335CA4	0x00000014	[237] _OBJC_CLASS_$_CocoaThreadInitializer
0x00335CB8	0x00000014	[237] _OBJC_METACLASS_$_CocoaThreadInitializer
0x00335CD0	0x0000002C	[  4] l_OBJC_PROTOCOL_$_NSObject
0x00335CFC	0x0000002C	[  4] l_OBJC_PROTOCOL_$_UIApplicationDelegate
0x00335D28	0x00000004	[ 12] _mono_last_aot_method
0x00335D2C	0x00000004	[ 12] _aot_code_low_addr
0x00335D30	0x00000038	[ 21] _compile_unit_attr
0x00335D68	0x00000038	[ 21] _subprogram_attr
0x00335DA0	0x00000018	[ 21] _param_attr
0x00335DB8	0x00000018	[ 21] _param_loclist_attr
0x00335DD0	0x00000018	[ 21] _base_type_attr
0x00335DE8	0x00000010	[ 21] _struct_type_attr
0x00335DF8	0x00000018	[ 21] _data_member_attr
0x00335E10	0x00000010	[ 21] _typedef_attr
0x00335E20	0x00000018	[ 21] _enum_type_attr
0x00335E38	0x00000010	[ 21] _enumerator_attr
0x00335E48	0x00000008	[ 21] _namespace_attr
0x00335E50	0x00000018	[ 21] _variable_attr
0x00335E68	0x00000018	[ 21] _variable_loclist_attr
0x00335E80	0x00000008	[ 21] _pointer_type_attr
0x00335E88	0x00000008	[ 21] _reference_type_attr
0x00335E90	0x00000010	[ 21] _inheritance_attr
0x00335EA0	0x00000018	[ 21] _tramp_subprogram_attr
0x00335EB8	0x00000004	[ 30] _break_policy_func
0x00335EBC	0x0000000A	[ 40] _mono_arch_output_basic_block.mn
0x00335EC8	0x00000004	[ 41] _mono_use_imt
0x00335ECC	0x00000004	[ 41] _mono_do_x86_stack_align
0x00335ED0	0x00000004	[ 41] _check_for_pending_exc
0x00335ED4	0x00000004	[ 50] _mono_arch_create_generic_class_init_trampoline.byte_offset
0x00335ED8	0x00000010	[ 53] ___jit_debug_descriptor
0x00335EE8	0x00000004	[ 58] _finalize_slot
0x00335EEC	0x00000004	[ 58] _ghc_slot
0x00335EF0	0x00000018	[ 61] _default_dh
0x00335F08	0x00000050	[ 71] _gc_handles
0x00335F58	0x00000004	[ 83] _array_size
0x00335F5C	0x00000018	[ 85] _publisher_policy_parser
0x00335F74	0x00000018	[ 85] _config_assemblybinding_parser
0x00335F8C	0x00000004	[ 94] _arch_create_jit_trampoline
0x00335F90	0x00000004	[ 94] _arch_create_jump_trampoline
0x00335F94	0x00000004	[ 94] _arch_create_delegate_trampoline
0x00335F98	0x00000004	[ 94] _default_mono_runtime_invoke
0x00335F9C	0x00000004	[ 94] _runtime_unhandled_exception_policy
0x00335FA0	0x00000008	[ 97] _sampling_frequency
0x00335FA8	0x00000004	[ 98] _file
0x00335FAC	0x00000004	[ 99] _mono_image_create_token.method_table_idx
0x00335FB0	0x00000004	[ 99] _mono_image_create_token.field_table_idx
0x00335FB4	0x00000004	[102] _platform_callback
0x00335FB8	0x00000001	[103] _mono_security_manager_enabled
0x00335FB9	0x00000001	[103] _mono_security_manager_execution
0x00335FBC	0x00000004	[104] _use_managed_allocator
0x00335FC0	0x00000004	[104] _alloc_degraded.last_major_gc_warned
0x00335FC4	0x00000020	[107] _descriptor_types
0x00335FE4	0x00000004	[107] _scan_object_for_specific_ref_precise
0x00335FE8	0x00000020	[109] _minor_finalizable_hash
0x00336008	0x00000020	[109] _major_finalizable_hash
0x00336028	0x00000020	[109] _minor_disappearing_link_hash
0x00336048	0x00000020	[109] _major_disappearing_link_hash
0x00336068	0x00000004	[110] _nursery_clear_policy
0x0033606C	0x00000004	[110] _current_collection_generation
0x00336070	0x00000060	[110] _roots_hash
0x003360D0	0x00000004	[110] _tlab_size
0x003360D4	0x00000004	[110] _lowest_heap_address
0x003360D8	0x00000004	[110] _allow_synchronous_major
0x003360DC	0x00000004	[113] _block_size.pagesize
0x003360E0	0x00000004	[115] _evacuation_threshold
0x003360E8	0x00000008	[116] _soft_heap_limit
0x003360F0	0x00000008	[116] _default_allowance_nursery_size_ratio
0x003360F8	0x00000004	[116] _max_heap_size
0x003360FC	0x00000020	[117] _hash_table
0x0033611C	0x00000004	[118] _sgen_nursery_size
0x00336120	0x00000004	[118] _sgen_nursery_bits
0x00336124	0x00000020	[119] _hash_table
0x00336144	0x00000020	[121] _global_remset_class_hash_table
0x00336164	0x00000020	[121] _pinned_class_hash_table
0x00336184	0x00000004	[122] _cement_enabled
0x00336188	0x00000004	[124] _binary_protocol_file
0x0033618C	0x00000004	[127] _promote_age
0x00336190	0x00000004	[127] _alloc_ratio
0x00336194	0x00000030	[140] _error_key_once
0x003361C4	0x00000018	[141] __wapi_event_ops
0x003361DC	0x00000018	[141] __wapi_namedevent_ops
0x003361F4	0x00000030	[141] _event_ops_once
0x00336224	0x0000003C	[142] __wapi_handle_typename
0x00336260	0x00000030	[142] _pid_init_once
0x00336290	0x00000004	[142] __wapi_handle_new_shared.last
0x00336294	0x00000018	[144] __wapi_file_ops
0x003362AC	0x00000018	[144] __wapi_console_ops
0x003362C4	0x00000018	[144] __wapi_pipe_ops
0x003362DC	0x00000030	[144] _io_ops_once
0x0033630C	0x000002A8	[146] _common_messages
0x003365B4	0x00003508	[146] _messages
0x00339ABC	0x00000018	[148] __wapi_mutex_ops
0x00339AD4	0x00000018	[148] __wapi_namedmutex_ops
0x00339AEC	0x00000030	[148] _mutex_ops_once
0x00339B1C	0x00000018	[150] __wapi_process_ops
0x00339B34	0x00000030	[150] _process_sig_chld_once
0x00339B64	0x00000018	[152] __wapi_sem_ops
0x00339B7C	0x00000018	[152] __wapi_namedsem_ops
0x00339B94	0x00000030	[152] _sem_ops_once
0x00339BC4	0x00000018	[154] __wapi_socket_ops
0x00339BDC	0x00000030	[154] _socket_ops_once
0x00339C0C	0x0000003C	[154] _extension_functions
0x00339C48	0x00000030	[159] _thread_ops_once
0x00339C78	0x0000002C	[161] _magic_init_mutex
0x00339CA4	0x00000004	[162] _highest_small_id
0x00339CA8	0x0000000C	[162] _delayed_free_queue
0x00339CB4	0x00000004	[164] _alloc_sb.pagesize
0x00339CB8	0x00000010	[172] _mono_dl_get_so_suffixes.suffixes
0x00339CC8	0x00000004	[176] _alloc_fn
0x00339CCC	0x00000004	[176] _release_fn
0x00339CD0	0x00000004	[180] ___mono_io_portability_helpers
0x00339CD4	0x00000004	[182] _current_level
0x00339CD8	0x00000004	[182] _current_mask
0x00339CDC	0x0000002C	[218] _tmp_lock
0x00339D08	0x0000002C	[218] _pw_lock
0x00339D34	0x00000004	[219] _fatal
0x00339D38	0x00000004	[233] _monodevelop_port
0x00339D3C	0x00000004	[233] _sdb_fd
0x00339D40	0x00000004	[233] _profiler_fd
0x00339D44	0x00000004	[233] _heapshot_fd
0x00339D48	0x00000004	[233] _heapshot_port
0x00339D4C	0x00000004	[233] _connection_mode
0x00339D50	0x0000002C	[233] _mutex
0x00339D7C	0x0000001C	[233] _cond
0x00339D98	0x00000008	[234] _xamarin_crashlytics_delay
0x00339DA0	0x00000014	[237] _xamarin_block_descriptor
0x00339DB4	0x0000002C	[237] _thread_hash_lock
0x00339DE0	0x00000001	[238] _xamarin_init_mono_debug
0x00339DE1	0x00000003	[238] _xamarin_use_sgen
0x00339DE4	0x00000044	[238] _trampolines
0x00339E28	0x0000002C	[238] _wrapper_hash_lock
0x00339E58	0x00000004	[ 41] _mono_compile_aot
0x00339E5C	0x00000004	[ 41] _mono_aot_only
0x00339E60	0x00000004	[ 41] _mono_use_llvm
0x00339E64	0x00000004	[ 41] _mono_thread_attach_aborted_cb
0x00339E68	0x0000008C	[ 41] _mono_jit_stats
0x00339EF4	0x00000004	[ 41] _mono_do_single_method_regression
0x00339EF8	0x00000004	[ 41] _mono_single_method_regression_opt
0x00339EFC	0x00000004	[ 55] _assembly_load_hook
0x00339F00	0x00000004	[ 55] _assembly_search_hook
0x00339F04	0x00000004	[ 58] _mono_print_vtable
0x00339F08	0x00000004	[ 90] _mono_perfcounters
0x00339F0C	0x00000004	[102] _mono_security_core_clr_test
0x00339F10	0x00000004	[105] _bridge_processing_in_progress
0x00339F14	0x00000004	[109] _num_ready_finalizers
0x00339F18	0x00000004	[110] _verify_before_allocs
0x00339F1C	0x00000004	[110] _collect_before_allocs
0x00339F20	0x00000004	[110] _do_pin_stats
0x00339F24	0x00000004	[110] _gc_debug_level
0x00339F28	0x00000004	[110] _degraded_mode
0x00339F2C	0x00000004	[110] _nursery_section
0x00339F30	0x00000004	[110] _concurrent_collection_in_progress
0x00339F34	0x00000004	[110] _sgen_global_stop_count
0x00339F38	0x00000004	[114] _los_object_list
0x00339F3C	0x00000004	[114] _los_memory_usage
0x00339F40	0x00000004	[142] __wapi_shared_layout
0x00339F44	0x00000004	[142] __wapi_fileshare_layout
0x00339F48	0x00000004	[142] __wapi_has_shut_down
0x00339F4C	0x00000018	[144] __wapi_find_ops
0x00339F64	0x00000018	[159] __wapi_thread_ops
0x00339F7C	0x00000004	[177] _mono_hwcap_x86_is_xen
0x00339F80	0x00000004	[177] _mono_hwcap_x86_has_cmov
0x00339F84	0x00000004	[177] _mono_hwcap_x86_has_fcmov
0x00339F88	0x00000004	[177] _mono_hwcap_x86_has_sse1
0x00339F8C	0x00000004	[177] _mono_hwcap_x86_has_sse2
0x00339F90	0x00000004	[177] _mono_hwcap_x86_has_sse3
0x00339F94	0x00000004	[177] _mono_hwcap_x86_has_ssse3
0x00339F98	0x00000004	[177] _mono_hwcap_x86_has_sse41
0x00339F9C	0x00000004	[177] _mono_hwcap_x86_has_sse42
0x00339FA0	0x00000004	[177] _mono_hwcap_x86_has_sse4a
0x00339FA4	0x00000004	[233] _profiler_description
0x00339FA8	0x00000004	[233] _debug_host
0x00339FAC	0x00000004	[234] _xamarin_crashlytics_api_key
0x00339FB0	0x00000004	[234] _xamarin_console_poll_interval
0x00339FB4	0x00000004	[234] _monotouch_dll
0x00339FB8	0x00000001	[238] _xamarin_detect_unified_build
0x00339FB9	0x00000001	[238] _xamarin_use_new_assemblies
0x00339FBA	0x00000001	[238] _xamarin_enable_debug_tracking
0x00339FBB	0x00000001	[238] _xamarin_new_refcount
0x00339FBC	0x00000001	[238] _xamarin_debug_mode
0x00339FBD	0x00000001	[238] _xamarin_use_old_dynamic_registrar
0x00339FBE	0x00000002	[238] _xamarin_use_il_registrar
0x00339FC0	0x00000004	[238] _xamarin_log_level
0x00339FC4	0x00000004	[238] _xamarin_executable_name
0x00339FC8	0x00000004	[ 16] _nreply_packets
0x00339FCC	0x0000003C	[ 39] _mono_trampoline_code
0x0033A008	0x00000200	[ 40] _mono_breakpoint_info
0x0033A208	0x00000004	[ 41] _mono_break_at_bb_bb_num
0x0033A20C	0x00000004	[ 41] _mono_break_at_bb_method
0x0033A210	0x00000100	[ 41] _mono_breakpoint_info_index
0x0033A310	0x00000004	[ 41] _mono_build_date
0x0033A314	0x00000004	[ 41] _mono_current_single_method
0x0033A318	0x00000004	[ 41] _mono_do_crash_chaining
0x0033A31C	0x00000004	[ 41] _mono_do_signal_chaining
0x0033A320	0x00000004	[ 41] _mono_inject_async_exc_method
0x0033A324	0x00000004	[ 41] _mono_inject_async_exc_pos
0x0033A328	0x00000004	[ 41] _mono_jit_tls_id
0x0033A32C	0x00000004	[ 41] _mono_jit_trace_calls
0x0033A330	0x00000004	[ 41] _mono_single_method_hash
0x0033A334	0x00000004	[ 41] _mono_single_method_list
0x0033A338	0x0000002C	[ 54] _mono_delegate_section
0x0033A364	0x0000002C	[ 54] _mono_strtod_mutex
0x0033A390	0x00000004	[ 55] _bundles
0x0033A394	0x00000004	[ 58] _class_ext_size
0x0033A398	0x00000004	[ 58] _classes_size
0x0033A39C	0x00000004	[ 58] _inflated_classes
0x0033A3A0	0x00000004	[ 58] _inflated_classes_size
0x0033A3A4	0x00000004	[ 58] _inflated_methods_size
0x0033A3A8	0x0000008C	[ 58] _mono_stats
0x0033A434	0x00000004	[ 64] _mono_dont_free_domains
0x0033A438	0x00000020	[ 71] _gc_stats
0x0033A458	0x00000004	[ 73] _image_unload_hooks
0x0033A45C	0x00000004	[ 75] _loader_error_thread_id
0x0033A460	0x00000004	[ 75] _loader_lock_nest_id
0x0033A464	0x000000E0	[ 75] _mono_defaults
0x0033A544	0x00000004	[ 97] _mono_profiler_events
0x0033A548	0x00000010	[105] _bridge_callbacks
0x0033A558	0x00000004	[106] _sgen_cardtable
0x0033A55C	0x0000000C	[110] _current_object_ops
0x0033A568	0x00000004	[110] _gc_debug_file
0x0033A56C	0x0000002C	[110] _gc_mutex
0x0033A598	0x00000004	[110] _has_per_allocation_action
0x0033A59C	0x000000D4	[110] _major_collector
0x0033A670	0x00000008	[110] _sgen_init_timestamp
0x0033A678	0x0000002C	[110] _sgen_interruption_mutex
0x0033A6A4	0x00000034	[110] _sgen_minor_collector
0x0033A6D8	0x00000004	[110] _sgen_try_free_some_memory
0x0033A6DC	0x00000004	[110] _thread_info_key
0x0033A6E0	0x00000008	[118] _mutator_allocator
0x0033A6E8	0x00000004	[118] _sgen_nursery_end
0x0033A6EC	0x00000004	[118] _sgen_nursery_start
0x0033A6F0	0x00000004	[118] _sgen_space_bitmap
0x0033A6F4	0x00000004	[118] _sgen_space_bitmap_size
0x0033A6F8	0x00000004	[131] _WorkersStateName
0x0033A6FC	0x0000002C	[135] _threads_lock
0x0033A728	0x0000002C	[135] _wsqs_lock
0x0033A754	0x00000004	[142] __wapi_fd_reserve
0x0033A758	0x00000004	[142] __wapi_global_signal_cond
0x0033A75C	0x00000004	[142] __wapi_global_signal_mutex
0x0033A760	0x00010000	[142] __wapi_private_handles
0x0034A760	0x00000004	[142] __wapi_sem_id
0x0034A764	0x00000004	[233] _debug_port
0x0034A768	0x00000004	[233] _output_port
0x0034A770	0x00000004	[  9] _verbose_level
0x0034A774	0x00000004	[ 11] _readonly_values
0x0034A778	0x00000004	[ 11] _encode_klass_ref_inner.count
0x0034A77C	0x00000004	[ 11] _get_plt_entry.synchronized_symbol_idx
0x0034A780	0x00000004	[ 12] _aot_modules
0x0034A784	0x0000002C	[ 12] _aot_mutex
0x0034A7B0	0x00000004	[ 12] _static_aot_modules
0x0034A7B4	0x0000002C	[ 12] _aot_page_mutex
0x0034A7E0	0x00000004	[ 12] _async_jit_info_size
0x0034A7E4	0x00000004	[ 12] _aot_jit_icall_hash
0x0034A7E8	0x00000004	[ 12] _name_table_accesses
0x0034A7EC	0x00000004	[ 12] _ji_to_amodule
0x0034A7F0	0x0000003C	[ 12] _mono_aot_create_specific_trampoline.generic_trampolines
0x0034A82C	0x00000004	[ 12] _mono_aot_create_specific_trampoline.inited
0x0034A830	0x00000004	[ 12] _mono_aot_create_specific_trampoline.num_trampolines
0x0034A834	0x00000004	[ 12] _mono_aot_get_lazy_fetch_trampoline.count
0x0034A838	0x00000004	[ 12] _mono_aot_get_lazy_fetch_trampoline.addr
0x0034A83C	0x00000004	[ 12] _make_unreadable
0x0034A840	0x00000004	[ 12] _n_pagefaults
0x0034A844	0x00000010	[ 12] _trampoline_pages
0x0034A854	0x00000004	[ 12] _aot_code_high_addr
0x0034A858	0x00000004	[ 12] _find_extra_method_in_amodule.n_extra_decodes
0x0034A85C	0x00000004	[ 15] _breakpoints
0x0034A860	0x00000004	[ 15] _mono_debugger_insert_breakpoint_full.last_breakpoint_id
0x0034A864	0x00000004	[ 16] _agent_config.0
0x0034A868	0x00000004	[ 16] _agent_config.1
0x0034A86C	0x00000004	[ 16] _agent_config.2
0x0034A870	0x00000004	[ 16] _agent_config.3
0x0034A874	0x00000004	[ 16] _agent_config.4
0x0034A878	0x00000004	[ 16] _agent_config.5
0x0034A87C	0x00000004	[ 16] _agent_config.6
0x0034A880	0x00000004	[ 16] _agent_config.7
0x0034A884	0x00000004	[ 16] _agent_config.8
0x0034A888	0x00000004	[ 16] _agent_config.9
0x0034A88C	0x00000004	[ 16] _agent_config.10
0x0034A890	0x00000004	[ 16] _agent_config.11
0x0034A894	0x00000004	[ 16] _agent_config.12
0x0034A898	0x00000004	[ 16] _agent_config.13
0x0034A89C	0x00000004	[ 16] _agent_config.14
0x0034A8A0	0x0000002C	[ 16] _debug_mutex
0x0034A8CC	0x00000004	[ 16] _event_requests
0x0034A8D0	0x0000002C	[ 16] _debugger_thread_exited_mutex
0x0034A8FC	0x0000001C	[ 16] _debugger_thread_exited_cond
0x0034A918	0x00000004	[ 16] _debugger_profiler
0x0034A91C	0x00000004	[ 16] _debugger_tls_id
0x0034A920	0x00000004	[ 16] _thread_to_tls
0x0034A924	0x00000004	[ 16] _tid_to_thread
0x0034A928	0x00000004	[ 16] _tid_to_thread_obj
0x0034A92C	0x00000004	[ 16] _pending_assembly_loads
0x0034A930	0x00000004	[ 16] _domains
0x0034A934	0x00000004	[ 16] _log_level
0x0034A938	0x00000004	[ 16] _embedding
0x0034A93C	0x00000004	[ 16] _disconnected
0x0034A940	0x00000004	[ 16] _log_file
0x0034A944	0x0000001C	[ 16] _ids
0x0034A960	0x00000004	[ 16] _inited
0x0034A964	0x00000004	[ 16] _debugger_thread_id
0x0034A968	0x00000004	[ 16] _breakpoints
0x0034A96C	0x00000004	[ 16] _ss_count
0x0034A970	0x00000004	[ 16] _ss_req
0x0034A974	0x00000004	[ 16] _ss_invoke_addr
0x0034A978	0x00000004	[ 16] _frame_id
0x0034A97C	0x00000004	[ 16] _protocol_version_set
0x0034A980	0x00000004	[ 16] _major_version
0x0034A984	0x00000004	[ 16] _minor_version
0x0034A988	0x00000004	[ 16] _bp_locs
0x0034A98C	0x00000004	[ 16] _suspend_count
0x0034A990	0x0000002C	[ 16] _suspend_mutex
0x0034A9BC	0x00000004	[ 16] _suspend_sem
0x0034A9C0	0x0000001C	[ 16] _suspend_cond
0x0034A9DC	0x00000004	[ 16] _threads_suspend_count
0x0034A9E0	0x00000004	[ 16] _transport
0x0034A9E4	0x00000004	[ 16] _suspended_objs
0x0034A9E8	0x00000004	[ 16] _obj_to_objref
0x0034A9EC	0x00000004	[ 16] _objref_id
0x0034A9F0	0x00000004	[ 16] _objrefs
0x0034A9F4	0x00000004	[ 16] _process_event.ecount
0x0034A9F8	0x00000001	[ 16] _vm_start_event_sent
0x0034A9F9	0x00000003	[ 16] _vm_death_event_sent
0x0034A9FC	0x00000004	[ 16] _packet_id
0x0034AA00	0x00000004	[ 16] _debugger_thread_handle
0x0034AA04	0x00000001	[ 16] _buffer_replies
0x0034AA05	0x00000003	[ 16] _debugger_thread_exited
0x0034AA08	0x00000600	[ 16] _reply_packets
0x0034B008	0x00000004	[ 16] _event_request_id
0x0034B00C	0x00000004	[ 16] _conn_fd
0x0034B010	0x00000004	[ 16] _listen_fd
0x0034B014	0x00000004	[ 16] _init_jit_info_dbg_attrs.hidden_klass
0x0034B018	0x00000004	[ 16] _init_jit_info_dbg_attrs.step_through_klass
0x0034B01C	0x00000004	[ 16] _init_jit_info_dbg_attrs.non_user_klass
0x0034B020	0x00000004	[ 16] _ntransports
0x0034B024	0x00000180	[ 16] _transports
0x0034B1A4	0x00000004	[ 16] _socket_transport_recv.last_keepalive
0x0034B1A8	0x00000004	[ 20] _enable_debugging
0x0034B1AC	0x00000004	[ 20] _mini_stats_fd
0x0034B1B0	0x00000004	[ 21] _token_handler_ip
0x0034B1B4	0x00000004	[ 21] _max_special_addr_diff
0x0034B1B8	0x00000100	[ 21] _base_types_emitted
0x0034B2B8	0x00000004	[ 22] _signal_exception_trampoline
0x0034B2BC	0x00000004	[ 22] _mono_tasklets_arch_restore.saved
0x0034B2C0	0x00000004	[ 25] _byte_to_str
0x0034B2C8	0x00000004	[ 30] _helper_sig_domain_get
0x0034B2CC	0x00000004	[ 30] _helper_sig_class_init_trampoline
0x0034B2D0	0x00000004	[ 30] _helper_sig_generic_class_init_trampoline
0x0034B2D4	0x00000004	[ 30] _helper_sig_generic_class_init_trampoline_llvm
0x0034B2D8	0x00000004	[ 30] _helper_sig_rgctx_lazy_fetch_trampoline
0x0034B2DC	0x00000004	[ 30] _helper_sig_monitor_enter_exit_trampoline
0x0034B2E0	0x00000004	[ 30] _helper_sig_monitor_enter_exit_trampoline_llvm
0x0034B2E4	0x00000004	[ 30] _helper_sig_monitor_enter_v4_trampoline_llvm
0x0034B2E8	0x00000004	[ 30] _mini_emit_initobj.bzero_method
0x0034B2EC	0x00000004	[ 30] _emit_array_store.tmp_klass
0x0034B2F0	0x00000008	[ 30] _emit_init_rvar.r8_0
0x0034B2F8	0x00000004	[ 30] _emit_init_rvar.r4_0
0x0034B2FC	0x00000004	[ 30] _inline_limit_inited
0x0034B300	0x00000004	[ 30] _inline_limit
0x0034B304	0x00000004	[ 30] _mini_emit_inst_for_method.runtime_helpers_class
0x0034B308	0x00000004	[ 30] _direct_icall_type_hash
0x0034B30C	0x00000004	[ 30] _throw_exception.method
0x0034B310	0x00000004	[ 30] _is_jit_optimizer_disabled.klass
0x0034B314	0x00000004	[ 30] _check_inline_caller_method_name_limit.limit
0x0034B318	0x00000004	[ 30] _check_inline_called_method_name_limit.limit
0x0034B31C	0x00000004	[ 30] _get_memset_method.memset_method
0x0034B320	0x00000004	[ 30] _get_memcpy_method.memcpy_method
0x0034B324	0x00000001	[ 31] _desc_to_fixed_reg_inited
0x0034B325	0x00000100	[ 31] _desc_to_fixed_reg
0x0034B428	0x00000004	[ 34] _restore_context_func
0x0034B42C	0x00000004	[ 34] _call_filter_func
0x0034B430	0x00000004	[ 34] _throw_exception_func
0x0034B434	0x00000004	[ 34] _rethrow_exception_func
0x0034B438	0x00000004	[ 34] _try_more_restore_tramp
0x0034B43C	0x00000004	[ 34] _restore_stack_protection_tramp
0x0034B440	0x00000004	[ 34] _throw_corlib_exception_func
0x0034B444	0x00000004	[ 34] _mono_debugger_run_finally.call_filter
0x0034B448	0x00000004	[ 34] _handling_sigsegv
0x0034B44C	0x00000004	[ 34] _unhandled_exception_hook
0x0034B450	0x00000004	[ 34] _unhandled_exception_hook_data
0x0034B454	0x00000004	[ 34] _mono_restore_context.restore_context
0x0034B458	0x00000004	[ 34] _mono_handle_exception_internal.call_filter
0x0034B45C	0x00000004	[ 34] _wrap_non_exception_throws.klass
0x0034B460	0x00000004	[ 34] _wrap_non_exception_throws.tmp_klass
0x0034B464	0x00000004	[ 34] _mono_handle_exception_internal_first_pass.call_filter
0x0034B468	0x00000004	[ 36] _mini_get_gsharedvt_wrapper.inited
0x0034B46C	0x00000004	[ 36] _mini_get_gsharedvt_wrapper.num_trampolines
0x0034B470	0x00000004	[ 36] _mini_get_gsharedvt_wrapper.tramp_addr
0x0034B474	0x00000004	[ 36] _mini_get_gsharedvt_wrapper.tramp_addr5
0x0034B478	0x00000004	[ 36] _mono_class_fill_runtime_generic_context.inited
0x0034B47C	0x00000004	[ 36] _mono_class_fill_runtime_generic_context.num_alloced
0x0034B480	0x00000004	[ 36] _gshared_supported
0x0034B484	0x00000004	[ 36] _partial_supported
0x0034B488	0x00000004	[ 36] _mono_class_generic_sharing_enabled.generic_sharing
0x0034B48C	0x00000004	[ 36] _mono_class_generic_sharing_enabled.inited
0x0034B490	0x00000004	[ 36] _generic_subclass_hash
0x0034B494	0x00000044	[ 36] _class_type_info.memcpy_method
0x0034B4D8	0x00000044	[ 36] _class_type_info.bzero_method
0x0034B51C	0x00000004	[ 36] _rgctx_template_set_slot.inited
0x0034B520	0x00000004	[ 36] _rgctx_template_set_slot.num_markers
0x0034B524	0x00000004	[ 36] _rgctx_template_set_slot.num_data
0x0034B528	0x00000004	[ 36] _alloc_oti.inited
0x0034B52C	0x00000004	[ 36] _alloc_oti.num_allocted
0x0034B530	0x00000004	[ 36] _alloc_oti.num_bytes
0x0034B534	0x00000004	[ 36] _alloc_template.inited
0x0034B538	0x00000004	[ 36] _alloc_template.num_allocted
0x0034B53C	0x00000004	[ 36] _alloc_template.num_bytes
0x0034B540	0x00000004	[ 36] _alloc_rgctx_array.inited
0x0034B544	0x00000004	[ 36] _alloc_rgctx_array.rgctx_num_alloced
0x0034B548	0x00000004	[ 36] _alloc_rgctx_array.rgctx_bytes_alloced
0x0034B54C	0x00000004	[ 36] _alloc_rgctx_array.mrgctx_num_alloced
0x0034B550	0x00000004	[ 36] _alloc_rgctx_array.mrgctx_bytes_alloced
0x0034B554	0x00000004	[ 36] _lookup_or_register_info.inited
0x0034B558	0x00000004	[ 36] _lookup_or_register_info.max_slot
0x0034B55C	0x00000004	[ 37] _mono_class_is_magic_float.magic_nfloat_class
0x0034B560	0x00000004	[ 37] _mono_class_is_magic_int.magic_nint_class
0x0034B564	0x00000004	[ 37] _mono_class_is_magic_int.magic_nuint_class
0x0034B568	0x00000004	[ 38] _mono_runtime_setup_stat_profiler.inited
0x0034B56C	0x00000004	[ 38] _profiling_signal_in_use
0x0034B570	0x00000004	[ 38] _mono_saved_signal_handlers
0x0034B574	0x00000004	[ 39] _static_rgctx_trampolines
0x0034B578	0x00000004	[ 39] _unbox_trampolines
0x0034B57C	0x00000004	[ 39] _trampoline_calls
0x0034B580	0x00000004	[ 39] _mono_create_handler_block_trampoline.code
0x0034B584	0x0000002C	[ 39] _trampolines_mutex
0x0034B5B0	0x00000004	[ 39] _jit_trampolines
0x0034B5B4	0x00000004	[ 39] _class_init_hash_addr
0x0034B5B8	0x00000004	[ 39] _rgctx_lazy_fetch_trampoline_hash
0x0034B5BC	0x00000004	[ 39] _rgctx_lazy_fetch_trampoline_hash_addr
0x0034B5C0	0x00000004	[ 39] _mono_create_generic_class_init_trampoline.code
0x0034B5C4	0x00000004	[ 39] _mono_create_rgctx_lazy_fetch_trampoline.inited
0x0034B5C8	0x00000004	[ 39] _mono_create_rgctx_lazy_fetch_trampoline.num_trampolines
0x0034B5CC	0x00000004	[ 39] _mono_create_monitor_enter_trampoline.code
0x0034B5D0	0x00000004	[ 39] _mono_create_monitor_enter_v4_trampoline.code
0x0034B5D4	0x00000004	[ 39] _mono_create_monitor_exit_trampoline.code
0x0034B5D8	0x00000004	[ 39] _mini_get_nullified_class_init_trampoline.nullified_class_init_trampoline
0x0034B5DC	0x00000004	[ 39] _mono_rgctx_lazy_fetch_trampoline.inited
0x0034B5E0	0x00000004	[ 39] _mono_rgctx_lazy_fetch_trampoline.num_lookups
0x0034B5E4	0x0000002C	[ 40] _mini_arch_mutex
0x0034B610	0x00000004	[ 40] _ss_trigger_page
0x0034B614	0x00000004	[ 40] _bp_trigger_page
0x0034B618	0x00000004	[ 40] _mono_x86_have_tls_get.have_tls_get
0x0034B61C	0x00000004	[ 40] _mono_x86_have_tls_get.inited
0x0034B620	0x00000004	[ 40] _tls_gs_offset
0x0034B624	0x00000004	[ 40] _mono_arch_get_delegate_invoke_impl.cached
0x0034B628	0x0000002C	[ 40] _mono_arch_get_delegate_invoke_impl.cache
0x0034B654	0x00000004	[ 41] _tramp_infos
0x0034B658	0x00000004	[ 41] _global_codeman
0x0034B65C	0x0000002C	[ 41] _jit_mutex
0x0034B688	0x00000004	[ 41] _mono_debug_count.count
0x0034B68C	0x00000004	[ 41] _mono_debug_count.inited
0x0034B690	0x00000004	[ 41] _mono_debug_count.value
0x0034B694	0x00000004	[ 41] _jit_icall_name_hash
0x0034B698	0x00000004	[ 41] _mono_allocate_stack_slots.count
0x0034B69C	0x00000090	[ 41] _emul_opcode_hit_cache
0x0034B72C	0x00000004	[ 41] _emul_opcode_num
0x0034B730	0x00000004	[ 41] _emul_opcode_opcodes
0x0034B734	0x00000004	[ 41] _emul_opcode_map
0x0034B738	0x00000004	[ 41] _mono_jit_tls
0x0034B73C	0x00000004	[ 41] _mono_lmf
0x0034B740	0x00000004	[ 41] _mono_lmf_addr
0x0034B744	0x00000001	[ 41] _mono_using_xdebug
0x0034B745	0x00000003	[ 41] _mini_method_compile.verbose_method_inited
0x0034B748	0x00000004	[ 41] _mini_method_compile.verbose_method_name
0x0034B74C	0x00000004	[ 41] _mini_verbose
0x0034B750	0x00000054	[ 41] _debug_options
0x0034B7A4	0x00000004	[ 41] _mini_method_compile.count
0x0034B7A8	0x00000004	[ 41] _default_opt
0x0034B7AC	0x00000004	[ 41] _vtable_trampolines
0x0034B7B0	0x00000004	[ 41] _vtable_trampolines_size
0x0034B7B4	0x00000004	[ 41] _mono_get_delegate_virtual_invoke_impl.cache
0x0034B7B8	0x00000004	[ 41] _mono_get_delegate_virtual_invoke_impl.cache_size
0x0034B7BC	0x00000002	[ 41] _default_opt_set
0x0034B7BE	0x00000002	[ 41] _emul_opcode_alloced
0x0034B7C0	0x00000004	[ 41] _mono_jit_compile_method_inner.in_tinfo
0x0034B7C4	0x00000004	[ 41] _mono_jit_compile_method_inner.out_tinfo
0x0034B7C8	0x00000004	[ 41] _lookup_method_inner.inited
0x0034B7CC	0x00000004	[ 41] _lookup_method_inner.lookups
0x0034B7D0	0x00000004	[ 41] _lookup_method_inner.failed_lookups
0x0034B7D4	0x00000004	[ 41] _mono_get_array_new_va_signature.sighash
0x0034B7D8	0x00000004	[ 45] _simd_supported_versions
0x0034B7DC	0x0000002C	[ 48] _tasklets_mutex
0x0034B808	0x00000004	[ 48] _keepalive_stacks
0x0034B810	0x00000010	[ 49] _trace_spec
0x0034B820	0x00000004	[ 49] _input
0x0034B824	0x00000004	[ 49] _indent_level
0x0034B828	0x00000008	[ 49] _start_time
0x0034B830	0x00000004	[ 49] _value
0x0034B834	0x00000001	[ 50] _mono_arch_create_generic_class_init_trampoline.bitmask
0x0034B838	0x00000004	[ 51] _dwarf_reg_to_hw_reg_inited
0x0034B83C	0x00000024	[ 51] _map_dwarf_reg_to_hw_reg
0x0034B860	0x0000002C	[ 51] _unwind_mutex
0x0034B88C	0x00000004	[ 51] _unwind_info_size
0x0034B890	0x00000004	[ 51] _cached_info
0x0034B894	0x00000004	[ 51] _cached_info_next
0x0034B898	0x00000004	[ 51] _cached_info_size
0x0034B89C	0x00000004	[ 51] _cached_info_list
0x0034B8A0	0x00000004	[ 53] _use_gdb_interface
0x0034B8A4	0x00000004	[ 53] _il_file
0x0034B8A8	0x00000004	[ 53] _xdebug_fp
0x0034B8AC	0x00000004	[ 53] _xdebug_writer
0x0034B8B0	0x00000004	[ 53] _xdebug_w
0x0034B8B4	0x00000004	[ 53] _xdebug_syms
0x0034B8B8	0x00000004	[ 53] _xdebug_method_count
0x0034B8BC	0x00000004	[ 53] _il_file_line_index
0x0034B8C0	0x00000004	[ 54] _load_function
0x0034B8C4	0x00000004	[ 54] _no_exec
0x0034B8C8	0x00000004	[ 54] _quit_function
0x0034B8CC	0x00000004	[ 54] _mono_domain_has_type_resolve.field
0x0034B8D0	0x00000004	[ 54] _mono_domain_try_type_resolve.method
0x0034B8D4	0x00000004	[ 54] _ves_icall_System_AppDomain_GetAssemblies.System_Reflection_Assembly
0x0034B8D8	0x00000002	[ 54] _process_guid_set
0x0034B8DA	0x0000004A	[ 54] _process_guid
0x0034B924	0x00000004	[ 54] _mono_domain_fire_assembly_load.assembly_load_field
0x0034B928	0x00000004	[ 54] _mono_domain_fire_assembly_load.assembly_load_method
0x0034B92C	0x00000004	[ 55] _assemblies_path
0x0034B930	0x0000000C	[ 55] _default_path
0x0034B93C	0x0000002C	[ 55] _assemblies_mutex
0x0034B968	0x0000002C	[ 55] _assembly_binding_mutex
0x0034B994	0x00000004	[ 55] _assembly_preload_hook
0x0034B998	0x00000004	[ 55] _assembly_refonly_preload_hook
0x0034B99C	0x00000004	[ 55] _loaded_assemblies
0x0034B9A0	0x00000004	[ 55] _extra_gac_paths
0x0034B9A4	0x00000004	[ 55] _corlib
0x0034B9A8	0x00000004	[ 55] _loaded_assembly_bindings
0x0034B9AC	0x00000004	[ 55] _main_assembly
0x0034B9B0	0x00000004	[ 56] _config.0
0x0034B9B4	0x0000002C	[ 56] _agent_mutex
0x0034B9E0	0x00000001	[ 56] _started
0x0034B9E1	0x00000003	[ 56] _needs_to_start
0x0034B9E4	0x00000004	[ 56] _listen_fd
0x0034B9E8	0x00000004	[ 56] _ipc_filename
0x0034B9EC	0x00000004	[ 56] _stop_receiver_thread
0x0034B9F0	0x00000004	[ 56] _conn_fd
0x0034B9F4	0x00000004	[ 56] _receiver_thread_handle
0x0034B9F8	0x00000004	[ 56] _server_uri
0x0034B9FC	0x00000004	[ 58] _global_interface_bitset
0x0034BA00	0x00000004	[ 58] _default_ghc
0x0034BA04	0x00000008	[ 58] _mono_class_init.szarray_vtable_size
0x0034BA0C	0x00000004	[ 58] _default_finalize
0x0034BA10	0x00000004	[ 58] _record_gclass_instantiation
0x0034BA14	0x00000004	[ 58] _gclass_recorded_list
0x0034BA18	0x00000004	[ 58] _get_class_from_name
0x0034BA1C	0x00000004	[ 58] _lookup_dynamic
0x0034BA20	0x00000004	[ 58] _get_cached_class_info
0x0034BA24	0x0000002C	[ 58] _classes_mutex
0x0034BA50	0x00000004	[ 58] _mono_fnptr_class_get.ptr_hash
0x0034BA54	0x00000004	[ 58] _generic_array_method_num
0x0034BA58	0x00000004	[ 58] _generic_array_method_info
0x0034BA5C	0x00000004	[ 58] _is_wcf_hack_disabled.disabled
0x0034BA60	0x00000004	[ 58] _is_wcf_hack_disabled.inited
0x0034BA64	0x00000004	[ 58] _get_implicit_generic_array_interfaces.generic_icollection_class
0x0034BA68	0x00000004	[ 58] _get_implicit_generic_array_interfaces.generic_ienumerable_class
0x0034BA6C	0x00000004	[ 58] _get_implicit_generic_array_interfaces.generic_ienumerator_class
0x0034BA70	0x00000004	[ 58] _get_implicit_generic_array_interfaces.generic_ireadonlylist_class
0x0034BA74	0x00000004	[ 58] _get_implicit_generic_array_interfaces.generic_ireadonlycollection_class
0x0034BA78	0x00000004	[ 60] _need_cancel
0x0034BA7C	0x00000004	[ 60] _cols_and_lines
0x0034BA80	0x0000002C	[ 60] _initial_attr
0x0034BAAC	0x0000002C	[ 60] _mono_attr
0x0034BAD8	0x00000004	[ 60] _setup_finished
0x0034BADC	0x00000004	[ 60] _keypad_xmit_str
0x0034BAE0	0x00000004	[ 60] _teardown_str
0x0034BAE4	0x0000000C	[ 60] _save_sigcont
0x0034BAF0	0x0000000C	[ 60] _save_sigint
0x0034BAFC	0x0000000C	[ 60] _save_sigwinch
0x0034BB08	0x00000004	[ 60] _in_sigint
0x0034BB0C	0x00000004	[ 60] _do_console_cancel_event.cancel_handler_field
0x0034BB10	0x00000004	[ 64] _appdomain_thread_id
0x0034BB14	0x00000004	[ 64] _tls_appdomain
0x0034BB18	0x00000004	[ 64] _create_domain_hook
0x0034BB1C	0x00000004	[ 64] _free_domain_hook
0x0034BB20	0x0000002C	[ 64] _appdomains_mutex
0x0034BB4C	0x00000004	[ 64] _domain_shadow_serial
0x0034BB50	0x00000004	[ 64] _domain_gc_desc
0x0034BB54	0x00000010	[ 64] _domain_gc_bitmap
0x0034BB64	0x00000004	[ 64] _exe_image
0x0034BB68	0x00000004	[ 64] _mono_root_domain
0x0034BB6C	0x00000004	[ 64] _appdomain_list_size
0x0034BB70	0x00000004	[ 64] _appdomains_list
0x0034BB74	0x00000004	[ 64] _total_domain_code_alloc
0x0034BB78	0x00000004	[ 64] _max_domain_code_alloc
0x0034BB7C	0x00000004	[ 64] _max_domain_code_size
0x0034BB80	0x00000004	[ 64] _debug_domain_unload
0x0034BB84	0x00000004	[ 64] _current_runtime
0x0034BB88	0x0000000C	[ 64] _aot_cache_config
0x0034BB94	0x00000004	[ 64] _mono_init_internal.domain
0x0034BB98	0x00000002	[ 64] _appdomain_next
0x0034BB9C	0x00000004	[ 65] _exitcode
0x0034BBA0	0x00000004	[ 68] _named_regions
0x0034BBA4	0x0000002C	[ 68] _named_regions_mutex
0x0034BBD0	0x00000004	[ 68] _mmap_init_state
0x0034BBD4	0x00000001	[ 71] _suspend_finalizers
0x0034BBD5	0x00000003	[ 71] _finalizing_root_domain
0x0034BBD8	0x00000004	[ 71] _threads_to_finalize
0x0034BBDC	0x00000004	[ 71] _gc_thread
0x0034BBE0	0x00000004	[ 71] _gc_disabled
0x0034BBE4	0x0000002C	[ 71] _finalizer_mutex
0x0034BC10	0x00000004	[ 71] _domains_to_finalize
0x0034BC14	0x00000004	[ 71] _pending_done_event
0x0034BC18	0x0000002C	[ 71] _handle_section
0x0034BC44	0x00000004	[ 71] _finalizer_sem
0x0034BC48	0x0000002C	[ 71] _allocator_section
0x0034BC74	0x0000002C	[ 71] _reference_queue_mutex
0x0034BCA0	0x00000004	[ 71] _finalizer_event
0x0034BCA4	0x00000004	[ 71] _shutdown_event
0x0034BCA8	0x00000004	[ 71] _finished
0x0034BCAC	0x00000004	[ 71] _mach_exception_thread
0x0034BCB0	0x00000004	[ 71] _ref_queues
0x0034BCB4	0x00000004	[ 72] _icall_hash
0x0034BCB8	0x0000002C	[ 72] _icall_mutex
0x0034BCE4	0x00000004	[ 72] _jit_icall_hash_name
0x0034BCE8	0x00000004	[ 72] _jit_icall_hash_addr
0x0034BCEC	0x00000004	[ 72] _ves_icall_MonoMethod_GetDllImportAttribute.DllImportAttributeClass
0x0034BCF0	0x00000004	[ 72] _fill_reflection_assembly_name.create_culture
0x0034BCF4	0x00000004	[ 72] _create_version.System_Version
0x0034BCF8	0x00000004	[ 72] _create_version.create_version
0x0034BCFC	0x00000004	[ 72] _ves_icall_System_Reflection_Assembly_GetReferencedAssemblies.System_Reflection_AssemblyName
0x0034BD00	0x00000004	[ 72] _ves_icall_System_Reflection_Assembly_GetReferencedAssemblies.create_culture
0x0034BD04	0x00000004	[ 72] _ves_icall_Type_GetPropertiesByName.System_Reflection_PropertyInfo
0x0034BD08	0x00000004	[ 72] _ves_icall_Type_GetPropertiesByName.tmp_klass
0x0034BD0C	0x00000004	[ 72] _ves_icall_Type_GetPropertiesByName.tmp_klass155
0x0034BD10	0x00000004	[ 72] _ves_icall_Type_GetNestedTypes.tmp_klass
0x0034BD14	0x00000004	[ 72] _ves_icall_Type_GetMethodsByName.MethodInfo_array
0x0034BD18	0x00000004	[ 72] _ves_icall_Type_GetInterfaces.tmp_klass
0x0034BD1C	0x00000004	[ 72] _ves_icall_Type_GetInterfaces.tmp_klass156
0x0034BD20	0x00000004	[ 72] _ves_icall_MonoType_GetGenericArguments.tmp_klass
0x0034BD24	0x00000004	[ 72] _ves_icall_Type_GetFields_internal.tmp_klass
0x0034BD28	0x00000004	[ 72] _ves_icall_Type_GetEvents_internal.System_Reflection_EventInfo
0x0034BD2C	0x00000004	[ 72] _ves_icall_Type_GetEvents_internal.tmp_klass
0x0034BD30	0x00000004	[ 72] _ves_icall_Type_GetEvents_internal.tmp_klass158
0x0034BD34	0x00000004	[ 72] _ves_icall_Type_GetConstructors_internal.System_Reflection_ConstructorInfo
0x0034BD38	0x00000004	[ 72] _ves_icall_Type_GetConstructors_internal.tmp_klass
0x0034BD3C	0x00000004	[ 72] _ves_icall_Type_GetConstructors_internal.tmp_klass160
0x0034BD40	0x0000002C	[ 73] _images_mutex
0x0034BD6C	0x00000004	[ 73] _loaded_images_hash
0x0034BD70	0x00000004	[ 73] _loaded_images_refonly_hash
0x0034BD74	0x00000004	[ 73] _debug_assembly_unload
0x0034BD78	0x00000001	[ 73] _mutex_inited
0x0034BD79	0x00000001	[ 73] _enable_loader_selection
0x0034BD7C	0x00000004	[ 74] _jit_info_find_in_aot_func
0x0034BD80	0x00000004	[ 75] _mono_loader_init.inited
0x0034BD84	0x0000002C	[ 75] _loader_mutex
0x0034BDB0	0x0000002C	[ 75] _global_loader_data_mutex
0x0034BDDC	0x00000004	[ 75] _loader_lock_inited
0x0034BDE0	0x00000004	[ 75] _inflated_signatures_size
0x0034BDE4	0x00000004	[ 75] _memberref_sig_cache_size
0x0034BDE8	0x00000004	[ 75] _methods_size
0x0034BDEC	0x00000004	[ 75] _signatures_size
0x0034BDF0	0x00000004	[ 75] _global_dll_map
0x0034BDF4	0x00000004	[ 75] _internal_module
0x0034BDF8	0x00000004	[ 75] _loader_lock_track_ownership
0x0034BDFC	0x00000004	[ 75] _global_module_map
0x0034BE00	0x00000004	[ 76] _get_darwin_locale.darwin_locale
0x0034BE04	0x00000004	[ 76] _create_group_sizes_array.tmp_klass
0x0034BE08	0x00000004	[ 76] _create_names_array_idx.tmp_klass
0x0034BE0C	0x00000004	[ 76] _create_names_array_idx_dynamic.tmp_klass
0x0034BE10	0x00000004	[ 77] _last_error_tls_id
0x0034BE14	0x00000004	[ 77] _load_type_info_tls_id
0x0034BE18	0x00000004	[ 77] _mono_marshal_init.module_initialized
0x0034BE1C	0x0000002C	[ 77] _marshal_mutex
0x0034BE48	0x00000004	[ 77] _marshal_mutex_initialized
0x0034BE4C	0x00000004	[ 77] _use_aot_wrappers
0x0034BE50	0x00000004	[ 77] _delegate_hash_table
0x0034BE54	0x00000004	[ 77] _mono_marshal_get_runtime_invoke.cctor_signature
0x0034BE58	0x00000004	[ 77] _mono_marshal_get_runtime_invoke.finalize_signature
0x0034BE5C	0x00000004	[ 77] _mono_marshal_get_runtime_invoke_dynamic.method
0x0034BE60	0x00000004	[ 77] _mono_marshal_emit_native_wrapper.get_last_error_sig
0x0034BE64	0x00000004	[ 77] _mono_marshal_get_managed_wrapper.UnmanagedFunctionPointerAttribute
0x0034BE68	0x00000004	[ 77] _mono_marshal_get_castclass_with_cache.cached
0x0034BE6C	0x00000004	[ 77] _mono_marshal_get_isinst_with_cache.cached
0x0034BE70	0x00000004	[ 77] _mono_marshal_get_isinst.isint_sig
0x0034BE74	0x00000004	[ 77] _mono_marshal_get_castclass.castclass_sig
0x0034BE78	0x00000004	[ 77] _mono_marshal_get_struct_to_ptr.stoptr
0x0034BE7C	0x00000004	[ 77] _mono_marshal_get_ptr_to_struct.ptostr
0x0034BE80	0x00000004	[ 77] _mono_marshal_get_synchronized_wrapper.enter_method
0x0034BE84	0x00000004	[ 77] _mono_marshal_get_synchronized_wrapper.exit_method
0x0034BE88	0x00000004	[ 77] _mono_marshal_get_synchronized_wrapper.gettypefromhandle_method
0x0034BE8C	0x00000004	[ 77] _mono_marshal_get_stelemref.ret
0x0034BE90	0x00000004	[ 77] _mono_marshal_get_gsharedvt_in_wrapper.ret
0x0034BE94	0x00000004	[ 77] _mono_marshal_get_gsharedvt_out_wrapper.ret
0x0034BE98	0x00000004	[ 77] _elem_addr_cache_next
0x0034BE9C	0x00000004	[ 77] _elem_addr_cache
0x0034BEA0	0x00000004	[ 77] _elem_addr_cache_size
0x0034BEA4	0x00000014	[ 77] _get_virtual_stelemref_wrapper.cached_methods
0x0034BEB8	0x00000004	[ 77] _get_virtual_stelemref_wrapper.signature
0x0034BEBC	0x00000004	[ 77] _sh_dangerous_add_ref
0x0034BEC0	0x00000004	[ 77] _sh_dangerous_release
0x0034BEC4	0x00000004	[ 77] _emit_marshal_string.m
0x0034BEC8	0x00000004	[ 77] _emit_marshal_vtype.tmp_klass
0x0034BECC	0x00000004	[ 77] _emit_marshal_vtype.to_oadate
0x0034BED0	0x00000004	[ 77] _emit_marshal_vtype.from_oadate
0x0034BED4	0x00000004	[ 77] _emit_marshal_custom.ICustomMarshaler
0x0034BED8	0x00000004	[ 77] _emit_marshal_custom.cleanup_native
0x0034BEDC	0x00000004	[ 77] _emit_marshal_custom.cleanup_managed
0x0034BEE0	0x00000004	[ 77] _emit_marshal_custom.marshal_managed_to_native
0x0034BEE4	0x00000004	[ 77] _emit_marshal_custom.marshal_native_to_managed
0x0034BEE8	0x00000004	[ 77] _emit_invoke_call.string_dummy
0x0034BEEC	0x00000004	[ 77] _strsig_list
0x0034BEF0	0x00000004	[ 77] _mono_string_utf16_to_builder2.string_builder_class
0x0034BEF4	0x00000004	[ 77] _mono_string_utf16_to_builder2.sb_ctor
0x0034BEF8	0x00000004	[ 77] _mono_string_utf8_to_builder2.string_builder_class
0x0034BEFC	0x00000004	[ 77] _mono_string_utf8_to_builder2.sb_ctor
0x0034BF00	0x00000004	[ 77] _parse_unmanaged_function_pointer_attr.UnmanagedFunctionPointerAttribute
0x0034BF04	0x00000004	[ 78] _total_bytes_allocated
0x0034BF08	0x00000004	[ 81] _type_cache
0x0034BF0C	0x0000002C	[ 81] _image_sets_mutex
0x0034BF38	0x00000004	[ 81] _image_sets
0x0034BF3C	0x00000004	[ 81] _next_generic_inst_id
0x0034BF40	0x00000004	[ 81] _mscorlib_image_set
0x0034BF44	0x0000002C	[ 83] _monitor_mutex
0x0034BF70	0x00000004	[ 83] _monitor_freelist
0x0034BF74	0x00000004	[ 83] _monitor_allocated
0x0034BF78	0x00000004	[ 85] _config_handlers
0x0034BF7C	0x00000004	[ 85] _mono_cfg_dir_allocated
0x0034BF80	0x00000004	[ 85] _bundled_configs
0x0034BF84	0x00000004	[ 85] _mono_cfg_dir
0x0034BF88	0x00000004	[ 85] _bundled_machine_config
0x0034BF8C	0x00000004	[ 85] _mono_server_mode
0x0034BF90	0x00000001	[ 85] _inited
0x0034BF94	0x00000004	[ 86] _monocq_item_vtable
0x0034BF98	0x00000004	[ 87] _mono_debug_initialized
0x0034BF9C	0x00000004	[ 87] _mono_debug_format
0x0034BFA0	0x00000004	[ 87] _mono_debug_handles
0x0034BFA4	0x00000004	[ 87] _data_table_hash
0x0034BFA8	0x00000004	[ 87] _is_attached
0x0034BFAC	0x00000004	[ 87] _bundled_symfiles
0x0034BFB0	0x00000004	[ 87] _initialized
0x0034BFB4	0x0000002C	[ 87] _debugger_lock_mutex
0x0034BFE0	0x00000004	[ 88] _table_hash_descr
0x0034BFE4	0x00000004	[ 89] _monolist_item_vtable
0x0034BFE8	0x0000002C	[ 90] _perfctr_mutex
0x0034C014	0x00000004	[ 90] _shared_area
0x0034C018	0x00000004	[ 90] _pid_to_shared_area
0x0034C01C	0x00000004	[ 92] _system_security_assembly
0x0034C020	0x00000004	[ 93] _wsq_tlskey_inited
0x0034C024	0x00000004	[ 93] _wsq_tlskey
0x0034C028	0x00000004	[ 93] _mono_wsq_create.tmp_klass
0x0034C02C	0x00000004	[ 93] _mono_wsq_local_push.tmp_klass
0x0034C030	0x00000004	[ 94] _mono_thread_set_main.registered
0x0034C034	0x00000004	[ 94] _main_thread
0x0034C038	0x0000002C	[ 94] _type_initialization_section
0x0034C064	0x00000004	[ 94] _type_initialization_hash
0x0034C068	0x00000004	[ 94] _blocked_thread_hash
0x0034C06C	0x0000002C	[ 94] _ldstr_section
0x0034C098	0x00000024	[ 94] _callbacks
0x0034C0BC	0x00000004	[ 94] _imt_thunk_builder
0x0034C0C0	0x00000004	[ 94] _default_mono_compile_method
0x0034C0C4	0x00000004	[ 94] _default_mono_free_method
0x0034C0C8	0x00000001	[ 94] _mono_class_compute_gc_descriptor.gcj_inited
0x0034C0C9	0x00000003	[ 94] _mono_method_alloc_generic_virtual_thunk.inited
0x0034C0CC	0x00000004	[ 94] _mono_method_alloc_generic_virtual_thunk.generic_virtual_thunks_size
0x0034C0D0	0x00000004	[ 94] _mono_method_add_generic_virtual_invocation.inited
0x0034C0D4	0x00000004	[ 94] _mono_method_add_generic_virtual_invocation.num_added
0x0034C0D8	0x00000004	[ 94] _mono_field_get_value_object.m
0x0034C0DC	0x00000004	[ 94] _mono_field_get_value_object.tmp_klass
0x0034C0E0	0x00000004	[ 94] _num_main_args
0x0034C0E4	0x00000004	[ 94] _main_args
0x0034C0E8	0x00000004	[ 94] _mono_runtime_exec_main.stathread_attribute
0x0034C0EC	0x00000004	[ 94] _mono_runtime_invoke_array.box_method
0x0034C0F0	0x00000004	[ 94] _mono_runtime_invoke_array.tmp_klass
0x0034C0F4	0x00000004	[ 94] _profile_allocs
0x0034C0F8	0x00000018	[ 94] _eh_callbacks
0x0034C110	0x00000004	[ 94] _mono_wait_handle_new.handle_set
0x0034C114	0x00000004	[ 94] _mono_wait_handle_get_handle.f_os_handle
0x0034C118	0x00000004	[ 94] _mono_wait_handle_get_handle.f_safe_handle
0x0034C11C	0x00000004	[ 94] _mono_message_init.object_array_klass
0x0034C120	0x00000004	[ 94] _mono_message_init.byte_array_klass
0x0034C124	0x00000004	[ 94] _mono_message_init.string_array_klass
0x0034C128	0x00000004	[ 94] _mono_message_invoke.object_array_klass
0x0034C12C	0x00000004	[ 94] _mono_object_to_string.to_string
0x0034C130	0x00000004	[ 94] _deserialize_object.deserialize_method
0x0034C134	0x00000004	[ 94] _serialize_object.serialize_method
0x0034C138	0x00000004	[ 96] _system_assembly
0x0034C13C	0x00000004	[ 97] _prof_list
0x0034C140	0x0000002C	[ 97] _profiler_coverage_mutex
0x0034C16C	0x00000004	[ 97] _sampling_mode
0x0034C170	0x00000004	[ 97] _coverage_hash
0x0034C174	0x00000004	[ 98] _egd
0x0034C178	0x00000004	[ 99] _mono_assembly_get_object.assembly_type
0x0034C17C	0x00000004	[ 99] _mono_module_get_object.module_type
0x0034C180	0x00000004	[ 99] _mono_module_file_get_object.module_type
0x0034C184	0x00000004	[ 99] _mono_method_get_object.System_Reflection_MonoMethod
0x0034C188	0x00000004	[ 99] _mono_method_get_object.System_Reflection_MonoCMethod
0x0034C18C	0x00000004	[ 99] _mono_method_get_object.System_Reflection_MonoGenericMethod
0x0034C190	0x00000004	[ 99] _mono_method_get_object.System_Reflection_MonoGenericCMethod
0x0034C194	0x00000004	[ 99] _mono_field_get_object.monofield_klass
0x0034C198	0x00000004	[ 99] _mono_property_get_object.monoproperty_klass
0x0034C19C	0x00000004	[ 99] _mono_event_get_object.monoevent_klass
0x0034C1A0	0x00000004	[ 99] _mono_param_get_objects_internal.System_Reflection_ParameterInfo
0x0034C1A4	0x00000004	[ 99] _mono_param_get_objects_internal.System_Reflection_ParameterInfo_array
0x0034C1A8	0x00000004	[ 99] _mono_method_body_get_object.System_Reflection_MethodBody
0x0034C1AC	0x00000004	[ 99] _mono_method_body_get_object.System_Reflection_LocalVariableInfo
0x0034C1B0	0x00000004	[ 99] _mono_method_body_get_object.System_Reflection_ExceptionHandlingClause
0x0034C1B4	0x00000004	[ 99] _mono_method_body_get_object.tmp_klass
0x0034C1B8	0x00000004	[ 99] _mono_method_body_get_object.tmp_klass61
0x0034C1BC	0x00000004	[ 99] _mono_method_body_get_object.tmp_klass62
0x0034C1C0	0x00000004	[ 99] _mono_get_dbnull_object.dbnull_value_field
0x0034C1C4	0x00000004	[ 99] _mono_reflection_get_custom_attrs_by_type.tmp_klass
0x0034C1C8	0x00000004	[ 99] _mono_reflection_marshal_as_attribute_from_marshal_spec.System_Reflection_Emit_MarshalAsAttribute
0x0034C1CC	0x00000004	[ 99] _dynamic_method_queue
0x0034C1D0	0x00000004	[ 99] _mono_reflection_call_is_assignable_to.System_Reflection_Emit_TypeBuilder
0x0034C1D4	0x00000004	[ 99] _mono_reflection_call_is_assignable_to.method
0x0034C1D8	0x00000004	[ 99] _is_sre_method_builder.cached_class
0x0034C1DC	0x00000004	[ 99] _is_sr_mono_field.cached_class
0x0034C1E0	0x00000004	[ 99] _is_sre_field_builder.cached_class
0x0034C1E4	0x00000004	[ 99] _is_sre_type_builder.cached_class
0x0034C1E8	0x00000004	[ 99] _is_sr_mono_generic_cmethod.cached_class
0x0034C1EC	0x00000004	[ 99] _is_sr_mono_generic_method.cached_class
0x0034C1F0	0x00000004	[ 99] _is_sr_mono_method.cached_class
0x0034C1F4	0x00000004	[ 99] _is_sr_mono_cmethod.cached_class
0x0034C1F8	0x00000004	[ 99] _is_sr_mono_property.cached_class
0x0034C1FC	0x00000004	[ 99] _is_sre_generic_instance.cached_class
0x0034C200	0x00000004	[ 99] _mono_reflection_type_get_underlying_system_type.method_get_underlying_system_type
0x0034C204	0x00000004	[ 99] _is_sre_ctor_on_tb_inst.cached_class
0x0034C208	0x00000004	[ 99] _is_sre_method_on_tb_inst.cached_class
0x0034C20C	0x00000004	[ 99] _is_sre_ctor_builder.cached_class
0x0034C210	0x00000004	[ 99] _is_sre_pointer.cached_class
0x0034C214	0x00000004	[ 99] _is_sre_byref.cached_class
0x0034C218	0x00000004	[ 99] _is_sre_array.cached_class
0x0034C21C	0x00000004	[ 99] _create_custom_attr_data.ctor
0x0034C220	0x00000004	[ 99] _mono_custom_attrs_construct_by_type.tmp_klass
0x0034C224	0x00000004	[ 99] _create_cattr_named_arg.klass
0x0034C228	0x00000004	[ 99] _create_cattr_named_arg.ctor
0x0034C22C	0x00000004	[ 99] _create_cattr_typed_arg.klass
0x0034C230	0x00000004	[ 99] _create_cattr_typed_arg.ctor
0x0034C234	0x00000004	[ 99] _mono_get_reflection_missing_object.missing_value_field
0x0034C238	0x00000004	[101] _shutting_down
0x0034C23C	0x00000004	[101] _shutting_down_inited
0x0034C240	0x00000004	[102] _security_core_clr_options
0x0034C244	0x00000004	[102] _security_critical_attribute.class
0x0034C248	0x00000004	[102] _security_safe_critical_attribute.class
0x0034C24C	0x00000004	[103] _mono_security_mode
0x0034C250	0x00000004	[103] _mono_security_manager_activated
0x0034C254	0x00000030	[103] _secman
0x0034C284	0x00000004	[103] _mono_get_context_capture_method.method
0x0034C288	0x00000004	[104] _mono_gc_alloc_obj.alloc_count
0x0034C28C	0x00000010	[104] _alloc_method_cache
0x0034C29C	0x00000004	[104] _create_allocator.registered
0x0034C2A0	0x00000004	[104] _alloc_degraded.num_degraded
0x0034C2A4	0x00000004	[104] _mono_gc_alloc_obj_nolock.alloc_count
0x0034C2A8	0x00000010	[104] _zero_tlab_if_necessary.zeros
0x0034C2B8	0x00000034	[105] _bridge_processor
0x0034C2EC	0x00000034	[105] _compare_to_bridge_processor
0x0034C320	0x00000004	[105] _bridge_class
0x0034C324	0x00000004	[105] _mono_bridge_test_field
0x0034C328	0x00000008	[106] _major_card_scan_time
0x0034C330	0x00000008	[106] _los_card_scan_time
0x0034C338	0x00000004	[106] _need_mod_union
0x0034C33C	0x00000001	[107] _missing_remsets
0x0034C33D	0x00000003	[107] _broken_heap
0x0034C340	0x00000004	[107] _check_domain
0x0034C344	0x00000004	[107] _check_key
0x0034C348	0x00000004	[107] _check_root
0x0034C34C	0x00000004	[107] _valid_nursery_object_count
0x0034C350	0x00000004	[107] _valid_nursery_objects
0x0034C354	0x00000004	[108] _complex_descriptors
0x0034C358	0x00000080	[108] _all_ref_root_descrs
0x0034C3D8	0x00000004	[108] _user_descriptors_next
0x0034C3DC	0x00000040	[108] _user_descriptors
0x0034C41C	0x00000004	[108] _complex_descriptors_next
0x0034C420	0x00000004	[108] _complex_descriptors_size
0x0034C424	0x00000004	[109] _next_fin_stage_entry
0x0034C428	0x00003000	[109] _fin_stage_entries
0x0034F428	0x00000004	[109] _next_dislink_stage_entry
0x0034F42C	0x00003000	[109] _dislink_stage_entries
0x00352430	0x00000004	[110] _enable_nursery_canaries
0x00352434	0x00000004	[110] _array_fill_vtable
0x00352438	0x00000004	[110] _xdomain_checks
0x0035243C	0x00000030	[110] _remset
0x0035246C	0x00000004	[110] _objects_pinned
0x00352470	0x00000004	[110] _highest_heap_address
0x00352474	0x00000004	[110] _conservative_stack_mark
0x00352478	0x00000004	[110] _heap_dump_file
0x0035247C	0x00000004	[110] _moved_objects_idx
0x00352480	0x00000100	[110] _moved_objects
0x00352580	0x00000004	[110] _bytes_pinned_from_failed_allocation
0x00352584	0x00000014	[110] _gray_queue
0x00352598	0x00000008	[110] _time_max
0x003525A0	0x00000004	[110] _critical_fin_list
0x003525A4	0x00000004	[110] _fin_ready_list
0x003525A8	0x0000000C	[110] _fin_callbacks
0x003525B4	0x00000004	[110] _do_not_finalize
0x003525B8	0x00000004	[110] _roots_size
0x003525BC	0x00000010	[110] _gc_callbacks
0x003525CC	0x00000004	[110] _scan_area_arg_start
0x003525D0	0x00000004	[110] _scan_area_arg_end
0x003525D4	0x00000004	[110] _found_obj
0x003525D8	0x00000004	[110] _ephemeron_list
0x003525DC	0x00000004	[110] _gc_initialized
0x003525E0	0x00000001	[110] _whole_heap_check_before_collection
0x003525E1	0x00000001	[110] _consistency_check_at_minor_collection
0x003525E2	0x00000001	[110] _mod_union_consistency_check
0x003525E3	0x00000001	[110] _check_mark_bits_after_major_collection
0x003525E4	0x00000001	[110] _check_nursery_objects_pinned
0x003525E5	0x00000001	[110] _do_scan_starts_check
0x003525E6	0x00000001	[110] _do_verify_nursery
0x003525E7	0x00000001	[110] _do_concurrent_checks
0x003525E8	0x00000001	[110] _do_dump_nursery_content
0x003525E9	0x00000001	[110] _disable_minor_collections
0x003525EA	0x00000002	[110] _disable_major_collections
0x003525EC	0x00000004	[110] _write_barrier_method
0x003525F0	0x000000A4	[110] _sgen_get_array_fill_vtable.klass
0x00352694	0x00000028	[110] _sgen_get_array_fill_vtable._vtable
0x003526BC	0x00000004	[110] _init_stats.inited
0x003526C0	0x00000008	[110] _time_minor_pre_collection_fragment_clear
0x003526C8	0x00000008	[110] _time_minor_pinning
0x003526D0	0x00000008	[110] _time_minor_scan_remsets
0x003526D8	0x00000008	[110] _time_minor_scan_pinned
0x003526E0	0x00000008	[110] _time_minor_scan_registered_roots
0x003526E8	0x00000008	[110] _time_minor_scan_thread_data
0x003526F0	0x00000008	[110] _time_minor_finish_gray_stack
0x003526F8	0x00000008	[110] _time_minor_fragment_creation
0x00352700	0x00000008	[110] _time_major_pre_collection_fragment_clear
0x00352708	0x00000008	[110] _time_major_pinning
0x00352710	0x00000008	[110] _time_major_scan_pinned
0x00352718	0x00000008	[110] _time_major_scan_registered_roots
0x00352720	0x00000008	[110] _time_major_scan_thread_data
0x00352728	0x00000008	[110] _time_major_scan_alloc_pinned
0x00352730	0x00000008	[110] _time_major_scan_finalized
0x00352738	0x00000008	[110] _time_major_scan_big_objects
0x00352740	0x00000008	[110] _time_major_finish_gray_stack
0x00352748	0x00000008	[110] _time_major_free_bigobjs
0x00352750	0x00000008	[110] _time_major_los_sweep
0x00352758	0x00000008	[110] _time_major_sweep
0x00352760	0x00000008	[110] _time_major_fragment_creation
0x00352768	0x00000008	[110] _stat_pinned_objects
0x00352770	0x00000400	[110] _dump_object.class_name
0x00352B70	0x00000008	[110] _root_report
0x00352B78	0x00000008	[110] _time_major_conc_collection_start
0x00352B80	0x00000008	[110] _last_minor_collection_start_tv
0x00352B88	0x00000008	[110] _last_minor_collection_end_tv
0x00352B90	0x00000094	[113] _fixed_type_allocator_indexes
0x00352C24	0x00000100	[113] _allocators
0x00352D24	0x00000080	[113] _allocator_block_sizes
0x00352DA4	0x00000480	[113] _size_classes
0x00353224	0x00000004	[114] _los_num_objects
0x00353228	0x00000004	[114] _pagesize
0x0035322C	0x00000080	[114] _los_fast_free_lists
0x003532AC	0x00000004	[114] _los_sections
0x003532B0	0x00000004	[114] _los_num_sections
0x003532B8	0x00000004	[115] _num_block_obj_sizes
0x003532BC	0x00000004	[115] _block_obj_sizes
0x003532C0	0x00000004	[115] _evacuate_block_obj_sizes
0x003532C4	0x00000010	[115] _free_block_lists
0x003532D4	0x00000084	[115] _fast_block_obj_size_indexes
0x00353358	0x00000008	[115] _stat_major_blocks_alloced
0x00353360	0x00000008	[115] _stat_major_blocks_freed
0x00353368	0x00000008	[115] _stat_major_blocks_lazy_swept
0x00353370	0x00000008	[115] _stat_major_objects_evacuated
0x00353378	0x00000008	[115] _stat_major_blocks_freed_ideal
0x00353380	0x00000008	[115] _stat_major_blocks_freed_less_ideal
0x00353388	0x00000008	[115] _stat_major_blocks_freed_individual
0x00353390	0x00000008	[115] _stat_major_blocks_alloced_less_ideal
0x00353398	0x00000004	[115] _concurrent_mark
0x0035339C	0x00000004	[115] _want_evacuation
0x003533A0	0x00000004	[115] _have_swept
0x003533A4	0x00000010	[115] _allocated_blocks
0x003533B4	0x00000004	[115] _lazy_sweep
0x003533B8	0x00000004	[115] _num_major_sections
0x003533BC	0x00000004	[115] _num_empty_blocks
0x003533C0	0x00000004	[115] _empty_blocks
0x003533C4	0x00000004	[115] _old_num_major_sections
0x003533C8	0x00000004	[116] _last_collection_los_memory_usage
0x003533CC	0x00000004	[116] _minor_collection_sections_alloced
0x003533D0	0x00000004	[116] _minor_collection_allowance
0x003533D4	0x00000004	[116] _last_collection_old_num_major_sections
0x003533D8	0x00000004	[116] _last_collection_old_los_memory_usage
0x003533DC	0x00000004	[116] _need_calculate_minor_collection_allowance
0x003533E0	0x00000004	[116] _last_major_num_sections
0x003533E4	0x00000004	[116] _last_los_memory_usage
0x003533E8	0x00000004	[116] _memory_pressure
0x003533EC	0x00000004	[116] _total_alloc
0x003533F0	0x00000004	[116] _total_alloc_max
0x003533F4	0x00000004	[116] _allocated_heap
0x003533F8	0x00000004	[116] _debug_print_allowance
0x003533FC	0x00000004	[117] _bridge_processor
0x00353400	0x00000004	[117] _dump_prefix
0x00353404	0x00000004	[117] _bridge_accounting_enabled
0x00353408	0x0000000C	[117] _registered_bridges
0x00353414	0x00000004	[117] _num_registered_bridges
0x00353418	0x00000004	[117] _hash_table_size
0x0035341C	0x0000000C	[117] _sccs
0x00353428	0x00000004	[117] _step_2
0x0035342C	0x00000004	[117] _step_3
0x00353430	0x00000004	[117] _step_4
0x00353434	0x00000004	[117] _step_5
0x00353438	0x00000004	[117] _step_6
0x0035343C	0x00000004	[117] _fist_pass_links
0x00353440	0x00000004	[117] _second_pass_links
0x00353444	0x00000004	[117] _sccs_links
0x00353448	0x00000004	[117] _max_sccs_links
0x0035344C	0x00000004	[117] _dfs1_passes
0x00353450	0x00000004	[117] _dfs2_passes
0x00353454	0x00000004	[117] _ignored_objects
0x00353458	0x00000004	[117] _current_scc
0x0035345C	0x0000000C	[117] _dfs_stack
0x00353468	0x0000000C	[117] _merge_array
0x00353474	0x00000004	[117] _current_time
0x00353478	0x00000004	[117] _dump_graph.counter
0x0035347C	0x00000004	[118] _fragment_freelist
0x00353480	0x00000004	[118] _fragment_total
0x00353484	0x00000004	[118] _nursery_last_pinned_end
0x00353488	0x00000004	[119] _bridge_processor
0x0035348C	0x00000004	[119] _bridge_accounting_enabled
0x00353490	0x0000000C	[119] _registered_bridges
0x0035349C	0x00000004	[119] _num_registered_bridges
0x003534A0	0x00000004	[119] _hash_table_size
0x003534A4	0x0000000C	[119] _sccs
0x003534B0	0x00000004	[119] _step_2
0x003534B4	0x00000004	[119] _step_3
0x003534B8	0x00000004	[119] _step_4
0x003534BC	0x00000004	[119] _step_5
0x003534C0	0x00000004	[119] _step_6
0x003534C4	0x00000004	[119] _fist_pass_links
0x003534C8	0x00000004	[119] _second_pass_links
0x003534CC	0x00000004	[119] _sccs_links
0x003534D0	0x00000004	[119] _max_sccs_links
0x003534D4	0x00000004	[119] _dfs1_passes
0x003534D8	0x00000004	[119] _dfs2_passes
0x003534DC	0x00000004	[119] _current_scc
0x003534E0	0x0000000C	[119] _dfs_stack
0x003534EC	0x0000000C	[119] _merge_array
0x003534F8	0x00000004	[119] _current_time
0x003534FC	0x00000004	[121] _pin_stat_addresses
0x00353500	0x0000000C	[121] _pinned_byte_counts
0x0035350C	0x00000004	[121] _pinned_objects
0x00353510	0x00001000	[122] _pin_hash_filter
0x00354510	0x00000010	[122] _pin_queue
0x00354520	0x00000004	[122] _last_num_pinned
0x00354524	0x00000004	[122] _cement_concurrent
0x00354528	0x00000200	[122] _cement_hash
0x00354728	0x00000200	[122] _cement_hash_concurrent
0x00354928	0x00000008	[124] _filename_or_prefix
0x00354930	0x00000008	[124] _file_size_limit
0x00354938	0x00000004	[124] _binary_protocol_buffers
0x0035493C	0x00000004	[124] _binary_protocol_use_count
0x00354940	0x00000008	[124] _current_file_size
0x00354948	0x00000004	[124] _current_file_index
0x00354950	0x00000078	[127] _age_alloc_buffers
0x003549C8	0x00000008	[127] _collector_allocator
0x003549D0	0x00000004	[127] _region_age
0x003549D4	0x00000004	[127] _promotion_barrier
0x003549D8	0x00000008	[128] _stop_world_time
0x003549E0	0x00000008	[128] _time_stop_world
0x003549E8	0x00000008	[128] _time_restart_world
0x003549F0	0x00000004	[128] _max_pause_usec
0x003549F4	0x00000024	[128] _cur_thread_ctx
0x00354A18	0x00000004	[129] _bridge_processor
0x00354A1C	0x0000000C	[129] _registered_bridges
0x00354A28	0x00000004	[129] _object_data_count
0x00354A2C	0x00000004	[129] _color_data_count
0x00354A30	0x00000004	[129] _num_colors_with_bridges
0x00354A34	0x00000004	[129] _ignored_objects
0x00354A38	0x00000004	[129] _xref_count
0x00354A3C	0x00000004	[129] _cache_hits
0x00354A40	0x00000004	[129] _cache_misses
0x00354A44	0x00000004	[129] _setup_time
0x00354A48	0x00000004	[129] _tarjan_time
0x00354A4C	0x00000004	[129] _scc_setup_time
0x00354A50	0x00000004	[129] _gather_xref_time
0x00354A54	0x00000004	[129] _xref_setup_time
0x00354A58	0x0000000C	[129] _scan_stack
0x00354A64	0x0000000C	[129] _loop_stack
0x00354A70	0x00000004	[129] _object_index
0x00354A74	0x00002000	[129] _merge_cache
0x00356A74	0x00000004	[129] _root_color_bucket
0x00356A78	0x00000004	[129] _cur_color_bucket
0x00356A7C	0x00000004	[129] _root_object_bucket
0x00356A80	0x00000004	[129] _cur_object_bucket
0x00356A84	0x0000000C	[129] _color_merge_array
0x00356A90	0x00000004	[130] _toggleref_array_size
0x00356A94	0x00000004	[130] _toggleref_array
0x00356A98	0x00000004	[130] _toggleref_callback
0x00356A9C	0x00000004	[130] _test_toggleref_callback.mono_toggleref_test_field
0x00356AA0	0x00000004	[130] _toggleref_array_capacity
0x00356AA8	0x00000004	[131] _workers_state
0x00356AAC	0x00000004	[131] _workers_num
0x00356AB0	0x0000002C	[131] _workers_job_queue_mutex
0x00356ADC	0x00000004	[131] _workers_job_queue
0x00356AE0	0x00000004	[131] _workers_job_queue_num_entries
0x00356AE4	0x00000004	[131] _workers_num_jobs_enqueued
0x00356AE8	0x00000004	[131] _workers_num_jobs_finished
0x00356AEC	0x00000004	[131] _workers_done_sem
0x00356AF0	0x00000004	[131] _workers_data
0x00356AF4	0x00000004	[131] _workers_waiting_sem
0x00356AF8	0x00000008	[131] _workers_gc_thread_major_collector_data
0x00356B00	0x00000008	[131] _stat_workers_stolen_from_self_lock
0x00356B08	0x00000008	[131] _stat_workers_stolen_from_self_no_lock
0x00356B10	0x00000008	[131] _stat_workers_stolen_from_others
0x00356B18	0x00000008	[131] _stat_workers_num_waited
0x00356B20	0x00000004	[131] _workers_started
0x00356B24	0x00000034	[131] _workers_distribute_gray_queue
0x00356B58	0x00000001	[131] _workers_distribute_gray_queue_inited
0x00356B5C	0x00000004	[132] _create_object_from_sockaddr.tmp_klass
0x00356B60	0x00000048	[135] _socket_io_data
0x00356BA8	0x0000003C	[135] _async_io_tp
0x00356BE4	0x00000004	[135] _tp_inited
0x00356BE8	0x0000003C	[135] _async_tp
0x00356C24	0x00000004	[135] _async_call_klass
0x00356C28	0x00000004	[135] _threads
0x00356C2C	0x00000004	[135] _wsqs
0x00356C30	0x00000004	[135] _monitor_sem
0x00356C34	0x00000004	[135] _monitor_state
0x00356C38	0x00000004	[135] _monitor_njobs
0x00356C3C	0x00000004	[135] _tp_start_func
0x00356C40	0x00000004	[135] _tp_finish_func
0x00356C44	0x00000004	[135] _tp_hooks_user_data
0x00356C48	0x00000004	[135] _tp_item_begin_func
0x00356C4C	0x00000004	[135] _tp_item_end_func
0x00356C50	0x00000004	[135] _tp_item_user_data
0x00356C54	0x00000004	[135] _suspended
0x00356C58	0x00000004	[135] _monitor_internal_thread
0x00356C5C	0x00000004	[135] _socket_async_call_klass
0x00356C60	0x00000004	[135] _process_async_call_klass
0x00356C64	0x00000004	[136] _current_object_key
0x00356C68	0x00000004	[136] _tls_current_object
0x00356C6C	0x00000004	[136] _mono_thread_start_cb
0x00356C70	0x00000004	[136] _default_stacksize
0x00356C74	0x00000004	[136] _mono_thread_attach_cb
0x00356C78	0x0000002C	[136] _interlocked_mutex
0x00356CA4	0x00000004	[136] _background_change_event
0x00356CA8	0x00000004	[136] _shutting_down
0x00356CAC	0x0000002C	[136] _threads_mutex
0x00356CD8	0x0000002C	[136] _contexts_mutex
0x00356D04	0x0000002C	[136] _joinable_threads_mutex
0x00356D30	0x0000000C	[136] _thread_static_info
0x00356D3C	0x0000000C	[136] _context_static_info
0x00356D48	0x00000004	[136] _mono_thread_cleanup_fn
0x00356D4C	0x00000004	[136] _mono_thread_notify_pending_exc_fn
0x00356D50	0x00000004	[136] _threads
0x00356D54	0x00000004	[136] _threads_starting_up
0x00356D58	0x00000004	[136] _thread_dump_requested
0x00356D5C	0x00000004	[136] _local_slots
0x00356D60	0x00000004	[136] _thread_interruption_requested
0x00356D64	0x00000004	[136] _has_tls_get
0x00356D68	0x00000004	[136] _joinable_threads
0x00356D6C	0x00000004	[136] _joinable_thread_count
0x00356D70	0x00000020	[136] _static_reference_bitmaps
0x00356D90	0x00000004	[136] _mono_alloc_static_data.tls_desc
0x00356D94	0x00000004	[136] _get_current_thread_ptr_for_domain.current_thread_field
0x00356D98	0x00000004	[136] _thread_start_args
0x00356D9C	0x00000004	[136] _managed_thread_id_counter
0x00356DA0	0x00000004	[138] _verifier_mode
0x00356DA4	0x00000004	[138] _verify_all
0x00356DA8	0x00000004	[138] _get_ireadonlycollection_class.generic_ireadonlycollection_class
0x00356DAC	0x00000004	[138] _get_ireadonlylist_class.generic_ireadonlylist_class
0x00356DB0	0x00000004	[138] _get_ienumerable_class.generic_ienumerable_class
0x00356DB4	0x00000004	[138] _get_icollection_class.generic_icollection_class
0x00356DB8	0x00000004	[139] _collection_thread_id
0x00356DBC	0x00000004	[140] _error_key
0x00356DC0	0x00000004	[142] __wapi_pid
0x00356DC4	0x00000004	[142] __wapi_private_handle_count
0x00356DC8	0x00000004	[142] __wapi_private_handle_slot_count
0x00356DCC	0x0000002C	[142] _scan_mutex
0x00356DF8	0x00000004	[142] __wapi_global_signal_handle
0x00356DFC	0x00000038	[142] _handle_caps
0x00356E34	0x0000002C	[142] _file_share_hash_mutex
0x00356E60	0x00000004	[142] _file_share_hash
0x00356E64	0x00000004	[142] __wapi_handle_new_internal.last
0x00356E68	0x0000002C	[144] _stdhandle_mutex
0x00356E94	0x00000001	[144] _lock_while_writing
0x00356E95	0x00000001	[146] _find_linear_msg.error_shown
0x00356E96	0x00000001	[146] _find_linear_msg.error_shown7
0x00356E98	0x00000004	[150] _wapi_ShellExecuteEx.handler
0x00356E9C	0x00000004	[150] _wapi_ShellExecuteEx.handler_utf16
0x00356EA0	0x00000004	[150] _cli_launcher
0x00356EA4	0x0000002C	[150] _mono_processes_mutex
0x00356ED0	0x00000004	[150] _mono_processes
0x00356ED4	0x00000004	[150] _current_process
0x00356ED8	0x0000000C	[150] _previous_chld_sa
0x00356EE4	0x00000004	[150] _mono_processes_cleaning_up
0x00356EE8	0x00000040	[153] _wapi_storage
0x00356F28	0x00000160	[153] _noshm_sems
0x00357088	0x00000001	[154] _in_cleanup
0x0035708C	0x00000001	[161] _mparams.0
0x0035708D	0x00000001	[161] _mparams.1
0x0035708E	0x00000001	[161] _mparams.2
0x0035708F	0x00000001	[161] _mparams.3
0x00357090	0x00000001	[161] _mparams.4
0x00357091	0x00000003	[161] _mparams.5
0x00357094	0x000001F4	[161] __gm_
0x00357288	0x0000002C	[162] _small_id_mutex
0x003572B4	0x00000004	[162] _small_id_table
0x003572B8	0x00000004	[162] _small_id_next
0x003572BC	0x00000004	[162] _hazard_table_size
0x003572C0	0x00000004	[162] _hazard_table
0x003572C4	0x0000000C	[162] _mono_hazard_pointer_get.emerg_hazard_table
0x003572D0	0x00000100	[162] _overflow_busy
0x003573D0	0x00000004	[162] _hazardous_pointer_count
0x003573D4	0x00000004	[164] _desc_avail
0x003573D8	0x00000004	[167] _tls_vector_offset
0x003573DC	0x00000004	[168] _dynamic_code_alloc_count
0x003573E0	0x00000004	[168] _dynamic_code_bytes_count
0x003573E4	0x00000004	[168] _dynamic_code_frees_count
0x003573E8	0x00000004	[168] _code_memory_used
0x003573EC	0x00000004	[168] _valloc_freelists
0x003573F0	0x0000002C	[168] _valloc_mutex
0x0035741C	0x00000004	[171] _valid_mask
0x00357420	0x00000004	[171] _initialized
0x00357424	0x0000002C	[171] _counters_mutex
0x00357450	0x00000004	[171] _register_callbacks
0x00357454	0x00000004	[171] _counters
0x00357458	0x00000004	[171] _set_mask
0x0035745C	0x00000004	[171] _limit_reached
0x00357460	0x00000018	[171] _resource_limits
0x00357478	0x00000004	[174] _fallback_handlers
0x0035747C	0x00000004	[182] _level_stack
0x00357480	0x00000004	[182] _log_callback
0x00357484	0x00000004	[182] _print_callback
0x00357488	0x00000004	[182] _printerr_callback
0x0035748C	0x00000004	[183] _mono_pagesize.saved_pagesize
0x00357490	0x00000004	[183] _malloced_shared_area
0x00357494	0x00000004	[183] _use_shared_area
0x00357498	0x00000004	[184] _mono_mutex_init_suspend_safe.inited
0x0035749C	0x00000004	[184] _mono_mutex_init_suspend_safe.setpolicy_np
0x003574A0	0x00000004	[188] _get_user_hz.user_hz
0x003574A4	0x00000004	[193] _nsthread
0x003574A8	0x00000004	[193] _currentThread
0x003574AC	0x00000004	[193] _threadDictionary
0x003574B0	0x00000004	[193] _objectForKey
0x003574B4	0x00000004	[193] _mono_dead_letter_key
0x003574B8	0x00000004	[193] _mono_dead_letter_class
0x003574BC	0x00000004	[193] _alloc
0x003574C0	0x00000004	[193] _init
0x003574C4	0x00000004	[193] _setObjectForKey
0x003574C8	0x00000004	[193] _release
0x003574CC	0x00000004	[193] _nsobject
0x003574D0	0x00000004	[193] _dealloc
0x003574D4	0x00000008	[196] _thread_list
0x003574DC	0x00000004	[196] _small_id_key
0x003574E0	0x00000004	[196] _thread_info_key
0x003574E4	0x00000004	[196] _mono_threads_inited
0x003574E8	0x00000004	[196] _thread_info_size
0x003574EC	0x0000001C	[196] _threads_callbacks
0x00357508	0x00000004	[196] _thread_exited_key
0x0035750C	0x00000004	[196] _global_suspend_semaphore
0x00357510	0x0000000C	[196] _runtime_callbacks
0x0035751C	0x00000004	[196] _disable_new_interrupt
0x00357520	0x00000008	[197] _mono_msec_ticks.boot_time
0x00357528	0x00000008	[197] _mono_100ns_ticks.timebase
0x00357530	0x00000024	[198] _tls_offset_set
0x00357554	0x00000024	[198] _tls_offsets
0x00357578	0x00000004	[201] _mono_networking_get_tcp_protocol.cache
0x0035757C	0x00000004	[201] _mono_networking_get_tcp_protocol.proto
0x00357580	0x00000004	[201] _mono_networking_get_ip_protocol.cache
0x00357584	0x00000004	[201] _mono_networking_get_ip_protocol.proto
0x00357588	0x00000004	[201] _mono_networking_get_ipv6_protocol.cache
0x0035758C	0x00000004	[201] _mono_networking_get_ipv6_protocol.proto
0x00357590	0x00000004	[204] _p5s
0x00357594	0x00000040	[204] _freelist
0x003575D4	0x00000004	[218] _home_dir
0x003575D8	0x00000004	[218] _user_name
0x003575DC	0x00000004	[218] _tmp_dir
0x003575E0	0x00000004	[219] _stdout_handler
0x003575E4	0x00000004	[219] _stderr_handler
0x003575E8	0x00000004	[219] _default_log_func
0x003575EC	0x00000004	[219] _default_log_func_user_data
0x003575F0	0x00000004	[220] _name
0x003575F4	0x00000004	[230] _my_charset
0x003575F8	0x00000004	[230] _is_utf8
0x003575FC	0x00000008	[233] _wait_tv
0x00357604	0x00000008	[233] _wait_ts
0x0035760C	0x00000001	[233] _debugging_configured
0x0035760D	0x00000001	[233] _config_timedout
0x0035760E	0x00000001	[233] _profiler_configured
0x0035760F	0x00000001	[233] _usb_debugging
0x00357610	0x00000004	[237] _xamarin_thread_hash
0x00357614	0x0000006C	[238] _delegates
0x00357680	0x0000002C	[238] _framework_peer_release_lock
0x003576AC	0x00000004	[238] _nsobject_class
0x003576B0	0x00000004	[238] _inativeobject_class
0x003576B4	0x00000004	[238] _has_classmap
0x003576B8	0x00000004	[238] _class_map
0x003576BC	0x00000004	[238] _map_count
0x003576C0	0x00000004	[238] _unhandled_exception_func
0x003576C4	0x00000004	[238] _initialize_started
0x003576C8	0x00000004	[238] _x_bundle_path
0x003576CC	0x00000004	[238] _block_wrapper_queue
0x003576D0	0x00000004	[238] _xamarin_wrapper_hash
0x003576D4	0x0000002C	[239] _refcount_mutex
